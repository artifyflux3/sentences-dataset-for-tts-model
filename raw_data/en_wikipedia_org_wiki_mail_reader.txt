Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Retrieving messages from a mailbox 2 Message composition 3 Submitting messages to a server 4 Encryption Toggle Encryption subsection 4.1 Encryption of the message body 5 Webmail 6 Remote messages Toggle Remote messages subsection 6.1 Advantages 6.2 Disadvantages 7 Protocols Toggle Protocols subsection 7.1 Port numbers 7.2 Proprietary client protocols 8 See also 9 References 10 Bibliography Toggle the table of contents Email client 32 languages العربية Български Català Čeština Dansk Deutsch Eesti Español Esperanto Euskara فارسی Français 한국어 हिन्दी Italiano Latviešu Limburgs Magyar Nederlands 日本語 Norsk bokmål Polski Português Română Русский Српски / srpski Svenska Türkçe Українська Tiếng Việt 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Mail reader ) Computer program used to access and manage a user's email This article is about mail readers for Internet e-mail. For BBS mail readers, see Offline reader .

Mozilla Thunderbird email client user interface on a Linux operating system An email client , email reader or, more formally, message user agent (MUA) or mail user agent is a computer program used to access and manage a user's email .

A web application which provides message management, composition, and reception functions may act as a web email client , and a piece of computer hardware or software whose primary or most visible role is to work as an email client may also use the term.

Retrieving messages from a mailbox [ edit ] Like most client programs, an email client is only active when a user runs it. The common arrangement is for an email user (the client) to make an arrangement with a remote Mail Transfer Agent (MTA) server for the receipt and storage of the client's emails. The MTA, using a suitable mail delivery agent (MDA), adds email messages to a client's storage as they arrive. The remote mail storage is referred to as the user's mailbox . The default setting on many Unix systems is for the mail server to store formatted messages in mbox , within the user's home directory . Of course, users of the system can log-in and run a mail client on the same computer that hosts their mailboxes; in which case, the server is not actually remote , other than in a generic sense.

Emails are stored in the user's mailbox on the remote server until the user's email client requests them to be downloaded to the user's computer, or can otherwise access the user's mailbox on the possibly remote server. The email client can be set up to connect to multiple mailboxes at the same time and to request the download of emails either automatically, such as at pre-set intervals, or the request can be manually initiated by the user.

A user's mailbox can be accessed in two dedicated ways. The Post Office Protocol (POP) allows the user to download messages one at a time and only deletes them from the server after they have been successfully saved on local storage. It is possible to leave messages on the server to permit another client to access them. However, there is no provision for flagging a specific message as seen , answered , or forwarded , thus POP is not convenient for users who access the same mail from different machines.

Alternatively, the Internet Message Access Protocol (IMAP) allows users to keep messages on the server, flagging them as appropriate. IMAP provides folders and sub-folders, which can be shared among different users with possibly different access rights. Typically, the Sent , Drafts , and Trash folders are created by default. IMAP features an idle extension for real-time updates, providing faster notification than polling, where long-lasting connections are feasible.  See also the remote messages section below.

The JSON Meta Application Protocol (JMAP) is implemented using JSON APIs over HTTP and has been developed as an alternative to IMAP/SMTP.

In addition, the mailbox storage can be accessed directly by programs running on the server or via shared disks .  Direct access can be more efficient but is less portable as it depends on the mailbox format; it is used by some email clients, including some webmail applications.

Message composition [ edit ] Email clients usually contain user interfaces to display and edit text. Some applications permit the use of a program-external editor.

The email clients will perform formatting according to RFC 5322 for headers and body , and MIME for non-textual content and attachments. Headers include the destination fields, To , Cc (short for Carbon copy ), and Bcc ( Blind carbon copy ), and the originator fields From which is the message's author(s), Sender in case there are more authors, and Reply-To in case responses should be addressed to a different mailbox. To better assist the user with destination fields, many clients maintain one or more address books and/or are able to connect to an LDAP directory server. For originator fields, clients may support different identities.

Client settings require the user's real name and email address for each user's identity, and possibly a list of LDAP servers.

Submitting messages to a server [ edit ] When a user wishes to create and send an email, the email client will handle the task. The email client is usually set up automatically to connect to the user's mail server, which is typically either a MSA or a MTA , two variations of the SMTP protocol. The email client which uses the SMTP protocol creates an authentication extension, which the mail server uses to authenticate the sender. This method eases modularity and nomadic computing. The older method was for the mail server to recognize the client's IP address, e.g. because the client is on the same machine and uses internal address 127.0.0.1, or because the client's IP address is controlled by the same Internet service provider that provides both Internet access and mail services.

Client settings require the name or IP address of the preferred outgoing mail server , the port number , and the user name and password for authentication, if any. The following ports are used for email submission: - Port 465 – The officially designated port for mail submission using TLS from the start of the connection (Implicit TLS), as per RFC 8314 . Since encryption is enforced from the beginning, it eliminates the risk of downgrade attacks or MITM (Man-in-the-Middle) attacks that could strip away encryption.

- Port 587 – Commonly used for mail submission with support for STARTTLS , allowing the connection to be optionally upgraded to TLS. However, if a MITM attacker interferes with the STARTTLS command, the connection may remain unencrypted, making it less secure than implicit TLS on port 465.

Port 25, originally intended for message relay between MTAs, is not for client message submission and is often blocked by ISPs to prevent spam.

Encryption [ edit ] With no encryption, much like for postcards, email activity is plainly visible by any occasional eavesdropper.

Email encryption enables privacy to be safeguarded by encrypting the mail sessions, the body of the message, or both.  Without it, anyone with network access and the right tools can monitor email and obtain login passwords.  Examples of concern include the government censorship and surveillance and fellow wireless network users such as at an Internet cafe .

All relevant email protocols have an option to encrypt the whole session, to prevent a user's name and password from being sniffed . They are strongly suggested for nomadic users and whenever the Internet access provider is not trusted.

[ 1 ] When sending mail, users can only control encryption at the first hop from a client to its configured outgoing mail server . At any further hop, messages may be transmitted with or without encryption, depending solely on the general configuration of the transmitting server and the capabilities of the receiving one.

Encrypted mail sessions deliver messages in their original format, i.e. plain text or encrypted body, on a user's local mailbox and on the destination server's. The latter server is operated by an email hosting service provider, possibly a different entity than the Internet access provider currently at hand.

Encrypting an email retrieval session with, e.g., SSL, can protect both parts (authentication, and message transfer) of the session.

[ 2 ] [ 3 ] Alternatively, if the user has SSH access to their mail server, they can use SSH port forwarding to create an encrypted tunnel over which to retrieve their emails.

[ 4 ] Encryption of the message body [ edit ] There are two main models for managing cryptographic keys.

S/MIME employs a model based on a trusted certificate authority (CA) that signs users' public keys.

OpenPGP employs a somewhat more flexible web of trust mechanism that allows users to sign one another's public keys. OpenPGP is also more flexible in the format of the messages, in that it still supports plain message encryption and signing as they used to work before MIME standardization.

In both cases, only the message body is encrypted. Header fields, including originator, recipients, and often subject, remain in plain text.

Webmail [ edit ] Main article: Webmail In addition to email clients running on a desktop computer, there are those hosted remotely, either as part of a remote UNIX installation accessible by telnet (i.e. a shell account ), or hosted on the Web .  Both of these approaches have several advantages: they share an ability to send and receive email away from the user's normal base using a web browser or telnet client, thus eliminating the need to install a dedicated email client on the user's device.

Some websites are dedicated to providing email services, and many Internet service providers provide webmail services as part of their Internet service package. The main limitations of webmail are that user interactions are subject to the website's operating system and the general inability to download email messages and compose or work on the messages offline, although there are software packages that can integrate parts of the webmail functionality into the OS (e.g. creating messages directly from third party applications via MAPI ).

Like IMAP and MAPI, webmail provides for email messages to remain on the mail server.  See next section .

Remote messages [ edit ] POP3 has an option to leave messages on the server.  By contrast, both IMAP and webmail keep messages on the server as their method of operating, albeit users can make local copies as they like.  Keeping messages on the server has advantages and disadvantages.

[ 5 ] Advantages [ edit ] Messages can be accessed from various computers or mobile devices at different locations, using different clients.

Some kind of backup is usually provided by the server.

Disadvantages [ edit ] With limited bandwidth, access to long messages can be lengthy, unless the email client caches a local copy.

There may be privacy concerns since messages that stay on the server at all times have more chances to be casually accessed by IT personnel, unless end-to-end encryption is used.

Protocols [ edit ] Popular protocols for retrieving mail include POP3 and IMAP4 . Sending mail is usually done using the SMTP protocol.

Another important standard supported by most email clients is MIME , which is used to send binary file email attachments . Attachments are files that are not part of the email proper but are sent with the email.

Most email clients use a User-Agent [ 6 ] header field to identify the software used to send the message. This header field is defined for Netnews, but not-for e-mail, and, as such, is non-standard [ 7 ] in e-mail headers.

RFC 6409 , Message Submission for Mail , details the role of the Mail submission agent .

RFC 5068 , Email Submission Operations: Access and Accountability Requirements , provides a survey of the concepts of MTA, MSA, MDA, and MUA. It mentions that " Access Providers MUST NOT block users from accessing the external Internet using the SUBMISSION port 587 " and that " MUAs SHOULD use the SUBMISSION port for message submission.

" RFC 5965 , An Extensible Format for Email Feedback Reports , provides "an extensible format and MIME type that may be used by mail operators to report feedback about received email to other parties." Port numbers [ edit ] Email servers and clients by convention use the TCP port numbers in the following table.  For MSA, IMAP and POP3, the table reports also the labels that a client can use to query the SRV records and discover both the host name and the port number of the corresponding service.

[ 8 ] Protocol Use Plain text or encrypt sessions Plain text sessions only Encrypt sessions only POP3 incoming mail 110 _pop3._tcp 995 _pop3s._tcp IMAP4 incoming mail 143 _imap._tcp 993 _imaps._tcp SMTP outgoing mail 25 587 MSA outgoing mail 587 _submission._tcp 465 [ 9 ] _submissions._tcp HTTP webmail 80 443 While webmail obeys the earlier HTTP disposition of having separate ports for encrypt and plain text sessions, mail protocols use the STARTTLS technique, thereby allowing encryption to start on an already established TCP connection. While RFC 2595 used to discourage the use of the previously established ports 995 and 993, RFC 8314 promotes the use of implicit TLS when available.

Proprietary client protocols [ edit ] Microsoft mail systems use the proprietary Messaging Application Programming Interface (MAPI) in client applications, such as Microsoft Outlook , to access Microsoft Exchange electronic mail servers.

See also [ edit ] Look up email client in Wiktionary, the free dictionary.

Comparison of email clients Message submission agent (MSA) Mailto Message delivery agent (MDA) Message transfer agent (MTA) Simple Mail Transfer Protocol Text-based email client References [ edit ] ^ C. Hutzler; D. Crocker; P. Resnick; E. Allman; T. Finch (November 2007).

"Message Submission Authentication/Authorization Technologies" .

Email Submission Operations: Access and Accountability Requirements .

IETF . sec. 5.

doi : 10.17487/RFC5068 . BCP 134.

RFC 5068 . Retrieved 24 August 2011 .

This document does not provide recommendations on specific security implementations.  It simply provides a warning that transmitting user credentials in clear text over insecure networks SHOULD be avoided in all scenarios as this could allow attackers to listen for this traffic and steal account data.  In these cases, it is strongly suggested that an appropriate security technology MUST be used.

^ Sill 2003 , p. 353: "Like SMTP, POP3 is unencrypted. Unlike SMTP, however, it needs authentication: Users have to identify themselves and prove they're who they claim to be. Unfortunately, the authentication usually consists of presenting a username and a password known only to the user and the POP3 server. Because the POP3 dialogue is unencrypted, an eavesdropper can obtain a user's username and password and reuse them to access the user's mailbox. So, plain POP3 exposes the contents of the mail messages the user retrieves, and it exposes their username and password, which can then be reused by someone else.

Wrapping the POP3 dialogue with transport-layer security such as SSL solves both of these problems. Because SSL-wrapped POP3 sessions are encrypted from beginning to end, no messages, usernames, or passwords are exposed in cleartext.

The optional POP3 command, APOP , replaces the standard USER/PASS authentication with a challenge-response authentication mechanism. This solves the problem of the disclosure of reusable passwords, but does nothing to prevent eavesdroppers from reading users' mail messages as they're being retrieved." ^ Updated Transport Layer Security (TLS) Server Identity Check Procedure for Email-Related Protocols .

doi : 10.17487/RFC7817 .

RFC 7817 .

^ Flickenger, Rob (2003).

Linux Server Hacks: 100 Industrial-Strength Tips & Tools .

O'Reilly Media . p.

146 .

ISBN 978-0596004613 .

In addition to providing remote shell access and command execution, OpenSSH can forward arbitrary TCP ports to the other end of your connection. This can be very handy for protecting email, web, or any other traffic you need to keep private (at least, all the way to the other end of the tunnel).

ssh accomplishes local forwarding by binding to a local port, performing encryption, sending the encrypted data to the remote end of the ssh connection, then decrypting it and sending it to the remote host and port you specify. Start an ssh tunnel with the -L switch (short for Local): root@laptop:~# ssh -f -N -L110: mailhost :110 -l user mailhost Naturally, substitute user with your username, and mailhost with your mail server's name or IP address. Note that you will have to be root on the laptop for this example since you'll be binding to a privileged port (110, the POP port). You should also disable any locally running POP daemon (look in /etc/inetd.conf ) or it will get in the way.

Now to encrypt all of your POP traffic, configure your mail client to connect to localhost port 110. It will happily talk to mailhost as if it were connected directly, except that the entire conversation will be encrypted.

^ "Is IMAP Right for Me?" .

IT Services .

Stanford University . 4 March 2010. Archived from the original on 30 April 2010 . Retrieved 14 April 2013 .

^ "User-Agent" .

Netnews Article Format .

IETF . November 2009. sec. 3.2.13.

doi : 10.17487/RFC5536 .

RFC 5536 .

Some of this information has previously been sent in non-standardized header fields such as X-Newsreader, X-Mailer, X-Posting-Agent, X-Http-User-Agent, and others ^ J. Palme (February 1997).

"Use of gatewaying headers" .

Common Internet Message Headers . sec. 2.

doi : 10.17487/RFC2076 .

RFC 2076 . Retrieved May 11, 2015 .

Headers defined only in RFC 1036 for use in Usenet News sometimes appear in mail messages, either because the messages have been gatewayed from Usenet News to e-mail, or because the messages were written in combined clients supporting both e-mail and Usenet News in the same client. These headers are not standardized for use in Internet e-mail and should be handled with caution by e-mail agents.

^ Cyrus Daboo (March 2011).

Use of SRV Records for Locating Email Submission/Access Services .

IETF .

doi : 10.17487/RFC6186 .

RFC 6186 . Retrieved 17 April 2013 .

^ Keith Moore; Chris Newman (January 2018).

Cleartext Considered Obsolete: Use of Transport Layer Security (TLS) for Email Submission and Access .

IETF .

doi : 10.17487/RFC8314 .

RFC 8314 . Retrieved 12 February 2018 .

Bibliography [ edit ] Sill, Dave (2003).

The qmail Handbook .

Apress .

ISBN 9781430211341 .

Partridge, Craig (April–June 2008).

"The Technical Development of Internet Email" (PDF) .

IEEE Annals of the History of Computing .

30 (2): 3– 29.

doi : 10.1109/mahc.2008.32 .

ISSN 1934-1547 .

S2CID 206442868 . Archived from the original (PDF) on 2011-05-12.

v t e Email clients Free software Current Alpine Balsa Citadel/UX Claws Mail Cleancode eMail Evolution fetchmail fdm Geary getmail GNUMail Gnus Gnuzilla IMP K-9 Mail KMail Mahogany Mailpile Mailx Mailx (Heirloom) Modest Mozilla Thunderbird Mulberry Mutt nmh / MH OfflineIMAP Roundcube SeaMonkey Scribe Mail SquirrelMail Sylpheed Trojitá YAM Zimbra Discontinued Arachne Beonex Communicator BlitzMail Classilla Columbia MM Elm FossaMail Hula Mailody Mozilla Mail & Newsgroups Nylas N1 Proprietary Freeware, freemium Canary Mail eM Client EmailTray Foxmail Mailbird Spark Spike TouchMail Vivaldi Mail Retail Airmail GroupWise HCL Domino Apple Mail Microsoft Outlook Outlook for Windows Newton Shareware Becky!

Forté Agent GyazMail The Bat!

Samsung Email Donationware Pegasus Mail Discontinued Bloomba /WordPerfect Mail cc:Mail Claris Emailer Courier Cyberdog Cyberjack Embrowser Eudora Hiri Mail (Windows) Mailbox Microsoft Entourage Microsoft Internet Mail and News Microsoft Mail MINUET Netscape Mail Netscape Messenger 9 NeXTMail Outlook Express Pine Pocomail POPmail Postbox Sparrow Turnpike WebSpyder Windows Live Mail Windows Messaging Related technologies SMTP IMAP JMAP LMTP POP Push-IMAP SMAP UUCP Related topics Email Unicode and email Comparison Category NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐9hzs4
Cached time: 20250818010031
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.500 seconds
Real time usage: 0.608 seconds
Preprocessor visited node count: 3765/1000000
Revision size: 21234/2097152 bytes
Post‐expand include size: 75361/2097152 bytes
Template argument size: 3400/2097152 bytes
Highest expansion depth: 18/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 63742/5000000 bytes
Lua time usage: 0.314/10.000 seconds
Lua memory usage: 7337582/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  523.227      1 -total
 43.18%  225.937      1 Template:Reflist
 16.90%   88.435      2 Template:Cite_ietf
 16.32%   85.376      3 Template:Navbox
 16.06%   84.053      1 Template:Email_clients
 13.28%   69.493      1 Template:Short_description
 11.51%   60.239      4 Template:Cite_IETF
 10.71%   56.058      6 Template:IETF_RFC
 10.29%   53.845      6 Template:Catalog_lookup_link
  7.07%   36.995      2 Template:Pagetype Saved in parser cache with key enwiki:pcache:43478:|#|:idhash:canonical and timestamp 20250818010031 and revision id 1288333769. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Email_client&oldid=1288333769 " Category : Email clients Hidden categories: CS1: unfit URL Articles with short description Short description matches Wikidata This page was last edited on 1 May 2025, at 23:41 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Email client 32 languages Add topic

