Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Design 2 History Toggle History subsection 2.1 Pre-PC 2.2 Unix 2.3 PCs 2.4 Browsers 2.5 Specialties 3 Functionality 4 Spell-checking for languages other than English 5 Context-sensitive spell checkers 6 See also 7 References 8 External links Toggle the table of contents Spell checker 45 languages Afrikaans العربية Azərbaycanca Català Čeština Dansk Deutsch Español Esperanto Euskara فارسی Français Gaeilge Gàidhlig 한국어 हिन्दी Hrvatski Bahasa Indonesia Íslenska Italiano עברית Kiswahili Lëtzebuergesch Lingála Македонски Bahasa Melayu Nederlands 日本語 Norsk bokmål Norsk nynorsk Олык марий Polski Português Русский Slovenščina Suomi Svenska தமிழ் Тоҷикӣ Українська Vèneto Tiếng Việt Walon 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikiquote Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Software to help correct spelling errors In software , a spell checker (or spelling checker or spell check ) is a software feature that checks for misspellings in a text . Spell-checking features are often embedded in software or services, such as a word processor , email client , electronic dictionary , or search engine .

Eye have a spelling chequer, It came with my Pea Sea.

It plane lee marks four my revue Miss Steaks I can knot sea.

Eye strike the quays and type a whirred And weight four it two say Weather eye am write oar wrong It tells me straight a weigh.

Eye ran this poem threw it, Your shore real glad two no.

Its vary polished in its weigh.

My chequer tolled me sew.

A chequer is a bless thing, It freeze yew lodes of thyme.

It helps me right all stiles of righting, And aides me when eye rime.

Each frays come posed up on my screen Eye trussed too bee a joule.

The chequer pours o'er every word Two cheque sum spelling rule.

The original version of this poem was written by Jerrold H. Zar in 1992.  An unsophisticated spell checker will find little or no fault with this poem because it checks words in isolation.  A more sophisticated spell checker will make use of a language model to consider the context in which a word occurs.

Google Chrome spell checker in action for the above poem, the word "chequer" marked as unrecognized word Design [ edit ] A basic spell checker carries out the following processes: It scans the text and extracts the words contained in it.

It then compares each word with a known list of correctly spelled words (i.e. a dictionary). This might contain just a list of words, or it might also contain additional information, such as hyphenation points or lexical and grammatical attributes.

An additional step is a language-dependent algorithm for handling morphology . Even for a lightly inflected language like English , the spell checker will need to consider different forms of the same word, such as plurals, verbal forms, contractions , and possessives . For many other languages, such as those featuring agglutination and more complex declension and conjugation, this part of the process is more complicated.

It is unclear whether morphological analysis—allowing for many forms of a word depending on its grammatical role—provides a significant benefit for English, though its benefits for highly synthetic languages such as German, Hungarian , or Turkish are clear.

As an adjunct to these components, the program's user interface allows users to approve or reject replacements and modify the program's operation.

Spell checkers can use approximate string matching algorithms such as Levenshtein distance to find correct spellings of misspelled words.

[ 1 ] An alternative type of spell checker uses solely statistical information, such as n-grams , to recognize errors instead of correctly-spelled words. This approach usually requires a lot of effort to obtain sufficient statistical information. Key advantages include needing less runtime storage and the ability to correct errors in words that are not included in a dictionary.

[ 2 ] In some cases, spell checkers use a fixed list of misspellings and suggestions for those misspellings; this less flexible approach is often used in paper-based correction methods, such as the see also entries of encyclopedias.

Clustering algorithms have also been used for spell checking [ 3 ] combined with phonetic information.

[ 4 ] History [ edit ] Pre-PC [ edit ] In 1961, Les Earnest , who headed the research on this budding technology, saw it necessary to include the first spell checker that accessed a list of 10,000 acceptable words.

[ 5 ] Ralph Gorin, a graduate student under Earnest at the time, created the first true spelling checker program written as an applications program (rather than research) for general English text: SPELL for the DEC PDP-10 at Stanford University's Artificial Intelligence Laboratory, in February 1971.

[ 6 ] Gorin wrote SPELL in assembly language , for faster action; he made the first spelling corrector by searching the word list for plausible correct spellings that differ by a single letter or adjacent letter transpositions and presenting them to the user.  Gorin made SPELL publicly accessible, as was done with most SAIL (Stanford Artificial Intelligence Laboratory) programs, and it soon spread around the world via the new ARPAnet, about ten years before personal computers came into general use.

[ 7 ] SPELL, its algorithms and data structures inspired the Unix ispell program.

The first spell checkers were widely available on mainframe computers in the late 1970s.  A group of six linguists from Georgetown University developed the first spell-check system for the IBM corporation.

[ 8 ] Henry Kučera invented one for the VAX machines of Digital Equipment Corp in 1981.

[ 9 ] Unix [ edit ] The International Ispell program commonly used in Unix is based on R. E. Gorin's SPELL. It was converted to C by Pace Willisson at MIT.

[ 10 ] The GNU project has its spell checker GNU Aspell . Aspell's main improvement is that it can more accurately suggest correct alternatives for misspelled English words.

[ 11 ] Due to the inability of traditional spell checkers to check words in complex inflected languages, Hungarian László Németh developed Hunspell , a spell checker that supports agglutinative languages and complex compound words. Hunspell also uses Unicode in its dictionaries.

[ 12 ] Hunspell replaced the previous MySpell in OpenOffice.org in version 2.0.2.

Enchant is another general spell checker, derived from AbiWord . Its goal is to combine programs supporting different languages such as Aspell, Hunspell, Nuspell, Hspell (Hebrew), Voikko (Finnish), Zemberek (Turkish) and AppleSpell under one interface.

[ 13 ] PCs [ edit ] The first spell checkers for personal computers appeared in 1980, such as "WordCheck" for Commodore systems which was released in late 1980 in time for advertisements to go to print in January 1981.

[ 14 ] Developers such as Maria Mariani [ 8 ] and Random House [ 15 ] rushed OEM packages or end-user products into the rapidly expanding software market. On the pre-Windows PCs, these spell checkers were standalone programs, many of which could be run in terminate-and-stay-resident mode from within word-processing packages on PCs with sufficient memory.

However, the market for standalone packages was short-lived, as by the mid-1980s developers of popular word-processing packages like WordStar and WordPerfect had incorporated spell checkers in their packages, mostly licensed from the above companies, who quickly expanded support from just English to many European and eventually even Asian languages . However, this required increasing sophistication in the morphology routines of the software, particularly with regard to heavily- agglutinative languages like Hungarian and Finnish . Although the size of the word-processing market in a country like Iceland might not have justified the investment of implementing a spell checker, companies like WordPerfect nonetheless strove to localize their software for as many national markets as possible as part of their global marketing strategy.

When Apple developed "a system-wide spelling checker" for Mac OS X so that "the operating system took over spelling fixes," [ 16 ] it was a first: one "didn't have to maintain a separate spelling checker for each" program.

[ 17 ] Mac OS X 's spellcheck coverage includes virtually all bundled and third party applications.

Visual Tools' VT Speller , introduced in 1994, was "designed for developers of applications that support Windows." [ 18 ] [ 19 ] It came with a dictionary but had the ability to build and incorporate use of secondary dictionaries.

[ 20 ] Browsers [ edit ] Web browsers such as Firefox and Google Chrome offer spell checking support, using Hunspell . Prior to using Hunspell, Firefox and Chrome used MySpell and GNU Aspell , respectively.

[ 21 ] Specialties [ edit ] Some spell checkers have separate support for medical dictionaries to help prevent medical errors.

[ 22 ] [ 23 ] [ 24 ] Functionality [ edit ] The first spell checkers were "verifiers" instead of "correctors." They offered no suggestions for incorrectly spelled words. This was helpful for typos but it was not so helpful for logical or phonetic errors. The challenge the developers faced was the difficulty in offering useful suggestions for misspelled words. This requires reducing words to a skeletal form and applying pattern-matching algorithms.

It might seem logical that where spell-checking dictionaries are concerned, "the bigger, the better," so that correct words are not marked as incorrect. In practice, however, an optimal size for English appears to be around 90,000 entries. If there are more than this, incorrectly spelled words may be skipped because they are mistaken for others. For example, a linguist might determine on the basis of corpus linguistics that the word baht is more frequently a misspelling of bath or bat than a reference to the Thai currency. Hence, it would typically be more useful if a few people who write about Thai currency were slightly inconvenienced than if the spelling errors of the many more people who discuss baths were overlooked.

A screenshot of Enchant , the AbiWord spell checker The first MS-DOS spell checkers were mostly used in proofing mode from within word processing packages. After preparing a document, a user scanned the text looking for misspellings. Later, however, batch processing was offered in such packages as Oracle 's short-lived CoAuthor and allowed a user to view the results after a document was processed and correct only the words that were known to be wrong. When memory and processing power became abundant, spell checking was performed in the background in an interactive way, such as has been the case with the Sector Software produced Spellbound program released in 1987 and Microsoft Word since Word 95.

Spell checkers became increasingly sophisticated; now capable of recognizing grammatical errors. However, even at their best, they rarely catch all the errors in a text (such as homophone errors) and will flag neologisms and foreign words as misspellings. Nonetheless, spell checkers can be considered as a type of foreign language writing aid that non-native language learners can rely on to detect and correct their misspellings in the target language.

[ 25 ] Spell-checking for languages other than English [ edit ] English is unusual in that most words used in formal writing have a single spelling that can be found in a typical dictionary, with the exception of some jargon and modified words. In many languages, words are often concatenated into new combinations of words. In German, compound nouns are frequently coined from other existing nouns. Some scripts do not clearly separate one word from another, requiring word-splitting algorithms. Each of these presents unique challenges to non-English language spell checkers.

Context-sensitive spell checkers [ edit ] There has been research on developing algorithms that are capable of recognizing a misspelled word, even if the word itself is in the vocabulary, based on the context of the surrounding words. Not only does this allow words such as those in the poem above to be caught, but it mitigates the detrimental effect of enlarging dictionaries, allowing more words to be recognized. For example, baht in the same paragraph as Thai or Thailand would not be recognized as a misspelling of bath . The most common example of errors caught by such a system are homophone errors, such as the bold words in the following sentence: Their coming too sea if its reel .

The most successful algorithm to date is Andrew Golding and Dan Roth's " Winnow -based  spelling correction algorithm", [ 26 ] published in 1999, which is able to recognize about 96% of context-sensitive spelling errors, in addition to ordinary non-word spelling errors. Context-sensitive spell checkers appeared in the now-defunct applications Microsoft Office 2007 [ 27 ] and Google Wave .

[ 28 ] Grammar checkers attempt to fix problems with grammar beyond spelling errors, including incorrect choice of words.

See also [ edit ] Cupertino effect Grammar checker Record linkage problem Spelling suggestion Words (Unix) Autocorrection LanguageTool References [ edit ] ^ Perner, Petra (2010-07-05).

Advances in Data Mining: Applications and Theoretical Aspects: 10th Industrial Conference, ICDM 2010, Berlin, Germany, July 12-14, 2010. Proceedings . Springer Science & Business Media.

ISBN 978-3-642-14399-1 .

^ U.S. Patent 6618697, Method for rule-based correction of spelling and grammar errors ^ de Amorim, R.C.; Zampieri, M. (2013) Effective Spell Checking Methods Using Clustering Algorithms.

Archived 2017-08-17 at the Wayback Machine Proceedings of Recent Advances in Natural Language Processing (RANLP2013). Hissar, Bulgaria. p. 172-178.

^ Zampieri, M.; de Amorim, R.C. (2014) Between Sound and Spelling: Combining Phonetics and Clustering Algorithms to Improve Target Word Recovery.

Proceedings of the 9th International Conference on Natural Language Processing (PolTAL). Lecture Notes in Computer Science (LNCS). Springer. p. 438-449.

^ Earnest, Les.

"The First Three Spelling Checkers" (PDF) . Stanford University. Archived from the original (PDF) on 22 October 2012 . Retrieved 10 October 2011 .

^ Peterson, James (December 1980).

Computer Programs for Detecting and Correcting Spelling Errors (PDF) . Retrieved 2011-02-18 .

^ Earnest, Les.

Visible Legacies for Y3K (PDF) . Archived from the original (PDF) on 2011-07-20 . Retrieved 2011-02-18 .

^ a b "Georgetown U Faculty & Staff: The Center for Language, Education & Development" . Archived from the original on 2009-02-05 . Retrieved 2008-12-18 .

, citation: "Maria Mariani... was one of a group of six linguists from Georgetown University who developed the first spell-check system for the IBM corporation." ^ Harvey, Charlotte Bruce (May–June 2010).

"Teaching Computers to Spell (obituary for Henry Kučera)" .

Brown Alumni Magazine . p. 79.

^ "International Ispell" .

www.cs.hmc.edu . Retrieved 2023-02-19 .

^ "GNU Aspell" .

aspell.net . Retrieved 2023-02-19 .

^ "Hunspell: About" .

hunspell.github.io . Retrieved 2023-02-19 .

^ AbiWord/enchant , AbiWord, 2023-02-13 , retrieved 2023-02-19 ^ Advertisement (January 1981).

"Micro Computer Industries, Ltd" (PDF) .

Compute! Magazine, Issue 8, Vol. 3, No. 1 . p. 119.

^ Advertisement (November 1982).

"The Spelling Bee Is Over" .

PC Magazine . p. 165 . Retrieved 21 October 2013 .

^ David Pogue (2009).

Mac OS X Snow Leopard: The Missing Manual .

^ David Pogue (2015).

Switching to the Mac: The Missing Manual . "O'Reilly Media, Inc.".

ISBN 9781491948125 .

^ "VisualTools VT-Speller".

Computerworld . February 21, 1994. p. 68.

^ "Browse September 27, 1993" .

VT-SPELLER ^ Peter G. Aitken (November 8, 1994). "Spell-Checking for your Apps".

PC Magazine . p. 299.

^ "Aspell and Hunspell: A Tale of Two Spell Checkers" .

battlepenguin.com .

^ "Medical Spell Checker for Firefox and Thunderbird" . e-MedTools. 2017. Archived from the original on 2019-05-04 . Retrieved 2018-08-29 .

^ Quathamer, Dr. Tobias (2016).

"German medical dictionary words" . Dr. Tobias Quathamer . Retrieved 2018-08-29 .

^ Friedman, Richard A.; D, M (2003).

"CASES; Do Spelling and Penmanship Count? In Medicine, You Bet" .

The New York Times . Retrieved 2018-08-29 .

^ Banks, T. (2008).

Foreign Language Learning Difficulties and Teaching Strategies . (pp. 29). Master's Thesis, Dominican University of California. Retrieved 19 March 2012.

^ Golding, Andrew R.; Roth, Dan (1999). "Journal Article".

Machine Learning .

34 . SpringerLink: 107– 130.

doi : 10.1023/A:1007545901558 .

S2CID 12283016 .

^ Walt Mossberg (4 January 2007).

"Review" . Wall Street Journal . Retrieved 24 September 2010 .

^ "Google Operating System" . googlesystem.blogspot.com. 29 May 2009 . Retrieved 25 September 2010 .

"Google's Context-Sensitive Spell Checker" . May 29, 2009 . Retrieved 25 September 2010 .

External links [ edit ] Wikimedia Commons has media related to Spell checking .

Wikiquote has quotations related to Spell checker .

Norvig.com , "How to Write a Spelling Corrector", by Peter Norvig BBK.ac.uk , "Spellchecking by computer", by Roger Mitton CBSNews.com , Spell-Check Crutch Curtails Correctness, by Lloyd de Vries History and text of "Candidate for a Pullet Surprise" by Mark Eckman and Jerrold H. Zar v t e Natural language processing General terms AI-complete Bag-of-words n -gram Bigram Trigram Computational linguistics Natural language understanding Stop words Text processing Text analysis Argument mining Collocation extraction Concept mining Coreference resolution Deep linguistic processing Distant reading Information extraction Named-entity recognition Ontology learning Parsing Semantic parsing Syntactic parsing Part-of-speech tagging Semantic analysis Semantic role labeling Semantic decomposition Semantic similarity Sentiment analysis Terminology extraction Text mining Textual entailment Truecasing Word-sense disambiguation Word-sense induction Text segmentation Compound-term processing Lemmatisation Lexical analysis Text chunking Stemming Sentence segmentation Word segmentation Automatic summarization Multi-document summarization Sentence extraction Text simplification Machine translation Computer-assisted Example-based Rule-based Statistical Transfer-based Neural Distributional semantics models BERT Document-term matrix Explicit semantic analysis fastText GloVe Language model ( large ) Latent semantic analysis Seq2seq Word embedding Word2vec Language resources , datasets and corpora Types and standards Corpus linguistics Lexical resource Linguistic Linked Open Data Machine-readable dictionary Parallel text PropBank Semantic network Simple Knowledge Organization System Speech corpus Text corpus Thesaurus (information retrieval) Treebank Universal Dependencies Data BabelNet Bank of English DBpedia FrameNet Google Ngram Viewer UBY WordNet Wikidata Automatic identification and data capture Speech recognition Speech segmentation Speech synthesis Natural language generation Optical character recognition Topic model Document classification Latent Dirichlet allocation Pachinko allocation Computer-assisted reviewing Automated essay scoring Concordancer Grammar checker Predictive text Pronunciation assessment Spell checker Natural language user interface Chatbot Interactive fiction Question answering Virtual assistant Voice user interface Related Formal semantics Hallucination Natural Language Toolkit spaCy Retrieved from " https://en.wikipedia.org/w/index.php?title=Spell_checker&oldid=1306534918 " Categories : Spell checkers Text editor features Spelling Natural language processing Hidden categories: Webarchive template wayback links Articles with short description Short description is different from Wikidata Commons category link is on Wikidata This page was last edited on 18 August 2025, at 07:51 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Spell checker 45 languages Add topic

