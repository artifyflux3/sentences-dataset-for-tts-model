Title: Computer

URL Source: https://en.wikipedia.org/wiki/Computer

Published Time: 2001-11-02T14:05:53Z

Markdown Content:
[![Image 1: Black-and-white image of a man replacing one vacuum tube out of hundreds in early computer](https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/ENIAC-changing_a_tube_%28cropped%29.jpg/250px-ENIAC-changing_a_tube_%28cropped%29.jpg)](https://en.wikipedia.org/wiki/File:ENIAC-changing_a_tube_(cropped).jpg)

[![Image 2: Computer room with multiple computer cabinets and operating panel](https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/IBM_System360_Mainframe.jpg/250px-IBM_System360_Mainframe.jpg)](https://en.wikipedia.org/wiki/File:IBM_System360_Mainframe.jpg)

[![Image 3: Smartphone with rainbow-like display held in a hand](https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/LYF_WATER_2_Smartphone.JPG/120px-LYF_WATER_2_Smartphone.JPG)](https://en.wikipedia.org/wiki/File:LYF_WATER_2_Smartphone.JPG)

[![Image 4: Black desktop computer with monitor on top and keyboard in front](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/ThinkCentre_S50.jpg/250px-ThinkCentre_S50.jpg)](https://en.wikipedia.org/wiki/File:ThinkCentre_S50.jpg)

[![Image 5: Purple video game console with attached controller](https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Gamecube-console.jpg/250px-Gamecube-console.jpg)](https://en.wikipedia.org/wiki/File:Gamecube-console.jpg)

[![Image 6: Rows of large, dark computer cabinets in warehouse-like room](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Summit_%28supercomputer%29.jpg/250px-Summit_%28supercomputer%29.jpg)](https://en.wikipedia.org/wiki/File:Summit_(supercomputer).jpg)

A **computer** is a [machine](https://en.wikipedia.org/wiki/Machine "Machine") that can be [programmed](https://en.wikipedia.org/wiki/Computer_programming "Computer programming") to automatically [carry out](https://en.wikipedia.org/wiki/Execution_(computing) "Execution (computing)") sequences of [arithmetic](https://en.wikipedia.org/wiki/Arithmetic "Arithmetic") or [logical operations](https://en.wikipedia.org/wiki/Logical_operations "Logical operations") (_[computation](https://en.wikipedia.org/wiki/Computation "Computation")_). Modern [digital electronic](https://en.wikipedia.org/wiki/Digital_electronic "Digital electronic") computers can perform generic sets of operations known as [_programs_](https://en.wikipedia.org/wiki/Computer_program "Computer program"), which enable computers to perform a wide range of tasks. The term **computer system** may refer to a nominally complete computer that includes the [hardware](https://en.wikipedia.org/wiki/Computer_hardware "Computer hardware"), [operating system](https://en.wikipedia.org/wiki/Operating_system "Operating system"), [software](https://en.wikipedia.org/wiki/Software "Software"), and [peripheral](https://en.wikipedia.org/wiki/Peripheral "Peripheral") equipment needed and used for full operation; or to a group of computers that are linked and function together, such as a [computer network](https://en.wikipedia.org/wiki/Computer_network "Computer network") or [computer cluster](https://en.wikipedia.org/wiki/Computer_cluster "Computer cluster").

A broad range of [industrial](https://en.wikipedia.org/wiki/Programmable_logic_controller "Programmable logic controller") and [consumer products](https://en.wikipedia.org/wiki/Consumer_electronics "Consumer electronics") use computers as [control systems](https://en.wikipedia.org/wiki/Control_system "Control system"), including simple special-purpose devices like [microwave ovens](https://en.wikipedia.org/wiki/Microwave_oven "Microwave oven") and [remote controls](https://en.wikipedia.org/wiki/Remote_control "Remote control"), and factory devices like [industrial robots](https://en.wikipedia.org/wiki/Industrial_robot "Industrial robot"). Computers are at the core of general-purpose devices such as [personal computers](https://en.wikipedia.org/wiki/Personal_computer "Personal computer") and [mobile devices](https://en.wikipedia.org/wiki/Mobile_device "Mobile device") such as [smartphones](https://en.wikipedia.org/wiki/Smartphone "Smartphone"). Computers power the [Internet](https://en.wikipedia.org/wiki/Internet "Internet"), which links billions of computers and users.

Early computers were meant to be used only for [calculations](https://en.wikipedia.org/wiki/Calculations "Calculations"). Simple manual instruments like the [abacus](https://en.wikipedia.org/wiki/Abacus "Abacus") have aided people in doing calculations since ancient times. Early in the [Industrial Revolution](https://en.wikipedia.org/wiki/Industrial_Revolution "Industrial Revolution"), some mechanical devices were built to automate long, tedious tasks, such as guiding patterns for [looms](https://en.wikipedia.org/wiki/Loom "Loom"). More sophisticated electrical machines did specialized [analog](https://en.wikipedia.org/wiki/Analogue_electronics "Analogue electronics") calculations in the early 20th century. The first [digital](https://en.wikipedia.org/wiki/Digital_data "Digital data") electronic calculating machines were developed during [World War II](https://en.wikipedia.org/wiki/World_War_II "World War II"), both [electromechanical](https://en.wikipedia.org/wiki/Mechanical_computer "Mechanical computer") and using [thermionic valves](https://en.wikipedia.org/wiki/Thermionic_valve "Thermionic valve"). The first [semiconductor](https://en.wikipedia.org/wiki/Semiconductor "Semiconductor")[transistors](https://en.wikipedia.org/wiki/Transistor "Transistor") in the late 1940s were followed by the [silicon](https://en.wikipedia.org/wiki/Silicon "Silicon")-based [MOSFET](https://en.wikipedia.org/wiki/MOSFET "MOSFET") (MOS transistor) and [monolithic integrated circuit](https://en.wikipedia.org/wiki/Monolithic_integrated_circuit "Monolithic integrated circuit") chip technologies in the late 1950s, leading to the [microprocessor](https://en.wikipedia.org/wiki/Microprocessor "Microprocessor") and the [microcomputer revolution](https://en.wikipedia.org/wiki/Microcomputer_revolution "Microcomputer revolution") in the 1970s. The speed, power, and versatility of computers have been increasing dramatically ever since then, with [transistor counts](https://en.wikipedia.org/wiki/Transistor_count "Transistor count") increasing at a rapid pace ([Moore's law](https://en.wikipedia.org/wiki/Moore%27s_law "Moore's law") noted that counts doubled every two years), leading to the [Digital Revolution](https://en.wikipedia.org/wiki/Digital_Revolution "Digital Revolution") during the late 20th and early 21st centuries.

Conventionally, a modern computer consists of at least one [processing element](https://en.wikipedia.org/wiki/Processing_element "Processing element"), typically a [central processing unit](https://en.wikipedia.org/wiki/Central_processing_unit "Central processing unit") (CPU) in the form of a [microprocessor](https://en.wikipedia.org/wiki/Microprocessor "Microprocessor"), together with some type of [computer memory](https://en.wikipedia.org/wiki/Computer_memory "Computer memory"), typically [semiconductor memory](https://en.wikipedia.org/wiki/Semiconductor_memory "Semiconductor memory") chips. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to stored [information](https://en.wikipedia.org/wiki/Data "Data"). Peripheral devices include input devices ([keyboards](https://en.wikipedia.org/wiki/Keyboard_technology "Keyboard technology"), [mice](https://en.wikipedia.org/wiki/Computer_mouse "Computer mouse"), [joysticks](https://en.wikipedia.org/wiki/Joysticks "Joysticks"), etc.), output devices ([monitors](https://en.wikipedia.org/wiki/Computer_monitor "Computer monitor"), [printers](https://en.wikipedia.org/wiki/Printer_(computing) "Printer (computing)"), etc.), and [input/output devices](https://en.wikipedia.org/wiki/Input_and_output_devices "Input and output devices") that perform both functions (e.g. [touchscreens](https://en.wikipedia.org/wiki/Touchscreen "Touchscreen")). Peripheral devices allow information to be retrieved from an external source, and they enable the results of operations to be saved and retrieved.

Etymology
---------

[![Image 7: A human computer.](https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/X-4_with_Female_Computer_-_GPN-2000-001932.jpg/330px-X-4_with_Female_Computer_-_GPN-2000-001932.jpg)](https://en.wikipedia.org/wiki/File:X-4_with_Female_Computer_-_GPN-2000-001932.jpg)

A [human computer](https://en.wikipedia.org/wiki/Human_computer "Human computer"), with microscope and calculator, 1952

It was not until the mid-20th century that the word acquired its modern definition; according to the _[Oxford English Dictionary](https://en.wikipedia.org/wiki/Oxford\_English\_Dictionary "Oxford English Dictionary")_, the first known use of the word _computer_ was in a different sense, in a 1613 book called _The Yong Mans Gleanings_ by the English writer [Richard Brathwait](https://en.wikipedia.org/wiki/Richard_Brathwait "Richard Brathwait"): "I haue [_[sic](https://en.wikipedia.org/wiki/Sic "Sic")_] read the truest computer of Times, and the best Arithmetician that euer [_sic_] breathed, and he reduceth thy dayes into a short number." This usage of the term referred to a [human computer](https://en.wikipedia.org/wiki/Human_computer "Human computer"), a person who carried out calculations or [computations](https://en.wikipedia.org/wiki/Computation "Computation"). The word continued to have the same meaning until the middle of the 20th century. During the latter part of this period, women were often hired as computers because they could be paid less than their male counterparts.[[1]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTEEvans201823-1) By 1943, most human computers were women.[[2]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTESmith20136-2)

The _[Online Etymology Dictionary](https://en.wikipedia.org/wiki/Online\_Etymology\_Dictionary "Online Etymology Dictionary")_ gives the first attested use of _computer_ in the 1640s, meaning 'one who calculates'; this is an "agent noun from compute (v.)". The _Online Etymology Dictionary_ states that the use of the term to mean "'calculating machine' (of any type) is from 1897." The _Online Etymology Dictionary_ indicates that the "modern use" of the term, to mean 'programmable digital electronic computer' dates from "1945 under this name; [in a] theoretical [sense] from 1937, as _[Turing machine](https://en.wikipedia.org/wiki/Turing\_machine "Turing machine")_".[[3]](https://en.wikipedia.org/wiki/Computer#cite_note-3) The name has remained, although modern computers are capable of many higher-level functions.

History
-------

### Pre-20th century

[![Image 8](https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Os_d%27Ishango_IRSNB.JPG/250px-Os_d%27Ishango_IRSNB.JPG)](https://en.wikipedia.org/wiki/File:Os_d%27Ishango_IRSNB.JPG)

The [Ishango bone](https://en.wikipedia.org/wiki/Ishango_bone "Ishango bone"), a [bone tool](https://en.wikipedia.org/wiki/Bone_tool "Bone tool") dating back to [prehistoric Africa](https://en.wikipedia.org/wiki/Prehistoric_Africa "Prehistoric Africa")

Devices have been used to aid computation for thousands of years, mostly using [one-to-one correspondence](https://en.wikipedia.org/wiki/One-to-one_correspondence "One-to-one correspondence") with [fingers](https://en.wikipedia.org/wiki/Finger_counting "Finger counting"). The earliest counting device was most likely a form of [tally stick](https://en.wikipedia.org/wiki/Tally_stick "Tally stick"). Later record keeping aids throughout the [Fertile Crescent](https://en.wikipedia.org/wiki/Fertile_Crescent "Fertile Crescent") included calculi (clay spheres, cones, etc.) which represented counts of items, likely livestock or grains, sealed in hollow unbaked clay containers.[[a]](https://en.wikipedia.org/wiki/Computer#cite_note-4)[[4]](https://en.wikipedia.org/wiki/Computer#cite_note-5) The use of [counting rods](https://en.wikipedia.org/wiki/Counting_rods "Counting rods") is one example.

[![Image 9](https://upload.wikimedia.org/wikipedia/commons/a/af/Abacus_6.png)](https://en.wikipedia.org/wiki/File:Abacus_6.png)

The Chinese [suanpan](https://en.wikipedia.org/wiki/Suanpan "Suanpan") (算盘). The number represented on this [abacus](https://en.wikipedia.org/wiki/Abacus "Abacus") is 6,302,715,408.

The [abacus](https://en.wikipedia.org/wiki/Abacus "Abacus") was initially used for arithmetic tasks. The [Roman abacus](https://en.wikipedia.org/wiki/Roman_abacus "Roman abacus") was developed from devices used in [Babylonia](https://en.wikipedia.org/wiki/Babylonia "Babylonia") as early as 2400 BCE. Since then, many other forms of reckoning boards or tables have been invented. In a medieval European [counting house](https://en.wikipedia.org/wiki/Counting_house "Counting house"), a checkered cloth would be placed on a table, and markers moved around on it according to certain rules, as an aid to calculating sums of money.[[5]](https://en.wikipedia.org/wiki/Computer#cite_note-6)

[![Image 10](https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Antikythera_Fragment_A_%28Front%29.webp/250px-Antikythera_Fragment_A_%28Front%29.webp.png)](https://en.wikipedia.org/wiki/File:Antikythera_Fragment_A_(Front).webp)

The [Antikythera mechanism](https://en.wikipedia.org/wiki/Antikythera_mechanism "Antikythera mechanism"), dating back to [ancient Greece](https://en.wikipedia.org/wiki/Ancient_Greece "Ancient Greece") circa 200–80 BCE, is an early [analog computing](https://en.wikipedia.org/wiki/Analog_computing "Analog computing") device.

The [Antikythera mechanism](https://en.wikipedia.org/wiki/Antikythera_mechanism "Antikythera mechanism") is believed to be the earliest known mechanical [analog computer](https://en.wikipedia.org/wiki/Analog_computer "Analog computer"), according to [Derek J. de Solla Price](https://en.wikipedia.org/wiki/Derek_J._de_Solla_Price "Derek J. de Solla Price").[[6]](https://en.wikipedia.org/wiki/Computer#cite_note-7) It was designed to calculate astronomical positions. It was discovered in 1901 in the [Antikythera wreck](https://en.wikipedia.org/wiki/Antikythera_wreck "Antikythera wreck") off the Greek island of [Antikythera](https://en.wikipedia.org/wiki/Antikythera "Antikythera"), between [Kythera](https://en.wikipedia.org/wiki/Kythera "Kythera") and [Crete](https://en.wikipedia.org/wiki/Crete "Crete"), and has been dated to approximately c. 100 BCE. Devices of comparable complexity to the Antikythera mechanism would not reappear until the fourteenth century.[[7]](https://en.wikipedia.org/wiki/Computer#cite_note-8)

Many mechanical aids to calculation and measurement were constructed for astronomical and navigation use. The [planisphere](https://en.wikipedia.org/wiki/Planisphere "Planisphere") was a [star chart](https://en.wikipedia.org/wiki/Star_chart "Star chart") invented by [Abū Rayhān al-Bīrūnī](https://en.wikipedia.org/wiki/Al-Biruni "Al-Biruni") in the early 11th century.[[8]](https://en.wikipedia.org/wiki/Computer#cite_note-Wiet-9) The [astrolabe](https://en.wikipedia.org/wiki/Astrolabe "Astrolabe") was invented in the [Hellenistic world](https://en.wikipedia.org/wiki/Hellenistic_civilization "Hellenistic civilization") in either the 1st or 2nd centuries BCE and is often attributed to [Hipparchus](https://en.wikipedia.org/wiki/Hipparchus "Hipparchus"). A combination of the [planisphere](https://en.wikipedia.org/wiki/Planisphere "Planisphere") and [dioptra](https://en.wikipedia.org/wiki/Dioptra "Dioptra"), the astrolabe was effectively an analog computer capable of working out several different kinds of problems in [spherical astronomy](https://en.wikipedia.org/wiki/Spherical_astronomy "Spherical astronomy"). An astrolabe incorporating a mechanical [calendar](https://en.wikipedia.org/wiki/Calendar "Calendar") computer[[9]](https://en.wikipedia.org/wiki/Computer#cite_note-10)[[10]](https://en.wikipedia.org/wiki/Computer#cite_note-11) and [gear](https://en.wikipedia.org/wiki/Gear "Gear")-wheels was invented by Abi Bakr of [Isfahan](https://en.wikipedia.org/wiki/Isfahan "Isfahan"), [Persia](https://en.wikipedia.org/wiki/Persia "Persia") in 1235.[[11]](https://en.wikipedia.org/wiki/Computer#cite_note-12) Abū Rayhān al-Bīrūnī invented the first mechanical geared [lunisolar calendar](https://en.wikipedia.org/wiki/Lunisolar_calendar "Lunisolar calendar") astrolabe,[[12]](https://en.wikipedia.org/wiki/Computer#cite_note-13) an early fixed-[wired](https://en.wikipedia.org/wiki/Wire "Wire") knowledge processing machine[[13]](https://en.wikipedia.org/wiki/Computer#cite_note-Oren-14) with a [gear train](https://en.wikipedia.org/wiki/Gear_train "Gear train") and gear-wheels,[[14]](https://en.wikipedia.org/wiki/Computer#cite_note-15)c. 1000 AD.

The [sector](https://en.wikipedia.org/wiki/Sector_(instrument) "Sector (instrument)"), a calculating instrument used for solving problems in proportion, [trigonometry](https://en.wikipedia.org/wiki/Trigonometry "Trigonometry"), multiplication and division, and for various functions, such as squares and cube roots, was developed in the late 16th century and found application in gunnery, surveying and navigation.

The [planimeter](https://en.wikipedia.org/wiki/Planimeter "Planimeter") was a manual instrument to calculate the area of a closed figure by tracing over it with a mechanical linkage.

[![Image 11](https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Sliderule_2005.png/330px-Sliderule_2005.png)](https://en.wikipedia.org/wiki/File:Sliderule_2005.png)

A [slide rule](https://en.wikipedia.org/wiki/Slide_rule "Slide rule")

The [slide rule](https://en.wikipedia.org/wiki/Slide_rule "Slide rule") was invented around 1620–1630, by the English clergyman [William Oughtred](https://en.wikipedia.org/wiki/William_Oughtred "William Oughtred"), shortly after the publication of the concept of the [logarithm](https://en.wikipedia.org/wiki/Logarithm "Logarithm"). It is a hand-operated analog computer for doing multiplication and division. As slide rule development progressed, added scales provided reciprocals, squares and square roots, cubes and cube roots, as well as [transcendental functions](https://en.wikipedia.org/wiki/Transcendental_function "Transcendental function") such as logarithms and exponentials, circular and [hyperbolic](https://en.wikipedia.org/wiki/Hyperbolic_functions "Hyperbolic functions") trigonometry and other [functions](https://en.wikipedia.org/wiki/Function_(mathematics) "Function (mathematics)"). Slide rules with special scales are still used for quick performance of routine calculations, such as the [E6B](https://en.wikipedia.org/wiki/E6B "E6B") circular slide rule used for time and distance calculations on light aircraft.

In the 1770s, [Pierre Jaquet-Droz](https://en.wikipedia.org/wiki/Pierre_Jaquet-Droz "Pierre Jaquet-Droz"), a Swiss [watchmaker](https://en.wikipedia.org/wiki/Watchmaker "Watchmaker"), built a mechanical doll ([automaton](https://en.wikipedia.org/wiki/Automata "Automata")) that could write holding a quill pen. By switching the number and order of its internal wheels different letters, and hence different messages, could be produced. In effect, it could be mechanically "programmed" to read instructions. Along with two other complex machines, the doll is at the Musée d'Art et d'Histoire of [Neuchâtel](https://en.wikipedia.org/wiki/Neuch%C3%A2tel "Neuchâtel"), [Switzerland](https://en.wikipedia.org/wiki/Switzerland "Switzerland"), and still operates.[[15]](https://en.wikipedia.org/wiki/Computer#cite_note-16)

In 1831–1835, mathematician and engineer [Giovanni Plana](https://en.wikipedia.org/wiki/Giovanni_Plana "Giovanni Plana") devised a [Perpetual Calendar machine](https://en.wikipedia.org/wiki/Cappella_dei_Mercanti_(Turin)#Perpetual_calendar "Cappella dei Mercanti (Turin)"), which through a system of pulleys and cylinders could predict the [perpetual calendar](https://en.wikipedia.org/wiki/Perpetual_calendar "Perpetual calendar") for every year from 0 CE (that is, 1 BCE) to 4000 CE, keeping track of leap years and varying day length. The [tide-predicting machine](https://en.wikipedia.org/wiki/Tide-predicting_machine "Tide-predicting machine") invented by the Scottish scientist [Sir William Thomson](https://en.wikipedia.org/wiki/William_Thomson,_1st_Baron_Kelvin "William Thomson, 1st Baron Kelvin") in 1872 was of great utility to navigation in shallow waters. It used a system of pulleys and wires to automatically calculate predicted tide levels for a set period at a particular location.

The [differential analyser](https://en.wikipedia.org/wiki/Differential_analyser "Differential analyser"), a mechanical analog computer designed to solve [differential equations](https://en.wikipedia.org/wiki/Differential_equation "Differential equation") by [integration](https://en.wikipedia.org/wiki/Integral "Integral"), used wheel-and-disc mechanisms to perform the integration. In 1876, Sir William Thomson had already discussed the possible construction of such calculators, but he had been stymied by the limited output torque of the [ball-and-disk integrators](https://en.wikipedia.org/wiki/Ball-and-disk_integrator "Ball-and-disk integrator").[[16]](https://en.wikipedia.org/wiki/Computer#cite_note-scientific-computing.com-17) In a differential analyzer, the output of one integrator drove the input of the next integrator, or a graphing output. The [torque amplifier](https://en.wikipedia.org/wiki/Torque_amplifier "Torque amplifier") was the advance that allowed these machines to work. Starting in the 1920s, [Vannevar Bush](https://en.wikipedia.org/wiki/Vannevar_Bush "Vannevar Bush") and others developed mechanical differential analyzers.

In the 1890s, the Spanish engineer [Leonardo Torres Quevedo](https://en.wikipedia.org/wiki/Leonardo_Torres_Quevedo "Leonardo Torres Quevedo") began to develop a series of advanced [analog machines](https://en.wikipedia.org/wiki/Leonardo_Torres_Quevedo#Analogue_calculating_machines "Leonardo Torres Quevedo") that could solve real and complex roots of [polynomials](https://en.wikipedia.org/wiki/Polynomial "Polynomial"),[[17]](https://en.wikipedia.org/wiki/Computer#cite_note-18)[[18]](https://en.wikipedia.org/wiki/Computer#cite_note-MaquinasAlgebricasLTQ-19)[[19]](https://en.wikipedia.org/wiki/Computer#cite_note-Thomas2008-20)[[20]](https://en.wikipedia.org/wiki/Computer#cite_note-Gomez-JaureguiGutierrez-GarciaGonz%C3%A1lez-RedondoIglesiasManchadoOtero2022-21) which were published in 1901 by the [Paris Academy of Sciences](https://en.wikipedia.org/wiki/French_Academy_of_Sciences "French Academy of Sciences").[[21]](https://en.wikipedia.org/wiki/Computer#cite_note-22)

### First computer

[![Image 12](https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Charles_Babbage_-_1860.jpg/250px-Charles_Babbage_-_1860.jpg)](https://en.wikipedia.org/wiki/File:Charles_Babbage_-_1860.jpg)

[Charles Babbage](https://en.wikipedia.org/wiki/Charles_Babbage "Charles Babbage")

[![Image 13](https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Difference_engine_plate_1853.jpg/250px-Difference_engine_plate_1853.jpg)](https://en.wikipedia.org/wiki/File:Difference_engine_plate_1853.jpg)

[![Image 14](https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Differenceengine.jpg/250px-Differenceengine.jpg)](https://en.wikipedia.org/wiki/File:Differenceengine.jpg)

[Charles Babbage](https://en.wikipedia.org/wiki/Charles_Babbage "Charles Babbage"), an English mechanical engineer and [polymath](https://en.wikipedia.org/wiki/Polymath "Polymath"), originated the concept of a programmable computer. Considered the "[father of the computer](https://en.wikipedia.org/wiki/Computer_pioneer "Computer pioneer")",[[22]](https://en.wikipedia.org/wiki/Computer#cite_note-23) he conceptualized and invented the first [mechanical computer](https://en.wikipedia.org/wiki/Mechanical_computer "Mechanical computer") in the early 19th century.

After working on his [difference engine](https://en.wikipedia.org/wiki/Difference_engine "Difference engine") he announced his invention in 1822, in a paper to the [Royal Astronomical Society](https://en.wikipedia.org/wiki/Royal_Astronomical_Society "Royal Astronomical Society"), titled "Note on the application of machinery to the computation of astronomical and mathematical tables".[[23]](https://en.wikipedia.org/wiki/Computer#cite_note-24) He also designed to aid in navigational calculations, in 1833 he realized that a much more general design, an [analytical engine](https://en.wikipedia.org/wiki/Analytical_engine "Analytical engine"), was possible. The input of programs and data was to be provided to the machine via [punched cards](https://en.wikipedia.org/wiki/Punched_card "Punched card"), a method being used at the time to direct mechanical [looms](https://en.wikipedia.org/wiki/Loom "Loom") such as the [Jacquard loom](https://en.wikipedia.org/wiki/Jacquard_loom "Jacquard loom"). For output, the machine would have a [printer](https://en.wikipedia.org/wiki/Printer_(computing) "Printer (computing)"), a curve plotter and a bell. The machine would also be able to punch numbers onto cards to be read in later. The engine would incorporate an [arithmetic logic unit](https://en.wikipedia.org/wiki/Arithmetic_logic_unit "Arithmetic logic unit"), [control flow](https://en.wikipedia.org/wiki/Control_flow "Control flow") in the form of [conditional branching](https://en.wikipedia.org/wiki/Conditional_branching "Conditional branching") and [loops](https://en.wikipedia.org/wiki/Program_loop#Loops "Program loop"), and integrated [memory](https://en.wikipedia.org/wiki/Computer_memory "Computer memory"), making it the first design for a general-purpose computer that could be described in modern terms as [Turing-complete](https://en.wikipedia.org/wiki/Turing-complete "Turing-complete").[[24]](https://en.wikipedia.org/wiki/Computer#cite_note-babbageonline-25)[[25]](https://en.wikipedia.org/wiki/Computer#cite_note-26)

The machine was about a century ahead of its time. All the parts for his machine had to be made by hand – this was a major problem for a device with thousands of parts. Eventually, the project was dissolved with the decision of the [British Government](https://en.wikipedia.org/wiki/British_Government "British Government") to cease funding. Babbage's failure to complete the analytical engine can be chiefly attributed to political and financial difficulties as well as his desire to develop an increasingly sophisticated computer and to move ahead faster than anyone else could follow. Nevertheless, his son, [Henry Babbage](https://en.wikipedia.org/wiki/Henry_Babbage "Henry Babbage"), completed a simplified version of the analytical engine's computing unit (the _mill_) in 1888. He gave a successful demonstration of its use in computing tables in 1906.

### Electromechanical calculating machine

[![Image 15](https://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Aritm%C3%B3metro_Electromec%C3%A1nico.jpg/250px-Aritm%C3%B3metro_Electromec%C3%A1nico.jpg)](https://en.wikipedia.org/wiki/File:Aritm%C3%B3metro_Electromec%C3%A1nico.jpg)

Electro-mechanical calculator (1920) by [Leonardo Torres Quevedo](https://en.wikipedia.org/wiki/Leonardo_Torres_Quevedo "Leonardo Torres Quevedo").

In his work _Essays on Automatics_ published in 1914, [Leonardo Torres Quevedo](https://en.wikipedia.org/wiki/Leonardo_Torres_Quevedo "Leonardo Torres Quevedo") wrote a brief history of Babbage's efforts at constructing a mechanical Difference Engine and Analytical Engine. The paper contains a design of a machine capable to calculate formulas like ![Image 16: {\displaystyle a^{x}(y-z)^{2}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/f171c18a804b28aee37b7074cc778659bd2dc4af), for a sequence of sets of values. The whole machine was to be controlled by a [read-only](https://en.wikipedia.org/wiki/Read-only_memory "Read-only memory") program, which was complete with provisions for [conditional branching](https://en.wikipedia.org/wiki/Conditional_branching "Conditional branching"). He also introduced the idea of [floating-point arithmetic](https://en.wikipedia.org/wiki/Floating-point_arithmetic "Floating-point arithmetic").[[26]](https://en.wikipedia.org/wiki/Computer#cite_note-LTQ1914es-27)[[27]](https://en.wikipedia.org/wiki/Computer#cite_note-28)[[28]](https://en.wikipedia.org/wiki/Computer#cite_note-29) In 1920, to celebrate the 100th anniversary of the invention of the [arithmometer](https://en.wikipedia.org/wiki/Arithmometer "Arithmometer"), Torres presented in Paris the Electromechanical Arithmometer, which allowed a user to input arithmetic problems through a [keyboard](https://en.wikipedia.org/wiki/Keyboard_layout "Keyboard layout"), and computed and printed the results,[[29]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTERandell19826,_11%E2%80%9313-30)[[30]](https://en.wikipedia.org/wiki/Computer#cite_note-Randell1982p109-31)[[31]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTEBromley1990-32)[[32]](https://en.wikipedia.org/wiki/Computer#cite_note-33) demonstrating the feasibility of an electromechanical analytical engine.[[33]](https://en.wikipedia.org/wiki/Computer#cite_note-34)

### Analog computers

[![Image 17](https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/099-tpm3-sk.jpg/250px-099-tpm3-sk.jpg)](https://en.wikipedia.org/wiki/File:099-tpm3-sk.jpg)

[Sir William Thomson](https://en.wikipedia.org/wiki/William_Thomson,_1st_Baron_Kelvin "William Thomson, 1st Baron Kelvin")'s third tide-predicting machine design, 1879–81

During the first half of the 20th century, many scientific [computing](https://en.wikipedia.org/wiki/Computing "Computing") needs were met by increasingly sophisticated analog computers, which used a direct mechanical or electrical model of the problem as a basis for [computation](https://en.wikipedia.org/wiki/Computation "Computation"). However, these were not programmable and generally lacked the versatility and accuracy of modern digital computers.[[34]](https://en.wikipedia.org/wiki/Computer#cite_note-stanf-35) The first modern analog computer was a [tide-predicting machine](https://en.wikipedia.org/wiki/Tide-predicting_machine "Tide-predicting machine"), invented by [Sir William Thomson](https://en.wikipedia.org/wiki/William_Thomson,_1st_Baron_Kelvin "William Thomson, 1st Baron Kelvin") (later to become Lord Kelvin) in 1872. The [differential analyser](https://en.wikipedia.org/wiki/Differential_analyser "Differential analyser"), a mechanical analog computer designed to solve differential equations by integration using wheel-and-disc mechanisms, was conceptualized in 1876 by [James Thomson](https://en.wikipedia.org/wiki/James_Thomson_(engineer) "James Thomson (engineer)"), the elder brother of the more famous Sir William Thomson.[[16]](https://en.wikipedia.org/wiki/Computer#cite_note-scientific-computing.com-17)

The art of mechanical analog computing reached its zenith with the [differential analyzer](https://en.wikipedia.org/wiki/Differential_analyzer "Differential analyzer"), completed in 1931 by [Vannevar Bush](https://en.wikipedia.org/wiki/Vannevar_Bush "Vannevar Bush") at [MIT](https://en.wikipedia.org/wiki/Massachusetts_Institute_of_Technology "Massachusetts Institute of Technology").[[35]](https://en.wikipedia.org/wiki/Computer#cite_note-36) By the 1950s, the success of digital electronic computers had spelled the end for most analog computing machines, but analog computers remained in use during the 1950s in some specialized applications such as education ([slide rule](https://en.wikipedia.org/wiki/Slide_rule "Slide rule")) and aircraft ([control systems](https://en.wikipedia.org/wiki/Control_system "Control system")).[_[citation needed](https://en.wikipedia.org/wiki/Wikipedia:Citation\_needed "Wikipedia:Citation needed")_]

### Digital computers

#### Electromechanical

[Claude Shannon](https://en.wikipedia.org/wiki/Claude_Shannon "Claude Shannon")'s 1937 [master's thesis](https://en.wikipedia.org/wiki/A_Symbolic_Analysis_of_Relay_and_Switching_Circuits "A Symbolic Analysis of Relay and Switching Circuits") laid the foundations of digital computing, with his insight of applying Boolean algebra to the analysis and synthesis of switching circuits being the basic concept which underlies all electronic digital computers.[[36]](https://en.wikipedia.org/wiki/Computer#cite_note-37)[[37]](https://en.wikipedia.org/wiki/Computer#cite_note-:1-38)

By 1938, the [United States Navy](https://en.wikipedia.org/wiki/United_States_Navy "United States Navy") had developed the [Torpedo Data Computer](https://en.wikipedia.org/wiki/Torpedo_Data_Computer "Torpedo Data Computer"), an electromechanical analog computer for [submarines](https://en.wikipedia.org/wiki/Submarine "Submarine") that used trigonometry to solve the problem of firing a torpedo at a moving target. During [World War II](https://en.wikipedia.org/wiki/World_War_II "World War II"), similar devices were developed in other countries.[[38]](https://en.wikipedia.org/wiki/Computer#cite_note-39)

[![Image 18](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Z3_Deutsches_Museum.JPG/250px-Z3_Deutsches_Museum.JPG)](https://en.wikipedia.org/wiki/File:Z3_Deutsches_Museum.JPG)

Replica of [Konrad Zuse](https://en.wikipedia.org/wiki/Konrad_Zuse "Konrad Zuse")'s [Z3](https://en.wikipedia.org/wiki/Z3_(computer) "Z3 (computer)"), the first fully automatic, digital (electromechanical) computer

Early digital computers were [electromechanical](https://en.wikipedia.org/wiki/Electromechanics "Electromechanics"); electric switches drove mechanical relays to perform the calculation. These devices had a low operating speed and were eventually superseded by much faster all-electric computers, originally using [vacuum tubes](https://en.wikipedia.org/wiki/Vacuum_tube "Vacuum tube"). The [Z2](https://en.wikipedia.org/wiki/Z2_(computer) "Z2 (computer)"), created by German engineer [Konrad Zuse](https://en.wikipedia.org/wiki/Konrad_Zuse "Konrad Zuse") in 1939 in [Berlin](https://en.wikipedia.org/wiki/Berlin "Berlin"), was one of the earliest examples of an electromechanical relay computer.[[39]](https://en.wikipedia.org/wiki/Computer#cite_note-Part_4_Zuse-40)

[![Image 19](https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Konrad_Zuse_%281992%29.jpg/250px-Konrad_Zuse_%281992%29.jpg)](https://en.wikipedia.org/wiki/File:Konrad_Zuse_(1992).jpg)

[Konrad Zuse](https://en.wikipedia.org/wiki/Konrad_Zuse "Konrad Zuse"), inventor of the modern computer[[40]](https://en.wikipedia.org/wiki/Computer#cite_note-Bellis-41)[[41]](https://en.wikipedia.org/wiki/Computer#cite_note-42)

In 1941, Zuse followed his earlier machine up with the [Z3](https://en.wikipedia.org/wiki/Z3_(computer) "Z3 (computer)"), the world's first working electromechanical [programmable](https://en.wikipedia.org/wiki/Computer_programming "Computer programming"), fully automatic digital computer.[[42]](https://en.wikipedia.org/wiki/Computer#cite_note-43)[[43]](https://en.wikipedia.org/wiki/Computer#cite_note-44) The Z3 was built with 2000 [relays](https://en.wikipedia.org/wiki/Relay "Relay"), implementing a 22 [bit](https://en.wikipedia.org/wiki/Bit "Bit")[word length](https://en.wikipedia.org/wiki/Word_(computer_architecture) "Word (computer architecture)") that operated at a [clock frequency](https://en.wikipedia.org/wiki/Clock_frequency "Clock frequency") of about 5–10 [Hz](https://en.wikipedia.org/wiki/Hertz "Hertz").[[44]](https://en.wikipedia.org/wiki/Computer#cite_note-45) Program code was supplied on punched [film](https://en.wikipedia.org/wiki/Celluloid "Celluloid") while data could be stored in 64 words of memory or supplied from the keyboard. It was quite similar to modern machines in some respects, pioneering numerous advances such as [floating-point numbers](https://en.wikipedia.org/wiki/Floating-point_number "Floating-point number"). Rather than the harder-to-implement decimal system (used in [Charles Babbage](https://en.wikipedia.org/wiki/Charles_Babbage "Charles Babbage")'s earlier design), using a [binary](https://en.wikipedia.org/wiki/Binary_number "Binary number") system meant that Zuse's machines were easier to build and potentially more reliable, given the technologies available at that time.[[45]](https://en.wikipedia.org/wiki/Computer#cite_note-46) The Z3 was not itself a universal computer but could be extended to be [Turing complete](https://en.wikipedia.org/wiki/Turing_complete "Turing complete").[[46]](https://en.wikipedia.org/wiki/Computer#cite_note-rojas-ieee-47)[[47]](https://en.wikipedia.org/wiki/Computer#cite_note-rojas-universal-48)

Zuse's next computer, the [Z4](https://en.wikipedia.org/wiki/Z4_(computer) "Z4 (computer)"), became the world's first commercial computer; after initial delay due to the Second World War, it was completed in 1950 and delivered to the [ETH Zurich](https://en.wikipedia.org/wiki/ETH_Zurich "ETH Zurich").[[48]](https://en.wikipedia.org/wiki/Computer#cite_note-OReganZuse-49) The computer was manufactured by Zuse's own company, [Zuse KG](https://en.wikipedia.org/wiki/Zuse_KG "Zuse KG"), which was founded in 1941 as the first company with the sole purpose of developing computers in Berlin.[[48]](https://en.wikipedia.org/wiki/Computer#cite_note-OReganZuse-49) The Z4 served as the inspiration for the construction of the [ERMETH](https://en.wikipedia.org/wiki/ERMETH "ERMETH"), the first Swiss computer and one of the first in Europe.[[49]](https://en.wikipedia.org/wiki/Computer#cite_note-50)

#### Vacuum tubes and digital electronic circuits

Purely [electronic circuit](https://en.wikipedia.org/wiki/Electronic_circuit "Electronic circuit") elements soon replaced their mechanical and electromechanical equivalents, at the same time that digital calculation replaced analog. The engineer [Tommy Flowers](https://en.wikipedia.org/wiki/Tommy_Flowers "Tommy Flowers"), working at the [Post Office Research Station](https://en.wikipedia.org/wiki/Post_Office_Research_Station "Post Office Research Station") in London in the 1930s, began to explore the possible use of electronics for the [telephone exchange](https://en.wikipedia.org/wiki/Telephone_exchange "Telephone exchange"). Experimental equipment that he built in 1934 went into operation five years later, converting a portion of the [telephone exchange](https://en.wikipedia.org/wiki/Telephone_exchange "Telephone exchange") network into an electronic data processing system, using thousands of [vacuum tubes](https://en.wikipedia.org/wiki/Vacuum_tube "Vacuum tube").[[34]](https://en.wikipedia.org/wiki/Computer#cite_note-stanf-35) In the US, [John Vincent Atanasoff](https://en.wikipedia.org/wiki/John_Vincent_Atanasoff "John Vincent Atanasoff") and [Clifford E. Berry](https://en.wikipedia.org/wiki/Clifford_Berry "Clifford Berry") of [Iowa State University](https://en.wikipedia.org/wiki/Iowa_State_University "Iowa State University") developed and tested the [Atanasoff–Berry Computer](https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_Computer "Atanasoff–Berry Computer") (ABC) in 1942,[[50]](https://en.wikipedia.org/wiki/Computer#cite_note-51) the first "automatic electronic digital computer".[[51]](https://en.wikipedia.org/wiki/Computer#cite_note-52) This design was also all-electronic and used about 300 vacuum tubes, with capacitors fixed in a mechanically rotating drum for memory.[[52]](https://en.wikipedia.org/wiki/Computer#cite_note-Copeland2006-53)

[![Image 20: Two women are seen by the Colossus computer.](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Colossus.jpg/330px-Colossus.jpg)](https://en.wikipedia.org/wiki/File:Colossus.jpg)

[Colossus](https://en.wikipedia.org/wiki/Colossus_computer "Colossus computer"), the first [electronic digital](https://en.wikipedia.org/wiki/Digital_electronics "Digital electronics") programmable computing device, was used to break German ciphers during World War II. It is seen here in use at [Bletchley Park](https://en.wikipedia.org/wiki/Bletchley_Park "Bletchley Park") in 1943.

During World War II, the British code-breakers at [Bletchley Park](https://en.wikipedia.org/wiki/Bletchley_Park "Bletchley Park") achieved a number of successes at breaking encrypted German military communications. The German encryption machine, [Enigma](https://en.wikipedia.org/wiki/Enigma_machine "Enigma machine"), was first attacked with the help of the electro-mechanical [bombes](https://en.wikipedia.org/wiki/Bombe "Bombe") which were often run by women.[[53]](https://en.wikipedia.org/wiki/Computer#cite_note-:0-54)[[54]](https://en.wikipedia.org/wiki/Computer#cite_note-55) To crack the more sophisticated German [Lorenz SZ 40/42](https://en.wikipedia.org/wiki/Lorenz_SZ_40/42 "Lorenz SZ 40/42") machine, used for high-level Army communications, [Max Newman](https://en.wikipedia.org/wiki/Max_Newman "Max Newman") and his colleagues commissioned Flowers to build the [Colossus](https://en.wikipedia.org/wiki/Colossus_computer "Colossus computer").[[52]](https://en.wikipedia.org/wiki/Computer#cite_note-Copeland2006-53) He spent eleven months from early February 1943 designing and building the first Colossus.[[55]](https://en.wikipedia.org/wiki/Computer#cite_note-56) After a functional test in December 1943, Colossus was shipped to Bletchley Park, where it was delivered on 18 January 1944[[56]](https://en.wikipedia.org/wiki/Computer#cite_note-The_Colossus_Computer-57) and attacked its first message on 5 February.[[52]](https://en.wikipedia.org/wiki/Computer#cite_note-Copeland2006-53)

Colossus was the world's first [electronic digital](https://en.wikipedia.org/wiki/Digital_electronics "Digital electronics") programmable computer.[[34]](https://en.wikipedia.org/wiki/Computer#cite_note-stanf-35) It used a large number of valves (vacuum tubes). It had paper-tape input and was capable of being configured to perform a variety of [boolean logical](https://en.wikipedia.org/wiki/Boolean_logic "Boolean logic") operations on its data, but it was not Turing-complete. Nine Mk II Colossi were built (The Mk I was converted to a Mk II making ten machines in total). Colossus Mark I contained 1,500 thermionic valves (tubes), but Mark II with 2,400 valves, was both five times faster and simpler to operate than Mark I, greatly speeding the decoding process.[[57]](https://en.wikipedia.org/wiki/Computer#cite_note-58)[[58]](https://en.wikipedia.org/wiki/Computer#cite_note-59)

[![Image 21](https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Glen_Beck_and_Betty_Snyder_program_the_ENIAC_in_building_328_at_the_Ballistic_Research_Laboratory.jpg/330px-Glen_Beck_and_Betty_Snyder_program_the_ENIAC_in_building_328_at_the_Ballistic_Research_Laboratory.jpg)](https://en.wikipedia.org/wiki/File:Glen_Beck_and_Betty_Snyder_program_the_ENIAC_in_building_328_at_the_Ballistic_Research_Laboratory.jpg)

[ENIAC](https://en.wikipedia.org/wiki/ENIAC "ENIAC") was the first [electronic](https://en.wikipedia.org/wiki/Electronics "Electronics"), Turing-complete device, and performed ballistics trajectory calculations for the [United States Army](https://en.wikipedia.org/wiki/United_States_Army "United States Army").

The [ENIAC](https://en.wikipedia.org/wiki/ENIAC "ENIAC")[[59]](https://en.wikipedia.org/wiki/Computer#cite_note-60) (Electronic Numerical Integrator and Computer) was the first electronic [programmable](https://en.wikipedia.org/wiki/Computer_programming "Computer programming") computer built in the U.S. Although the ENIAC was similar to the Colossus, it was much faster, more flexible, and it was Turing-complete. Like the Colossus, a "program" on the ENIAC was defined by the [states](https://en.wikipedia.org/wiki/State_(computer_science) "State (computer science)") of its patch cables and switches, a far cry from the [stored program](https://en.wikipedia.org/wiki/Stored_program "Stored program") electronic machines that came later. Once a program was written, it had to be mechanically set into the machine with manual resetting of plugs and switches. The programmers of the ENIAC were six women, often known collectively as the "ENIAC girls".[[60]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTEEvans201839-61)[[61]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTELight1999459-62)

It combined the high speed of electronics with the ability to be programmed for many complex problems. It could add or subtract 5000 times a second, a thousand times faster than any other machine. It also had modules to multiply, divide, and square root. High speed memory was limited to 20 words (about 80 bytes). Built under the direction of [John Mauchly](https://en.wikipedia.org/wiki/John_Mauchly "John Mauchly") and [J. Presper Eckert](https://en.wikipedia.org/wiki/J._Presper_Eckert "J. Presper Eckert") at the University of Pennsylvania, ENIAC's development and construction lasted from 1943 to full operation at the end of 1945. The machine was huge, weighing 30 tons, using 200 kilowatts of electric power and contained over 18,000 vacuum tubes, 1,500 relays, and hundreds of thousands of resistors, capacitors, and inductors.[[62]](https://en.wikipedia.org/wiki/Computer#cite_note-Eniac-63)

### Modern computers

#### Concept of modern computer

The principle of the modern computer was proposed by [Alan Turing](https://en.wikipedia.org/wiki/Alan_Turing "Alan Turing") in his seminal 1936 paper,[[63]](https://en.wikipedia.org/wiki/Computer#cite_note-64)_On Computable Numbers_. Turing proposed a simple device that he called "Universal Computing machine" and that is now known as a [universal Turing machine](https://en.wikipedia.org/wiki/Universal_Turing_machine "Universal Turing machine"). He proved that such a machine is capable of computing anything that is computable by executing instructions (program) stored on tape, allowing the machine to be programmable. The fundamental concept of Turing's design is the [stored program](https://en.wikipedia.org/wiki/Stored_program "Stored program"), where all the instructions for computing are stored in memory. [Von Neumann](https://en.wikipedia.org/wiki/John_von_Neumann "John von Neumann") acknowledged that the central concept of the modern computer was due to this paper.[[64]](https://en.wikipedia.org/wiki/Computer#cite_note-65) Turing machines are to this day a central object of study in [theory of computation](https://en.wikipedia.org/wiki/Theory_of_computation "Theory of computation"). Except for the limitations imposed by their finite memory stores, modern computers are said to be [Turing-complete](https://en.wikipedia.org/wiki/Turing_completeness "Turing completeness"), which is to say, they have [algorithm](https://en.wikipedia.org/wiki/Algorithm "Algorithm") execution capability equivalent to a universal Turing machine.

#### Stored programs

[![Image 22: Three tall racks containing electronic circuit boards](https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/SSEM_Manchester_museum_close_up.jpg/330px-SSEM_Manchester_museum_close_up.jpg)](https://en.wikipedia.org/wiki/File:SSEM_Manchester_museum_close_up.jpg)

A section of the reconstructed [Manchester Baby](https://en.wikipedia.org/wiki/Manchester_Baby "Manchester Baby"), the first electronic [stored-program computer](https://en.wikipedia.org/wiki/Stored-program_computer "Stored-program computer")

Early computing machines had fixed programs. Changing its function required the re-wiring and re-structuring of the machine.[[52]](https://en.wikipedia.org/wiki/Computer#cite_note-Copeland2006-53) With the proposal of the stored-program computer this changed. A stored-program computer includes by design an [instruction set](https://en.wikipedia.org/wiki/Instruction_set "Instruction set") and can store in memory a set of instructions (a [program](https://en.wikipedia.org/wiki/Computer_program "Computer program")) that details the [computation](https://en.wikipedia.org/wiki/Computation "Computation"). The theoretical basis for the stored-program computer was laid out by [Alan Turing](https://en.wikipedia.org/wiki/Alan_Turing "Alan Turing") in his 1936 paper. In 1945, Turing joined the [National Physical Laboratory](https://en.wikipedia.org/wiki/National_Physical_Laboratory_(United_Kingdom) "National Physical Laboratory (United Kingdom)") and began work on developing an electronic stored-program digital computer. His 1945 report "Proposed Electronic Calculator" was the first specification for such a device. John von Neumann at the [University of Pennsylvania](https://en.wikipedia.org/wiki/University_of_Pennsylvania "University of Pennsylvania") also circulated his _[First Draft of a Report on the EDVAC](https://en.wikipedia.org/wiki/First\_Draft\_of\_a\_Report\_on\_the\_EDVAC "First Draft of a Report on the EDVAC")_ in 1945.[[34]](https://en.wikipedia.org/wiki/Computer#cite_note-stanf-35)

The [Manchester Baby](https://en.wikipedia.org/wiki/Manchester_Baby "Manchester Baby") was the world's first [stored-program computer](https://en.wikipedia.org/wiki/Stored-program_computer "Stored-program computer"). It was built at the [University of Manchester](https://en.wikipedia.org/wiki/University_of_Manchester "University of Manchester") in England by [Frederic C. Williams](https://en.wikipedia.org/wiki/Frederic_Calland_Williams "Frederic Calland Williams"), [Tom Kilburn](https://en.wikipedia.org/wiki/Tom_Kilburn "Tom Kilburn") and [Geoff Tootill](https://en.wikipedia.org/wiki/Geoff_Tootill "Geoff Tootill"), and ran its first program on 21 June 1948.[[65]](https://en.wikipedia.org/wiki/Computer#cite_note-66) It was designed as a [testbed](https://en.wikipedia.org/wiki/Testbed "Testbed") for the [Williams tube](https://en.wikipedia.org/wiki/Williams_tube "Williams tube"), the first [random-access](https://en.wikipedia.org/wiki/Random-access_memory "Random-access memory") digital storage device.[[66]](https://en.wikipedia.org/wiki/Computer#cite_note-67) Although the computer was described as "small and primitive" by a 1998 retrospective, it was the first working machine to contain all of the elements essential to a modern electronic computer.[[67]](https://en.wikipedia.org/wiki/Computer#cite_note-68) As soon as the Baby had demonstrated the feasibility of its design, a project began at the university to develop it into a practically useful computer, the [Manchester Mark 1](https://en.wikipedia.org/wiki/Manchester_Mark_1 "Manchester Mark 1").

The Mark 1 in turn quickly became the prototype for the [Ferranti Mark 1](https://en.wikipedia.org/wiki/Ferranti_Mark_1 "Ferranti Mark 1"), the world's first commercially available general-purpose computer.[[68]](https://en.wikipedia.org/wiki/Computer#cite_note-NapperMK1-69) Built by [Ferranti](https://en.wikipedia.org/wiki/Ferranti "Ferranti"), it was delivered to the University of Manchester in February 1951. At least seven of these later machines were delivered between 1953 and 1957, one of them to [Shell](https://en.wikipedia.org/wiki/Royal_Dutch_Shell "Royal Dutch Shell") labs in [Amsterdam](https://en.wikipedia.org/wiki/Amsterdam "Amsterdam").[[69]](https://en.wikipedia.org/wiki/Computer#cite_note-70) In October 1947 the directors of British catering company [J. Lyons & Company](https://en.wikipedia.org/wiki/J._Lyons_and_Co. "J. Lyons and Co.") decided to take an active role in promoting the commercial development of computers. Lyons's [LEO I](https://en.wikipedia.org/wiki/LEO_computer "LEO computer") computer, modelled closely on the Cambridge [EDSAC](https://en.wikipedia.org/wiki/Electronic_Delay_Storage_Automatic_Calculator "Electronic Delay Storage Automatic Calculator") of 1949, became operational in April 1951[[70]](https://en.wikipedia.org/wiki/Computer#cite_note-71) and ran the world's first routine office computer [job](https://en.wikipedia.org/wiki/Job_(software) "Job (software)").

#### Transistors

[![Image 23](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e2/Transistor-die-KSY34.jpg/250px-Transistor-die-KSY34.jpg)](https://en.wikipedia.org/wiki/File:Transistor-die-KSY34.jpg)

[Bipolar junction transistor](https://en.wikipedia.org/wiki/Bipolar_junction_transistor "Bipolar junction transistor") (BJT)

The concept of a [field-effect transistor](https://en.wikipedia.org/wiki/Field-effect_transistor "Field-effect transistor") was proposed by [Julius Edgar Lilienfeld](https://en.wikipedia.org/wiki/Julius_Edgar_Lilienfeld "Julius Edgar Lilienfeld") in 1925. [John Bardeen](https://en.wikipedia.org/wiki/John_Bardeen "John Bardeen") and [Walter Brattain](https://en.wikipedia.org/wiki/Walter_Brattain "Walter Brattain"), while working under [William Shockley](https://en.wikipedia.org/wiki/William_Shockley "William Shockley") at [Bell Labs](https://en.wikipedia.org/wiki/Bell_Labs "Bell Labs"), built the first working [transistor](https://en.wikipedia.org/wiki/Transistor "Transistor"), the [point-contact transistor](https://en.wikipedia.org/wiki/Point-contact_transistor "Point-contact transistor"), in 1947, which was followed by Shockley's [bipolar junction transistor](https://en.wikipedia.org/wiki/Bipolar_junction_transistor "Bipolar junction transistor") in 1948.[[71]](https://en.wikipedia.org/wiki/Computer#cite_note-Lee-72)[[72]](https://en.wikipedia.org/wiki/Computer#cite_note-Puers-73) From 1955 onwards, transistors replaced [vacuum tubes](https://en.wikipedia.org/wiki/Vacuum_tube "Vacuum tube") in computer designs, giving rise to the "second generation" of computers. Compared to vacuum tubes, transistors have many advantages: they are smaller, and require less power than vacuum tubes, so give off less heat. [Junction transistors](https://en.wikipedia.org/wiki/Junction_transistor "Junction transistor") were much more reliable than vacuum tubes and had longer, indefinite, service life. Transistorized computers could contain tens of thousands of binary logic circuits in a relatively compact space. However, early junction transistors were relatively bulky devices that were difficult to manufacture on a [mass-production](https://en.wikipedia.org/wiki/Mass-production "Mass-production") basis, which limited them to a number of specialized applications.[[73]](https://en.wikipedia.org/wiki/Computer#cite_note-Moskowitz-74)

At the [University of Manchester](https://en.wikipedia.org/wiki/University_of_Manchester "University of Manchester"), a team under the leadership of [Tom Kilburn](https://en.wikipedia.org/wiki/Tom_Kilburn "Tom Kilburn") designed and built a machine using the newly developed transistors instead of valves.[[74]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTELavington199834%E2%80%9335-75) Their first [transistorized computer](https://en.wikipedia.org/wiki/Transistor_computer "Transistor computer") and the first in the world, was [operational by 1953](https://en.wikipedia.org/wiki/Manchester_computers#Transistor_Computer "Manchester computers"), and a second version was completed there in April 1955. However, the machine did make use of valves to generate its 125 kHz clock waveforms and in the circuitry to read and write on its magnetic [drum memory](https://en.wikipedia.org/wiki/Drum_memory "Drum memory"), so it was not the first completely transistorized computer. That distinction goes to the [Harwell CADET](https://en.wikipedia.org/wiki/Harwell_CADET "Harwell CADET") of 1955,[[75]](https://en.wikipedia.org/wiki/Computer#cite_note-ieeexplore.ieee-76) built by the electronics division of the [Atomic Energy Research Establishment](https://en.wikipedia.org/wiki/Atomic_Energy_Research_Establishment "Atomic Energy Research Establishment") at [Harwell](https://en.wikipedia.org/wiki/Harwell,_Oxfordshire "Harwell, Oxfordshire").[[75]](https://en.wikipedia.org/wiki/Computer#cite_note-ieeexplore.ieee-76)[[76]](https://en.wikipedia.org/wiki/Computer#cite_note-77)

[![Image 24](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/MOSFET_Structure.svg/250px-MOSFET_Structure.svg.png)](https://en.wikipedia.org/wiki/File:MOSFET_Structure.svg)

[MOSFET](https://en.wikipedia.org/wiki/MOSFET "MOSFET") (MOS transistor), showing [gate](https://en.wikipedia.org/wiki/Metal_gate "Metal gate") (G), body (B), source (S) and drain (D) terminals. The gate is separated from the body by an insulating layer (pink).

The [metal–oxide–silicon field-effect transistor](https://en.wikipedia.org/wiki/MOSFET "MOSFET") (MOSFET), also known as the MOS transistor, was invented at Bell Labs between 1955 and 1960[[77]](https://en.wikipedia.org/wiki/Computer#cite_note-:03-78)[[78]](https://en.wikipedia.org/wiki/Computer#cite_note-79)[[79]](https://en.wikipedia.org/wiki/Computer#cite_note-80)[[80]](https://en.wikipedia.org/wiki/Computer#cite_note-81)[[81]](https://en.wikipedia.org/wiki/Computer#cite_note-82)[[82]](https://en.wikipedia.org/wiki/Computer#cite_note-Lojek12023-83) and was the first truly compact transistor that could be miniaturized and mass-produced for a wide range of uses.[[73]](https://en.wikipedia.org/wiki/Computer#cite_note-Moskowitz-74) With its [high scalability](https://en.wikipedia.org/wiki/MOSFET_scaling "MOSFET scaling"),[[83]](https://en.wikipedia.org/wiki/Computer#cite_note-84) and much lower power consumption and higher density than bipolar junction transistors,[[84]](https://en.wikipedia.org/wiki/Computer#cite_note-85) the MOSFET made it possible to build [high-density integrated circuits](https://en.wikipedia.org/wiki/Very_large-scale_integration "Very large-scale integration").[[85]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory-transistor-86)[[86]](https://en.wikipedia.org/wiki/Computer#cite_note-Hittinger-87) In addition to data processing, it also enabled the practical use of MOS transistors as [memory cell](https://en.wikipedia.org/wiki/Memory_cell_(computing) "Memory cell (computing)") storage elements, leading to the development of MOS [semiconductor memory](https://en.wikipedia.org/wiki/Semiconductor_memory "Semiconductor memory"), which replaced earlier [magnetic-core memory](https://en.wikipedia.org/wiki/Magnetic-core_memory "Magnetic-core memory") in computers. The MOSFET led to the [microcomputer revolution](https://en.wikipedia.org/wiki/Microcomputer_revolution "Microcomputer revolution"),[[87]](https://en.wikipedia.org/wiki/Computer#cite_note-88) and became the driving force behind the [computer revolution](https://en.wikipedia.org/wiki/Computer_revolution "Computer revolution").[[88]](https://en.wikipedia.org/wiki/Computer#cite_note-89)[[89]](https://en.wikipedia.org/wiki/Computer#cite_note-uspto-90) The MOSFET is the most widely used transistor in computers,[[90]](https://en.wikipedia.org/wiki/Computer#cite_note-kahng-91)[[91]](https://en.wikipedia.org/wiki/Computer#cite_note-atalla-92) and is the fundamental building block of [digital electronics](https://en.wikipedia.org/wiki/Digital_electronics "Digital electronics").[[92]](https://en.wikipedia.org/wiki/Computer#cite_note-triumph-93)

#### Integrated circuits

[![Image 25](https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/MOS_6502A.jpg/250px-MOS_6502A.jpg)](https://en.wikipedia.org/wiki/File:MOS_6502A.jpg)

Integrated circuits are typically packaged in plastic, metal, or ceramic cases to protect the IC from damage and for ease of assembly.

The next great advance in computing power came with the advent of the [integrated circuit](https://en.wikipedia.org/wiki/Integrated_circuit "Integrated circuit") (IC). The idea of the integrated circuit was first conceived by a radar scientist working for the [Royal Radar Establishment](https://en.wikipedia.org/wiki/Royal_Radar_Establishment "Royal Radar Establishment") of the [Ministry of Defence](https://en.wikipedia.org/wiki/Ministry_of_Defence_(United_Kingdom) "Ministry of Defence (United Kingdom)"), [Geoffrey W.A. Dummer](https://en.wikipedia.org/wiki/Geoffrey_Dummer "Geoffrey Dummer"). Dummer presented the first public description of an integrated circuit at the Symposium on Progress in Quality Electronic Components in [Washington,D.C.](https://en.wikipedia.org/wiki/Washington,_D.C. "Washington, D.C."), on 7 May 1952.[[93]](https://en.wikipedia.org/wiki/Computer#cite_note-94)

The first working ICs were invented by [Jack Kilby](https://en.wikipedia.org/wiki/Jack_Kilby "Jack Kilby") at [Texas Instruments](https://en.wikipedia.org/wiki/Texas_Instruments "Texas Instruments") and [Robert Noyce](https://en.wikipedia.org/wiki/Robert_Noyce "Robert Noyce") at [Fairchild Semiconductor](https://en.wikipedia.org/wiki/Fairchild_Semiconductor "Fairchild Semiconductor").[[94]](https://en.wikipedia.org/wiki/Computer#cite_note-95) Kilby recorded his initial ideas concerning the integrated circuit in July 1958, successfully demonstrating the first working integrated example on 12 September 1958.[[95]](https://en.wikipedia.org/wiki/Computer#cite_note-TIJackBuilt-96) In his patent application of 6 February 1959, Kilby described his new device as "a body of semiconductor material... wherein all the components of the electronic circuit are completely integrated".[[96]](https://en.wikipedia.org/wiki/Computer#cite_note-97)[[97]](https://en.wikipedia.org/wiki/Computer#cite_note-98) However, Kilby's invention was a [hybrid integrated circuit](https://en.wikipedia.org/wiki/Hybrid_integrated_circuit "Hybrid integrated circuit") (hybrid IC), rather than a [monolithic integrated circuit](https://en.wikipedia.org/wiki/Monolithic_integrated_circuit "Monolithic integrated circuit") (IC) chip.[[98]](https://en.wikipedia.org/wiki/Computer#cite_note-Saxena140-99) Kilby's IC had external wire connections, which made it difficult to mass-produce.[[99]](https://en.wikipedia.org/wiki/Computer#cite_note-nasa-100)

Noyce also came up with his own idea of an integrated circuit half a year later than Kilby.[[100]](https://en.wikipedia.org/wiki/Computer#cite_note-101) Noyce's invention was the first true monolithic IC chip.[[101]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory1959-102)[[99]](https://en.wikipedia.org/wiki/Computer#cite_note-nasa-100) His chip solved many practical problems that Kilby's had not. Produced at Fairchild Semiconductor, it was made of [silicon](https://en.wikipedia.org/wiki/Silicon "Silicon"), whereas Kilby's chip was made of [germanium](https://en.wikipedia.org/wiki/Germanium "Germanium"). Noyce's monolithic IC was [fabricated](https://en.wikipedia.org/wiki/Semiconductor_device_fabrication "Semiconductor device fabrication") using the [planar process](https://en.wikipedia.org/wiki/Planar_process "Planar process"), developed by his colleague [Jean Hoerni](https://en.wikipedia.org/wiki/Jean_Hoerni "Jean Hoerni") in early 1959. In turn, the planar process was based on [Carl Frosch](https://en.wikipedia.org/wiki/Carl_Frosch "Carl Frosch") and Lincoln Derick work on semiconductor surface passivation by silicon dioxide.[[102]](https://en.wikipedia.org/wiki/Computer#cite_note-103)[[103]](https://en.wikipedia.org/wiki/Computer#cite_note-104)[[104]](https://en.wikipedia.org/wiki/Computer#cite_note-Moskowitz4-105)[[105]](https://en.wikipedia.org/wiki/Computer#cite_note-106)[[106]](https://en.wikipedia.org/wiki/Computer#cite_note-107)[[107]](https://en.wikipedia.org/wiki/Computer#cite_note-Lojek1204-108)

Modern monolithic ICs are predominantly MOS ([metal–oxide–semiconductor](https://en.wikipedia.org/wiki/Metal%E2%80%93oxide%E2%80%93semiconductor "Metal–oxide–semiconductor")) integrated circuits, built from [MOSFETs](https://en.wikipedia.org/wiki/MOSFET "MOSFET") (MOS transistors).[[108]](https://en.wikipedia.org/wiki/Computer#cite_note-Kuo-109) The earliest experimental MOS IC to be fabricated was a 16-transistor chip built by Fred Heiman and Steven Hofstein at [RCA](https://en.wikipedia.org/wiki/RCA "RCA") in 1962.[[109]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory-digital-110)[General Microelectronics](https://en.wikipedia.org/wiki/General_Microelectronics "General Microelectronics") later introduced the first commercial MOS IC in 1964,[[110]](https://en.wikipedia.org/wiki/Computer#cite_note-111) developed by Robert Norman.[[109]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory-digital-110) Following the development of the [self-aligned gate](https://en.wikipedia.org/wiki/Self-aligned_gate "Self-aligned gate") (silicon-gate) MOS transistor by Robert Kerwin, [Donald Klein](https://en.wikipedia.org/wiki/Donald_L._Klein "Donald L. Klein") and John Sarace at Bell Labs in 1967, the first [silicon-gate](https://en.wikipedia.org/wiki/Silicon-gate "Silicon-gate") MOS IC with [self-aligned gates](https://en.wikipedia.org/wiki/Self-aligned_gate "Self-aligned gate") was developed by [Federico Faggin](https://en.wikipedia.org/wiki/Federico_Faggin "Federico Faggin") at Fairchild Semiconductor in 1968.[[111]](https://en.wikipedia.org/wiki/Computer#cite_note-112) The MOSFET has since become the most critical device component in modern ICs.[[108]](https://en.wikipedia.org/wiki/Computer#cite_note-Kuo-109)

[![Image 26](https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/MOS_6502_die.jpg/250px-MOS_6502_die.jpg)](https://en.wikipedia.org/wiki/File:MOS_6502_die.jpg)

[Die](https://en.wikipedia.org/wiki/Die_(integrated_circuit) "Die (integrated circuit)") photograph of a [MOS 6502](https://en.wikipedia.org/wiki/MOS_Technology_6502 "MOS Technology 6502"), an early 1970s microprocessor integrating 3500 transistors on a single chip

The development of the MOS integrated circuit led to the invention of the [microprocessor](https://en.wikipedia.org/wiki/Microprocessor "Microprocessor"),[[112]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory1971-113)[[113]](https://en.wikipedia.org/wiki/Computer#cite_note-Colinge2016-114) and heralded an explosion in the commercial and personal use of computers. While the subject of exactly which device was the first microprocessor is contentious, partly due to lack of agreement on the exact definition of the term "microprocessor", it is largely undisputed that the first single-chip microprocessor was the [Intel 4004](https://en.wikipedia.org/wiki/Intel_4004 "Intel 4004"),[[114]](https://en.wikipedia.org/wiki/Computer#cite_note-115) designed and realized by Federico Faggin with his silicon-gate MOS IC technology,[[112]](https://en.wikipedia.org/wiki/Computer#cite_note-computerhistory1971-113) along with [Ted Hoff](https://en.wikipedia.org/wiki/Marcian_Hoff "Marcian Hoff"), [Masatoshi Shima](https://en.wikipedia.org/wiki/Masatoshi_Shima "Masatoshi Shima") and [Stanley Mazor](https://en.wikipedia.org/wiki/Stanley_Mazor "Stanley Mazor") at [Intel](https://en.wikipedia.org/wiki/Intel "Intel").[[b]](https://en.wikipedia.org/wiki/Computer#cite_note-117)[[116]](https://en.wikipedia.org/wiki/Computer#cite_note-ieee-118) In the early 1970s, MOS IC technology enabled the [integration](https://en.wikipedia.org/wiki/Very_large-scale_integration "Very large-scale integration") of more than 10,000 transistors on a single chip.[[86]](https://en.wikipedia.org/wiki/Computer#cite_note-Hittinger-87)

[System on a Chip](https://en.wikipedia.org/wiki/System_on_a_Chip "System on a Chip") (SoCs) are complete computers on a [microchip](https://en.wikipedia.org/wiki/Microchip "Microchip") (or chip) the size of a coin.[[117]](https://en.wikipedia.org/wiki/Computer#cite_note-networkworld.com-119) They may or may not have integrated [RAM](https://en.wikipedia.org/wiki/Random-access_memory "Random-access memory") and [flash memory](https://en.wikipedia.org/wiki/Flash_memory "Flash memory"). If not integrated, the RAM is usually placed directly above (known as [Package on package](https://en.wikipedia.org/wiki/Package_on_package "Package on package")) or below (on the opposite side of the [circuit board](https://en.wikipedia.org/wiki/Circuit_board "Circuit board")) the SoC, and the flash memory is usually placed right next to the SoC. This is done to improve data transfer speeds, as the data signals do not have to travel long distances. Since ENIAC in 1945, computers have advanced enormously, with modern SoCs (such as the Snapdragon 865) being the size of a coin while also being hundreds of thousands of times more powerful than ENIAC, integrating billions of transistors, and consuming only a few watts of power.

### Mobile computers

The first [mobile computers](https://en.wikipedia.org/wiki/Portable_computer "Portable computer") were heavy and ran from mains power. The 50 lb (23 kg) [IBM 5100](https://en.wikipedia.org/wiki/IBM_5100 "IBM 5100") was an early example. Later portables such as the [Osborne 1](https://en.wikipedia.org/wiki/Osborne_1 "Osborne 1") and [Compaq Portable](https://en.wikipedia.org/wiki/Compaq_Portable "Compaq Portable") were considerably lighter but still needed to be plugged in. The first laptops, such as the [Grid Compass](https://en.wikipedia.org/wiki/Grid_Compass "Grid Compass"), removed this requirement by incorporating batteries – and with the continued miniaturization of computing resources and advancements in portable battery life, portable computers grew in popularity in the 2000s.[[118]](https://en.wikipedia.org/wiki/Computer#cite_note-120) The same developments allowed manufacturers to integrate computing resources into cellular mobile phones by the early 2000s.

These [smartphones](https://en.wikipedia.org/wiki/Smartphone "Smartphone") and [tablets](https://en.wikipedia.org/wiki/Tablet_computer "Tablet computer") run on a variety of operating systems and recently became the dominant computing device on the market.[[119]](https://en.wikipedia.org/wiki/Computer#cite_note-121) These are powered by [System on a Chip](https://en.wikipedia.org/wiki/System_on_a_Chip "System on a Chip") (SoCs), which are complete computers on a microchip the size of a coin.[[117]](https://en.wikipedia.org/wiki/Computer#cite_note-networkworld.com-119)

Types
-----

Computers can be classified in a number of different ways, including:

### By architecture

*   [Analog computer](https://en.wikipedia.org/wiki/Analog_computer "Analog computer")
*   Digital computer
*   [Hybrid computer](https://en.wikipedia.org/wiki/Hybrid_computer "Hybrid computer")
*   [Harvard architecture](https://en.wikipedia.org/wiki/Harvard_architecture "Harvard architecture")
*   [Von Neumann architecture](https://en.wikipedia.org/wiki/Von_Neumann_architecture "Von Neumann architecture")
*   [Complex instruction set computer](https://en.wikipedia.org/wiki/Complex_instruction_set_computer "Complex instruction set computer")
*   [Reduced instruction set computer](https://en.wikipedia.org/wiki/Reduced_instruction_set_computer "Reduced instruction set computer")

### By size, form-factor and purpose

*   [Supercomputer](https://en.wikipedia.org/wiki/Supercomputer "Supercomputer")
*   [Mainframe computer](https://en.wikipedia.org/wiki/Mainframe_computer "Mainframe computer")
*   [Minicomputer](https://en.wikipedia.org/wiki/Minicomputer "Minicomputer") (term no longer used),[[120]](https://en.wikipedia.org/wiki/Computer#cite_note-122)[Midrange computer](https://en.wikipedia.org/wiki/Midrange_computer "Midrange computer")
*   Server 
    *   [Rackmount server](https://en.wikipedia.org/wiki/Server_(computing) "Server (computing)")
    *   [Blade server](https://en.wikipedia.org/wiki/Blade_server "Blade server")
    *   [Tower server](https://en.wikipedia.org/wiki/Computer_tower "Computer tower")

*   Personal computer 
    *   [Workstation](https://en.wikipedia.org/wiki/Workstation "Workstation")
    *   [Microcomputer](https://en.wikipedia.org/wiki/Microcomputer "Microcomputer") (term no longer used)[[121]](https://en.wikipedia.org/wiki/Computer#cite_note-123)
        *   [Home computer](https://en.wikipedia.org/wiki/Home_computer "Home computer") (term fallen into disuse)[[122]](https://en.wikipedia.org/wiki/Computer#cite_note-124)

    *   [Desktop computer](https://en.wikipedia.org/wiki/Desktop_computer "Desktop computer")
        *   [Tower desktop](https://en.wikipedia.org/wiki/Computer_tower "Computer tower")
        *   Slimline desktop 
            *   [Multimedia computer](https://en.wikipedia.org/wiki/Multimedia_computer "Multimedia computer") ([non-linear editing system](https://en.wikipedia.org/wiki/Non-linear_editing_system "Non-linear editing system") computers, video editing PCs and the like, this term is no longer used)[[123]](https://en.wikipedia.org/wiki/Computer#cite_note-125)
            *   [Gaming computer](https://en.wikipedia.org/wiki/Gaming_computer "Gaming computer")

        *   [All-in-one PC](https://en.wikipedia.org/wiki/All-in-one_PC "All-in-one PC")
        *   [Nettop](https://en.wikipedia.org/wiki/Nettop "Nettop") ([Small form factor PCs](https://en.wikipedia.org/wiki/Small_form_factor_(desktop_and_motherboard) "Small form factor (desktop and motherboard)"), Mini PCs)
        *   [Home theater PC](https://en.wikipedia.org/wiki/Home_theater_PC "Home theater PC")
        *   [Keyboard computer](https://en.wikipedia.org/wiki/Keyboard_computer "Keyboard computer")
        *   [Portable computer](https://en.wikipedia.org/wiki/Portable_computer "Portable computer")
        *   [Thin client](https://en.wikipedia.org/wiki/Thin_client "Thin client")
        *   [Internet appliance](https://en.wikipedia.org/wiki/Internet_appliance "Internet appliance")

    *   [Laptop computer](https://en.wikipedia.org/wiki/Laptop "Laptop")
        *   [Desktop replacement computer](https://en.wikipedia.org/wiki/Desktop_replacement_computer "Desktop replacement computer")
        *   [Gaming laptop](https://en.wikipedia.org/wiki/Gaming_computer#Gaming_laptop_computers "Gaming computer")
        *   [Rugged laptop](https://en.wikipedia.org/wiki/Rugged_computer "Rugged computer")
        *   [2-in-1 PC](https://en.wikipedia.org/wiki/2-in-1_PC "2-in-1 PC")
        *   [Ultrabook](https://en.wikipedia.org/wiki/Ultrabook "Ultrabook")
        *   [Chromebook](https://en.wikipedia.org/wiki/Chromebook "Chromebook")
        *   [Subnotebook](https://en.wikipedia.org/wiki/Subnotebook "Subnotebook")
        *   [Smartbook](https://en.wikipedia.org/wiki/Smartbook "Smartbook")
        *   [Netbook](https://en.wikipedia.org/wiki/Netbook "Netbook")

    *   [Mobile computer](https://en.wikipedia.org/wiki/Mobile_computing "Mobile computing")
        *   [Tablet computer](https://en.wikipedia.org/wiki/Tablet_computer "Tablet computer")
        *   [Smartphone](https://en.wikipedia.org/wiki/Smartphone "Smartphone")
        *   [Ultra-mobile PC](https://en.wikipedia.org/wiki/Ultra-mobile_PC "Ultra-mobile PC")
        *   [Pocket PC](https://en.wikipedia.org/wiki/Pocket_PC "Pocket PC")
        *   [Palmtop PC](https://en.wikipedia.org/wiki/Palmtop_PC "Palmtop PC")
        *   [Handheld PC](https://en.wikipedia.org/wiki/Handheld_PC "Handheld PC")
        *   [Pocket computer](https://en.wikipedia.org/wiki/Pocket_computer "Pocket computer")

    *   [Wearable computer](https://en.wikipedia.org/wiki/Wearable_computer "Wearable computer")
        *   [Smartwatch](https://en.wikipedia.org/wiki/Smartwatch "Smartwatch")
        *   [Smartglasses](https://en.wikipedia.org/wiki/Smartglasses "Smartglasses")

*   [Single-board computer](https://en.wikipedia.org/wiki/Single-board_computer "Single-board computer")
*   [Plug computer](https://en.wikipedia.org/wiki/Plug_computer "Plug computer")
*   [Stick PC](https://en.wikipedia.org/wiki/Stick_PC "Stick PC")
*   [Programmable logic controller](https://en.wikipedia.org/wiki/Programmable_logic_controller "Programmable logic controller")
*   [Computer-on-module](https://en.wikipedia.org/wiki/Computer-on-module "Computer-on-module")
*   [System on module](https://en.wikipedia.org/wiki/System_on_module "System on module")
*   [System in a package](https://en.wikipedia.org/wiki/System_in_a_package "System in a package")
*   [System-on-chip](https://en.wikipedia.org/wiki/System-on-chip "System-on-chip") (Also known as an Application Processor or AP if it lacks circuitry such as radio circuitry)
*   [Microcontroller](https://en.wikipedia.org/wiki/Microcontroller "Microcontroller")

### Unconventional computers

A computer does not need to be [electronic](https://en.wikipedia.org/wiki/Electronics "Electronics"), nor even have a [processor](https://en.wikipedia.org/wiki/Central_processing_unit "Central processing unit"), nor [RAM](https://en.wikipedia.org/wiki/Random-access_memory "Random-access memory"), nor even a [hard disk](https://en.wikipedia.org/wiki/Hard_disk "Hard disk"). While popular usage of the word "computer" is synonymous with a personal electronic computer,[[c]](https://en.wikipedia.org/wiki/Computer#cite_note-126) a typical modern definition of a computer is: "_A device that computes_, especially a programmable [usually] electronic machine that performs high-speed mathematical or logical operations or that assembles, stores, correlates, or otherwise processes information."[[124]](https://en.wikipedia.org/wiki/Computer#cite_note-127) According to this definition, any device that _processes information_ qualifies as a computer.

Hardware
--------

Video demonstrating the standard components of a "slimline" computer

The term _hardware_ covers all of those parts of a computer that are tangible physical objects. [Circuits](https://en.wikipedia.org/wiki/Electrical_network "Electrical network"), computer chips, graphic cards, sound cards, memory (RAM), motherboard, displays, power supplies, cables, keyboards, printers and "mice" input devices are all hardware.

### History of computing hardware

First generation

(mechanical/electromechanical)Calculators[Pascal's calculator](https://en.wikipedia.org/wiki/Pascal%27s_calculator "Pascal's calculator"), [Arithmometer](https://en.wikipedia.org/wiki/Arithmometer "Arithmometer"), [Difference engine](https://en.wikipedia.org/wiki/Difference_engine "Difference engine"), [Quevedo's analytical machines](https://en.wikipedia.org/wiki/Leonardo_Torres_y_Quevedo#Analytical_machines "Leonardo Torres y Quevedo")
Programmable devices[Jacquard loom](https://en.wikipedia.org/wiki/Jacquard_loom "Jacquard loom"), [Analytical engine](https://en.wikipedia.org/wiki/Analytical_engine "Analytical engine"), [IBM ASCC/Harvard Mark I](https://en.wikipedia.org/wiki/Harvard_Mark_I "Harvard Mark I"), [Harvard Mark II](https://en.wikipedia.org/wiki/Harvard_Mark_II "Harvard Mark II"), [IBM SSEC](https://en.wikipedia.org/wiki/IBM_SSEC "IBM SSEC"), [Z1](https://en.wikipedia.org/wiki/Z1_(computer) "Z1 (computer)"), [Z2](https://en.wikipedia.org/wiki/Z2_(computer) "Z2 (computer)"), [Z3](https://en.wikipedia.org/wiki/Z3_(computer) "Z3 (computer)")
Second generation

(vacuum tubes)Calculators[Atanasoff–Berry Computer](https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_Computer "Atanasoff–Berry Computer"), [IBM 604](https://en.wikipedia.org/wiki/IBM_604 "IBM 604"), [UNIVAC 60](https://en.wikipedia.org/wiki/Remington_Rand_409 "Remington Rand 409"), [UNIVAC 120](https://en.wikipedia.org/wiki/Remington_Rand_409 "Remington Rand 409")
[Programmable devices](https://en.wikipedia.org/wiki/List_of_vacuum-tube_computers "List of vacuum-tube computers")[Colossus](https://en.wikipedia.org/wiki/Colossus_computer "Colossus computer"), [ENIAC](https://en.wikipedia.org/wiki/ENIAC "ENIAC"), [Manchester Baby](https://en.wikipedia.org/wiki/Manchester_Baby "Manchester Baby"), [EDSAC](https://en.wikipedia.org/wiki/EDSAC "EDSAC"), [Manchester Mark 1](https://en.wikipedia.org/wiki/Manchester_Mark_1 "Manchester Mark 1"), [Ferranti Pegasus](https://en.wikipedia.org/wiki/Ferranti_Pegasus "Ferranti Pegasus"), [Ferranti Mercury](https://en.wikipedia.org/wiki/Ferranti_Mercury "Ferranti Mercury"), [CSIRAC](https://en.wikipedia.org/wiki/CSIRAC "CSIRAC"), [EDVAC](https://en.wikipedia.org/wiki/EDVAC "EDVAC"), [UNIVAC I](https://en.wikipedia.org/wiki/UNIVAC_I "UNIVAC I"), [IBM 701](https://en.wikipedia.org/wiki/IBM_701 "IBM 701"), [IBM 702](https://en.wikipedia.org/wiki/IBM_702 "IBM 702"), [IBM 650](https://en.wikipedia.org/wiki/IBM_650 "IBM 650"), [Z22](https://en.wikipedia.org/wiki/Z22_(computer) "Z22 (computer)")
Third generation

(discrete [transistors](https://en.wikipedia.org/wiki/Transistor "Transistor") and SSI, MSI, LSI [integrated circuits](https://en.wikipedia.org/wiki/Integrated_circuit "Integrated circuit"))[Mainframes](https://en.wikipedia.org/wiki/Mainframe_computer "Mainframe computer")[IBM 7090](https://en.wikipedia.org/wiki/IBM_7090 "IBM 7090"), [IBM 7080](https://en.wikipedia.org/wiki/IBM_7080 "IBM 7080"), [IBM System/360](https://en.wikipedia.org/wiki/IBM_System/360 "IBM System/360"), [BUNCH](https://en.wikipedia.org/wiki/BUNCH "BUNCH")
[Minicomputer](https://en.wikipedia.org/wiki/Minicomputer "Minicomputer")[HP 2116A](https://en.wikipedia.org/wiki/HP_2100 "HP 2100"), [IBM System/32](https://en.wikipedia.org/wiki/IBM_System/32 "IBM System/32"), [IBM System/36](https://en.wikipedia.org/wiki/IBM_System/36 "IBM System/36"), [LINC](https://en.wikipedia.org/wiki/LINC "LINC"), [PDP-8](https://en.wikipedia.org/wiki/PDP-8 "PDP-8"), [PDP-11](https://en.wikipedia.org/wiki/PDP-11 "PDP-11")
[Desktop Computer](https://en.wikipedia.org/wiki/Desktop_Computer "Desktop Computer")[HP 9100](https://en.wikipedia.org/wiki/HP_9100 "HP 9100")
Fourth generation

([VLSI](https://en.wikipedia.org/wiki/VLSI "VLSI") integrated circuits)Minicomputer[VAX](https://en.wikipedia.org/wiki/VAX "VAX"), [IBM AS/400](https://en.wikipedia.org/wiki/IBM_AS/400 "IBM AS/400")
[4-bit](https://en.wikipedia.org/wiki/4-bit_computing "4-bit computing") microcomputer[Intel 4004](https://en.wikipedia.org/wiki/Intel_4004 "Intel 4004"), [Intel 4040](https://en.wikipedia.org/wiki/Intel_4040 "Intel 4040")
[8-bit](https://en.wikipedia.org/wiki/8-bit_computing "8-bit computing") microcomputer[Intel 8008](https://en.wikipedia.org/wiki/Intel_8008 "Intel 8008"), [Intel 8080](https://en.wikipedia.org/wiki/Intel_8080 "Intel 8080"), [Motorola 6800](https://en.wikipedia.org/wiki/Motorola_6800 "Motorola 6800"), [Motorola 6809](https://en.wikipedia.org/wiki/Motorola_6809 "Motorola 6809"), [MOS Technology 6502](https://en.wikipedia.org/wiki/MOS_Technology_6502 "MOS Technology 6502"), [Zilog Z80](https://en.wikipedia.org/wiki/Zilog_Z80 "Zilog Z80")
[16-bit](https://en.wikipedia.org/wiki/16-bit_computing "16-bit computing")[microcomputer](https://en.wikipedia.org/wiki/Microcomputer "Microcomputer")[Intel 8088](https://en.wikipedia.org/wiki/Intel_8088 "Intel 8088"), [Zilog Z8000](https://en.wikipedia.org/wiki/Zilog_Z8000 "Zilog Z8000"), [WDC 65816/65802](https://en.wikipedia.org/wiki/WDC_65816/65802 "WDC 65816/65802")
[32-bit](https://en.wikipedia.org/wiki/32-bit_computing "32-bit computing") microcomputer[Intel 80386](https://en.wikipedia.org/wiki/Intel_80386 "Intel 80386"), [Pentium](https://en.wikipedia.org/wiki/Pentium "Pentium"), [Motorola 68000](https://en.wikipedia.org/wiki/Motorola_68000 "Motorola 68000"), [ARM](https://en.wikipedia.org/wiki/ARMv7 "ARMv7")
[64-bit](https://en.wikipedia.org/wiki/64-bit_computing "64-bit computing") microcomputer[[d]](https://en.wikipedia.org/wiki/Computer#cite_note-128)[Alpha](https://en.wikipedia.org/wiki/DEC_Alpha "DEC Alpha"), [MIPS](https://en.wikipedia.org/wiki/MIPS_architecture "MIPS architecture"), [PA-RISC](https://en.wikipedia.org/wiki/PA-RISC "PA-RISC"), [PowerPC](https://en.wikipedia.org/wiki/PowerPC "PowerPC"), [SPARC](https://en.wikipedia.org/wiki/SPARC "SPARC"), [x86-64](https://en.wikipedia.org/wiki/X86-64 "X86-64"), [ARMv8-A](https://en.wikipedia.org/wiki/ARMv8-A "ARMv8-A")
[Embedded computer](https://en.wikipedia.org/wiki/Embedded_system "Embedded system")[Intel 8048](https://en.wikipedia.org/wiki/Intel_8048 "Intel 8048"), [Intel 8051](https://en.wikipedia.org/wiki/Intel_8051 "Intel 8051")
Personal computer[Desktop computer](https://en.wikipedia.org/wiki/Desktop_computer "Desktop computer"), [Home computer](https://en.wikipedia.org/wiki/Home_computer "Home computer"), Laptop computer, [Personal digital assistant](https://en.wikipedia.org/wiki/Personal_digital_assistant "Personal digital assistant") (PDA), [Portable computer](https://en.wikipedia.org/wiki/Portable_computer "Portable computer"), [Tablet PC](https://en.wikipedia.org/wiki/Tablet_computer "Tablet computer"), [Wearable computer](https://en.wikipedia.org/wiki/Wearable_computer "Wearable computer")
Theoretical/experimental[Quantum computer](https://en.wikipedia.org/wiki/Quantum_computer "Quantum computer")[IBM Q System One](https://en.wikipedia.org/wiki/IBM_Q_System_One "IBM Q System One")
[Chemical computer](https://en.wikipedia.org/wiki/Chemical_computer "Chemical computer")
[DNA computing](https://en.wikipedia.org/wiki/DNA_computing "DNA computing")
[Optical computer](https://en.wikipedia.org/wiki/Photonic_computing "Photonic computing")
[Spintronics](https://en.wikipedia.org/wiki/Spintronics "Spintronics")-based computer
[Wetware/Organic computer](https://en.wikipedia.org/wiki/Wetware_computer "Wetware computer")

### Other hardware topics

[Peripheral](https://en.wikipedia.org/wiki/Peripheral "Peripheral") device ([input/output](https://en.wikipedia.org/wiki/Input/output "Input/output"))Input[Mouse](https://en.wikipedia.org/wiki/Computer_mouse "Computer mouse"), [keyboard](https://en.wikipedia.org/wiki/Computer_keyboard "Computer keyboard"), [joystick](https://en.wikipedia.org/wiki/Joystick "Joystick"), [image scanner](https://en.wikipedia.org/wiki/Image_scanner "Image scanner"), [webcam](https://en.wikipedia.org/wiki/Webcam "Webcam"), [graphics tablet](https://en.wikipedia.org/wiki/Graphics_tablet "Graphics tablet"), [microphone](https://en.wikipedia.org/wiki/Microphone "Microphone")
Output[Monitor](https://en.wikipedia.org/wiki/Computer_monitor "Computer monitor"), [printer](https://en.wikipedia.org/wiki/Printer_(computing) "Printer (computing)"), [loudspeaker](https://en.wikipedia.org/wiki/Computer_speakers "Computer speakers")
Both[Floppy disk](https://en.wikipedia.org/wiki/Floppy_disk "Floppy disk") drive, [hard disk drive](https://en.wikipedia.org/wiki/Hard_disk_drive "Hard disk drive"), [optical disc](https://en.wikipedia.org/wiki/Optical_disc "Optical disc") drive, [teleprinter](https://en.wikipedia.org/wiki/Teleprinter "Teleprinter")
[Computer buses](https://en.wikipedia.org/wiki/Bus_(computing) "Bus (computing)")Short range[RS-232](https://en.wikipedia.org/wiki/RS-232 "RS-232"), [SCSI](https://en.wikipedia.org/wiki/SCSI "SCSI"), [PCI](https://en.wikipedia.org/wiki/Peripheral_Component_Interconnect "Peripheral Component Interconnect"), [USB](https://en.wikipedia.org/wiki/USB "USB")
Long range ([computer networking](https://en.wikipedia.org/wiki/Computer_network "Computer network"))[Ethernet](https://en.wikipedia.org/wiki/Ethernet "Ethernet"), [ATM](https://en.wikipedia.org/wiki/Asynchronous_Transfer_Mode "Asynchronous Transfer Mode"), [FDDI](https://en.wikipedia.org/wiki/Fiber_Distributed_Data_Interface "Fiber Distributed Data Interface")

A general-purpose computer has four main components: the [arithmetic logic unit](https://en.wikipedia.org/wiki/Arithmetic_logic_unit "Arithmetic logic unit") (ALU), the [control unit](https://en.wikipedia.org/wiki/Control_unit "Control unit"), the [memory](https://en.wikipedia.org/wiki/Computer_data_storage "Computer data storage"), and the [input and output devices](https://en.wikipedia.org/wiki/Input_and_output_devices "Input and output devices") (collectively termed I/O). These parts are interconnected by [buses](https://en.wikipedia.org/wiki/Bus_(computing) "Bus (computing)"), often made of groups of [wires](https://en.wikipedia.org/wiki/Wire "Wire"). Inside each of these parts are thousands to trillions of small [electrical circuits](https://en.wikipedia.org/wiki/Electrical_network "Electrical network") which can be turned off or on by means of an [electronic switch](https://en.wikipedia.org/wiki/Transistor "Transistor"). Each circuit represents a [bit](https://en.wikipedia.org/wiki/Bit "Bit") (binary digit) of information so that when the circuit is on it represents a "1", and when off it represents a "0" (in positive logic representation). The circuits are arranged in [logic gates](https://en.wikipedia.org/wiki/Logic_gate "Logic gate") so that one or more of the circuits may control the state of one or more of the other circuits.

### Input devices

[Input devices](https://en.wikipedia.org/wiki/Input_device "Input device") are the means by which the operations of a computer are controlled and it is provided with data. Examples include:

*   [Computer keyboard](https://en.wikipedia.org/wiki/Computer_keyboard "Computer keyboard")
*   [Digital camera](https://en.wikipedia.org/wiki/Digital_camera "Digital camera")
*   [Graphics tablet](https://en.wikipedia.org/wiki/Graphics_tablet "Graphics tablet")
*   [Image scanner](https://en.wikipedia.org/wiki/Image_scanner "Image scanner")
*   [Joystick](https://en.wikipedia.org/wiki/Joystick "Joystick")
*   [Microphone](https://en.wikipedia.org/wiki/Microphone "Microphone")
*   [Mouse](https://en.wikipedia.org/wiki/Computer_mouse "Computer mouse")
*   [Overlay keyboard](https://en.wikipedia.org/wiki/Overlay_keyboard "Overlay keyboard")
*   [Real-time clock](https://en.wikipedia.org/wiki/Real-time_clock "Real-time clock")
*   [Trackball](https://en.wikipedia.org/wiki/Trackball "Trackball")
*   [Touchscreen](https://en.wikipedia.org/wiki/Touchscreen "Touchscreen")
*   [Light pen](https://en.wikipedia.org/wiki/Light_pen "Light pen")

### Output devices

[Output devices](https://en.wikipedia.org/wiki/Output_device "Output device") are the means by which a computer provides the results of its calculations in a human-accessible form. Examples include:

*   [Computer monitor](https://en.wikipedia.org/wiki/Computer_monitor "Computer monitor")
*   [Printer](https://en.wikipedia.org/wiki/Printer_(computing) "Printer (computing)")
*   [PC speaker](https://en.wikipedia.org/wiki/PC_speaker "PC speaker")
*   [Projector](https://en.wikipedia.org/wiki/Projector "Projector")
*   [Sound card](https://en.wikipedia.org/wiki/Sound_card "Sound card")
*   [Graphics card](https://en.wikipedia.org/wiki/Graphics_card "Graphics card")

### Control unit

[![Image 27](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Mips32_addi.svg/500px-Mips32_addi.svg.png)](https://en.wikipedia.org/wiki/File:Mips32_addi.svg)

Diagram showing how a particular [MIPS architecture](https://en.wikipedia.org/wiki/MIPS_architecture "MIPS architecture") instruction would be decoded by the control system

The [control unit](https://en.wikipedia.org/wiki/Control_unit "Control unit") (often called a control system or central controller) manages the computer's various components; it reads and interprets (decodes) the program instructions, transforming them into control signals that activate other parts of the computer.[[e]](https://en.wikipedia.org/wiki/Computer#cite_note-129) Control systems in advanced computers may change the order of execution of some instructions to improve performance.

A key component common to all CPUs is the [program counter](https://en.wikipedia.org/wiki/Program_counter "Program counter"), a special memory cell (a [register](https://en.wikipedia.org/wiki/Processor_register "Processor register")) that keeps track of which location in memory the next instruction is to be read from.[[f]](https://en.wikipedia.org/wiki/Computer#cite_note-130)

The control system's function is as follows— this is a simplified description, and some of these steps may be performed concurrently or in a different order depending on the type of CPU:

1.   Read the code for the next instruction from the cell indicated by the program counter.
2.   Decode the numerical code for the instruction into a set of commands or signals for each of the other systems.
3.   Increment the program counter so it points to the next instruction.
4.   Read whatever data the instruction requires from cells in memory (or perhaps from an input device). The location of this required data is typically stored within the instruction code.
5.   Provide the necessary data to an ALU or register.
6.   If the instruction requires an ALU or specialized hardware to complete, instruct the hardware to perform the requested operation.
7.   Write the result from the ALU back to a memory location or to a register or perhaps an output device.
8.   Jump back to step (1).

Since the program counter is (conceptually) just another set of memory cells, it can be changed by calculations done in the ALU. Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program. Instructions that modify the program counter are often known as "jumps" and allow for loops (instructions that are repeated by the computer) and often conditional instruction execution (both examples of [control flow](https://en.wikipedia.org/wiki/Control_flow "Control flow")).

The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program, and indeed, in some more complex CPU designs, there is another yet smaller computer called a [microsequencer](https://en.wikipedia.org/wiki/Microsequencer "Microsequencer"), which runs a [microcode](https://en.wikipedia.org/wiki/Microcode "Microcode") program that causes all of these events to happen.

### Central processing unit (CPU)

The control unit, ALU, and registers are collectively known as a [central processing unit](https://en.wikipedia.org/wiki/Central_processing_unit "Central processing unit") (CPU). Early CPUs were composed of many separate components. Since the 1970s, CPUs have typically been constructed on a single [MOS integrated circuit](https://en.wikipedia.org/wiki/MOS_integrated_circuit "MOS integrated circuit") chip called a _[microprocessor](https://en.wikipedia.org/wiki/Microprocessor "Microprocessor")_.

### Arithmetic logic unit (ALU)

The ALU is capable of performing two classes of operations: arithmetic and logic.[[125]](https://en.wikipedia.org/wiki/Computer#cite_note-131) The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction, or might include multiplication, division, [trigonometry](https://en.wikipedia.org/wiki/Trigonometry "Trigonometry") functions such as sine, cosine, etc., and [square roots](https://en.wikipedia.org/wiki/Square_root "Square root"). Some can operate only on whole numbers ([integers](https://en.wikipedia.org/wiki/Integer "Integer")) while others use [floating point](https://en.wikipedia.org/wiki/Floating_point "Floating point") to represent [real numbers](https://en.wikipedia.org/wiki/Real_number "Real number"), albeit with limited precision. However, any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform. Therefore, any computer can be programmed to perform any arithmetic operation—although it will take more time to do so if its ALU does not directly support the operation. An ALU may also compare numbers and return [Boolean truth values](https://en.wikipedia.org/wiki/Truth_value "Truth value") (true or false) depending on whether one is equal to, greater than or less than the other ("is 64 greater than 65?"). Logic operations involve [Boolean logic](https://en.wikipedia.org/wiki/Boolean_logic "Boolean logic"): [AND](https://en.wikipedia.org/wiki/Logical_conjunction "Logical conjunction"), [OR](https://en.wikipedia.org/wiki/Logical_disjunction "Logical disjunction"), [XOR](https://en.wikipedia.org/wiki/Exclusive_or "Exclusive or"), and [NOT](https://en.wikipedia.org/wiki/Negation "Negation"). These can be useful for creating complicated [conditional statements](https://en.wikipedia.org/wiki/Conditional_(programming) "Conditional (programming)") and processing [Boolean logic](https://en.wikipedia.org/wiki/Boolean_logic "Boolean logic").

[Superscalar](https://en.wikipedia.org/wiki/Superscalar "Superscalar") computers may contain multiple ALUs, allowing them to process several instructions simultaneously.[[126]](https://en.wikipedia.org/wiki/Computer#cite_note-132)[Graphics processors](https://en.wikipedia.org/wiki/Graphics_processing_unit "Graphics processing unit") and computers with [SIMD](https://en.wikipedia.org/wiki/Single_instruction,_multiple_data "Single instruction, multiple data") and [MIMD](https://en.wikipedia.org/wiki/Multiple_instruction,_multiple_data "Multiple instruction, multiple data") features often contain ALUs that can perform arithmetic on [vectors](https://en.wikipedia.org/wiki/Euclidean_vector "Euclidean vector") and [matrices](https://en.wikipedia.org/wiki/Matrix_(mathematics) "Matrix (mathematics)").

### Memory

[![Image 28](https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Magnetic_core.jpg/250px-Magnetic_core.jpg)](https://en.wikipedia.org/wiki/File:Magnetic_core.jpg)

[Magnetic-core memory](https://en.wikipedia.org/wiki/Magnetic-core_memory "Magnetic-core memory") (using [magnetic cores](https://en.wikipedia.org/wiki/Magnetic_cores "Magnetic cores")) was the [computer memory](https://en.wikipedia.org/wiki/Computer_memory "Computer memory") of choice in the 1960s, until it was replaced by [semiconductor memory](https://en.wikipedia.org/wiki/Semiconductor_memory "Semiconductor memory") (using [MOS](https://en.wikipedia.org/wiki/MOSFET "MOSFET") memory cells).

A computer's memory can be viewed as a list of cells into which numbers can be placed or read. Each cell has a numbered "address" and can store a single number. The computer can be instructed to "put the number 123 into the cell numbered 1357" or to "add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595." The information stored in memory may represent practically anything. Letters, numbers, even computer instructions can be placed into memory with equal ease. Since the CPU does not differentiate between different types of information, it is the software's responsibility to give significance to what the memory sees as nothing but a series of numbers.

In almost all modern computers, each [memory cell](https://en.wikipedia.org/wiki/Memory_cell_(computing) "Memory cell (computing)") is set up to store [binary numbers](https://en.wikipedia.org/wiki/Binary_number "Binary number") in groups of eight bits (called a [byte](https://en.wikipedia.org/wiki/Byte "Byte")). Each byte is able to represent 256 different numbers (2 8 = 256); either from 0 to 255 or −128 to +127. To store larger numbers, several consecutive bytes may be used (typically, two, four or eight). When negative numbers are required, they are usually stored in [two's complement](https://en.wikipedia.org/wiki/Two%27s_complement "Two's complement") notation. Other arrangements are possible, but are usually not seen outside of specialized applications or historical contexts. A computer can store any kind of information in memory if it can be represented numerically. Modern computers have billions or even trillions of bytes of memory.

The CPU contains a special set of memory cells called [registers](https://en.wikipedia.org/wiki/Processor_register "Processor register") that can be read and written to much more rapidly than the main memory area. There are typically between two and one hundred registers depending on the type of CPU. Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed. As data is constantly being worked on, reducing the need to access main memory (which is often slow compared to the ALU and control units) greatly increases the computer's speed.

Computer main memory comes in two principal varieties:

*   [random-access memory](https://en.wikipedia.org/wiki/Random-access_memory "Random-access memory") or RAM
*   [read-only memory](https://en.wikipedia.org/wiki/Read-only_memory "Read-only memory") or ROM

RAM can be read and written to anytime the CPU commands it, but ROM is preloaded with data and software that never changes, therefore the CPU can only read from it. ROM is typically used to store the computer's initial start-up instructions. In general, the contents of RAM are erased when the power to the computer is turned off, but ROM retains its data indefinitely. In a PC, the ROM contains a specialized program called the [BIOS](https://en.wikipedia.org/wiki/BIOS "BIOS") that orchestrates loading the computer's [operating system](https://en.wikipedia.org/wiki/Operating_system "Operating system") from the hard disk drive into RAM whenever the computer is turned on or reset. In [embedded computers](https://en.wikipedia.org/wiki/Embedded_system "Embedded system"), which frequently do not have disk drives, all of the required software may be stored in ROM. Software stored in ROM is often called [firmware](https://en.wikipedia.org/wiki/Firmware "Firmware"), because it is notionally more like hardware than software. [Flash memory](https://en.wikipedia.org/wiki/Flash_memory "Flash memory") blurs the distinction between ROM and RAM, as it retains its data when turned off but is also rewritable. It is typically much slower than conventional ROM and RAM however, so its use is restricted to applications where high speed is unnecessary.[[g]](https://en.wikipedia.org/wiki/Computer#cite_note-134)

In more sophisticated computers there may be one or more RAM [cache memories](https://en.wikipedia.org/wiki/CPU_cache "CPU cache"), which are slower than registers but faster than main memory. Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically, often without the need for any intervention on the programmer's part.

### Input/output (I/O)

[![Image 29](https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/HDDspin.JPG/250px-HDDspin.JPG)](https://en.wikipedia.org/wiki/File:HDDspin.JPG)

[Hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive "Hard disk drive") are common storage devices used with computers.

I/O is the means by which a computer exchanges information with the outside world.[[128]](https://en.wikipedia.org/wiki/Computer#cite_note-135) Devices that provide input or output to the computer are called [peripherals](https://en.wikipedia.org/wiki/Peripheral "Peripheral").[[129]](https://en.wikipedia.org/wiki/Computer#cite_note-136) On a typical personal computer, peripherals include input devices like the keyboard and [mouse](https://en.wikipedia.org/wiki/Computer_mouse "Computer mouse"), and output devices such as the [display](https://en.wikipedia.org/wiki/Computer_monitor "Computer monitor") and [printer](https://en.wikipedia.org/wiki/Printer_(computing) "Printer (computing)"). [Hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive "Hard disk drive"), [floppy disk](https://en.wikipedia.org/wiki/Floppy_disk "Floppy disk") drives and [optical disc drives](https://en.wikipedia.org/wiki/Optical_disc_drive "Optical disc drive") serve as both input and output devices. [Computer networking](https://en.wikipedia.org/wiki/Computer_network "Computer network") is another form of I/O. I/O devices are often complex computers in their own right, with their own CPU and memory. A [graphics processing unit](https://en.wikipedia.org/wiki/Graphics_processing_unit "Graphics processing unit") might contain fifty or more tiny computers that perform the calculations necessary to display [3D graphics](https://en.wikipedia.org/wiki/3D_computer_graphics "3D computer graphics").[_[citation needed](https://en.wikipedia.org/wiki/Wikipedia:Citation\_needed "Wikipedia:Citation needed")_] Modern [desktop computers](https://en.wikipedia.org/wiki/Desktop_computer "Desktop computer") contain many smaller computers that assist the main CPU in performing I/O. A 2016-era flat screen display contains its own computer circuitry.

### Multitasking

While a computer may be viewed as running one gigantic program stored in its main memory, in some systems it is necessary to give the appearance of running several programs simultaneously. This is achieved by multitasking, i.e. having the computer switch rapidly between running each program in turn.[[130]](https://en.wikipedia.org/wiki/Computer#cite_note-137) One means by which this is done is with a special signal called an [interrupt](https://en.wikipedia.org/wiki/Interrupt "Interrupt"), which can periodically cause the computer to stop executing instructions where it was and do something else instead. By remembering where it was executing prior to the interrupt, the computer can return to that task later. If several programs are running "at the same time". Then the interrupt generator might be causing several hundred interrupts per second, causing a program switch each time. Since modern computers typically execute instructions several orders of magnitude faster than human perception, it may appear that many programs are running at the same time, even though only one is ever executing in any given instant. This method of multitasking is sometimes termed "time-sharing" since each program is allocated a "slice" of time in turn.[[131]](https://en.wikipedia.org/wiki/Computer#cite_note-138)

Before the era of inexpensive computers, the principal use for multitasking was to allow many people to share the same computer. Seemingly, multitasking would cause a computer that is switching between several programs to run more slowly, in direct proportion to the number of programs it is running, but most programs spend much of their time waiting for slow input/output devices to complete their tasks. If a program is waiting for the user to click on the mouse or press a key on the keyboard, then it will not take a "time slice" until the [event](https://en.wikipedia.org/wiki/Event_(computing) "Event (computing)") it is waiting for has occurred. This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss.

### Multiprocessing

[![Image 30](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Cray_2_Arts_et_Metiers_dsc03940.jpg/330px-Cray_2_Arts_et_Metiers_dsc03940.jpg)](https://en.wikipedia.org/wiki/File:Cray_2_Arts_et_Metiers_dsc03940.jpg)

[Cray](https://en.wikipedia.org/wiki/Cray "Cray") designed many supercomputers that used multiprocessing heavily.

Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration, a technique once employed in only large and powerful machines such as [supercomputers](https://en.wikipedia.org/wiki/Supercomputer "Supercomputer"), [mainframe computers](https://en.wikipedia.org/wiki/Mainframe_computer "Mainframe computer") and [servers](https://en.wikipedia.org/wiki/Server_(computing) "Server (computing)"). Multiprocessor and [multi-core](https://en.wikipedia.org/wiki/Multi-core "Multi-core") (multiple CPUs on a single integrated circuit) personal and laptop computers are now widely available, and are being increasingly used in lower-end markets as a result.

Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored-program architecture and from general-purpose computers.[[h]](https://en.wikipedia.org/wiki/Computer#cite_note-140) They often feature thousands of CPUs, customized high-speed interconnects, and specialized computing hardware. Such designs tend to be useful for only specialized tasks due to the large scale of program organization required to use most of the available resources at once. Supercomputers usually see usage in large-scale [simulation](https://en.wikipedia.org/wiki/Computer_simulation "Computer simulation"), [graphics rendering](https://en.wikipedia.org/wiki/Rendering_(computer_graphics) "Rendering (computer graphics)"), and [cryptography](https://en.wikipedia.org/wiki/Cryptography "Cryptography") applications, as well as with other so-called "[embarrassingly parallel](https://en.wikipedia.org/wiki/Embarrassingly_parallel "Embarrassingly parallel")" tasks.

Software
--------

_Software_ is the part of a computer system that consists of the [encoded](https://en.wikipedia.org/wiki/Code "Code")[information](https://en.wikipedia.org/wiki/Information "Information") that determines the computer's operation, such as [data](https://en.wikipedia.org/wiki/Data_(computer_science) "Data (computer science)") or instructions on how to process the data. In contrast to the physical [hardware](https://en.wikipedia.org/wiki/Computer_hardware "Computer hardware") from which the system is built, software is immaterial. Software includes [computer programs](https://en.wikipedia.org/wiki/Computer_program "Computer program"), [libraries](https://en.wikipedia.org/wiki/Library_(computing) "Library (computing)") and related non-executable data, such as [online documentation](https://en.wikipedia.org/wiki/Software_documentation "Software documentation") or [digital media](https://en.wikipedia.org/wiki/Digital_media "Digital media"). It is often divided into [system software](https://en.wikipedia.org/wiki/System_software "System software") and [application software](https://en.wikipedia.org/wiki/Application_software "Application software"). Computer hardware and software require each other and neither is useful on its own. When software is stored in hardware that cannot easily be modified, such as with [BIOS](https://en.wikipedia.org/wiki/BIOS "BIOS")[ROM](https://en.wikipedia.org/wiki/Read-only_memory "Read-only memory") in an [IBM PC compatible](https://en.wikipedia.org/wiki/IBM_PC_compatible "IBM PC compatible") computer, it is sometimes called "[firmware](https://en.wikipedia.org/wiki/Firmware "Firmware")".

[Operating system](https://en.wikipedia.org/wiki/Operating_system "Operating system") /system software[Unix](https://en.wikipedia.org/wiki/Unix "Unix") and [BSD](https://en.wikipedia.org/wiki/Berkeley_Software_Distribution "Berkeley Software Distribution")[UNIX System V](https://en.wikipedia.org/wiki/UNIX_System_V "UNIX System V"), [IBM AIX](https://en.wikipedia.org/wiki/IBM_AIX "IBM AIX"), [HP-UX](https://en.wikipedia.org/wiki/HP-UX "HP-UX"), [Solaris](https://en.wikipedia.org/wiki/Solaris_(operating_system) "Solaris (operating system)") ([SunOS](https://en.wikipedia.org/wiki/SunOS "SunOS")), [IRIX](https://en.wikipedia.org/wiki/IRIX "IRIX"), [List of BSD operating systems](https://en.wikipedia.org/wiki/List_of_BSD_operating_systems "List of BSD operating systems")
[Linux](https://en.wikipedia.org/wiki/Linux "Linux")[List of Linux distributions](https://en.wikipedia.org/wiki/List_of_Linux_distributions "List of Linux distributions"), [Comparison of Linux distributions](https://en.wikipedia.org/wiki/Comparison_of_Linux_distributions "Comparison of Linux distributions")
[Microsoft Windows](https://en.wikipedia.org/wiki/Microsoft_Windows "Microsoft Windows")[Windows 95](https://en.wikipedia.org/wiki/Windows_95 "Windows 95"), [Windows 98](https://en.wikipedia.org/wiki/Windows_98 "Windows 98"), [Windows NT](https://en.wikipedia.org/wiki/Windows_NT "Windows NT"), [Windows 2000](https://en.wikipedia.org/wiki/Windows_2000 "Windows 2000"), [Windows ME](https://en.wikipedia.org/wiki/Windows_ME "Windows ME"), [Windows XP](https://en.wikipedia.org/wiki/Windows_XP "Windows XP"), [Windows Vista](https://en.wikipedia.org/wiki/Windows_Vista "Windows Vista"), [Windows 7](https://en.wikipedia.org/wiki/Windows_7 "Windows 7"), [Windows 8](https://en.wikipedia.org/wiki/Windows_8 "Windows 8"), [Windows 8.1](https://en.wikipedia.org/wiki/Windows_8.1 "Windows 8.1"), [Windows 10](https://en.wikipedia.org/wiki/Windows_10 "Windows 10"), [Windows 11](https://en.wikipedia.org/wiki/Windows_11 "Windows 11")
[DOS](https://en.wikipedia.org/wiki/DOS "DOS")[86-DOS](https://en.wikipedia.org/wiki/86-DOS "86-DOS") (QDOS), [IBM PC DOS](https://en.wikipedia.org/wiki/IBM_PC_DOS "IBM PC DOS"), [MS-DOS](https://en.wikipedia.org/wiki/MS-DOS "MS-DOS"), [DR-DOS](https://en.wikipedia.org/wiki/DR-DOS "DR-DOS"), [FreeDOS](https://en.wikipedia.org/wiki/FreeDOS "FreeDOS")
[Macintosh operating systems](https://en.wikipedia.org/wiki/Macintosh_operating_systems "Macintosh operating systems")[Classic Mac OS](https://en.wikipedia.org/wiki/Classic_Mac_OS "Classic Mac OS"), [macOS](https://en.wikipedia.org/wiki/MacOS "MacOS") (previously OS X and Mac OS X)
[Embedded](https://en.wikipedia.org/wiki/Embedded_operating_system "Embedded operating system") and [real-time](https://en.wikipedia.org/wiki/Real-time_operating_system "Real-time operating system")[List of embedded operating systems](https://en.wikipedia.org/wiki/List_of_operating_systems#Embedded "List of operating systems")
Experimental[Amoeba](https://en.wikipedia.org/wiki/Amoeba_(operating_system) "Amoeba (operating system)"), [Oberon](https://en.wikipedia.org/wiki/Oberon_(operating_system) "Oberon (operating system)")–[AOS, Bluebottle, A2](https://en.wikipedia.org/wiki/A2_(operating_system) "A2 (operating system)"), [Plan 9 from Bell Labs](https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs "Plan 9 from Bell Labs")
[Library](https://en.wikipedia.org/wiki/Library_(computing) "Library (computing)")[Multimedia](https://en.wikipedia.org/wiki/Multimedia "Multimedia")[DirectX](https://en.wikipedia.org/wiki/DirectX "DirectX"), [OpenGL](https://en.wikipedia.org/wiki/OpenGL "OpenGL"), [OpenAL](https://en.wikipedia.org/wiki/OpenAL "OpenAL"), [Vulkan (API)](https://en.wikipedia.org/wiki/Vulkan "Vulkan")
Programming library[C standard library](https://en.wikipedia.org/wiki/C_standard_library "C standard library"), [Standard Template Library](https://en.wikipedia.org/wiki/Standard_Template_Library "Standard Template Library")
[Data](https://en.wikipedia.org/wiki/Data_(computing) "Data (computing)")[Protocol](https://en.wikipedia.org/wiki/Protocol_(computing) "Protocol (computing)")[TCP/IP](https://en.wikipedia.org/wiki/Internet_protocol_suite "Internet protocol suite"), [Kermit](https://en.wikipedia.org/wiki/Kermit_(protocol) "Kermit (protocol)"), [FTP](https://en.wikipedia.org/wiki/File_Transfer_Protocol "File Transfer Protocol"), [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol "Hypertext Transfer Protocol"), [SMTP](https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol "Simple Mail Transfer Protocol")
[File format](https://en.wikipedia.org/wiki/File_format "File format")[HTML](https://en.wikipedia.org/wiki/HTML "HTML"), [XML](https://en.wikipedia.org/wiki/XML "XML"), [JPEG](https://en.wikipedia.org/wiki/JPEG "JPEG"), [MPEG](https://en.wikipedia.org/wiki/Moving_Picture_Experts_Group "Moving Picture Experts Group"), [PNG](https://en.wikipedia.org/wiki/Portable_Network_Graphics "Portable Network Graphics")
[User interface](https://en.wikipedia.org/wiki/User_interface "User interface")[Graphical user interface](https://en.wikipedia.org/wiki/Graphical_user_interface "Graphical user interface") ([WIMP](https://en.wikipedia.org/wiki/WIMP_(computing) "WIMP (computing)"))[Microsoft Windows](https://en.wikipedia.org/wiki/Microsoft_Windows "Microsoft Windows"), [GNOME](https://en.wikipedia.org/wiki/GNOME "GNOME"), [KDE](https://en.wikipedia.org/wiki/KDE "KDE"), [QNX](https://en.wikipedia.org/wiki/QNX "QNX") Photon, [CDE](https://en.wikipedia.org/wiki/Common_Desktop_Environment "Common Desktop Environment"), [GEM](https://en.wikipedia.org/wiki/GEM_(desktop_environment) "GEM (desktop environment)"), [Aqua](https://en.wikipedia.org/wiki/Aqua_(user_interface) "Aqua (user interface)")
[Text-based user interface](https://en.wikipedia.org/wiki/Text-based_(computing) "Text-based (computing)")[Command-line interface](https://en.wikipedia.org/wiki/Command-line_interface "Command-line interface"), [Text user interface](https://en.wikipedia.org/wiki/Text_user_interface "Text user interface")
[Application](https://en.wikipedia.org/wiki/Application_software "Application software") software[Office suite](https://en.wikipedia.org/wiki/Office_suite "Office suite")[Word processing](https://en.wikipedia.org/wiki/Word_processing "Word processing"), [Desktop publishing](https://en.wikipedia.org/wiki/Desktop_publishing "Desktop publishing"), [Presentation program](https://en.wikipedia.org/wiki/Presentation_program "Presentation program"), [Database management system](https://en.wikipedia.org/wiki/Database_management_system "Database management system"), Scheduling & Time management, [Spreadsheet](https://en.wikipedia.org/wiki/Spreadsheet "Spreadsheet"), [Accounting software](https://en.wikipedia.org/wiki/Accounting_software "Accounting software")
Internet Access[Browser](https://en.wikipedia.org/wiki/Web_browser "Web browser"), [Email client](https://en.wikipedia.org/wiki/Email_client "Email client"), [Web server](https://en.wikipedia.org/wiki/Web_server "Web server"), [Mail transfer agent](https://en.wikipedia.org/wiki/Mail_transfer_agent "Mail transfer agent"), [Instant messaging](https://en.wikipedia.org/wiki/Instant_messaging "Instant messaging")
Design and manufacturing[Computer-aided design](https://en.wikipedia.org/wiki/Computer-aided_design "Computer-aided design"), [Computer-aided manufacturing](https://en.wikipedia.org/wiki/Computer-aided_manufacturing "Computer-aided manufacturing"), Plant management, Robotic manufacturing, Supply chain management
[Graphics](https://en.wikipedia.org/wiki/Computer_graphics "Computer graphics")[Raster graphics editor](https://en.wikipedia.org/wiki/Raster_graphics_editor "Raster graphics editor"), [Vector graphics editor](https://en.wikipedia.org/wiki/Vector_graphics_editor "Vector graphics editor"), [3D modeler](https://en.wikipedia.org/wiki/3D_computer_graphics_software "3D computer graphics software"), [Animation editor](https://en.wikipedia.org/wiki/Computer_animation "Computer animation"), [3D computer graphics](https://en.wikipedia.org/wiki/3D_computer_graphics "3D computer graphics"), [Video editing](https://en.wikipedia.org/wiki/Video_editing "Video editing"), [Image processing](https://en.wikipedia.org/wiki/Image_processing "Image processing")
[Audio](https://en.wikipedia.org/wiki/Digital_audio "Digital audio")[Digital audio editor](https://en.wikipedia.org/wiki/Digital_audio_editor "Digital audio editor"), [Audio playback](https://en.wikipedia.org/wiki/Audio_player_(software) "Audio player (software)"), [Mixing](https://en.wikipedia.org/wiki/Audio_mixing "Audio mixing"), [Audio synthesis](https://en.wikipedia.org/wiki/Software_synthesizer "Software synthesizer"), [Computer music](https://en.wikipedia.org/wiki/Computer_music "Computer music")
Software engineering[Compiler](https://en.wikipedia.org/wiki/Compiler "Compiler"), [Assembler](https://en.wikipedia.org/wiki/Assembler_(computer_programming) "Assembler (computer programming)"), [Interpreter](https://en.wikipedia.org/wiki/Interpreter_(computing) "Interpreter (computing)"), [Debugger](https://en.wikipedia.org/wiki/Debugger "Debugger"), [Text editor](https://en.wikipedia.org/wiki/Text_editor "Text editor"), [Integrated development environment](https://en.wikipedia.org/wiki/Integrated_development_environment "Integrated development environment"), [Software performance analysis](https://en.wikipedia.org/wiki/Software_performance_analysis "Software performance analysis"), [Revision control](https://en.wikipedia.org/wiki/Revision_control "Revision control"), [Software configuration management](https://en.wikipedia.org/wiki/Software_configuration_management "Software configuration management")
Educational[Edutainment](https://en.wikipedia.org/wiki/Edutainment "Edutainment"), [Educational game](https://en.wikipedia.org/wiki/Educational_game "Educational game"), [Serious game](https://en.wikipedia.org/wiki/Serious_game "Serious game"), [Flight simulator](https://en.wikipedia.org/wiki/Flight_simulator "Flight simulator")
[Games](https://en.wikipedia.org/wiki/Video_game "Video game")[Strategy](https://en.wikipedia.org/wiki/Strategy_game "Strategy game"), [Arcade](https://en.wikipedia.org/wiki/Arcade_game "Arcade game"), [Puzzle](https://en.wikipedia.org/wiki/Puzzle_video_game "Puzzle video game"), [Simulation](https://en.wikipedia.org/wiki/Simulation_video_game "Simulation video game"), [First-person shooter](https://en.wikipedia.org/wiki/First-person_shooter "First-person shooter"), [Platform](https://en.wikipedia.org/wiki/Platform_game "Platform game"), [Massively multiplayer](https://en.wikipedia.org/wiki/Massively_multiplayer_online_game "Massively multiplayer online game"), [Interactive fiction](https://en.wikipedia.org/wiki/Interactive_fiction "Interactive fiction")
Misc[Artificial intelligence](https://en.wikipedia.org/wiki/Artificial_intelligence "Artificial intelligence"), [Antivirus software](https://en.wikipedia.org/wiki/Antivirus_software "Antivirus software"), [Malware scanner](https://en.wikipedia.org/wiki/Malware_scanner "Malware scanner"), [Installer](https://en.wikipedia.org/wiki/Installation_(computer_programs) "Installation (computer programs)")/[Package management systems](https://en.wikipedia.org/wiki/Package_management_system "Package management system"), [File manager](https://en.wikipedia.org/wiki/File_manager "File manager")

### Programs

The defining feature of modern computers which distinguishes them from all other machines is that they can be [programmed](https://en.wikipedia.org/wiki/Computer_programming "Computer programming"). That is to say that some type of [instructions](https://en.wikipedia.org/wiki/Instruction_(computer_science) "Instruction (computer science)") (the [program](https://en.wikipedia.org/wiki/Computer_program "Computer program")) can be given to the computer, and it will process them. Modern computers based on the [von Neumann architecture](https://en.wikipedia.org/wiki/Von_Neumann_architecture "Von Neumann architecture") often have machine code in the form of an [imperative programming language](https://en.wikipedia.org/wiki/Imperative_programming_language "Imperative programming language"). In practical terms, a computer program may be just a few instructions or extend to many millions of instructions, as do the programs for [word processors](https://en.wikipedia.org/wiki/Word_processor "Word processor") and [web browsers](https://en.wikipedia.org/wiki/Web_browser "Web browser") for example. A typical modern computer can execute billions of instructions per second ([gigaflops](https://en.wikipedia.org/wiki/FLOPS "FLOPS")) and rarely makes a mistake over many years of operation. Large computer programs consisting of several million instructions may take teams of [programmers](https://en.wikipedia.org/wiki/Programmer "Programmer") years to write, and due to the complexity of the task almost certainly contain errors.

#### Stored program architecture

[![Image 31](https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/SSEM_Manchester_museum.jpg/250px-SSEM_Manchester_museum.jpg)](https://en.wikipedia.org/wiki/File:SSEM_Manchester_museum.jpg)

Replica of the [Manchester Baby](https://en.wikipedia.org/wiki/Manchester_Baby "Manchester Baby"), the world's first electronic [stored-program computer](https://en.wikipedia.org/wiki/Stored-program_computer "Stored-program computer"), at the [Museum of Science and Industry](https://en.wikipedia.org/wiki/Museum_of_Science_and_Industry_(Manchester) "Museum of Science and Industry (Manchester)") in Manchester, England

This section applies to most common [RAM machine](https://en.wikipedia.org/wiki/RAM_machine "RAM machine")–based computers.

In most cases, computer instructions are simple: add one number to another, move some data from one location to another, send a message to some external device, etc. These instructions are read from the computer's [memory](https://en.wikipedia.org/wiki/Computer_data_storage "Computer data storage") and are generally carried out ([executed](https://en.wikipedia.org/wiki/Execution_(computing) "Execution (computing)")) in the order they were given. However, there are usually specialized instructions to tell the computer to jump ahead or backwards to some other place in the program and to carry on executing from there. These are called "jump" instructions (or [branches](https://en.wikipedia.org/wiki/Branch_(computer_science) "Branch (computer science)")). Furthermore, jump instructions may be made to happen [conditionally](https://en.wikipedia.org/wiki/Conditional_(programming) "Conditional (programming)") so that different sequences of instructions may be used depending on the result of some previous calculation or some external event. Many computers directly support [subroutines](https://en.wikipedia.org/wiki/Subroutine "Subroutine") by providing a type of jump that "remembers" the location it jumped from and another instruction to return to the instruction following that jump instruction.

Program execution might be likened to reading a book. While a person will normally read each word and line in sequence, they may at times jump back to an earlier place in the text or skip sections that are not of interest. Similarly, a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met. This is called the [flow of control](https://en.wikipedia.org/wiki/Control_flow "Control flow") within the program and it is what allows the computer to perform tasks repeatedly without human intervention.

Comparatively, a person using a pocket [calculator](https://en.wikipedia.org/wiki/Calculator "Calculator") can perform a basic arithmetic operation such as adding two numbers with just a few button presses. But to add together all of the numbers from 1 to 1,000 would take thousands of button presses and a lot of time, with a near certainty of making a mistake. On the other hand, a computer may be programmed to do this with just a few simple instructions. The following example is written in the [MIPS assembly language](https://en.wikipedia.org/wiki/MIPS_architecture "MIPS architecture"):

 begin:
 addi $8, $0, 0 # initialize sum to 0
 addi $9, $0, 1 # set first number to add = 1
 loop:
 slti $10, $9, 1000 # check if the number is less than 1000
 beq $10, $0, finish # if odd number is greater than n then exit
 add $8, $8, $9 # update sum
 addi $9, $9, 1 # get next number
 j loop # repeat the summing process
 finish:
 add $2, $8, $0 # put sum in output register

Once told to run this program, the computer will perform the repetitive addition task without further human intervention. It will almost never make a mistake and a modern PC can complete the task in a fraction of a second.

#### Machine code

In most computers, individual instructions are stored as [machine code](https://en.wikipedia.org/wiki/Machine_code "Machine code") with each instruction being given a unique number (its operation code or [opcode](https://en.wikipedia.org/wiki/Opcode "Opcode") for short). The command to add two numbers together would have one opcode; the command to multiply them would have a different opcode, and so on. The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code. Since the computer's memory is able to store numbers, it can also store the instruction codes. This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data. The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program, architecture.[[133]](https://en.wikipedia.org/wiki/Computer#cite_note-141)[[134]](https://en.wikipedia.org/wiki/Computer#cite_note-142) In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on. This is called the [Harvard architecture](https://en.wikipedia.org/wiki/Harvard_architecture "Harvard architecture") after the [Harvard Mark I](https://en.wikipedia.org/wiki/Harvard_Mark_I "Harvard Mark I") computer. Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as in [CPU caches](https://en.wikipedia.org/wiki/CPU_cache "CPU cache").

While it is possible to write computer programs as long lists of numbers ([machine language](https://en.wikipedia.org/wiki/Machine_code "Machine code")) and while this technique was used with many early computers,[[i]](https://en.wikipedia.org/wiki/Computer#cite_note-143) it is extremely tedious and potentially error-prone to do so in practice, especially for complicated programs. Instead, each basic instruction can be given a short name that is indicative of its function and easy to remember– a [mnemonic](https://en.wikipedia.org/wiki/Mnemonic "Mnemonic") such as ADD, SUB, MULT or JUMP. These mnemonics are collectively known as a computer's [assembly language](https://en.wikipedia.org/wiki/Assembly_language "Assembly language"). Converting programs written in assembly language into something the computer can actually understand (machine language) is usually done by a computer program called an assembler.

[![Image 32](https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/FortranCardPROJ039.agr.jpg/250px-FortranCardPROJ039.agr.jpg)](https://en.wikipedia.org/wiki/File:FortranCardPROJ039.agr.jpg)

A 1970s [punched card](https://en.wikipedia.org/wiki/Punched_card "Punched card") containing one line from a [Fortran](https://en.wikipedia.org/wiki/Fortran "Fortran") program. The card reads: "Z(1) = Y + W(1)" and is labeled "PROJ039" for identification purposes.

#### Programming language

A programming language is a [notation system](https://en.wikipedia.org/wiki/Notation_system "Notation system") for writing the [source code](https://en.wikipedia.org/wiki/Source_code "Source code") from which a [computer program](https://en.wikipedia.org/wiki/Computer_program "Computer program") is produced. Programming languages provide various ways of specifying programs for computers to run. Unlike [natural languages](https://en.wikipedia.org/wiki/Natural_language "Natural language"), programming languages are designed to permit no ambiguity and to be concise. They are purely written languages and are often difficult to read aloud. They are generally either translated into [machine code](https://en.wikipedia.org/wiki/Machine_code "Machine code") by a [compiler](https://en.wikipedia.org/wiki/Compiler "Compiler") or an [assembler](https://en.wikipedia.org/wiki/Assembly_language#Assembler "Assembly language") before being run, or translated directly at run time by an [interpreter](https://en.wikipedia.org/wiki/Interpreter_(computing) "Interpreter (computing)"). Sometimes programs are executed by a hybrid method of the two techniques.

There are thousands of programming languages—some intended for general purpose [programming](https://en.wikipedia.org/wiki/Computer_programming "Computer programming"), others useful for only highly specialized applications.

Programming languages Lists of programming languages[Timeline of programming languages](https://en.wikipedia.org/wiki/Timeline_of_programming_languages "Timeline of programming languages"), [List of programming languages by category](https://en.wikipedia.org/wiki/List_of_programming_languages_by_category "List of programming languages by category"), [Generational list of programming languages](https://en.wikipedia.org/wiki/Generational_list_of_programming_languages "Generational list of programming languages"), [List of programming languages](https://en.wikipedia.org/wiki/List_of_programming_languages "List of programming languages"), [Non-English-based programming languages](https://en.wikipedia.org/wiki/Non-English-based_programming_languages "Non-English-based programming languages")
Commonly used [assembly languages](https://en.wikipedia.org/wiki/Assembly_language "Assembly language")[ARM](https://en.wikipedia.org/wiki/ARM_architecture "ARM architecture"), [MIPS](https://en.wikipedia.org/wiki/MIPS_architecture "MIPS architecture"), [x86](https://en.wikipedia.org/wiki/X86_assembly_language "X86 assembly language")
Commonly used [high-level programming languages](https://en.wikipedia.org/wiki/High-level_programming_language "High-level programming language")[Ada](https://en.wikipedia.org/wiki/Ada_(programming_language) "Ada (programming language)"), [BASIC](https://en.wikipedia.org/wiki/BASIC "BASIC"), [C](https://en.wikipedia.org/wiki/C_(programming_language) "C (programming language)"), [C++](https://en.wikipedia.org/wiki/C%2B%2B "C++"), [C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language) "C Sharp (programming language)"), [COBOL](https://en.wikipedia.org/wiki/COBOL "COBOL"), [Fortran](https://en.wikipedia.org/wiki/Fortran "Fortran"), [PL/I](https://en.wikipedia.org/wiki/PL/I "PL/I"), [REXX](https://en.wikipedia.org/wiki/REXX "REXX"), [Java](https://en.wikipedia.org/wiki/Java_(programming_language) "Java (programming language)"), [Lisp](https://en.wikipedia.org/wiki/Lisp_(programming_language) "Lisp (programming language)"), [Pascal](https://en.wikipedia.org/wiki/Pascal_(programming_language) "Pascal (programming language)"), [Object Pascal](https://en.wikipedia.org/wiki/Object_Pascal "Object Pascal")
Commonly used [scripting languages](https://en.wikipedia.org/wiki/Scripting_language "Scripting language")[Bourne script](https://en.wikipedia.org/wiki/Bourne_shell "Bourne shell"), [JavaScript](https://en.wikipedia.org/wiki/JavaScript "JavaScript"), [Python](https://en.wikipedia.org/wiki/Python_(programming_language) "Python (programming language)"), [Ruby](https://en.wikipedia.org/wiki/Ruby_(programming_language) "Ruby (programming language)"), [PHP](https://en.wikipedia.org/wiki/PHP "PHP"), [Perl](https://en.wikipedia.org/wiki/Perl "Perl")

##### Low-level languages

Machine languages and the assembly languages that represent them (collectively termed _low-level programming languages_) are generally unique to the particular architecture of a computer's central processing unit ([CPU](https://en.wikipedia.org/wiki/CPU "CPU")). For instance, an [ARM architecture](https://en.wikipedia.org/wiki/ARM_architecture "ARM architecture") CPU (such as may be found in a [smartphone](https://en.wikipedia.org/wiki/Smartphone "Smartphone") or a [hand-held videogame](https://en.wikipedia.org/wiki/Handheld_video_game "Handheld video game")) cannot understand the machine language of an [x86](https://en.wikipedia.org/wiki/X86 "X86") CPU that might be in a [PC](https://en.wikipedia.org/wiki/Personal_computer "Personal computer").[[j]](https://en.wikipedia.org/wiki/Computer#cite_note-144) Historically a significant number of other CPU architectures were created and saw extensive use, notably including the MOS Technology 6502 and 6510 in addition to the Zilog Z80.

##### High-level languages

Although considerably easier than in machine language, writing long programs in assembly language is often difficult and is also error prone. Therefore, most practical programs are written in more abstract [high-level programming languages](https://en.wikipedia.org/wiki/High-level_programming_language "High-level programming language") that are able to express the needs of the [programmer](https://en.wikipedia.org/wiki/Programmer "Programmer") more conveniently (and thereby help reduce programmer error). High level languages are usually "compiled" into machine language (or sometimes into assembly language and then into machine language) using another computer program called a [compiler](https://en.wikipedia.org/wiki/Compiler "Compiler").[[k]](https://en.wikipedia.org/wiki/Computer#cite_note-145) High level languages are less related to the workings of the target computer than assembly language, and more related to the language and structure of the problem(s) to be solved by the final program. It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer. This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and various [video game consoles](https://en.wikipedia.org/wiki/Video_game_console "Video game console").

#### Program design

Program design of small programs is relatively simple and involves the analysis of the problem, collection of inputs, using the programming constructs within languages, devising or using established procedures and algorithms, providing data for output devices and solutions to the problem as applicable.[[135]](https://en.wikipedia.org/wiki/Computer#cite_note-Leach2016-146) As problems become larger and more complex, features such as subprograms, modules, formal documentation, and new paradigms such as object-oriented programming are encountered.[[136]](https://en.wikipedia.org/wiki/Computer#cite_note-Zhu2005-147) Large programs involving thousands of line of code and more require formal software methodologies.[[137]](https://en.wikipedia.org/wiki/Computer#cite_note-Leach2016b-148) The task of developing large [software](https://en.wikipedia.org/wiki/Computer_software "Computer software") systems presents a significant intellectual challenge.[[138]](https://en.wikipedia.org/wiki/Computer#cite_note-Knight2012-149) Producing software with an acceptably high reliability within a predictable schedule and budget has historically been difficult;[[139]](https://en.wikipedia.org/wiki/Computer#cite_note-Brooks1975-150) the academic and professional discipline of software engineering concentrates specifically on this challenge.[[140]](https://en.wikipedia.org/wiki/Computer#cite_note-Sommerville2007-151)

#### Bugs

[![Image 33](https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/First_Computer_Bug%2C_1945.jpg/250px-First_Computer_Bug%2C_1945.jpg)](https://en.wikipedia.org/wiki/File:First_Computer_Bug,_1945.jpg)

The actual first computer bug, a moth found trapped on a relay of the [Harvard Mark II](https://en.wikipedia.org/wiki/Harvard_Mark_II "Harvard Mark II") computer

Errors in computer programs are called "[bugs](https://en.wikipedia.org/wiki/Software_bug "Software bug")". They may be benign and not affect the usefulness of the program, or have only subtle effects. However, in some cases they may cause the program or the entire system to "[hang](https://en.wikipedia.org/wiki/Hang_(computing) "Hang (computing)")", becoming unresponsive to input such as [mouse](https://en.wikipedia.org/wiki/Computer_mouse "Computer mouse") clicks or keystrokes, to completely fail, or to [crash](https://en.wikipedia.org/wiki/Crash_(computing) "Crash (computing)").[[141]](https://en.wikipedia.org/wiki/Computer#cite_note-152) Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing an [exploit](https://en.wikipedia.org/wiki/Exploit_(computer_security) "Exploit (computer security)"), code designed to take advantage of a bug and disrupt a computer's proper execution. Bugs are usually not the fault of the computer. Since computers merely execute the instructions they are given, bugs are nearly always the result of programmer error or an oversight made in the program's design.[[l]](https://en.wikipedia.org/wiki/Computer#cite_note-153) Admiral [Grace Hopper](https://en.wikipedia.org/wiki/Grace_Hopper "Grace Hopper"), an American computer scientist and developer of the first [compiler](https://en.wikipedia.org/wiki/Compiler "Compiler"), is credited for having first used the term "bugs" in computing after a dead moth was found shorting a relay in the [Harvard Mark II](https://en.wikipedia.org/wiki/Harvard_Mark_II "Harvard Mark II") computer in September 1947.[[142]](https://en.wikipedia.org/wiki/Computer#cite_note-taylor84-154)

Networking and the Internet
---------------------------

[![Image 34](https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Internet_map_1024.jpg/250px-Internet_map_1024.jpg)](https://en.wikipedia.org/wiki/File:Internet_map_1024.jpg)

Visualization of a portion of the [routes](https://en.wikipedia.org/wiki/Routing "Routing") on the Internet

Computers have been used to coordinate information between multiple physical locations since the 1950s. The U.S. military's [SAGE](https://en.wikipedia.org/wiki/Semi-Automatic_Ground_Environment "Semi-Automatic Ground Environment") system was the first large-scale example of such a system, which led to a number of special-purpose commercial systems such as [Sabre](https://en.wikipedia.org/wiki/Sabre_(computer_system) "Sabre (computer system)").[[143]](https://en.wikipedia.org/wiki/Computer#cite_note-155)

In the 1970s, computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology. The effort was funded by ARPA (now [DARPA](https://en.wikipedia.org/wiki/DARPA "DARPA")), and the [computer network](https://en.wikipedia.org/wiki/Computer_network "Computer network") that resulted was called the [ARPANET](https://en.wikipedia.org/wiki/ARPANET "ARPANET").[[144]](https://en.wikipedia.org/wiki/Computer#cite_note-156) The technologies that made the Arpanet possible spread and evolved. In time, the network spread beyond academic and military institutions and became known as the Internet.

The emergence of networking involved a redefinition of the nature and boundaries of computers. Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network, such as peripheral devices, stored information, and the like, as extensions of the resources of an individual computer. Initially these facilities were available primarily to people working in high-tech environments, but in the 1990s, computer networking become almost ubiquitous, due to the spread of applications like e-mail and the [World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web "World Wide Web"), combined with the development of cheap, fast networking technologies like [Ethernet](https://en.wikipedia.org/wiki/Ethernet "Ethernet") and [ADSL](https://en.wikipedia.org/wiki/Asymmetric_digital_subscriber_line "Asymmetric digital subscriber line").

The number of computers that are networked is growing phenomenally. A very large proportion of personal computers regularly connect to the Internet to communicate and receive information. "Wireless" networking, often utilizing mobile phone networks, has meant networking is becoming increasingly ubiquitous even in mobile computing environments.

Future
------

There is active research to make unconventional computers out of many promising new types of technology, such as [optical computers](https://en.wikipedia.org/wiki/Optical_computing "Optical computing"), [DNA computers](https://en.wikipedia.org/wiki/DNA_computing "DNA computing"), [neural computers](https://en.wikipedia.org/wiki/Wetware_computer "Wetware computer"), and [quantum computers](https://en.wikipedia.org/wiki/Quantum_computing "Quantum computing"). Most computers are universal, and are able to calculate any [computable function](https://en.wikipedia.org/wiki/Computable_function "Computable function"), and are limited only by their memory capacity and operating speed. However different designs of computers can give very different performance for particular problems; for example quantum computers can potentially break some modern encryption algorithms (by [quantum factoring](https://en.wikipedia.org/wiki/Shor%27s_algorithm "Shor's algorithm")) very quickly.

### Computer architecture paradigms

There are many types of [computer architectures](https://en.wikipedia.org/wiki/Computer_architecture "Computer architecture"):

*   [Quantum computer](https://en.wikipedia.org/wiki/Quantum_computer "Quantum computer") vs. [Chemical computer](https://en.wikipedia.org/wiki/Chemical_computer "Chemical computer")
*   [Scalar processor](https://en.wikipedia.org/wiki/Scalar_processor "Scalar processor") vs. [Vector processor](https://en.wikipedia.org/wiki/Vector_processor "Vector processor")
*   [Non-Uniform Memory Access](https://en.wikipedia.org/wiki/Non-Uniform_Memory_Access "Non-Uniform Memory Access") (NUMA) computers
*   [Register machine](https://en.wikipedia.org/wiki/Register_machine "Register machine") vs. [Stack machine](https://en.wikipedia.org/wiki/Stack_machine "Stack machine")
*   [Harvard architecture](https://en.wikipedia.org/wiki/Harvard_architecture "Harvard architecture") vs. [von Neumann architecture](https://en.wikipedia.org/wiki/Von_Neumann_architecture "Von Neumann architecture")
*   [Cellular architecture](https://en.wikipedia.org/wiki/Cellular_architecture "Cellular architecture")

Of all these [abstract machines](https://en.wikipedia.org/wiki/Abstract_machine "Abstract machine"), a quantum computer holds the most promise for revolutionizing computing.[[145]](https://en.wikipedia.org/wiki/Computer#cite_note-157)[Logic gates](https://en.wikipedia.org/wiki/Logic_gate "Logic gate") are a common abstraction which can apply to most of the above [digital](https://en.wikipedia.org/wiki/Digital_data "Digital data") or [analog](https://en.wikipedia.org/wiki/Analog_signal "Analog signal") paradigms. The ability to store and execute lists of instructions called [programs](https://en.wikipedia.org/wiki/Computer_program "Computer program") makes computers extremely versatile, distinguishing them from [calculators](https://en.wikipedia.org/wiki/Calculator "Calculator"). The [Church–Turing thesis](https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis "Church–Turing thesis") is a mathematical statement of this versatility: any computer with a [minimum capability (being Turing-complete)](https://en.wikipedia.org/wiki/Turing-complete "Turing-complete") is, in principle, capable of performing the same tasks that any other computer can perform. Therefore, any type of computer ([netbook](https://en.wikipedia.org/wiki/Netbook "Netbook"), [supercomputer](https://en.wikipedia.org/wiki/Supercomputer "Supercomputer"), [cellular automaton](https://en.wikipedia.org/wiki/Cellular_automaton "Cellular automaton"), etc.) is able to perform the same computational tasks, given enough time and storage capacity.

### Artificial intelligence

In the 20th century, [artificial intelligence](https://en.wikipedia.org/wiki/Artificial_intelligence "Artificial intelligence") systems were predominantly [symbolic](https://en.wikipedia.org/wiki/Symbolic_artificial_intelligence "Symbolic artificial intelligence"): they executed code that was explicitly programmed by software developers.[[146]](https://en.wikipedia.org/wiki/Computer#cite_note-158)[Machine learning](https://en.wikipedia.org/wiki/Machine_learning "Machine learning") models, however, have a set parameters that are adjusted throughout training, so that the model learns to accomplish a task based on the provided data. The efficiency of machine learning (and in particular of [neural networks](https://en.wikipedia.org/wiki/Neural_network_(machine_learning) "Neural network (machine learning)")) has rapidly improved with progress in hardware for [parallel computing](https://en.wikipedia.org/wiki/Parallel_computing "Parallel computing"), mainly [graphics processing units](https://en.wikipedia.org/wiki/Graphics_processing_unit "Graphics processing unit") (GPUs).[[147]](https://en.wikipedia.org/wiki/Computer#cite_note-159) Some [large language models](https://en.wikipedia.org/wiki/Large_language_model "Large language model") are able to control computers or robots.[[148]](https://en.wikipedia.org/wiki/Computer#cite_note-160)[[149]](https://en.wikipedia.org/wiki/Computer#cite_note-161) AI progress may lead to the creation of [artificial general intelligence](https://en.wikipedia.org/wiki/Artificial_general_intelligence "Artificial general intelligence") (AGI), a type of AI that could accomplish virtually any intellectual task at least as well as humans.[[150]](https://en.wikipedia.org/wiki/Computer#cite_note-162)

Professions and organizations
-----------------------------

As the use of computers has spread throughout society, there are an increasing number of careers involving computers.

[Computer-related professions](https://en.wikipedia.org/wiki/Category:Computer_occupations "Category:Computer occupations")Hardware-related[Electrical engineering](https://en.wikipedia.org/wiki/Electrical_engineering "Electrical engineering"), [Electronic engineering](https://en.wikipedia.org/wiki/Electronic_engineering "Electronic engineering"), [Computer engineering](https://en.wikipedia.org/wiki/Computer_engineering "Computer engineering"), [Telecommunications engineering](https://en.wikipedia.org/wiki/Telecommunications_engineering "Telecommunications engineering"), [Optical engineering](https://en.wikipedia.org/wiki/Optical_engineering "Optical engineering"), [Nanoengineering](https://en.wikipedia.org/wiki/Nanoengineering "Nanoengineering")
Software-related[Computer science](https://en.wikipedia.org/wiki/Computer_science "Computer science"), [Computer engineering](https://en.wikipedia.org/wiki/Computer_engineering "Computer engineering"), [Desktop publishing](https://en.wikipedia.org/wiki/Desktop_publishing "Desktop publishing"), [Human–computer interaction](https://en.wikipedia.org/wiki/Human%E2%80%93computer_interaction "Human–computer interaction"), Information technology, [Information systems](https://en.wikipedia.org/wiki/Information_systems_(discipline) "Information systems (discipline)"), [Computational science](https://en.wikipedia.org/wiki/Computational_science "Computational science"), Software engineering, [Video game industry](https://en.wikipedia.org/wiki/Video_game_industry "Video game industry"), [Web design](https://en.wikipedia.org/wiki/Web_design "Web design")

The need for computers to work well together and to be able to exchange information has spawned the need for many standards organizations, clubs and societies of both a formal and informal nature.

[Organizations](https://en.wikipedia.org/wiki/Category:Information_technology_organizations "Category:Information technology organizations")Standards groups[ANSI](https://en.wikipedia.org/wiki/American_National_Standards_Institute "American National Standards Institute"), [IEC](https://en.wikipedia.org/wiki/International_Electrotechnical_Commission "International Electrotechnical Commission"), [IEEE](https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers "Institute of Electrical and Electronics Engineers"), [IETF](https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force "Internet Engineering Task Force"), [ISO](https://en.wikipedia.org/wiki/International_Organization_for_Standardization "International Organization for Standardization"), [W3C](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium")
Professional societies[ACM](https://en.wikipedia.org/wiki/Association_for_Computing_Machinery "Association for Computing Machinery"), [AIS](https://en.wikipedia.org/wiki/Association_for_Information_Systems "Association for Information Systems"), [IET](https://en.wikipedia.org/wiki/Institution_of_Engineering_and_Technology "Institution of Engineering and Technology"), [IFIP](https://en.wikipedia.org/wiki/International_Federation_for_Information_Processing "International Federation for Information Processing"), [BCS](https://en.wikipedia.org/wiki/British_Computer_Society "British Computer Society")
[Free](https://en.wikipedia.org/wiki/Free_software "Free software")/[open source software](https://en.wikipedia.org/wiki/Open_source_software "Open source software") groups[Free Software Foundation](https://en.wikipedia.org/wiki/Free_Software_Foundation "Free Software Foundation"), [Mozilla Foundation](https://en.wikipedia.org/wiki/Mozilla_Foundation "Mozilla Foundation"), [Apache Software Foundation](https://en.wikipedia.org/wiki/Apache_Software_Foundation "Apache Software Foundation")

See also
--------

*   [Computability theory](https://en.wikipedia.org/wiki/Computability_theory "Computability theory")
*   [Computer security](https://en.wikipedia.org/wiki/Computer_security "Computer security")
*   [Glossary of computer hardware terms](https://en.wikipedia.org/wiki/Glossary_of_computer_hardware_terms "Glossary of computer hardware terms")
*   [History of computer science](https://en.wikipedia.org/wiki/History_of_computer_science "History of computer science")
*   [List of computer term etymologies](https://en.wikipedia.org/wiki/List_of_computer_term_etymologies "List of computer term etymologies")
*   [List of computer system manufacturers](https://en.wikipedia.org/wiki/List_of_computer_system_manufacturers "List of computer system manufacturers")
*   [List of fictional computers](https://en.wikipedia.org/wiki/List_of_fictional_computers "List of fictional computers")
*   [List of films about computers](https://en.wikipedia.org/wiki/List_of_films_about_computers "List of films about computers")
*   [List of pioneers in computer science](https://en.wikipedia.org/wiki/List_of_pioneers_in_computer_science "List of pioneers in computer science")
*   [Outline of computers](https://en.wikipedia.org/wiki/Outline_of_computers "Outline of computers")
*   [Pulse computation](https://en.wikipedia.org/wiki/Pulse_computation "Pulse computation")
*   [TOP500](https://en.wikipedia.org/wiki/TOP500 "TOP500") (list of most powerful computers)
*   [Unconventional computing](https://en.wikipedia.org/wiki/Unconventional_computing "Unconventional computing")

Notes
-----

1.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-4)**According to [Schmandt-Besserat 1981](https://en.wikipedia.org/wiki/Computer#CITEREFSchmandt-Besserat1981), these clay containers contained tokens, the total of which were the count of objects being transferred. The containers thus served as something of a [bill of lading](https://en.wikipedia.org/wiki/Bill_of_lading "Bill of lading") or an accounts book. In order to avoid breaking open the containers, first, clay impressions of the tokens were placed on the outside of the containers, for the count; the shapes of the impressions were abstracted into stylized marks; finally, the abstract marks were systematically used as numerals; these numerals were finally formalized as numbers.

Eventually the marks on the outside of the containers were all that were needed to convey the count, and the clay containers evolved into clay tablets with marks for the count. [Schmandt-Besserat 1999](https://en.wikipedia.org/wiki/Computer#CITEREFSchmandt-Besserat1999) estimates it took 4000 years.
2.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-117)**The Intel 4004 (1971) die was 12 mm 2, composed of 2300 transistors; by comparison, the Pentium Pro was 306 mm 2, composed of 5.5 million transistors.[[115]](https://en.wikipedia.org/wiki/Computer#cite_note-116)
3.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-126)**According to the _[Shorter Oxford English Dictionary](https://en.wikipedia.org/wiki/Shorter\_Oxford\_English\_Dictionary "Shorter Oxford English Dictionary")_ (6th ed, 2007), the word _computer_ dates back to the mid 17th century, when it referred to "A person who makes calculations; specifically a person employed for this in an observatory etc."
4.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-128)**Most major 64-bit [instruction set](https://en.wikipedia.org/wiki/Instruction_set "Instruction set") architectures are extensions of earlier designs. All of the architectures listed in this table, except for Alpha, existed in 32-bit forms before their 64-bit incarnations were introduced.
5.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-129)**The control unit's role in interpreting instructions has varied somewhat in the past. Although the control unit is solely responsible for instruction interpretation in most modern computers, this is not always the case. Some computers have instructions that are partially interpreted by the control unit with further interpretation performed by another device. For example, [EDVAC](https://en.wikipedia.org/wiki/EDVAC "EDVAC"), one of the earliest stored-program computers, used a central control unit that interpreted only four instructions. All of the arithmetic-related instructions were passed on to its arithmetic unit and further decoded there.
6.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-130)**Instructions often occupy more than one memory address, therefore the program counter usually increases by the number of memory locations required to store one instruction.
7.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-134)**Flash memory also may only be rewritten a limited number of times before wearing out, making it less useful for heavy random access usage.[[127]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTEVermaMielke1988-133)
8.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-140)**However, it is also very common to construct supercomputers out of many pieces of cheap commodity hardware; usually individual computers connected by networks. These so-called [computer clusters](https://en.wikipedia.org/wiki/Computer_cluster "Computer cluster") can often provide supercomputer performance at a much lower cost than customized designs. While custom architectures are still used for most of the most powerful supercomputers, there has been a proliferation of cluster computers in recent years.[[132]](https://en.wikipedia.org/wiki/Computer#cite_note-FOOTNOTETOP5002006[[Category:Wikipedia_articles_needing_page_number_citations_from_March_2022]]%3Csup_class=%22noprint_Inline-Template_%22_style=%22white-space:nowrap;%22%3E&#91;%3Ci%3E[[Wikipedia:Citing_sources|%3Cspan_title=%22This_citation_requires_a_reference_to_the_specific_page_or_range_of_pages_in_which_the_material_appears.&#32;(March_2022)%22%3Epage&nbsp;needed%3C/span%3E]]%3C/i%3E&#93;%3C/sup%3E-139)
9.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-143)**Even some later computers were commonly programmed directly in machine code. Some [minicomputers](https://en.wikipedia.org/wiki/Minicomputer "Minicomputer") like the DEC [PDP-8](https://en.wikipedia.org/wiki/PDP-8 "PDP-8") could be programmed directly from a panel of switches. However, this method was usually used only as part of the [booting](https://en.wikipedia.org/wiki/Booting "Booting") process. Most modern computers boot entirely automatically by reading a boot program from some [non-volatile memory](https://en.wikipedia.org/wiki/Non-volatile_memory "Non-volatile memory").
10.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-144)**However, there is sometimes some form of machine language compatibility between different computers. An [x86-64](https://en.wikipedia.org/wiki/X86-64 "X86-64") compatible microprocessor like the AMD [Athlon 64](https://en.wikipedia.org/wiki/Athlon_64 "Athlon 64") is able to run most of the same programs that an [Intel Core 2](https://en.wikipedia.org/wiki/Intel_Core_2 "Intel Core 2") microprocessor can, as well as programs designed for earlier microprocessors like the Intel [Pentiums](https://en.wikipedia.org/wiki/Pentium "Pentium") and [Intel 80486](https://en.wikipedia.org/wiki/Intel_80486 "Intel 80486"). This contrasts with very early commercial computers, which were often one-of-a-kind and totally incompatible with other computers.
11.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-145)**High level languages are also often [interpreted](https://en.wikipedia.org/wiki/Interpreted_language "Interpreted language") rather than compiled. Interpreted languages are translated into machine code on the fly, while running, by another program called an [interpreter](https://en.wikipedia.org/wiki/Interpreter_(computing) "Interpreter (computing)").
12.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-153)**It is not universally true that bugs are solely due to programmer oversight. Computer hardware may fail or may itself have a fundamental problem that produces unexpected results in certain situations. For instance, the [Pentium FDIV bug](https://en.wikipedia.org/wiki/Pentium_FDIV_bug "Pentium FDIV bug") caused some [Intel](https://en.wikipedia.org/wiki/Intel_Corporation "Intel Corporation") microprocessors in the early 1990s to produce inaccurate results for certain [floating point](https://en.wikipedia.org/wiki/Floating_point "Floating point") division operations. This was caused by a flaw in the [microprocessor](https://en.wikipedia.org/wiki/Microprocessor "Microprocessor") design and resulted in a partial recall of the affected devices.

References
----------

1.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTEEvans201823_1-0)**[Evans 2018](https://en.wikipedia.org/wiki/Computer#CITEREFEvans2018), p.23.
2.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTESmith20136_2-0)**[Smith 2013](https://en.wikipedia.org/wiki/Computer#CITEREFSmith2013), p.6.
3.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-3)**["computer (n.)"](http://www.etymonline.com/index.php?term=computer). _Online Etymology Dictionary_. [Archived](https://web.archive.org/web/20161116065135/http://www.etymonline.com/index.php?term=computer) from the original on 16 November 2016. Retrieved 19 August 2021.
4.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-5)**[Robson, Eleanor](https://en.wikipedia.org/wiki/Eleanor_Robson "Eleanor Robson") (2008). _Mathematics in Ancient Iraq_. Princeton University Press. p.5. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-691-09182-2](https://en.wikipedia.org/wiki/Special:BookSources/978-0-691-09182-2 "Special:BookSources/978-0-691-09182-2").: calculi were in use in Iraq for primitive accounting systems as early as 3200–3000 BCE, with commodity-specific counting representation systems. Balanced accounting was in use by 3000–2350 BCE, and a [sexagesimal number system](https://en.wikipedia.org/wiki/Sexagesimal_number_system "Sexagesimal number system") was in use 2350–2000 BCE.
5.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-6)**Flegg, Graham. (1989). _Numbers through the ages_. Houndmills, Basingstoke, Hampshire: Macmillan Education. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-333-49130-0](https://en.wikipedia.org/wiki/Special:BookSources/0-333-49130-0 "Special:BookSources/0-333-49130-0"). [OCLC](https://en.wikipedia.org/wiki/OCLC_(identifier) "OCLC (identifier)")[24660570](https://search.worldcat.org/oclc/24660570).
6.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-7)**[_The Antikythera Mechanism Research Project_](http://www.antikythera-mechanism.gr/project/general/the-project.html)[Archived](https://web.archive.org/web/20080428070448/http://www.antikythera-mechanism.gr/project/general/the-project.html) 28 April 2008 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), The Antikythera Mechanism Research Project. Retrieved 1 July 2007.
7.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-8)**Marchant, Jo (1 November 2006). ["In search of lost time"](https://doi.org/10.1038%2F444534a). _Nature_. **444** (7119): 534–538. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[2006Natur.444..534M](https://ui.adsabs.harvard.edu/abs/2006Natur.444..534M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1038/444534a](https://doi.org/10.1038%2F444534a). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0028-0836](https://search.worldcat.org/issn/0028-0836). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier) "PMID (identifier)")[17136067](https://pubmed.ncbi.nlm.nih.gov/17136067). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[4305761](https://api.semanticscholar.org/CorpusID:4305761).
8.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Wiet_9-0)**G. Wiet, V. Elisseeff, P. Wolff, J. Naudu (1975). _History of Mankind, Vol 3: The Great medieval Civilisations_, p. 649. George Allen & Unwin Limited, [UNESCO](https://en.wikipedia.org/wiki/UNESCO "UNESCO").
9.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-10)**Fuat Sezgin. "Catalogue of the Exhibition of the Institute for the History of Arabic-Islamic Science (at the Johann Wolfgang Goethe University", Frankfurt, Germany), Frankfurt Book Fair 2004, pp.35 & 38.
10.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-11)**Charette, François (2006). ["Archaeology: High tech from Ancient Greece"](https://doi.org/10.1038%2F444551a). _Nature_. **444** (7119): 551–552. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[2006Natur.444..551C](https://ui.adsabs.harvard.edu/abs/2006Natur.444..551C). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1038/444551a](https://doi.org/10.1038%2F444551a). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier) "PMID (identifier)")[17136077](https://pubmed.ncbi.nlm.nih.gov/17136077). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[33513516](https://api.semanticscholar.org/CorpusID:33513516).
11.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-12)**Bedini, Silvio A.; Maddison, Francis R. (1966). "Mechanical Universe: The Astrarium of Giovanni de' Dondi". _Transactions of the American Philosophical Society_. **56** (5): 1–69. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.2307/1006002](https://doi.org/10.2307%2F1006002). [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier) "JSTOR (identifier)")[1006002](https://www.jstor.org/stable/1006002).
12.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-13)**[Price, Derek de S.](https://en.wikipedia.org/wiki/Derek_J._de_Solla_Price "Derek J. de Solla Price") (1984). "A History of Calculating Machines". _IEEE Micro_. **4** (1): 22–52. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1109/MM.1984.291305](https://doi.org/10.1109%2FMM.1984.291305).
13.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Oren_14-0)**[Őren, Tuncer](https://en.wikipedia.org/wiki/Tuncer_%C5%90ren "Tuncer Őren") (2001). ["Advances in Computer and Information Sciences: From Abacus to Holonic Agents"](http://www.site.uottawa.ca/~oren/pubs/pubs-2001-02-Tubitak.pdf)(PDF). _Turk J Elec Engin_. **9** (1): 63–70. [Archived](https://web.archive.org/web/20090915033859/http://www.site.uottawa.ca/~oren/pubs/pubs-2001-02-Tubitak.pdf)(PDF) from the original on 15 September 2009. Retrieved 21 April 2016.
14.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-15)**[Donald Routledge Hill](https://en.wikipedia.org/wiki/Donald_Routledge_Hill "Donald Routledge Hill") (1985). "Al-Biruni's mechanical calendar", _Annals of Science_**42**, pp.139–163.
15.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-16)**["The Writer Automaton, Switzerland"](https://web.archive.org/web/20150220154407/http://www.chonday.com/Videos/the-writer-automaton). chonday.com. 11 July 2013. Archived from [the original](http://www.chonday.com/Videos/the-writer-automaton) on 20 February 2015. Retrieved 28 January 2015.
16.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-scientific-computing.com_17-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-scientific-computing.com_17-1)Ray Girvan, ["The revealed grace of the mechanism: computing after Babbage"](http://www.scientific-computing.com/scwmayjun03computingmachines.html), [Archived](https://web.archive.org/web/20121103094710/http://www.scientific-computing.com/scwmayjun03computingmachines.html) 3 November 2012 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), _Scientific Computing World_, May/June 2003.
17.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-18)**[Torres, Leonardo](https://en.wikipedia.org/wiki/Leonardo_Torres_Quevedo "Leonardo Torres Quevedo") (10 October 1895). ["Memória sobre las Máquinas Algébricas"](https://quickclick.es/rop/pdf/publico/1895/1895_tomoI_28_01.pdf)(PDF). _Revista de Obras Públicas_ (in Spanish) (28): 217–222.
18.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-MaquinasAlgebricasLTQ_19-0)**Leonardo Torres. _[Memoria sobre las máquinas algébricas: con un informe de la Real academia de ciencias exactas, fisicas y naturales](https://books.google.com/books?id=Eo0NAQAAIAAJ)_, Misericordia, 1895.
19.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Thomas2008_20-0)**Thomas, Federico (1 August 2008). ["A short account on Leonardo Torres' endless spindle"](https://www.sciencedirect.com/science/article/pii/S0094114X07001231). _[Mechanism and Machine Theory](https://en.wikipedia.org/wiki/Mechanism\_and\_Machine\_Theory "Mechanism and Machine Theory")_. **43** (8). [IFToMM](https://en.wikipedia.org/wiki/International_Federation_for_the_Promotion_of_Mechanism_and_Machine_Science "International Federation for the Promotion of Mechanism and Machine Science"): 1055–1063. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1016/j.mechmachtheory.2007.07.003](https://doi.org/10.1016%2Fj.mechmachtheory.2007.07.003). [hdl](https://en.wikipedia.org/wiki/Hdl_(identifier) "Hdl (identifier)"):[10261/30460](https://hdl.handle.net/10261%2F30460). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0094-114X](https://search.worldcat.org/issn/0094-114X).
20.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Gomez-JaureguiGutierrez-GarciaGonz%C3%A1lez-RedondoIglesiasManchadoOtero2022_21-0)**Gomez-Jauregui, Valentin; Gutierrez-Garcia, Andres; González-Redondo, Francisco A.; Iglesias, Miguel; Manchado, Cristina; Otero, Cesar (1 June 2022). ["Torres Quevedo's mechanical calculator for second-degree equations with complex coefficients"](https://doi.org/10.1016%2Fj.mechmachtheory.2022.104830). _[Mechanism and Machine Theory](https://en.wikipedia.org/wiki/Mechanism\_and\_Machine\_Theory "Mechanism and Machine Theory")_. **172** (8). [IFToMM](https://en.wikipedia.org/wiki/International_Federation_for_the_Promotion_of_Mechanism_and_Machine_Science "International Federation for the Promotion of Mechanism and Machine Science"): 104830. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1016/j.mechmachtheory.2022.104830](https://doi.org/10.1016%2Fj.mechmachtheory.2022.104830). [hdl](https://en.wikipedia.org/wiki/Hdl_(identifier) "Hdl (identifier)"):[10902/24391](https://hdl.handle.net/10902%2F24391). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[247503677](https://api.semanticscholar.org/CorpusID:247503677).
21.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-22)**Torres Quevedo, Leonardo (1901). ["Machines á calculer"](https://gallica.bnf.fr/ark:/12148/bpt6k840139b?rk=21459;2). _Mémoires Présentés par Divers Savants à l'Académie des Scienes de l'Institut de France_ (in French). **XXXII**. Impr. nationale (París).
22.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-23)**Halacy, Daniel Stephen (1970). [_Charles Babbage, Father of the Computer_](https://archive.org/details/charlesbabbagefa00hala). Crowell-Collier Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-02-741370-0](https://en.wikipedia.org/wiki/Special:BookSources/978-0-02-741370-0 "Special:BookSources/978-0-02-741370-0").
23.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-24)**O'Connor, John J.; [Robertson, Edmund F.](https://en.wikipedia.org/wiki/Edmund_F._Robertson "Edmund F. Robertson") (1998). ["Charles Babbage"](https://web.archive.org/web/20060616002258/http://www-gap.dcs.st-and.ac.uk/~history/Mathematicians/Babbage.html). _MacTutor History of Mathematics archive_. School of Mathematics and Statistics, University of St Andrews, Scotland. Archived from [the original](http://www-gap.dcs.st-and.ac.uk/~history/Mathematicians/Babbage.html) on 16 June 2006. Retrieved 14 June 2006.
24.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-babbageonline_25-0)**["Babbage"](https://web.archive.org/web/20120807185334/http://www.sciencemuseum.org.uk/onlinestuff/stories/babbage.aspx?page=5). _Online stuff_. Science Museum. 19 January 2007. Archived from [the original](http://www.sciencemuseum.org.uk/onlinestuff/stories/babbage.aspx?page=5) on 7 August 2012. Retrieved 1 August 2012.
25.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-26)**Graham-Cumming, John (23 December 2010). ["Let's build Babbage's ultimate mechanical computer"](https://www.newscientist.com/article/mg20827915.500-lets-build-babbages-ultimate-mechanical-computer.html). _opinion_. New Scientist. [Archived](https://web.archive.org/web/20120805050111/http://www.newscientist.com/article/mg20827915.500-lets-build-babbages-ultimate-mechanical-computer.html) from the original on 5 August 2012. Retrieved 1 August 2012.
26.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-LTQ1914es_27-0)**L. Torres Quevedo. _Ensayos sobre Automática – Su definicion. Extension teórica de sus aplicaciones,_ Revista de la Academia de Ciencias Exacta, Revista 12, pp. 391–418, 1914.
27.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-28)**Torres Quevedo, Leonardo. [Automática: Complemento de la Teoría de las Máquinas, (pdf)](https://quickclick.es/rop/pdf/publico/1914/1914_tomoI_2043_01.pdf), pp. 575–583, Revista de Obras Públicas, 19 November 1914.
28.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-29)**Ronald T. Kneusel. _[Numbers and Computers](https://books.google.com/books?id=eq4ZDgAAQBAJ&dq=leonardo+torres+quevedo++electromechanical+machine+essays&pg=PA84),_ Springer, pp. 84–85, 2017. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-319-50508-4](https://en.wikipedia.org/wiki/Special:BookSources/978-3-319-50508-4 "Special:BookSources/978-3-319-50508-4")
29.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTERandell19826,_11%E2%80%9313_30-0)**[Randell 1982](https://en.wikipedia.org/wiki/Computer#CITEREFRandell1982), p.6, 11–13.
30.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Randell1982p109_31-0)**B. Randell. _Electromechanical Calculating Machine,_ The Origins of Digital Computers, pp.109–120, 1982.
31.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTEBromley1990_32-0)**[Bromley 1990](https://en.wikipedia.org/wiki/Computer#CITEREFBromley1990).
32.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-33)**Cristopher Moore, Stephan Mertens. _[The Nature of Computation](https://books.google.com/books?id=z4zMiZyAE1kC&dq=leonardo+torres+quevedo+++computing&pg=PA291),_ Oxford, England: Oxford University Press, p. 291, 2011. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-199-23321-2](https://en.wikipedia.org/wiki/Special:BookSources/978-0-199-23321-2 "Special:BookSources/978-0-199-23321-2").
33.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-34)**Randell, Brian. [Digital Computers, History of Origins, (pdf)](https://dl.acm.org/doi/pdf/10.5555/1074100.1074334), p. 545, Digital Computers: Origins, Encyclopedia of Computer Science, January 2003.
34.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-stanf_35-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-stanf_35-1)[_**c**_](https://en.wikipedia.org/wiki/Computer#cite_ref-stanf_35-2)[_**d**_](https://en.wikipedia.org/wiki/Computer#cite_ref-stanf_35-3)[_The Modern History of Computing_](http://plato.stanford.edu/entries/computing-history/). Stanford Encyclopedia of Philosophy. 2017. [Archived](https://web.archive.org/web/20100712072148/http://plato.stanford.edu/entries/computing-history/) from the original on 12 July 2010. Retrieved 7 January 2014.
35.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-36)**["Computing Before Silicon"](https://www.technologyreview.com/2000/05/01/236348/computing-before-silicon/). _MIT Technology Review_. 1 May 2000. Retrieved 18 May 2025.
36.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-37)**O’Regan, Gerard, ed. (2008). [_A Brief History of Computing_](https://books.google.com/books?id=081H96F1enMC). London: Springer London. p.28. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1007/978-1-84800-084-1](https://doi.org/10.1007%2F978-1-84800-084-1). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-84800-083-4](https://en.wikipedia.org/wiki/Special:BookSources/978-1-84800-083-4 "Special:BookSources/978-1-84800-083-4").
37.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-:1_38-0)**[Tse, David](https://en.wikipedia.org/wiki/David_Tse "David Tse") (22 December 2020). ["How Claude Shannon Invented the Future"](https://www.quantamagazine.org/how-claude-shannons-information-theory-invented-the-future-20201222/). _Quanta Magazine_. Retrieved 5 November 2024.
38.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-39)**Parmar, Sunil (23 September 2021). ["Restoration of the TDC MARK III aboard USS PAMPANITO"](https://archive.navalsubleague.org/1995/restoration-of-the-tdc-mark-m-aboard-pampanito). _NSL Archive_. Retrieved 17 May 2025.
39.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Part_4_Zuse_40-0)**Zuse, Horst. ["Part 4: Konrad Zuse's Z1 and Z3 Computers"](https://web.archive.org/web/20080601210541/http://www.epemag.com/zuse/part4a.htm). _The Life and Work of Konrad Zuse_. EPE Online. Archived from [the original](http://www.epemag.com/zuse/part4a.htm) on 1 June 2008. Retrieved 17 June 2008.
40.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Bellis_41-0)**Bellis, Mary (15 May 2019) [First published 2006 at inventors.about.com/library/weekly/aa050298.htm]. ["Biography of Konrad Zuse, Inventor and Programmer of Early Computers"](https://www.thoughtco.com/konrad-zuse-modern-computer-4078237). _thoughtco.com_. Dotdash Meredith. [Archived](https://web.archive.org/web/20201213003237/https://www.thoughtco.com/konrad-zuse-modern-computer-4078237) from the original on 13 December 2020. Retrieved 3 February 2021. Konrad Zuse earned the semiofficial title of 'inventor of the modern computer'[_[who?](https://en.wikipedia.org/wiki/Wikipedia:Manual\_of\_Style/Words\_to\_watch#Unsupported\_attributions "Wikipedia:Manual of Style/Words to watch")_].
41.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-42)**["Who is the Father of the Computer?"](https://www.computerhope.com/issues/ch001335.htm). _ComputerHope_.
42.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-43)**[Zuse, Konrad](https://en.wikipedia.org/wiki/Konrad_Zuse "Konrad Zuse") (2010) [1984]. _The Computer – My Life_ Translated by McKenna, Patricia and Ross, J. Andrew from:_Der Computer, mein Lebenswerk (1984)_. Berlin/Heidelberg: Springer-Verlag. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-642-08151-4](https://en.wikipedia.org/wiki/Special:BookSources/978-3-642-08151-4 "Special:BookSources/978-3-642-08151-4").
43.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-44)**Salz Trautman, Peggy (20 April 1994). ["A Computer Pioneer Rediscovered, 50 Years On"](https://web.archive.org/web/20161104051054/http://www.nytimes.com/1994/04/20/news/20iht-zuse.html). _[The New York Times](https://en.wikipedia.org/wiki/The\_New\_York\_Times "The New York Times")_. Archived from [the original](https://www.nytimes.com/1994/04/20/news/20iht-zuse.html) on 4 November 2016. Retrieved 15 February 2017.
44.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-45)**[Zuse, Konrad](https://en.wikipedia.org/wiki/Konrad_Zuse "Konrad Zuse") (1993). _Der Computer. Mein Lebenswerk_ (in German) (3rd ed.). Berlin: Springer-Verlag. p.55. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-540-56292-4](https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-56292-4 "Special:BookSources/978-3-540-56292-4").
45.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-46)**["Crash! The Story of IT: Zuse"](https://web.archive.org/web/20160918203643/https://goremotesupport.com/blog/crash-the-story-of-it-zuse/). Archived from the original on 18 September 2016. Retrieved 1 June 2016.
46.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-rojas-ieee_47-0)**[Rojas, R.](https://en.wikipedia.org/wiki/Ra%C3%BAl_Rojas "Raúl Rojas") (1998). "How to make Zuse's Z3 a universal computer". _IEEE Annals of the History of Computing_. **20** (3): 51–54. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1109/85.707574](https://doi.org/10.1109%2F85.707574). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[14606587](https://api.semanticscholar.org/CorpusID:14606587).
47.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-rojas-universal_48-0)**Rojas, Raúl. ["How to Make Zuse's Z3 a Universal Computer"](http://www.inf.fu-berlin.de/users/rojas/1997/Universal_Computer.pdf)(PDF). _fu-berlin.de_. [Archived](https://web.archive.org/web/20170809123935/http://www.inf.fu-berlin.de/users/rojas/1997/Universal_Computer.pdf)(PDF) from the original on 9 August 2017. Retrieved 28 September 2015.
48.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-OReganZuse_49-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-OReganZuse_49-1)O'Regan, Gerard (2010). _A Brief History of Computing_. Springer Nature. p.65. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-030-66599-9](https://en.wikipedia.org/wiki/Special:BookSources/978-3-030-66599-9 "Special:BookSources/978-3-030-66599-9").
49.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-50)**Bruderer, Herbert (2021). _Milestones in Analog and Digital Computing_ (3rd ed.). Springer. pp.1009, 1087. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-03040973-9](https://en.wikipedia.org/wiki/Special:BookSources/978-3-03040973-9 "Special:BookSources/978-3-03040973-9").
50.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-51)**"notice". _Des Moines Register_. 15 January 1941.
51.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-52)**Arthur W. Burks (1989). [_The First Electronic Computer_](https://books.google.com/books?id=_Zja6hoP4psC). University of Michigan Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-472-08104-7](https://en.wikipedia.org/wiki/Special:BookSources/0-472-08104-7 "Special:BookSources/0-472-08104-7"). Retrieved 1 June 2019.
52.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Copeland2006_53-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Copeland2006_53-1)[_**c**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Copeland2006_53-2)[_**d**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Copeland2006_53-3)Copeland, Jack (2006). _Colossus: The Secrets of Bletchley Park's Codebreaking Computers_. Oxford: [Oxford University Press](https://en.wikipedia.org/wiki/Oxford_University_Press "Oxford University Press"). pp.101–115. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-19-284055-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-19-284055-4 "Special:BookSources/978-0-19-284055-4").
53.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-:0_54-0)**Miller, Joe (10 November 2014). ["The woman who cracked Enigma cyphers"](https://www.bbc.com/news/technology-29840653). _BBC News_. [Archived](https://web.archive.org/web/20141110140239/https://www.bbc.com/news/technology-29840653) from the original on 10 November 2014. Retrieved 14 October 2018.
54.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-55)**Bearne, Suzanne (24 July 2018). ["Meet the female codebreakers of Bletchley Park"](https://www.theguardian.com/careers/2018/jul/24/meet-the-female-codebreakers-of-bletchley-park). _The Guardian_. [Archived](https://web.archive.org/web/20190207020226/https://www.theguardian.com/careers/2018/jul/24/meet-the-female-codebreakers-of-bletchley-park) from the original on 7 February 2019. Retrieved 14 October 2018.
55.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-56)**["Bletchley's code-cracking Colossus"](http://news.bbc.co.uk/2/hi/technology/8492762.stm). _BBC_. [Archived](https://web.archive.org/web/20100204035124/http://news.bbc.co.uk/2/hi/technology/8492762.stm) from the original on 4 February 2010. Retrieved 24 November 2021.
56.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-The_Colossus_Computer_57-0)**["Colossus – The Rebuild Story"](https://web.archive.org/web/20150418230306/http://www.tnmoc.org/colossus-rebuild-story). _The National Museum of Computing_. Archived from [the original](http://www.tnmoc.org/colossus-rebuild-story) on 18 April 2015. Retrieved 7 January 2014.
57.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-58)**[Randell, Brian](https://en.wikipedia.org/wiki/Brian_Randell "Brian Randell"); Fensom, Harry; Milne, Frank A. (15 March 1995). ["Obituary: Allen Coombs"](https://www.independent.co.uk/news/people/obituary-allen-coombs-1611270.html). _The Independent_. [Archived](https://web.archive.org/web/20120203042657/http://www.independent.co.uk/news/people/obituary-allen-coombs-1611270.html) from the original on 3 February 2012. Retrieved 18 October 2012.
58.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-59)**Fensom, Jim (8 November 2010). ["Harry Fensom obituary"](https://www.theguardian.com/theguardian/2010/nov/08/harry-fensom-obituary). _The Guardian_. [Archived](https://web.archive.org/web/20130917220225/http://www.theguardian.com/theguardian/2010/nov/08/harry-fensom-obituary) from the original on 17 September 2013. Retrieved 17 October 2012.
59.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-60)**John Presper Eckert Jr. and John W. Mauchly, Electronic Numerical Integrator and Computer, United States Patent Office, US Patent 3,120,606, filed 26 June 1947, issued 4 February 1964, and invalidated 19 October 1973 after court ruling on _[Honeywell v. Sperry Rand](https://en.wikipedia.org/wiki/Honeywell\_v.\_Sperry\_Rand "Honeywell v. Sperry Rand")_.
60.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTEEvans201839_61-0)**[Evans 2018](https://en.wikipedia.org/wiki/Computer#CITEREFEvans2018), p.39.
61.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTELight1999459_62-0)**[Light 1999](https://en.wikipedia.org/wiki/Computer#CITEREFLight1999), p.459.
62.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Eniac_63-0)**["Generations of Computer"](https://web.archive.org/web/20150702211455/http://www.techiwarehouse.com/engine/a046ee08/Generations-of-Computer/). techiwarehouse.com. Archived from [the original](http://www.techiwarehouse.com/engine/a046ee08/Generations-of-Computer) on 2 July 2015. Retrieved 7 January 2014.
63.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-64)**Turing, A. M. (1937). "On Computable Numbers, with an Application to the Entscheidungsproblem". _Proceedings of the London Mathematical Society_. 2. **42** (1): 230–265. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1112/plms/s2-42.1.230](https://doi.org/10.1112%2Fplms%2Fs2-42.1.230). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[73712](https://api.semanticscholar.org/CorpusID:73712).
64.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-65)**[Copeland, Jack](https://en.wikipedia.org/wiki/Jack_Copeland "Jack Copeland") (2004). _The Essential Turing_. p.22: von Neumann... firmly emphasized to me, and to others I am sure, that the fundamental conception is owing to Turing—insofar as not anticipated by Babbage, Lovelace and others. Letter by [Stanley Frankel](https://en.wikipedia.org/wiki/Stanley_Frankel "Stanley Frankel") to [Brian Randell](https://en.wikipedia.org/wiki/Brian_Randell "Brian Randell"), 1972.
65.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-66)**Enticknap, Nicholas (Summer 1998). ["Computing's Golden Jubilee"](https://web.archive.org/web/20120109142655/http://www.cs.man.ac.uk/CCS/res/res20.htm#d). _Resurrection_ (20). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0958-7403](https://search.worldcat.org/issn/0958-7403). Archived from [the original](http://www.cs.man.ac.uk/CCS/res/res20.htm#d) on 9 January 2012. Retrieved 19 April 2008.
66.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-67)**["Early computers at Manchester University"](https://web.archive.org/web/20170828010743/http://www.cs.man.ac.uk/CCS/res/res04.htm#g). _Resurrection_. **1** (4). Summer 1992. [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0958-7403](https://search.worldcat.org/issn/0958-7403). Archived from [the original](http://www.cs.man.ac.uk/CCS/res/res04.htm#g) on 28 August 2017. Retrieved 7 July 2010.
67.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-68)**["Early Electronic Computers (1946–51)"](https://web.archive.org/web/20090105031620/http://www.computer50.org/mark1/contemporary.html). University of Manchester. Archived from [the original](http://www.computer50.org/mark1/contemporary.html) on 5 January 2009. Retrieved 16 November 2008.
68.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-NapperMK1_69-0)**Napper, R. B. E. ["Introduction to the Mark 1"](https://web.archive.org/web/20081026080604/http://www.computer50.org/mark1/mark1intro.html). The University of Manchester. Archived from [the original](http://www.computer50.org/mark1/mark1intro.html) on 26 October 2008. Retrieved 4 November 2008.
69.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-70)**["Our Computer Heritage Pilot Study: Deliveries of Ferranti Mark I and Mark I Star computers"](https://web.archive.org/web/20161211201840/http://www.ourcomputerheritage.org/wp/). [Computer Conservation Society](https://en.wikipedia.org/wiki/Computer_Conservation_Society "Computer Conservation Society"). Archived from [the original](http://www.ourcomputerheritage.org/wp/) on 11 December 2016. Retrieved 9 January 2010.
70.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-71)**Lavington, Simon. ["A brief history of British computers: the first 25 years (1948–1973)"](https://web.archive.org/web/20100705050757/http://www.bcs.org/server.php). [British Computer Society](https://en.wikipedia.org/wiki/British_Computer_Society "British Computer Society"). Archived from [the original](http://www.bcs.org/server.php?) on 5 July 2010. Retrieved 10 January 2010.
71.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Lee_72-0)**Lee, Thomas H. (2003). [_The Design of CMOS Radio-Frequency Integrated Circuits_](https://web.archive.org/web/20191209032130/https://web.stanford.edu/class/archive/ee/ee214/ee214.1032/Handouts/HO2.pdf)(PDF). [Cambridge University Press](https://en.wikipedia.org/wiki/Cambridge_University_Press "Cambridge University Press"). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-139-64377-1](https://en.wikipedia.org/wiki/Special:BookSources/978-1-139-64377-1 "Special:BookSources/978-1-139-64377-1"). Archived from [the original](https://web.stanford.edu/class/archive/ee/ee214/ee214.1032/Handouts/HO2.pdf)(PDF) on 9 December 2019. Retrieved 31 July 2019.
72.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Puers_73-0)**Puers, Robert; Baldi, Livio; Voorde, Marcel Van de; Nooten, Sebastiaan E. van (2017). [_Nanoelectronics: Materials, Devices, Applications, 2 Volumes_](https://books.google.com/books?id=JOqVDgAAQBAJ&pg=PA14). [John Wiley & Sons](https://en.wikipedia.org/wiki/John_Wiley_%26_Sons "John Wiley & Sons"). p.14. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-527-34053-8](https://en.wikipedia.org/wiki/Special:BookSources/978-3-527-34053-8 "Special:BookSources/978-3-527-34053-8"). Retrieved 31 July 2019.
73.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Moskowitz_74-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Moskowitz_74-1)Moskowitz, Sanford L. (2016). [_Advanced Materials Innovation: Managing Global Technology in the 21st century_](https://books.google.com/books?id=2STRDAAAQBAJ&pg=PA165). [John Wiley & Sons](https://en.wikipedia.org/wiki/John_Wiley_%26_Sons "John Wiley & Sons"). pp.165–167. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-470-50892-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-470-50892-3 "Special:BookSources/978-0-470-50892-3"). Retrieved 28 August 2019.
74.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTELavington199834%E2%80%9335_75-0)**[Lavington 1998](https://en.wikipedia.org/wiki/Computer#CITEREFLavington1998), pp.34–35.
75.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-ieeexplore.ieee_76-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-ieeexplore.ieee_76-1)Cooke-Yarborough, E. H. (June 1998). ["Some early transistor applications in the UK"](https://web.archive.org/web/20201108041817/https://ieeexplore.ieee.org/document/689507). _Engineering Science & Education Journal_. **7** (3): 100–106. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1049/esej:19980301](https://doi.org/10.1049%2Fesej%3A19980301) (inactive 11 July 2025). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0963-7346](https://search.worldcat.org/issn/0963-7346). Archived from [the original](https://ieeexplore.ieee.org/document/689507) on 8 November 2020. Retrieved 7 June 2009.`{{cite journal}}`: CS1 maint: DOI inactive as of July 2025 ([link](https://en.wikipedia.org/wiki/Category:CS1_maint:_DOI_inactive_as_of_July_2025 "Category:CS1 maint: DOI inactive as of July 2025"))(subscription required).
76.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-77)**Cooke-Yarborough, E. H. (1957). _Introduction to Transistor Circuits_. Edinburgh, Scotland: Oliver and Boyd. p.139.
77.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-:03_78-0)**Huff, Howard; Riordan, Michael (1 September 2007). ["Frosch and Derick: Fifty Years Later (Foreword)"](https://iopscience.iop.org/article/10.1149/2.F02073IF). _The Electrochemical Society Interface_. **16** (3): 29. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1149/2.F02073IF](https://doi.org/10.1149%2F2.F02073IF). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[1064-8208](https://search.worldcat.org/issn/1064-8208).
78.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-79)**Frosch, C. J.; Derick, L (1957). ["Surface Protection and Selective Masking during Diffusion in Silicon"](https://iopscience.iop.org/article/10.1149/1.2428650). _Journal of the Electrochemical Society_. **104** (9): 547. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1149/1.2428650](https://doi.org/10.1149%2F1.2428650).
79.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-80)**Kahng, D. (1961). ["Silicon-Silicon Dioxide Surface Device"](https://doi.org/10.1142/9789814503464_0076). _Technical Memorandum of Bell Laboratories_: 583–596. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1142/9789814503464_0076](https://doi.org/10.1142%2F9789814503464_0076). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-981-02-0209-5](https://en.wikipedia.org/wiki/Special:BookSources/978-981-02-0209-5 "Special:BookSources/978-981-02-0209-5").
80.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-81)**Lojek, Bo (2007). _History of Semiconductor Engineering_. Berlin, Heidelberg: Springer-Verlag Berlin Heidelberg. p.321. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-3-540-34258-8](https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-34258-8 "Special:BookSources/978-3-540-34258-8").
81.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-82)**Ligenza, J. R.; Spitzer, W. G. (1960). ["The mechanisms for silicon oxidation in steam and oxygen"](https://linkinghub.elsevier.com/retrieve/pii/0022369760902195). _Journal of Physics and Chemistry of Solids_. **14**: 131–136. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1960JPCS...14..131L](https://ui.adsabs.harvard.edu/abs/1960JPCS...14..131L). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1016/0022-3697(60)90219-5](https://doi.org/10.1016%2F0022-3697%2860%2990219-5).
82.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Lojek12023_83-0)**Lojek, Bo (2007). _History of Semiconductor Engineering_. [Springer Science & Business Media](https://en.wikipedia.org/wiki/Springer_Science_%26_Business_Media "Springer Science & Business Media"). p.120. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9783540342588](https://en.wikipedia.org/wiki/Special:BookSources/9783540342588 "Special:BookSources/9783540342588").
83.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-84)**Motoyoshi, M. (2009). "Through-Silicon Via (TSV)". _Proceedings of the IEEE_. **97** (1): 43–48. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1109/JPROC.2008.2007462](https://doi.org/10.1109%2FJPROC.2008.2007462). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0018-9219](https://search.worldcat.org/issn/0018-9219). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[29105721](https://api.semanticscholar.org/CorpusID:29105721).
84.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-85)**Young, Ian (12 December 2018). ["Transistors Keep Moore's Law Alive"](https://www.eetimes.com/author.asp?section_id=36&doc_id=1334068). _[EETimes](https://en.wikipedia.org/wiki/EETimes "EETimes")_. [Archived](https://web.archive.org/web/20190924091622/https://www.eetimes.com/author.asp?section_id=36) from the original on 24 September 2019. Retrieved 18 July 2019.
85.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory-transistor_86-0)**Laws, David (4 December 2013). ["Who Invented the Transistor?"](https://www.computerhistory.org/atchm/who-invented-the-transistor/). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20131213221601/https://www.computerhistory.org/atchm/who-invented-the-transistor/) from the original on 13 December 2013. Retrieved 20 July 2019.
86.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Hittinger_87-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Hittinger_87-1)Hittinger, William C. (1973). "Metal-Oxide-Semiconductor Technology". _Scientific American_. **229** (2): 48–59. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1973SciAm.229b..48H](https://ui.adsabs.harvard.edu/abs/1973SciAm.229b..48H). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1038/scientificamerican0873-48](https://doi.org/10.1038%2Fscientificamerican0873-48). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0036-8733](https://search.worldcat.org/issn/0036-8733). [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier) "JSTOR (identifier)")[24923169](https://www.jstor.org/stable/24923169).
87.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-88)**Malmstadt, Howard V.; Enke, Christie G.; Crouch, Stanley R. (1994). [_Making the Right Connections: Microcomputers and Electronic Instrumentation_](https://books.google.com/books?id=lyJGAQAAIAAJ). [American Chemical Society](https://en.wikipedia.org/wiki/American_Chemical_Society "American Chemical Society"). p.389. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8412-2861-0](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8412-2861-0 "Special:BookSources/978-0-8412-2861-0"). Retrieved 28 August 2019. The relative simplicity and low power requirements of MOSFETs have fostered today's microcomputer revolution.
88.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-89)**[Fossum, Jerry G.](https://en.wikipedia.org/wiki/Jerry_G._Fossum "Jerry G. Fossum"); Trivedi, Vishal P. (2013). [_Fundamentals of Ultra-Thin-Body MOSFETs and FinFETs_](https://books.google.com/books?id=zZJfAAAAQBAJ&pg=PR7). [Cambridge University Press](https://en.wikipedia.org/wiki/Cambridge_University_Press "Cambridge University Press"). p.vii. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-107-43449-3](https://en.wikipedia.org/wiki/Special:BookSources/978-1-107-43449-3 "Special:BookSources/978-1-107-43449-3"). Retrieved 28 August 2019.
89.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-uspto_90-0)**Marriott, J. W. (10 June 2019). ["Remarks by Director Iancu at the 2019 International Intellectual Property Conference"](https://web.archive.org/web/20191217200937/https://www.uspto.gov/about-us/news-updates/remarks-director-iancu-2019-international-intellectual-property-conference). _[United States Patent and Trademark Office](https://en.wikipedia.org/wiki/United\_States\_Patent\_and\_Trademark\_Office "United States Patent and Trademark Office")_. Archived from [the original](https://www.uspto.gov/about-us/news-updates/remarks-director-iancu-2019-international-intellectual-property-conference) on 17 December 2019. Retrieved 20 July 2019.
90.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-kahng_91-0)**["Dawon Kahng"](https://www.invent.org/inductees/dawon-kahng). _[National Inventors Hall of Fame](https://en.wikipedia.org/wiki/National\_Inventors\_Hall\_of\_Fame "National Inventors Hall of Fame")_. [Archived](https://web.archive.org/web/20191027062651/https://www.invent.org/inductees/dawon-kahng) from the original on 27 October 2019. Retrieved 27 June 2019.
91.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-atalla_92-0)**["Martin Atalla in Inventors Hall of Fame, 2009"](https://www.invent.org/inductees/martin-john-m-atalla). [Archived](https://web.archive.org/web/20190919204631/https://www.invent.org/inductees/martin-john-m-atalla) from the original on 19 September 2019. Retrieved 21 June 2013.
92.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-triumph_93-0)**[_Triumph of the MOS Transistor_](https://web.archive.org/web/20210818215224/https://www.youtube.com/watch?v=q6fBEjf9WPw). [Computer History Museum](https://en.wikipedia.org/wiki/Computer_History_Museum "Computer History Museum"). 6 August 2010. Archived from [the original](https://www.youtube.com/watch?v=q6fBEjf9WPw) on 18 August 2021. Retrieved 21 July 2019 – via YouTube.
93.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-94)**["The Hapless Tale of Geoffrey Dummer"](http://www.epn-online.com/page/22909/the-hapless-tale-of-geoffrey-dummer-this-is-the-sad-.html)[Archived](https://web.archive.org/web/20130511181443/http://www.epn-online.com/page/22909/the-hapless-tale-of-geoffrey-dummer-this-is-the-sad-.html) 11 May 2013 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), (n.d.), (HTML), _Electronic Product News_, accessed 8 July 2008.
94.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-95)**[Kilby, Jack](https://en.wikipedia.org/wiki/Jack_Kilby "Jack Kilby") (2000). ["Nobel lecture"](http://nobelprize.org/nobel_prizes/physics/laureates/2000/kilby-lecture.pdf)(PDF). Stockholm: Nobel Foundation. [Archived](https://web.archive.org/web/20080529024119/http://nobelprize.org/nobel_prizes/physics/laureates/2000/kilby-lecture.pdf)(PDF) from the original on 29 May 2008. Retrieved 15 May 2008.
95.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-TIJackBuilt_96-0)**[_The Chip that Jack Built_](http://www.ti.com/corp/docs/kilbyctr/jackbuilt.shtml)[Archived](https://web.archive.org/web/20150501073820/http://www.ti.com/corp/docs/kilbyctr/jackbuilt.shtml) 1 May 2015 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), (c. 2008), (HTML), Texas Instruments, Retrieved 29 May 2008.
96.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-97)**Jack S. Kilby, Miniaturized Electronic Circuits, United States Patent Office, US Patent 3,138,743, filed 6 February 1959, issued 23 June 1964.
97.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-98)**Winston, Brian (1998). [_Media Technology and Society: A History: From the Telegraph to the Internet_](https://books.google.com/books?id=gfeCXlElJTwC&pg=PA221). Routledge. p.221. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-415-14230-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-415-14230-4 "Special:BookSources/978-0-415-14230-4"). Retrieved 6 June 2020.
98.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Saxena140_99-0)**Saxena, Arjun N. (2009). [_Invention of Integrated Circuits: Untold Important Facts_](https://books.google.com/books?id=-3lpDQAAQBAJ&pg=PA140). [World Scientific](https://en.wikipedia.org/wiki/World_Scientific "World Scientific"). p.140. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-981-281-445-6](https://en.wikipedia.org/wiki/Special:BookSources/978-981-281-445-6 "Special:BookSources/978-981-281-445-6"). Retrieved 28 August 2019.
99.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-nasa_100-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-nasa_100-1)["Integrated circuits"](https://www.hq.nasa.gov/alsj/ic-pg3.html). _[NASA](https://en.wikipedia.org/wiki/NASA "NASA")_. [Archived](https://web.archive.org/web/20190721173218/https://www.hq.nasa.gov/alsj/ic-pg3.html) from the original on 21 July 2019. Retrieved 13 August 2019.
100.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-101)**[Robert Noyce](https://en.wikipedia.org/wiki/Robert_Noyce "Robert Noyce")'s Unitary circuit, [US patent 2981877](https://worldwide.espacenet.com/textdoc?DB=EPODOC&IDX=US2981877), "Semiconductor device-and-lead structure", issued 25 April 1961, assigned to [Fairchild Semiconductor Corporation](https://en.wikipedia.org/wiki/Fairchild_Semiconductor_Corporation "Fairchild Semiconductor Corporation").
101.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory1959_102-0)**["1959: Practical Monolithic Integrated Circuit Concept Patented"](https://www.computerhistory.org/siliconengine/practical-monolithic-integrated-circuit-concept-patented/). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20191024144046/https://www.computerhistory.org/siliconengine/practical-monolithic-integrated-circuit-concept-patented/) from the original on 24 October 2019. Retrieved 13 August 2019.
102.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-103)**Frosch, C. J.; Derick, L. (1957). ["Surface Protection and Selective Masking during Diffusion in Silicon"](https://iopscience.iop.org/article/10.1149/1.2428650). _Journal of the Electrochemical Society_. **104** (9): 547. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1149/1.2428650](https://doi.org/10.1149%2F1.2428650).
103.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-104)**[US2802760A](https://patents.google.com/patent/US2802760A), Lincoln, Derick & Frosch, Carl J., "Oxidation of semiconductive surfaces for controlled diffusion", issued 13 August 1957.
104.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Moskowitz4_105-0)**Moskowitz, Sanford L. (2016). [_Advanced Materials Innovation: Managing Global Technology in the 21st century_](https://books.google.com/books?id=2STRDAAAQBAJ&pg=PA168). [John Wiley & Sons](https://en.wikipedia.org/wiki/John_Wiley_%26_Sons "John Wiley & Sons"). p.168. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-470-50892-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-470-50892-3 "Special:BookSources/978-0-470-50892-3").
105.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-106)**Lécuyer, Christophe; Brook, David C.; Last, Jay (2010). [_Makers of the Microchip: A Documentary History of Fairchild Semiconductor_](https://books.google.com/books?id=LaZpUpkG70QC&pg=PA62). MIT Press. pp.62–63. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-262-01424-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-262-01424-3 "Special:BookSources/978-0-262-01424-3").
106.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-107)**Claeys, Cor L. (2003). [_ULSI Process Integration III: Proceedings of the International Symposium_](https://books.google.com/books?id=bu22JNYbE5MC&pg=PA27). [The Electrochemical Society](https://en.wikipedia.org/wiki/The_Electrochemical_Society "The Electrochemical Society"). pp.27–30. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-56677-376-8](https://en.wikipedia.org/wiki/Special:BookSources/978-1-56677-376-8 "Special:BookSources/978-1-56677-376-8").
107.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Lojek1204_108-0)**Lojek, Bo (2007). _History of Semiconductor Engineering_. [Springer Science & Business Media](https://en.wikipedia.org/wiki/Springer_Science_%26_Business_Media "Springer Science & Business Media"). p.120. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9783540342588](https://en.wikipedia.org/wiki/Special:BookSources/9783540342588 "Special:BookSources/9783540342588").
108.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Kuo_109-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-Kuo_109-1)Kuo, Yue (1 January 2013). ["Thin Film Transistor Technology—Past, Present, and Future"](https://www.electrochem.org/dl/interface/spr/spr13/spr13_p055_061.pdf)(PDF). _The Electrochemical Society Interface_. **22** (1): 55–61. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[2013ECSIn..22a..55K](https://ui.adsabs.harvard.edu/abs/2013ECSIn..22a..55K). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1149/2.F06131if](https://doi.org/10.1149%2F2.F06131if). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[1064-8208](https://search.worldcat.org/issn/1064-8208). [Archived](https://web.archive.org/web/20170829042321/http://www.electrochem.org/dl/interface/spr/spr13/spr13_p055_061.pdf)(PDF) from the original on 29 August 2017. Retrieved 31 July 2019.
109.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory-digital_110-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory-digital_110-1)["Tortoise of Transistors Wins the Race – CHM Revolution"](https://www.computerhistory.org/revolution/digital-logic/12/279). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20200310142421/https://www.computerhistory.org/revolution/digital-logic/12/279) from the original on 10 March 2020. Retrieved 22 July 2019.
110.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-111)**["1964 – First Commercial MOS IC Introduced"](http://www.computerhistory.org/semiconductor/timeline/1964-Commecial.html). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20151222203215/http://www.computerhistory.org/semiconductor/timeline/1964-Commecial.html) from the original on 22 December 2015. Retrieved 31 July 2019.
111.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-112)**["1968: Silicon Gate Technology Developed for ICs"](https://www.computerhistory.org/siliconengine/silicon-gate-technology-developed-for-ics/). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20200729145834/https://www.computerhistory.org/siliconengine/silicon-gate-technology-developed-for-ics/) from the original on 29 July 2020. Retrieved 22 July 2019.
112.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory1971_113-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-computerhistory1971_113-1)["1971: Microprocessor Integrates CPU Function onto a Single Chip"](https://www.computerhistory.org/siliconengine/microprocessor-integrates-cpu-function-onto-a-single-chip/). _[Computer History Museum](https://en.wikipedia.org/wiki/Computer\_History\_Museum "Computer History Museum")_. [Archived](https://web.archive.org/web/20210812104243/https://www.computerhistory.org/siliconengine/microprocessor-integrates-cpu-function-onto-a-single-chip/) from the original on 12 August 2021. Retrieved 22 July 2019.
113.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Colinge2016_114-0)**Colinge, Jean-Pierre; Greer, James C. (2016). [_Nanowire Transistors: Physics of Devices and Materials in One Dimension_](https://books.google.com/books?id=FvjUCwAAQBAJ&pg=PA2). [Cambridge University Press](https://en.wikipedia.org/wiki/Cambridge_University_Press "Cambridge University Press"). p.2. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-107-05240-6](https://en.wikipedia.org/wiki/Special:BookSources/978-1-107-05240-6 "Special:BookSources/978-1-107-05240-6"). Retrieved 31 July 2019.
114.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-115)**["Intel's First Microprocessor—the Intel 4004"](https://web.archive.org/web/20080513221700/http://www.intel.com/museum/archives/4004.htm). Intel Corp. November 1971. Archived from [the original](http://www.intel.com/museum/archives/4004.htm) on 13 May 2008. Retrieved 17 May 2008.
115.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-116)**Patterson, David; Hennessy, John (1998). [_Computer Organization and Design_](https://archive.org/details/computerorganiz000henn). San Francisco: [Morgan Kaufmann](https://en.wikipedia.org/wiki/Morgan_Kaufmann "Morgan Kaufmann"). pp.[27–39](https://archive.org/details/computerorganiz000henn/page/27). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-55860-428-5](https://en.wikipedia.org/wiki/Special:BookSources/978-1-55860-428-5 "Special:BookSources/978-1-55860-428-5").
116.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-ieee_118-0)**[Federico Faggin](https://en.wikipedia.org/wiki/Federico_Faggin "Federico Faggin"), [The Making of the First Microprocessor](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4776530), _IEEE Solid-State Circuits Magazine_, Winter 2009, [IEEE Xplore](https://en.wikipedia.org/wiki/IEEE_Xplore "IEEE Xplore").
117.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computer#cite_ref-networkworld.com_119-0)[_**b**_](https://en.wikipedia.org/wiki/Computer#cite_ref-networkworld.com_119-1)["7 dazzling smartphone improvements with Qualcomm's Snapdragon 835 chip"](https://www.networkworld.com/article/3154386/7-dazzling-smartphone-improvements-with-qualcomms-snapdragon-835-chip.html). 3 January 2017. [Archived](https://web.archive.org/web/20190930224934/https://www.networkworld.com/article/3154386/7-dazzling-smartphone-improvements-with-qualcomms-snapdragon-835-chip.html) from the original on 30 September 2019. Retrieved 5 April 2019.
118.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-120)**Chartier, David (23 December 2008). ["Global notebook shipments finally overtake desktops"](https://arstechnica.com/uncategorized/2008/12/global-notebook-shipments-finally-overtake-desktops/). _Ars Technica_. [Archived](https://web.archive.org/web/20170704180604/https://arstechnica.com/uncategorized/2008/12/global-notebook-shipments-finally-overtake-desktops/) from the original on 4 July 2017. Retrieved 14 June 2017.
119.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-121)**IDC (25 July 2013). ["Growth Accelerates in the Worldwide Mobile Phone and Smartphone Markets in the Second Quarter, According to IDC"](https://web.archive.org/web/20140626022208/http://www.idc.com/getdoc.jsp?containerId=prUS24239313). Archived from [the original](http://www.idc.com/getdoc.jsp?containerId=prUS24239313) on 26 June 2014.
120.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-122)**["Google Books Ngram Viewer"](https://books.google.com/ngrams/graph?content=Minicomputer&year_start=1800&year_end=2019&corpus=26&smoothing=3&direct_url=t1;,Minicomputer;,c0). _books.google.com_.
121.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-123)**["Google Books Ngram Viewer"](https://books.google.com/ngrams/graph?content=Microcomputer&year_start=1800&year_end=2019&corpus=26&smoothing=3&direct_url=t1;,Microcomputer;,c0). _books.google.com_.
122.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-124)**["Google Books Ngram Viewer"](https://books.google.com/ngrams/graph?content=Home+computer&year_start=1800&year_end=2019&corpus=26&smoothing=3&direct_url=t1;,Home+computer;,c0). _books.google.com_.
123.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-125)**["Google Books Ngram Viewer"](https://books.google.com/ngrams/graph?content=Multimedia+computer&year_start=1800&year_end=2019&corpus=26&smoothing=3&direct_url=t1;,Multimedia+computer;,c0). _books.google.com_.
124.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-127)**["Definition of computer"](http://thefreedictionary.com/computer). Thefreedictionary.com. [Archived](http://arquivo.pt/wayback/20091226162252/http%3A//www.thefreedictionary.com/computer) from the original on 26 December 2009. Retrieved 29 January 2012.
125.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-131)**Eck, David J. (2000). _The Most Complex Machine: A Survey of Computers and Computing_. A K Peters, Ltd. p.54. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-56881-128-4](https://en.wikipedia.org/wiki/Special:BookSources/978-1-56881-128-4 "Special:BookSources/978-1-56881-128-4").
126.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-132)**Kontoghiorghes, Erricos John (2006). _Handbook of Parallel Computing and Statistics_. CRC Press. p.45. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8247-4067-2](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8247-4067-2 "Special:BookSources/978-0-8247-4067-2").
127.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTEVermaMielke1988_133-0)**[Verma & Mielke 1988](https://en.wikipedia.org/wiki/Computer#CITEREFVermaMielke1988).
128.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-135)**Eadie, Donald (1968). _Introduction to the Basic Computer_. Prentice-Hall. p.12.
129.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-136)**Barna, Arpad; Porat, Dan I. (1976). [_Introduction to Microcomputers and the Microprocessors_](https://archive.org/details/introductiontomi0000barn/page/85). Wiley. p.[85](https://archive.org/details/introductiontomi0000barn/page/85). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-471-05051-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-471-05051-3 "Special:BookSources/978-0-471-05051-3").
130.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-137)**Peek, Jerry; Todino, Grace; Strang, John (2002). [_Learning the UNIX Operating System: A Concise Guide for the New User_](https://archive.org/details/learningunixoper00jerr/page/130). O'Reilly. p.[130](https://archive.org/details/learningunixoper00jerr/page/130). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-596-00261-9](https://en.wikipedia.org/wiki/Special:BookSources/978-0-596-00261-9 "Special:BookSources/978-0-596-00261-9").
131.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-138)**Davis, Gillian M. (2002). _Noise Reduction in Speech Applications_. CRC Press. p.111. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8493-0949-6](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8493-0949-6 "Special:BookSources/978-0-8493-0949-6").
132.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-FOOTNOTETOP5002006[[Category:Wikipedia_articles_needing_page_number_citations_from_March_2022]]%3Csup_class=%22noprint_Inline-Template_%22_style=%22white-space:nowrap;%22%3E&#91;%3Ci%3E[[Wikipedia:Citing_sources|%3Cspan_title=%22This_citation_requires_a_reference_to_the_specific_page_or_range_of_pages_in_which_the_material_appears.&#32;(March_2022)%22%3Epage&nbsp;needed%3C/span%3E]]%3C/i%3E&#93;%3C/sup%3E_139-0)**[TOP500 2006](https://en.wikipedia.org/wiki/Computer#CITEREFTOP5002006), p.[_[page needed](https://en.wikipedia.org/wiki/Wikipedia:Citing\_sources "Wikipedia:Citing sources")_].
133.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-141)**Cragon, Harvey (2000). [_Computer Architecture and Implementation_](https://books.google.com/books?id=_ykfBAWBkxoC). Cambridge University Press. p.5. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-521-65168-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-521-65168-4 "Special:BookSources/978-0-521-65168-4"). [Archived](https://web.archive.org/web/20220730093353/https://www.google.com/books/edition/Computer_Architecture_and_Implementation/_ykfBAWBkxoC) from the original on 30 July 2022. Retrieved 10 June 2022.
134.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-142)**Xu, Zhiwei; Zhang, Jialin (2021). [_Computational Thinking: A Perspective on Computer Science_](https://books.google.com/books?id=s2RXEAAAQBAJ). Singapore: Springer. p.60. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-981-16-3848-0](https://en.wikipedia.org/wiki/Special:BookSources/978-981-16-3848-0 "Special:BookSources/978-981-16-3848-0"). [Archived](https://web.archive.org/web/20220730093353/https://www.google.com/books/edition/Computational_Thinking_A_Perspective_on/s2RXEAAAQBAJ) from the original on 30 July 2022. Retrieved 10 June 2022. It is called the stored program architecture or stored program model, also known as the von Neumann architecture. We will use these terms interchangeably.
135.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Leach2016_146-0)**Leach, Ronald J. (27 January 2016). [_Introduction to Software Engineering_](https://books.google.com/books?id=8W2mCwAAQBAJ). CRC Press. p.11. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-4987-0528-8](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4987-0528-8 "Special:BookSources/978-1-4987-0528-8"). Retrieved 26 November 2022.
136.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Zhu2005_147-0)**Zhu, Hong (22 March 2005). [_Software Design Methodology: From Principles to Architectural Styles_](https://books.google.com/books?id=rqRVbb0SKjEC). Elsevier. pp.47–72. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-08-045496-2](https://en.wikipedia.org/wiki/Special:BookSources/978-0-08-045496-2 "Special:BookSources/978-0-08-045496-2"). Retrieved 26 November 2022.
137.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Leach2016b_148-0)**Leach, Ronald J. (27 January 2016). [_Introduction to Software Engineering_](https://books.google.com/books?id=8W2mCwAAQBAJ). CRC Press. p.56. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-4987-0528-8](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4987-0528-8 "Special:BookSources/978-1-4987-0528-8"). Retrieved 26 November 2022.
138.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Knight2012_149-0)**Knight, John (12 January 2012). [_Fundamentals of Dependable Computing for Software Engineers_](https://books.google.com/books?id=fn06DwAAQBAJ). CRC Press. p.186. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-4665-1821-6](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4665-1821-6 "Special:BookSources/978-1-4665-1821-6"). Retrieved 26 November 2022.
139.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Brooks1975_150-0)**Brooks (Jr.), Frederick P. (1975). [_The Mythical Man-month: Essays on Software Engineering_](https://books.google.com/books?id=gWgPAQAAMAAJ). Addison-Wesley Publishing Company. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-201-00650-6](https://en.wikipedia.org/wiki/Special:BookSources/978-0-201-00650-6 "Special:BookSources/978-0-201-00650-6"). Retrieved 26 November 2022.
140.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-Sommerville2007_151-0)**Sommerville, Ian (2007). [_Software Engineering_](https://books.google.com/books?id=B7idKfL0H64C). Pearson Education. pp.4–17. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-321-31379-9](https://en.wikipedia.org/wiki/Special:BookSources/978-0-321-31379-9 "Special:BookSources/978-0-321-31379-9"). Retrieved 26 November 2022.
141.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-152)**["Why do computers crash?"](https://www.scientificamerican.com/article/why-do-computers-crash/). _Scientific American_. [Archived](https://web.archive.org/web/20180501093613/https://www.scientificamerican.com/article/why-do-computers-crash/) from the original on 1 May 2018. Retrieved 3 March 2022.
142.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-taylor84_154-0)**Taylor, Alexander L. III (16 April 1984). ["The Wizard Inside the Machine"](https://web.archive.org/web/20070316082637/http://www.time.com/time/printout/0,8816,954266,00.html). _[Time](https://en.wikipedia.org/wiki/Time\_(magazine) "Time (magazine)")_. Archived from [the original](http://www.time.com/time/printout/0,8816,954266,00.html) on 16 March 2007. Retrieved 17 February 2007.
143.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-155)**Hughes, Agatha C. (2000). _Systems, Experts, and Computers_. [MIT Press](https://en.wikipedia.org/wiki/MIT_Press "MIT Press"). p.161. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-262-08285-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-262-08285-3 "Special:BookSources/978-0-262-08285-3"). The experience of SAGE helped make possible the first truly large-scale commercial real-time network: the SABRE computerized airline reservations system.
144.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-156)**Leiner, Barry M.; Cerf, Vinton G.; Clark, David D.; Kahn, Robert E.; Kleinrock, Leonard; Lynch, Daniel C.; Postel, Jon; Roberts, Larry G.; Wolf, Stephen (1999). "A Brief History of the Internet". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier) "ArXiv (identifier)"):[cs/9901011](https://arxiv.org/abs/cs/9901011).
145.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-157)**Dumas II, Joseph D. (2005). [_Computer Architecture: Fundamentals and Principles of Computer Design_](https://books.google.com/books?id=ZWaUurOwMPQC&q=quantum%2520computers). CRC Press. p.340. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8493-2749-0](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8493-2749-0 "Special:BookSources/978-0-8493-2749-0"). Retrieved 9 November 2020.
146.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-158)**["A Gentle Introduction to Symbolic AI"](https://www.kdnuggets.com/gentle-introduction-symbolic-ai). _KDnuggets_. Retrieved 17 May 2025.
147.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-159)**["Nvidia: The chip maker that became an AI superpower"](https://www.bbc.com/news/business-65675027). _BBC_. 25 May 2023. Retrieved 17 May 2025.
148.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-160)**Jindal, Siddharth (22 October 2024). ["Anthropic's Claude 3.5 Now Controls Your Computer Like You Do"](https://analyticsindiamag.com/ai-news-updates/anthropics-claude-3-5-now-controls-your-computer-like-you-do/). _Analytics India Magazine_. Retrieved 17 May 2025.
149.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-161)**Edwards, Benj (20 February 2025). ["Microsoft's new AI agent can control software and robots"](https://arstechnica.com/ai/2025/02/microsofts-new-ai-agent-can-control-software-and-robots/). _Ars Technica_. Retrieved 17 May 2025.
150.   **[^](https://en.wikipedia.org/wiki/Computer#cite_ref-162)**["The Definition of Artificial General Intelligence (AGI)"](https://time.com/collections/the-ai-dictionary-from-allbusiness-com/7273928/definition-of-artificial-general-intelligence-agi/). _TIME_. 3 April 2025. Retrieved 17 May 2025.

Sources
-------

*   Bowden, B. V. (1953). _Faster than thought_. New York, Toronto, London: Pitman publishing corporation.
*   Berkeley, Edmund (1949). [_Giant Brains, or Machines That Think_](https://archive.org/details/in.ernet.dli.2015.285568). John Wiley & Sons.
*   Bromley, Allan G. (1990). "Difference and Analytical Engines". In Aspray, William (ed.). [_Computing Before Computers_](http://ed-thelen.org/comp-hist/CBC-Ch-02.pdf)(PDF). Ames: Iowa State University Press. pp.59–98. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8138-0047-9](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8138-0047-9 "Special:BookSources/978-0-8138-0047-9"). [Archived](https://ghostarchive.org/archive/20221009/http://ed-thelen.org/comp-hist/CBC-Ch-02.pdf)(PDF) from the original on 9 October 2022.
*   Cohen, Bernard (2000). ["Howard Aiken, Portrait of a computer pioneer"](https://doi.org/10.1063%2F1.883007). _Physics Today_. **53** (3). Cambridge, Massachusetts: The MIT Press: 74–75. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[2000PhT....53c..74C](https://ui.adsabs.harvard.edu/abs/2000PhT....53c..74C). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1063/1.883007](https://doi.org/10.1063%2F1.883007). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-262-53179-5](https://en.wikipedia.org/wiki/Special:BookSources/978-0-262-53179-5 "Special:BookSources/978-0-262-53179-5").
*   Collier, Bruce (1970). [_The little engine that could've: The calculating machines of Charles Babbage_](http://robroy.dyndns.info/collier/index.html). Garland Publishing. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-8240-0043-1](https://en.wikipedia.org/wiki/Special:BookSources/978-0-8240-0043-1 "Special:BookSources/978-0-8240-0043-1"). [Archived](https://web.archive.org/web/20070120190231/http://robroy.dyndns.info/collier/index.html) from the original on 20 January 2007. Retrieved 24 October 2013.
*   Couffignal, Louis (1933). _Les machines à calculer; leurs principes, leur évolution_. Paris: Gauthier-Villars.
*   [Digital Equipment Corporation](https://en.wikipedia.org/wiki/Digital_Equipment_Corporation "Digital Equipment Corporation") (1972). [_PDP-11/40 Processor Handbook_](https://www.minttwist.com/wp-content/uploads/2016/06/D-09-30-PDP11-40-Processor-Handbook.pdf)(PDF). [Maynard, MA](https://en.wikipedia.org/wiki/Maynard,_Massachusetts "Maynard, Massachusetts"): Digital Equipment Corporation. [Archived](https://web.archive.org/web/20171201030856/https://www.minttwist.com/wp-content/uploads/2016/06/D-09-30-PDP11-40-Processor-Handbook.pdf)(PDF) from the original on 1 December 2017. Retrieved 27 November 2017.
*   Swade, Doron D. (February 1993). "Redeeming Charles Babbage's Mechanical Computer". _Scientific American_. **268** (2): 86–91. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1993SciAm.268b..86S](https://ui.adsabs.harvard.edu/abs/1993SciAm.268b..86S). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1038/scientificamerican0293-86](https://doi.org/10.1038%2Fscientificamerican0293-86). [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier) "JSTOR (identifier)")[24941379](https://www.jstor.org/stable/24941379).
*   Essinger, James (2004). [_Jacquard's Web, How a hand loom led to the birth of the information age_](https://archive.org/details/jacquardswebhowh0000essi). Oxford University Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-19-280577-5](https://en.wikipedia.org/wiki/Special:BookSources/978-0-19-280577-5 "Special:BookSources/978-0-19-280577-5").
*   Evans, Claire L. (2018). [_Broad Band: The Untold Story of the Women Who Made the Internet_](https://books.google.com/books?id=C8ouDwAAQBAJ&pg=PP1&q=9780735211759). New York: Portfolio/Penguin. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-7352-1175-9](https://en.wikipedia.org/wiki/Special:BookSources/978-0-7352-1175-9 "Special:BookSources/978-0-7352-1175-9"). Retrieved 9 November 2020.
*   Felt, Dorr E. (1916). [_Mechanical arithmetic, or The history of the counting machine_](https://archive.org/details/mechanicalarithm00feltrich). Chicago: Washington Institute.
*   Ifrah, Georges (2001). [_The Universal History of Computing: From the Abacus to the Quantum Computer_](https://archive.org/details/unset0000unse_w3q2). New York: John Wiley & Sons. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-471-39671-0](https://en.wikipedia.org/wiki/Special:BookSources/978-0-471-39671-0 "Special:BookSources/978-0-471-39671-0").
*   Lavington, Simon (1998). _A History of Manchester Computers_ (2nd ed.). Swindon: The British Computer Society. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-902505-01-8](https://en.wikipedia.org/wiki/Special:BookSources/978-0-902505-01-8 "Special:BookSources/978-0-902505-01-8").
*   Ligonnière, Robert (1987). _Préhistoire et Histoire des ordinateurs_. Paris: Robert Laffont. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-2-221-05261-7](https://en.wikipedia.org/wiki/Special:BookSources/978-2-221-05261-7 "Special:BookSources/978-2-221-05261-7").
*   Light, Jennifer S. (1999). "When Computers Were Women". _Technology and Culture_. **40** (3): 455–483. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1353/tech.1999.0128](https://doi.org/10.1353%2Ftech.1999.0128). [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier) "JSTOR (identifier)")[25147356](https://www.jstor.org/stable/25147356). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[108407884](https://api.semanticscholar.org/CorpusID:108407884).
*   [Meuer, Hans](https://en.wikipedia.org/wiki/Hans_Meuer "Hans Meuer"); Strohmaier, Erich; Simon, Horst; [Dongarra, Jack](https://en.wikipedia.org/wiki/Jack_Dongarra "Jack Dongarra") (13 November 2006). ["Architectures Share Over Time"](https://web.archive.org/web/20070220095222/http://www.top500.org/lists/2006/11/overtime/Architectures). [TOP500](https://en.wikipedia.org/wiki/TOP500 "TOP500"). Archived from [the original](http://www.top500.org/lists/2006/11/overtime/Architectures) on 20 February 2007. Retrieved 27 November 2006.
*   Moseley, Maboth (1964). _Irascible Genius, Charles Babbage, inventor_. London: Hutchinson.
*   [Randell, Brian](https://en.wikipedia.org/wiki/Brian_Randell "Brian Randell") (1982). ["From Analytical Engine to Electronic Digital Computer: The Contributions of Ludgate, Torres, and Bush"](https://web.archive.org/web/20130921055055/http://www.cs.ncl.ac.uk/publications/articles/papers/398.pdf)(PDF). Archived from [the original](http://www.cs.ncl.ac.uk/publications/articles/papers/398.pdf)(PDF) on 21 September 2013. Retrieved 29 October 2013.
*   [Schmandt-Besserat, Denise](https://en.wikipedia.org/wiki/Denise_Schmandt-Besserat "Denise Schmandt-Besserat") (1999). ["Tokens: The Cognitive Significance"](https://web.archive.org/web/20120130084757/http://www.laits.utexas.edu/ghazal/Chap1/dsb/chapter1.html). _Documenta Praehistorica_. **XXVI**. Archived from [the original](http://www.laits.utexas.edu/ghazal/Chap1/dsb/chapter1.html) on 30 January 2012.
*   [Schmandt-Besserat, Denise](https://en.wikipedia.org/wiki/Denise_Schmandt-Besserat "Denise Schmandt-Besserat") (1981). "Decipherment of the earliest tablets". _Science_. **211** (4479): 283–285. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1981Sci...211..283S](https://ui.adsabs.harvard.edu/abs/1981Sci...211..283S). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1126/science.211.4479.283](https://doi.org/10.1126%2Fscience.211.4479.283). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier) "PMID (identifier)")[17748027](https://pubmed.ncbi.nlm.nih.gov/17748027).
*   Smith, Erika E. (2013). ["Recognizing a Collective Inheritance through the History of Women in Computing"](https://doi.org/10.7771%2F1481-4374.1972). _CLCWeb: Comparative Literature and Culture_. **15** (1): 1–9. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.7771/1481-4374.1972](https://doi.org/10.7771%2F1481-4374.1972).
*   Verma, G.; Mielke, N. (1988). _Reliability performance of ETOX based flash memories_. IEEE International Reliability Physics Symposium.
*   Zuse, Konrad (1993). _The Computer – My life_. Berlin: Pringler-Verlag. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-387-56453-1](https://en.wikipedia.org/wiki/Special:BookSources/978-0-387-56453-1 "Special:BookSources/978-0-387-56453-1").

External links
--------------
