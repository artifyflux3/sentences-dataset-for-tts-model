Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Specifications Toggle Specifications subsection 2.1 Top level 2.2 Volume descriptor set 2.3 Path tables 2.4 Directories and files 2.5 Volume size 3 Extensions and improvements Toggle Extensions and improvements subsection 3.1 SUSP 3.2 Rock Ridge 3.3 El Torito 3.4 Joliet 3.5 Romeo 3.6 Apple extensions 3.7 Other extensions 4 Disc images 5 Platforms 6 See also 7 References 8 Further reading 9 External links Toggle the table of contents ISO 9660 29 languages العربية Català Čeština Dansk Deutsch Español فارسی Français 한국어 Հայերեն हिन्दी Bahasa Indonesia Italiano עברית Bahasa Melayu Nederlands 日本語 Norsk bokmål Polski Português Русский Slovenčina Suomi Svenska Türkçe Українська Yorùbá 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia File system for CD-R and CD-ROM optical discs ISO 9660 Developer(s) ISO / IEC , Ecma International Variants ISO 13490 Introduced 1988 ; 37 years ago ( 1988 ) Limits Max volume size 8 TiB (nearly 8.8 TB) Other Supported operating systems Cross platform Optical discs General Optical disc Optical disc drive Optical disc authoring Authoring software Recording technologies Recording modes Packet writing Burst cutting area Optical media types Compact disc ( CD ): CD-DA , CD-ROM , CD-R , CD-RW , 5.1 Music Disc , Super Audio CD ( SACD ), Photo CD , CD Video ( CDV ), Video CD ( VCD ), Super Video CD ( SVCD ), CD+G , CD-Text , CD-ROM XA , CD-i , MIL-CD , Mini CD Digital Versatile Disc ( DVD ): DVD-R , DVD+R , DVD-R DL , DVD+R DL , DVD-R DS , DVD+R DS , DVD-RW , DVD+RW , DVD-RAM , DVD-D , DVD-A , DVD-Video , HVD , Flexplay , EcoDisc , MiniDVD Blu-ray Disc ( BD ): BD-R & BD-RE , Blu-ray 3D , Mini Blu-ray Disc , 4K Blu-ray ( Ultra HD Blu-ray ) M-DISC Universal Media Disc (UMD) Enhanced Versatile Disc (EVD) Forward Versatile Disc (FVD) Holographic Versatile Disc (HVD) China Blue High-definition Disc (CBHD) HD DVD : HD DVD-R , HD DVD-RW , HD DVD-RAM High-Definition Versatile Multilayer Disc (HD VMD) VCDHD GD-ROM Personal Video Disc (PVD) MiniDisc ( MD ): MD Data, MD Data2 Hi-MD LaserDisc ( LD ): LD-ROM , LV-ROM Video Single Disc (VSD) Magneto-optical discs Ultra Density Optical (UDO) 3D optical data storage Stacked Volumetric Optical Disk (SVOD) Fluorescent Multilayer Disc Hyper CD-ROM Nintendo optical disc (NOD) Archival Disc (AD) Professional Disc DataPlay Standards SFF ATAPI / MMC Mount Rainier (packet writing) Mount Fuji (layer jump recording) Rainbow Books File systems ISO 9660 Joliet Romeo Rock Ridge / SUSP El Torito Apple ISO 9660 Extensions Universal Disk Format ( UDF ) ISO 13490 See also History of optical storage media High-definition optical disc format war v t e ISO 9660 (also known as ECMA -119 ) is a file system for optical disc media. The file system is an international standard available from the International Organization for Standardization (ISO). Since the specification is publicly available, implementations have been written for many operating systems .

[ 1 ] ISO 9660 traces its roots to the High Sierra Format , [ 2 ] which arranged file information in a dense, sequential layout to minimize nonsequential access by using a hierarchical (eight levels of directories deep) tree file system arrangement, similar to Unix file systems and FAT . To facilitate cross platform compatibility, it defined a minimal set of common file attributes (directory or ordinary file and time of recording) and name attributes (name, extension, and version), and used a separate system use area where future optional extensions for each file may be specified. High Sierra was adopted in December 1986 (with changes) as an international standard by Ecma International as ECMA-119 [ 3 ] and submitted for fast tracking to the ISO , where it was eventually accepted as ISO 9660:1988.

[ 4 ] Subsequent amendments to the standard were published in 2013, 2017, 2019, and 2020 .

The first 16 sectors of the file system are empty and reserved for other uses. The rest begins with a volume descriptor set (a header block which describes the subsequent layout) and then the path tables, directories and files on the disc. An ISO 9660 compliant disc must contain at least one primary volume descriptor describing the file system and a volume descriptor set terminator which is a volume descriptor that marks the end of the descriptor set. The primary volume descriptor provides information about the volume, characteristics and metadata, including a root directory record that indicates in which sector the root directory is located. Other fields contain metadata such as the volume's name and creator, along with the size and number of logical blocks used by the file system. Path tables summarize the directory structure of the relevant directory hierarchy. For each directory in the image, the path table provides the directory identifier, the location of the extent in which the directory is recorded, the length of any extended attributes associated with the directory, and the index of its parent directory path table entry.

There are several extensions to ISO 9660 that relax some of its limitations. Notable examples include Rock Ridge (Unix-style permissions and longer names), Joliet ( Unicode , allowing non- Latin scripts to be used), El Torito (enables CDs to be bootable ) and the Apple ISO 9660 Extensions (file characteristics specific to the classic Mac OS and macOS , such as resource forks , file backup date and more).

History [ edit ] Compact discs were originally developed for recording musical data, but soon were used for storing additional digital data types because they were equally effective for archival mass data storage . Called CD-ROMs , the lowest level format for these types of compact discs was defined in the Yellow Book specification in 1983. However, this book did not define any format for organizing data on CD-ROMs into logical units such as files , which led to every CD-ROM maker creating its own format. In order to develop a CD-ROM file system standard ( Z39.60 - Volume and File Structure of CDROM for Information Interchange ), the National Information Standards Organization (NISO) set up Standards Committee SC EE (Compact Disc Data Format) in July 1985.

[ 5 ] In September/ [ 6 ] October 1985 several companies invited experts to participate in the development of a working paper for such a standard.

In November 1985, representatives of  computer hardware manufacturers gathered at the High Sierra Hotel and Casino (currently called the Golden Nugget Lake Tahoe ) in Stateline, Nevada .

[ 7 ] This group became known as the High Sierra Group ( HSG ). Present at the meeting were representatives from Apple Computer , AT&T , [ citation needed ] Digital Equipment Corporation (DEC), Hitachi , LaserData , Microware , [ citation needed ] Microsoft , 3M , Philips , Reference Technology Inc.

, Sony Corporation , TMS Inc.

, VideoTools (later Meridian [ 8 ] ), Xebec , and Yelick .

[ citation needed ] The meeting report evolved from the Yellow Book CD-ROM standard, which was so open ended it was leading to diversification and creation of many incompatible data storage methods. The High Sierra Group Proposal ( HSGP ) was released in May 1986, defining a file system for CD-ROMs commonly known as the High Sierra Format.

A draft version of this proposal was submitted to the European Computer Manufacturers Association (ECMA) for standardization. With some changes, this led to the issue of the initial edition of the ECMA-119 standard in December 1986.

[ 9 ] The ECMA submitted their standard to the International Standards Organization (ISO) for fast tracking , where it was further refined into the ISO 9660 standard. For compatibility the second edition of ECMA-119 was revised to be equivalent to ISO 9660 in December 1987.

[ 10 ] [ 11 ] [ 12 ] ISO 9660:1988 was published in 1988. The main changes from the High Sierra Format in the ECMA-119 and ISO 9660 standards were international extensions to allow the format to work better on non-US markets.

In order not to create incompatibilities, NISO suspended further work on Z39.60, which had been adopted by NISO members on 28 May 1987. It was withdrawn before final approval, in favour of ISO 9660.

[ 5 ] JIS X 0606:1998 was passed in Japan in 1998 with much-relaxed file name rules using a new "enhanced volume descriptor" data structure. The standard was submitted for ISO 9660:1999 and supposedly fast-tracked, but nothing came out of it.

[ 13 ] Nevertheless, several operating systems and disc authoring tools (such as Nero Burning ROM , mkisofs and ImgBurn ) now support the addition, under such names as "ISO 9660:1999", "ISO 9660 v2", or "ISO 9660 Level 4". In 2013, the proposal was finally formalized in the form of ISO 9660/Amendment 1, intended to "bring harmonization between ISO 9660 and widely used ' Joliet Specification'." [ 14 ] In December 2017, a 3rd Edition of ECMA-119 was published that is technically identical with ISO 9660, Amendment 1.

[ 15 ] In 2019, ECMA published a 4th version of ECMA-119, integrating the Joliet text as "Annex C".

[ 1 ] In 2020, ISO published Amendment 2, which adds some minor clarifying matter, but does not add or correct any technical information of the standard.

[ 16 ] Specifications [ edit ] The following is the rough overall structure of the ISO 9660 file system.

Multi-byte values can be stored in three different formats: little-endian , big-endian , and in a concatenation of both types in what the specification calls "both-byte" order. Both-byte order is required in several fields in the volume descriptors and directory records, while path tables can be either little-endian or big-endian.

[ 17 ] Top level [ edit ] ISO 9660 file system System area (32,768 B) Unused by ISO 9660 Data area Volume descriptor set Path tables, directories and files The system area , the first 32,768 data bytes of the disc (16 sectors of 2,048 bytes each), is unused by ISO 9660 and therefore available for other uses.

[ 17 ] While it is suggested that they are reserved for use by bootable media , [ 18 ] a CD-ROM may contain an alternative file system descriptor in this area, and it is often used by hybrid CDs to offer classic Mac OS -specific and macOS -specific content.

[ citation needed ] Volume descriptor set [ edit ] The data area begins with the volume descriptor set , a set of one or more volume descriptors terminated with a volume descriptor set terminator . These collectively act as a header for the data area, describing its content (similar to the BIOS parameter block used by FAT , HPFS and NTFS formatted disks).

Volume descriptor set Volume descriptor #1 ...

Volume descriptor #N Volume descriptor set terminator Each volume descriptor is 2048 bytes in size, fitting perfectly into a single Mode 1 or Mode 2 Form 1 sector. They have the following structure: Volume descriptor (2,048 bytes) Part Type Identifier Version Data Size 1 byte 5 bytes (always 'CD001') 1 byte (always 0x01) 2,041 bytes The data field of a volume descriptor may be subdivided into several fields, with the exact content depending on the type. Redundant copies of each volume descriptor can also be included in case the first copy of the descriptor becomes corrupt.

Standard volume descriptor types are the following: Basic volume descriptor types Value Type 0 Boot record volume descriptor 1 Primary volume descriptor 2 Supplementary volume descriptor, or enhanced volume descriptor 3 Volume partition descriptor 255 Volume descriptor set terminator An ISO 9660 compliant disc must contain at least one primary volume descriptor describing the file system and a volume descriptor set terminator for indicating the end of the descriptor sequence. The volume descriptor set terminator is simply a particular type of volume descriptor with the purpose of marking the end of this set of structures. The primary volume descriptor provides information about the volume, characteristics and metadata, including a root directory record that indicates in which sector the root directory is located. Other fields contain the description or name of the volume, and information about who created it and with which application. The size of the logical blocks which the file system uses to segment the volume is also stored in a field inside the primary volume descriptor, as well as the amount of space occupied by the volume (measured in number of logical blocks).

In addition to the primary volume descriptor(s), supplementary volume descriptors or enhanced volume descriptors may be present.

Supplementary volume descriptors describe the same volume as the primary volume descriptor does, and are normally used for providing additional code page support when the standard code tables are insufficient. The standard specifies that ISO 2022 is used for managing code sets that are wider than 8 bytes, and that ISO 2375 escape sequences are used to identify each particular code page used. Consequently, ISO 9660 supports international single-byte and multi-byte character sets, provided they fit into the framework of the referenced standards. However, ISO 9660 does not specify any code pages that are guaranteed to be supported: all use of code tables other than those defined in the standard itself are subject to agreement between the originator and the recipient of the volume.

Enhanced volume descriptors were introduced in ISO 9660, Amendment 1.  They relax some of the requirements of the other volume descriptors and the directory records referenced by them: for example, the directory depth can exceed eight, file identifiers need not contain '.' or file version number, the length of a file and directory identifier is maximized to 207.

Path tables [ edit ] Path tables summarize the directory structure of the relevant directory hierarchy. For each directory in the image, the path table provides the directory identifier, the location of the extent in which the directory is recorded, the length of any extended attributes associated with the directory, and the index of its parent directory path table entry. The parent directory number is a 16-bit number, limiting its range from 1 to 65,535.

[ 19 ] Directories and files [ edit ] Overview of the ISO 9660 directory structure Directory entries are stored following the location of the root directory entry, where evaluation of filenames is begun. Both directories and files are stored as extents , which are sequential series of sectors. Files and directories are differentiated only by a file attribute that indicates its nature (similar to Unix ). The attributes of a file are stored in the directory entry that describes the file, and optionally in the extended attribute record. To locate a file, the directory names in the file's path can be checked sequentially, going to the location of each directory to obtain the location of the subsequent subdirectory. However, a file can also be located through the path table provided by the file system. This path table stores information about each directory, its parent, and its location on disc. Since the path table is stored in a contiguous region, it can be searched much faster than jumping to the particular locations of each directory in the file's path, thus reducing seek time.

The standard specifies three nested levels of interchange (paraphrased from section 10): Level 1: File names are limited to eight characters with a three-character extension. Directory names are limited to eight characters. Files may contain one single file section.

Level 2: File Name + '.' + File Name extension or Directory Name may not exceed 31 characters in length (sections 7.5 and 7.6). Files may contain one single file section.

Level 3: No additional restrictions than those stipulated in the main body of the standard. Files are also allowed to consist of multiple non-contiguous sections (with some restrictions as to order).

Additional restrictions in the body of the standard: The depth of the directory hierarchy must not exceed 8 (root directory being at level 1), and the path length of any file must not exceed 255. (section 6.8.2.1).

The standard also specifies the following name restrictions (sections 7.5 and 7.6): [ 4 ] All levels restrict file names in the mandatory file hierarchy to upper case letters, digits, underscores ("_"), and a dot. (See also section 7.4.4 and Annex A.) If no characters are specified for the File Name then the File Name Extension shall consist of at least one character.

If no characters are specified for the File Name Extension then the File Name shall consist of at least one character.

File names shall not have more than one dot.

Directory names shall not use dots at all.

A CD-ROM producer may choose one of the lower Levels of Interchange specified in chapter 10 of the standard, and further restrict file name length from 30 characters to only 8+3 in file identifiers, and 8 in directory identifiers in order to promote interchangeability with implementations that do not implement the full standard.

[ citation needed ] All numbers in ISO 9660 file systems except the single byte value used for the GMT offset are unsigned numbers. As the length of a file's extent on disc is stored in a 32 bit value, [ 20 ] it allows for a maximum length of just over 4.2 GB (more precisely, one byte less than 4 GiB ). It is possible to circumvent this limitation by using the multi-extent (fragmentation) feature of ISO 9660 Level 3 to create ISO 9660 file systems and single files up to 8 TB. With this, files larger than 4 GiB can be split up into multiple extents (sequential series of sectors), each not exceeding the 4 GiB limit. For example, the free software such as InfraRecorder , ImgBurn and mkisofs as well as Roxio Toast are able to create ISO 9660 file systems that use multi-extent files to store files larger than 4 GiB on appropriate media such as recordable DVDs.

[ citation needed ] Linux supports multiple extents.

[ 21 ] Since amendment 1 (or ECMA-119 3rd edition, or "JIS X 0606:1998 / ISO 9660:1999"), a much wider variety of file trees can be expressed by the EVD system. There is no longer any character limit (even 8-bit characters are allowed), nor any depth limit or path length limit. There still is a limit on name length, at 207. The character set is no longer enforced, so both sides of the disc interchange need to agree via a different channel.

[ 15 ] Volume size [ edit ] An ISO 9660 volume can be up to 8 tebibytes (nearly 8.8 terabytes) in size, owing to the 32-bit sector count for the volume size, and its allocation unit size which spans 2048 bytes, matching a logical sector on optical discs. The highest number representable in a 32-bit field is 2 32 -1, limiting the volume size to (2 32 -1)×2048 bytes. "Logical" means it is the sector size exposed to the operating system, not necessarily the physical sector size on a disc. DVD and Blu-ray discs have maintained the logical sector size of the CD-ROM, 2048 bytes, to try to maintain reading compatibility with computers and software predating them.

Extensions and improvements [ edit ] There are several extensions to ISO 9660 that relax some of its limitations. Notable examples include Rock Ridge (Unix-style permissions and longer names), Joliet ( Unicode , allowing non- Latin scripts to be used), El Torito (enables CDs to be bootable ) and the Apple ISO 9660 Extensions (file characteristics specific to the classic Mac OS and macOS , such as resource forks , file backup date and more).

SUSP [ edit ] System Use Sharing Protocol (SUSP, IEEE P1281) provides a generic way of including additional properties for any directory entry reachable from the primary volume descriptor (PVD). In an ISO 9660 volume, every directory entry has an optional system use area whose contents are undefined and left to be interpreted by the system.  SUSP defines a method to subdivide that area into multiple system use fields, each identified by a two-character signature tag.  The idea behind SUSP was that it would enable any number of independent extensions to ISO 9660 to be created and included on a volume without conflicting. It also allows for the inclusion of property data that would otherwise be too large to fit within the limits of the system use area.

SUSP defines several common tags and system use fields: CE : Continuation area PD : Padding field SP : System use sharing protocol indicator ST : System use sharing protocol terminator ER : Extensions reference ES : Extension selector Other known SUSP fields include: AA : Apple extension, preferred BA : Apple extension, old (length attribute is missing) AS : Amiga file properties ZF : zisofs compressed file, usually produced by program mkzftree or by libisofs. Transparently decompressed by Linux kernel if built with CONFIG_ZISOFS.

[ 22 ] AL : records Extended File Attributes , including ACLs . Proposed by libburnia , supported by libisofs.

[ 23 ] The Apple extensions do not technically follow the SUSP standard; however the basic structure of the AA and AB fields defined by Apple are forward compatible with SUSP; so that, with care, a volume can use both Apple extensions as well as RRIP extensions.

Rock Ridge [ edit ] "Rock Ridge" redirects here. For the fictional Western town, see Blazing Saddles .

The Rock Ridge Interchange Protocol (RRIP, IEEE P1282) is an extension which adds POSIX file system semantics.  The availability of these extension properties allows for better integration with Unix and Unix-like operating systems.

[ 24 ] The standard takes its name from the fictional town Rock Ridge in Mel Brooks ' film Blazing Saddles .

[ 25 ] The RRIP extensions are, briefly: Longer file names (up to 255 bytes) and fewer restrictions on allowed characters (support for lowercase, etc.) UNIX-style file modes , user ids and group ids, and file timestamps Support for Symbolic links and device files Deeper directory hierarchy (more than 8 levels) Efficient storage of sparse files The RRIP extensions are built upon SUSP, defining additional tags for support of POSIX semantics, along with the format and meaning of the corresponding system use fields: RR : Rock Ridge extensions in-use indicator (note: dropped from standard after version 1.09) PX : POSIX file attributes PN : POSIX device numbers SL : symbolic link NM : alternate name CL : child link PL : parent link RE : relocated directory TF : time stamp SF : sparse file data Amiga Rock Ridge is similar to RRIP, except it provides additional properties used by AmigaOS . It too is built on the SUSP standard by defining an "AS"-tagged system use field.  Thus both Amiga Rock Ridge and the POSIX RRIP may be used simultaneously on the same volume. Some of the specific properties supported by this extension are the additional Amiga -bits for files. There is support for attribute "P" that stands for "pure" bit (indicating re-entrant command) and attribute "S" for script bit (indicating batch file ). This includes the protection flags plus an optional comment field. These extensions were introduced by Angela Schmidt with the help of Andrew Young, the primary author of the Rock Ridge Interchange Protocol and System Use Sharing Protocol. The first publicly available software to master a CD-ROM with Amiga extensions was MakeCD , an Amiga software which Angela Schmidt developed together with Patrick Ohly.

[ 26 ] El Torito [ edit ] El Torito is an extension designed to allow booting a computer from a CD-ROM. It was announced in November 1994 [ 27 ] and first issued in January 1995 as a joint proposal by IBM and BIOS manufacturer Phoenix Technologies . According to legend, the El Torito CD/DVD extension to ISO 9660 got its name because its design originated in an El Torito restaurant in Irvine, California ( 33°41′05″N 117°51′09″W ﻿ / ﻿ 33.684722°N 117.852547°W ﻿ / 33.684722; -117.852547 ).

[ 28 ] The initial two authors were Curtis Stevens, of Phoenix Technologies, and Stan Merkin, of IBM.

[ 28 ] A 32-bit PC BIOS will search for boot code on an ISO 9660 CD-ROM. The standard allows for booting in two different modes. Either in hard disk emulation when the boot information can be accessed directly from the CD media, or in floppy emulation mode where the boot information is stored in an image file of a floppy disk , which is loaded from the CD and then behaves as a virtual floppy disk. This is useful for computers that were designed to boot only from a floppy drive. For modern computers the "no emulation" mode is generally the more reliable method. The BIOS will assign a BIOS drive number to the CD drive. The drive number (for INT 13H ) assigned is any of 80 hex ( hard disk emulation), 00 hex ( floppy disk emulation) or an arbitrary number if the BIOS should not provide emulation. Emulation is useful for booting older operating systems from a CD, by making it appear to them as if they were booted from a hard or floppy disk.

[ 29 ] UEFI systems also accept El Torito records, as platform 0xEF. The record is expected to be a disk image containing a FAT filesystem, the filesystem being an EFI System Partition containing the usual \EFI directory. The image should be marked for "no emulation", though it does not actually work like the BIOS "no emulation" mode, in which the BIOS would load the image in memory and execute the code from there.

[ 30 ] El Torito can also be used to produce CDs which can boot up Linux operating systems, by including the GRUB bootloader on the CD and following the Multiboot Specification .

[ 29 ] While the El Torito spec alludes to a "Mac" platform ID, PowerPC-based Apple Macintosh computers don't use it.

[ 31 ] Joliet [ edit ] Joliet is an extension specified and endorsed by Microsoft and has been supported by all versions of its Windows operating system since Windows 95 [ 32 ] and Windows NT 4.0 .

[ 33 ] Its primary focus is the relaxation of the filename restrictions inherent with full ISO 9660 compliance. Joliet accomplishes this by supplying an additional set of filenames that are encoded in UCS-2 BE ( UTF-16 BE in practice since Windows 2000). These filenames are stored in a special supplementary volume descriptor, that is safely ignored by ISO 9660-compliant software, thus preserving backward compatibility.

[ 32 ] The specification only allows filenames to be up to 64 Unicode characters in length. However, the documentation for mkisofs states filenames up to 103 characters in length do not appear to cause problems.

[ 34 ] Microsoft has documented it "can use up to 110 characters." [ 35 ] The difference lies in whether CDXA extension space is used.

[ 34 ] Joliet allows Unicode characters to be used for all text fields, which includes file names and the volume name. A "Secondary" volume descriptor with type 2 contains the same information as the Primary one (sector 16 offset 40 bytes), but in UCS-2BE in sector 17, offset 40 bytes. As a result of this, the volume name is limited to 16 characters.

Many current PC operating systems are able to read Joliet-formatted media, thus allowing exchange of files between those operating systems even if non-Roman characters are involved (such as Arabic, Japanese or Cyrillic), which was formerly not possible with plain ISO 9660-formatted media. Operating systems which can read Joliet media include: Microsoft Windows ; [ 32 ] Microsoft recommends the use of the Joliet extension for developers targeting Windows.

[ 32 ] Linux [ 36 ] macOS [ 37 ] FreeBSD [ 38 ] OpenSolaris [ 39 ] Haiku [ 40 ] AmigaOS RISC OS [ 41 ] Romeo [ edit ] Romeo was developed by Adaptec and allows the use of long filenames up to 128 characters, written directly into the primary volume descriptor using the current code page . This format is built around the workings of Windows 9x and Windows NT "CDFS" drivers.

[ 42 ] When a Windows installation of a different language opens a Romeo disk, the lack of code page indication will cause non-ASCII characters in file names to become Mojibake . For example, "ü" may become "³". A different OS may encounter a similar problem or refuse to recognize these noncompliant names outright.

The same code page problem technically exists in standard ISO 9660, which allows open interpretation of the supplemental and enhanced volume descriptors to any character encoding subject to agreement. However, the primary volume descriptor is guaranteed to be a small subset of ASCII.

Apple extensions [ edit ] Apple Computer authored a set of extensions that add ProDOS or HFS / HFS+ (the primary contemporary file systems for the classic Mac OS ) properties to the filesystem. Some of the additional metadata properties include: [ 43 ] Date of last backup File type Creator code Flags and data for display Reference to a resource fork In order to allow non-Macintosh systems to access Macintosh files on CD-ROMs, Apple chose to use an extension of the standard ISO 9660 format. Most of the data, other than the Apple specific metadata, remains visible to operating systems that are able to read ISO 9660.

Other extensions [ edit ] For operating systems which do not support any extensions, a name translation file TRANS.TBL must be used. The TRANS.TBL file is a plain ASCII text file. Each line contains three fields, separated by an arbitrary amount of whitespace : The file type ("F" for file or "D" for directory); The ISO 9660 filename (including the usually hidden ";1" for files); and The extended filename, which may contain spaces.

Most implementations that create TRANS.TBL files put a single space between the file type and ISO 9660 name and some arbitrary number of tabs between the ISO 9660 filename and the extended filename.

Native support for using TRANS.TBL still exists in many ISO 9660 implementations, particularly those related to Unix .  However, it has long since been superseded by other extensions, and modern utilities that create ISO 9660 images either cannot create TRANS.TBL files at all, or no longer create them unless explicitly requested by the user.  Since a TRANS.TBL file has no special identification other than its name, it can also be created separately and included in the directory before filesystem creation.

The ISO 13490 standard is an extension to the ISO 9660 format that adds support for multiple sessions on a disc. Since ISO 9660 is by design a read-only, pre-mastered file system, all the data has to be written in one go or "session" to the medium. Once written, there is no provision for altering the stored content. ISO 13490 was created to allow adding more files to a writeable disc such as CD-R in multiple sessions.

The ISO 13346/ECMA-167 standard was designed in conjunction to the ISO 13490 standard. This new format addresses most of the shortcomings of ISO 9660, and a subset of it evolved into the Universal Disk Format (UDF), which was adopted for DVDs . The volume descriptor table retains the ISO9660 layout, but the identifier has been updated.

[ 44 ] [ 45 ] Disc images [ edit ] Optical disc images are a common way to electronically transfer the contents of CD-ROMs. They often have the filename extension .iso ( .iso9660 is less common, but also in use) and are commonly referred to as "ISOs".

[ 46 ] Platforms [ edit ] Most operating systems support reading of ISO 9660 formatted discs, and most new versions support the extensions such as Rock Ridge and Joliet. Operating systems that do not support the extensions usually show the basic (non-extended) features of a plain ISO 9660 disc.

Operating systems that support ISO 9660 and its extensions include the following: DOS : access with extensions, such as MSCDEX.EXE (Microsoft CDROM Extension), NWCDEX.EXE or CORELCDX.EXE Microsoft Windows 95 , Windows 98 , Windows ME : can read ISO 9660 Level 1, 2, 3, and Joliet Microsoft Windows NT 4.0 , Windows 2000 , Windows XP , and newer Windows versions, can read ISO 9660 Level 1, 2, 3, Joliet , and ISO 9660:1999.

Windows 7 may also mistake UDF format for CDFS. for more information see UDF .

Linux and BSD : ISO 9660 Level 1, 2, 3, Joliet, Rock Ridge , and ISO 9660:1999 Apple GS/OS : ISO Level 1 and 2 support via the HS.FST File System Translator.

[ 47 ] Classic Mac OS 7 to 9: ISO Level 1, 2. Optional free software supports Rock Ridge and Joliet (including ISO Level 3): Joke Ridge and Joliet Volume Access .

macOS (all versions): ISO Level 1, 2, Joliet and Rock Ridge Extensions. Level 3 is not currently supported, although users have been able to mount these discs [ 48 ] AmigaOS supports the "AS" extensions (which preserve the Amiga protection bits and file comments) QNX ULTRIX OS/2 , eComStation and ArcaOS BeOS , Zeta and Haiku OpenVMS supports only ISO 9660 Interchange levels 1–3, with no extensions [ 49 ] RISC OS support for optical media written on a PC is patchy. Most CD-Rs/RWs work perfectly, however DVD+-Rs/RWs/RAMs are entirely hit and miss running RISC OS 4.02, RISC OS 4.39 and RISC OS 6.20 [ citation needed ] See also [ edit ] Comparison of disc image software Disk image emulator List of ISO standards Hybrid CD ISO/IEC JTC 1/SC 23 References [ edit ] ^ a b ECMA-119 - Volume and file structure of CDROM for information interchange - 4th edition, June 2019 at the Wayback Machine (archived 2023-08-20) (linked from ECMA-119 - Ecma International ) ^ "Working Paper for Information Processing: Volume and File Structure of CD-ROM for Information Interchange".

Optical Information Systems .

7 (1): 29– 49. January 1987.

^ "Volume and File Structure of CDROM for Information Interchange" . Ecma International. December 1987.

Archived from the original on 18 November 2016 . Retrieved 5 November 2003 .

^ a b Volume and File Structure of CD-ROM for Information Interchange (corrected ed.). Geneva: International Organization for Standardization (ISO). 1 September 1988.

^ a b Peters, Paul Evan (July 1989).

"CD-ROM Standards: The Fate of Z39.60" (PDF) .

Information Standards Quarterly .

1 (3).

National Information Standards Organization (NISO): 1– 3.

ISSN 1041-0031 .

Archived (PDF) from the original on 18 November 2016 . Retrieved 18 November 2016 .

^ Helliwell, John (14 October 1986).

"Premium Reference Tool of the '90s" .

PC Magazine : 150– 164 . Retrieved 18 November 2016 .

^ Manes, Stephen ; Andrews, Paul (1993).

Gates: How Microsoft's Mogul Reinvented an Industry—and Made Himself the Richest Man in America .

Doubleday . p. 336.

ISBN 0-385-42075-7 .

^ Anderson, Gregg (June 1987).

"The Future of CD-ROM" .

Explorer .

7 (3). Atari Explorer Publications: 19 . Retrieved 18 November 2016 .

^ "Standard ECMA-119: Volume and File Structure of CDROM for Information Interchange" (PDF) (1st ed.). December 1986.

^ "Standard ECMA-119: Volume and File Structure of CDROM for Information Interchange" (PDF) (reprinted 2nd ed.). September 1998 [December 1987].

Archived (PDF) from the original on 15 March 2023 . Retrieved 30 December 2022 .

^ The Invention of Compact Discs .

Archived from the original on 5 March 2021 . Retrieved 24 November 2020 .

^ "Chip's CD Media Resource Center: CD-ROM page 6" . Archived from the original on 26 July 2019 . Retrieved 24 November 2020 .

^ "JIS X 0606:1998 / ISO 9660:1999 Draft Specification" .

Archived from the original on 28 December 2018 . Retrieved 2 January 2019 .

^ ISO 9660, Amendment 1 (ISO 9660:1988/Amd.1:2013(E)) ^ a b "Standard ECMA-119" (PDF) .

Ecma International . Ecma. p. vii.

Archived (PDF) from the original on 6 May 2018 . Retrieved 16 August 2018 .

^ ISO 9660, Amendment 2 (ISO 9660:1988/Amd.2:2020(E)) ^ a b "ISO9660 Simplified for DOS/Windows" . Archived from the original on 6 March 2021 . Retrieved 26 November 2020 .

^ "ISO9660" .

Archived from the original on 7 March 2021 . Retrieved 26 November 2020 .

^ ISO9660 sections 6.9 and 9.4.4 ^ ISO 9660 section 9.1.4 ^ Pete (2 April 2006).

"kern/95222: File sections on ISO9660 level 3 CDs ignored" .

freebsd-bugs (Mailing list).

Archived from the original on 16 April 2016 . Retrieved 19 September 2007 .

^ "linux/fs/isofs/Kconfig" .

GitHub . 23 January 2022.

^ "Arbitrary Attribute Interchange Protocol" .

^ "RRIP (IEEE P1282) Draft Standard 1.12" (PDF) . 8 July 1994. Archived from the original (PDF) on 4 April 2017.

^ "CDFS The Rock Ridge Interchange Protocol (RRIP, IEEE P1282)" .

Archived from the original on 4 March 2016 . Retrieved 24 November 2020 .

^ Angela Schmidt, Patrick Ohly.

"Amiga MakeCD Support Page" (in German).

Archived from the original on 28 October 2020 . Retrieved 4 April 2017 .

^ "Phoenix announces bootable CD-ROM specification; Specification developed jointly by Phoenix and IBM" (Press release). Phoenix Technologies Ltd. 11 November 1994. Archived from the original on 10 August 2017 . Retrieved 31 January 2008 .

^ a b Parker, Dana J.

"Fresh Tortillas and CD-ROM Standards: The El Torito Bootable CD-ROM Specification" .

CD-ROM Professional . Vol. 8, no. 7. Archived from the original on 8 October 1999 . Retrieved 31 January 2008 .

^ a b "El-Torito" .

OSDev .

Archived from the original on 27 November 2020 . Retrieved 3 January 2015 .

^ "13. Protocols – Media Access — UEFI Specification 2.10 documentation" .

uefi.org .

Archived from the original on 7 October 2024 . Retrieved 5 October 2024 .

^ "Bootable hybrid (ISO/HFS) CD-ROMs" .

Archived from the original on 28 February 2021 . Retrieved 3 January 2014 .

^ a b c d "Joliet Specification for CD-ROM" .

Microsoft Knowledge Base . Microsoft. 11 July 2005. MSKB 125630.

Archived from the original on 25 May 2013 . Retrieved 29 May 2012 .

^ "Windows NT Support For Long File Names Under CDFS File System" .

Microsoft Knowledge Base . Microsoft. 1 November 2006. MSKB 142372.

Archived from the original on 17 October 2009 . Retrieved 29 May 2012 .

^ a b mkisofs(8) – FreeBSD System Manager's Manual ^ "5 Appendix A: Product Behavior" .

Archived from the original on 20 April 2014 . Retrieved 13 April 2014 .

^ Jeff Tranter (18 July 2001).

"Is Microsoft's Joliet filesystem supported?" .

The Linux CD-ROM HOWTO . Revision 1.17.

Archived from the original on 8 August 2020 . Retrieved 29 May 2012 .

^ "hdiutil(1)" .

BSD General Commands Manual . Mac OS X Version 10.7.4. Apple. 18 March 2011.

Archived from the original on 9 June 2012 . Retrieved 29 May 2012 .

^ "FreeBSD 3.2 Release Notes" . The FreeBSD Project.

Archived from the original on 22 December 2018 . Retrieved 29 May 2012 .

^ "hsfs - High Sierra & ISO 9660 CD-ROM file system" .

OpenSolaris Man Page Set . SunOS 5.11 / OpenSolaris 2009.06. 1 November 2006 . Retrieved 29 May 2012 .

^ "Haiku Source Tree, src/add-ons/kernel/file_systems/iso9660/iso9660.cpp" .

Archived from the original on 5 April 2023 . Retrieved 24 November 2020 .

^ "Add support for Joliet format CD-ROMs hdr/Hashes s/Directory s/EntryFile s/FileMan s/Filer s/Free (999bdda6) · Commits · RiscOS / Sources / FileSys / CDFS / CDFS" . 15 August 2013.

^ "CD-ROM Discs: Joliet & Romeo Name Definitions" . Apple Inc. 1 June 2007.

Archived from the original on 14 March 2014 . Retrieved 20 July 2010 .

^ "Technical Note FL36: Apple Extensions to ISO 9660" . Archived from the original on 26 December 2008.

^ "ECMA-167 - Volume and File Structure for Write-Once and Rewritable Media using Non-Sequential Recording for Information Interchange" (PDF) .

Archived (PDF) from the original on 22 September 2020 . Retrieved 30 April 2013 .

^ "Birth Announcement: ISO/IEC 13346 and ISO/IEC 13490" .

Archived from the original on 19 February 2013 . Retrieved 30 April 2013 .

^ Gavin, Brady (25 June 2018).

"What Is An ISO File (And How Do I Use Them)?" .

How-To Geek .

Archived from the original on 23 December 2021 . Retrieved 23 December 2021 .

^ "The Virtual GS: Using ISO disk images in Apple II emulators" (PDF) . Juiced.GS Volume 9, Issue 2. May 2004.

Archived (PDF) from the original on 31 March 2010 . Retrieved 27 May 2009 .

^ "Work with PC-created Joliet Level 3 CDs" . 16 April 2004. Archived from the original on 6 September 2015 . Retrieved 10 December 2017 .

^ "The OpenVMS Frequently Asked Questions (FAQs)" . Hoffman Labs. Archived from the original on 19 November 2017 . Retrieved 1 September 2011 .

Further reading [ edit ] Evans, Harold ; Buckland, Gail; Lefer, David (2004).

They Made America: From the Steam Engine to the Search Engine: Two Centuries of Innovators .

Little, Brown and Co.

ISBN 978-0-316-27766-2 .

Lambert, Steve; Ropiequet, Suzanne, eds. (1986).

CD ROM - The New Papyrus: The current and future state of the art .

Microsoft Press .

ISBN 0-914845-74-8 .

External links [ edit ] "ISO 9660" .

"ECMA-119" .

This is the ECMA release of the ISO 9660:1988 standard, available as a free download "Summary of the ISO 9660 Specifications" . Archived from the original on 27 May 2022.

"Description of data structures in ISO-9660" . Archived from the original on 17 July 2011.

"ISO 9660 Analyzer Tool (iat)" .

Freecode .

"RRIP History: About Young Minds, Inc" . Archived from the original on 17 March 2018.

"SUSP (IEEE P1281) Draft Standard 1.12" (PDF) . 8 July 1994. Archived from the original (PDF) on 4 April 2017.

"RRIP (IEEE P1282) Draft Standard 1.12" (PDF) . 8 July 1994. Archived from the original (PDF) on 4 April 2017.

"Amiga Extensions on Rock Ridge: "Documents related to MakeCD program" " . 5 December 1996.

"The "El Torito" Bootable CD-ROM Format Specification, Version 1.0" (PDF) . Archived from the original (PDF) on 18 February 2008.

ISOLINUX source code (see isolinux.asm line 294 onward) "Ralf Brown's interrupt list" .

(see int 13h in interrupt.b, esp. functions 4a to 4d) "EL Torito Specification Supplement" .

, discusses shortcomings of the standard US Patent 5758352 - Common name space for long and short filenames "Joliet Specification" .

v t e File systems Comparison of file systems distributed Unix filesystem Disk and non-rotating ADFS AdvFS Amiga FFS Amiga OFS APFS AthFS bcachefs BFS Be File System Boot File System Byte File System ( z/VM ) Btrfs CVFS CXFS DFS EFS Encrypting File System Extent File System Episode ext ext2 ext3 ext3cow ext4 FAT exFAT Files-11 Fossil GPFS HAMMER HAMMER2 HFS ( Classic Mac OS ) HFS ( MVS ) HFS+ HPFS HTFS JFS LFS MFS Macintosh File System TiVo Media File System MINIX NetWare File System Next3 NILFS NILFS2 NSS NTFS OneFS OpenZFS PFS QFS QNX4FS ReFS ReiserFS Reiser4 Reliance Reliance Nitro RFS SFS Shared File System ( VM ) Smart File System SNFS Soup (Apple) Tux3 UBIFS UFS/UFS2 soft updates WAPBL VxFS WAFL Xiafs XFS Xsan zFS ( z/OS ) ZFS ( Sun ) Optical disc HSF ISO 9660 ISO 13490 UDF Flash memory and SSD APFS FAT exFAT TFAT EROFS F2FS JFS NVFS host-side wear leveling CHFS JFFS JFFS2 LogFS NILFS NILFS2 YAFFS UBIFS Distributed parallel BeeGFS Ceph CXFS GFS2 Google File System OCFS2 OrangeFS PVFS QFS Xsan more...

NAS 9P AFS ( OpenAFS ) AFP Coda DFS Google File System GPFS Lustre NCP NFS POHMELFS Hadoop SMB (CIFS) SSHFS more...

Specialized Aufs AXFS Boot File System Compact Disc File System cramfs Davfs2 EROFS FTPFS FUSE Lnfs LTFS NOVA MVFS SquashFS UMSDOS OverlayFS UnionFS Pseudo configfs devfs debugfs kernfs procfs specfs sysfs tmpfs WinFS Encrypted eCryptfs EncFS EFS Rubberhose SSHFS ZFS Types Clustered Global Grid Self-certifying Flash Journaling Log-structured Object Record-oriented Semantic Steganographic Synthetic Versioning Features Case preservation Copy-on-write Data deduplication Data scrubbing Execute in place Extent File attribute Extended file attributes File change log Fork Inode Links Hard Symbolic Access control Access-control list Filesystem-level encryption Permissions Modes Sticky bit Interfaces File manager File system API Installable File System Virtual file system Lists Cryptographic Default Log-structured Layouts Master Boot Record GUID Partition Table Apple Partition Map v t e Standards of Ecma International Application interfaces ANSI escape code APIW Common Language Infrastructure Office Open XML OpenXPS File systems (tape) Advanced Intelligent Tape DDS DLT Super DLT Linear Tape-Open (Ultrium-1) VXA File systems (disk) CD-ROM CD File System (CDFS) FAT FAT12 FAT16 FAT16B FD UDF Ultra Density Optical Universal Media Disc Holographic Versatile Disc Graphics Universal 3D Programming languages C++/CLI C# Eiffel JavaScript ( E4X , ECMAScript ) Dart Minimal BASIC Full BASIC Radio link interfaces NFC UWB Other ECMA-35 JSON List of Ecma standards (1961 – present) v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category Retrieved from " https://en.wikipedia.org/w/index.php?title=ISO_9660&oldid=1306323124 " Categories : Amiga APIs Apple Inc. file systems Compact disc Disk file systems Ecma standards ISO standards Optical computer storage Optical disc authoring Windows disk file systems Hidden categories: Webarchive template wayback links CS1 German-language sources (de) Articles with short description Short description matches Wikidata Use dmy dates from July 2021 All articles with unsourced statements Articles with unsourced statements from August 2017 Articles with unsourced statements from November 2020 Articles with unsourced statements from August 2020 Pages using gadget WikiMiniAtlas Articles with unsourced statements from December 2017 This page was last edited on 17 August 2025, at 04:28 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents ISO 9660 29 languages Add topic

