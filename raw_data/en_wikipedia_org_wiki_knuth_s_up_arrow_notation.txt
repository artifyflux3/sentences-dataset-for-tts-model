Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Introduction 2 Notation Toggle Notation subsection 2.1 Writing out up-arrow notation in terms of powers 2.1.1 Using tetration 3 Generalizations 4 Definition 5 Tables of values Toggle Tables of values subsection 5.1 Computing 0↑ n b 5.2 Computing 2↑ n b 5.3 Computing 3 ↑ n b 5.4 Computing 4  ↑ n b 5.5 Computing 10 ↑ n b 6 See also 7 Notes 8 References 9 External links Toggle the table of contents Knuth's up-arrow notation 26 languages Català Čeština Deutsch Español Esperanto Français 한국어 Bahasa Indonesia Italiano Bahasa Melayu Nederlands 日本語 Norsk bokmål Polski Português Русский Simple English Slovenščina Српски / srpski Suomi Svenska ไทย Türkçe Українська Tiếng Việt 中文 Edit links Article Talk English Read View source View history Tools Tools move to sidebar hide Actions Read View source View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Method of notation of very large integers In mathematics , Knuth's up-arrow notation is a method of notation for very large integers , introduced by Donald Knuth in 1976.

[ 1 ] In his 1947 paper, [ 2 ] R. L. Goodstein introduced the specific sequence of operations that are now called hyperoperations . Goodstein also suggested the Greek names tetration , pentation , etc., for the extended operations beyond exponentiation . The sequence starts with a unary operation (the successor function with n = 0), and continues with the binary operations of addition ( n = 1), multiplication ( n = 2), exponentiation ( n = 3), tetration ( n = 4), pentation ( n = 5), etc.

Various notations have been used to represent hyperoperations. One such notation is H n ( a , b ) {\displaystyle H_{n}(a,b)} .
Knuth's up-arrow notation ↑ ↑ {\displaystyle \uparrow } is another. 
For example: the single arrow ↑ ↑ {\displaystyle \uparrow } represents exponentiation (iterated multiplication) 2 ↑ ↑ 4 = H 3 ( 2 , 4 ) = 2 × × ( 2 × × ( 2 × × 2 ) ) = 2 4 = 16 {\displaystyle 2\uparrow 4=H_{3}(2,4)=2\times (2\times (2\times 2))=2^{4}=16} the double arrow ↑ ↑ ↑ ↑ {\displaystyle \uparrow \uparrow } represents tetration (iterated exponentiation) 2 ↑ ↑ ↑ ↑ 4 = H 4 ( 2 , 4 ) = 2 ↑ ↑ ( 2 ↑ ↑ ( 2 ↑ ↑ 2 ) ) = 2 2 2 2 = 2 16 = 65 , 536 {\displaystyle 2\uparrow \uparrow 4=H_{4}(2,4)=2\uparrow (2\uparrow (2\uparrow 2))=2^{2^{2^{2}}}=2^{16}=65,536} the triple arrow ↑ ↑ ↑ ↑ ↑ ↑ {\displaystyle \uparrow \uparrow \uparrow } represents pentation (iterated tetration) 2 ↑ ↑ ↑ ↑ ↑ ↑ 4 = H 5 ( 2 , 4 ) = 2 ↑ ↑ ↑ ↑ ( 2 ↑ ↑ ↑ ↑ ( 2 ↑ ↑ ↑ ↑ 2 ) ) = 2 ↑ ↑ ↑ ↑ ( 2 ↑ ↑ ↑ ↑ ( 2 ↑ ↑ 2 ) ) = 2 ↑ ↑ ↑ ↑ ( 2 ↑ ↑ ↑ ↑ 4 ) = 2 ↑ ↑ ( 2 ↑ ↑ ( 2 ↑ ↑ ⋯ ⋯ ) ) ⏟ ⏟ = 2 2 ⋯ ⋯ 2 ⏟ ⏟ 2 ↑ ↑ ↑ ↑ 4 copies of 2 65,536 2s {\displaystyle {\begin{aligned}2\uparrow \uparrow \uparrow 4&=H_{5}(2,4)\\&=2\uparrow \uparrow (2\uparrow \uparrow (2\uparrow \uparrow 2))\\&=2\uparrow \uparrow (2\uparrow \uparrow (2\uparrow 2))\\&=2\uparrow \uparrow (2\uparrow \uparrow 4)\\&=\underbrace {2\uparrow (2\uparrow (2\uparrow \cdots ))} \;=\;\underbrace {\;2^{2^{\cdots ^{2}}}} \\&\;\;\;\;\;2\uparrow \uparrow 4{\text{ copies of }}2\;\;\;\;\;{\text{65,536 2s}}\\\end{aligned}}} The general definition of the up-arrow notation is as follows (for a ≥ ≥ 0 , n ≥ ≥ 1 , b ≥ ≥ 0 {\displaystyle a\geq 0,n\geq 1,b\geq 0} ): a ↑ ↑ n b = H n + 2 ( a , b ) = a [ n + 2 ] b .

{\displaystyle a\uparrow ^{n}b=H_{n+2}(a,b)=a[n+2]b.} Here, ↑ ↑ n {\displaystyle \uparrow ^{n}} stands for n arrows, so for example 2 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ 3 = 2 ↑ ↑ 4 3.

{\displaystyle 2\uparrow \uparrow \uparrow \uparrow 3=2\uparrow ^{4}3.} The square brackets are another notation  for hyperoperations.

Introduction The hyperoperations naturally extend the arithmetic operations of addition and multiplication as follows.

Addition by a natural number is defined as iterated incrementation: H 1 ( a , b ) = a + b = a + 1 + 1 + ⋯ ⋯ + 1 ⏟ ⏟ b copies of 1 {\displaystyle {\begin{matrix}H_{1}(a,b)=a+b=&a+\underbrace {1+1+\dots +1} \\&b{\mbox{ copies of }}1\end{matrix}}} Multiplication by a natural number is defined as iterated addition : H 2 ( a , b ) = a × × b = a + a + ⋯ ⋯ + a ⏟ ⏟ b copies of a {\displaystyle {\begin{matrix}H_{2}(a,b)=a\times b=&\underbrace {a+a+\dots +a} \\&b{\mbox{ copies of }}a\end{matrix}}} For example, 4 × × 3 = 4 + 4 + 4 ⏟ ⏟ = 12 3 copies of 4 {\displaystyle {\begin{matrix}4\times 3&=&\underbrace {4+4+4} &=&12\\&&3{\mbox{ copies of }}4\end{matrix}}} Exponentiation for a natural power b {\displaystyle b} is defined as iterated multiplication, which Knuth denoted by a single up-arrow: a ↑ ↑ b = H 3 ( a , b ) = a b = a × × a × × ⋯ ⋯ × × a ⏟ ⏟ b copies of a {\displaystyle {\begin{matrix}a\uparrow b=H_{3}(a,b)=a^{b}=&\underbrace {a\times a\times \dots \times a} \\&b{\mbox{ copies of }}a\end{matrix}}} For example, 4 ↑ ↑ 3 = 4 3 = 4 × × 4 × × 4 ⏟ ⏟ = 64 3 copies of 4 {\displaystyle {\begin{matrix}4\uparrow 3=4^{3}=&\underbrace {4\times 4\times 4} &=&64\\&3{\mbox{ copies of }}4\end{matrix}}} Tetration is defined as iterated exponentiation, which Knuth denoted by a “double arrow”: a ↑ ↑ ↑ ↑ b = H 4 ( a , b ) = a a .

.

.

a ⏟ ⏟ = a ↑ ↑ ( a ↑ ↑ ( ⋯ ⋯ ↑ ↑ a ) ) ⏟ ⏟ b copies of a b copies of a {\displaystyle {\begin{matrix}a\uparrow \uparrow b=H_{4}(a,b)=&\underbrace {a^{a^{{}^{.\,^{.\,^{.\,^{a}}}}}}} &=&\underbrace {a\uparrow (a\uparrow (\cdots \uparrow a))} \\&b{\mbox{ copies of }}a&&b{\mbox{ copies of }}a\end{matrix}}} For example, 4 ↑ ↑ ↑ ↑ 3 = 4 4 4 ⏟ ⏟ = 4 ↑ ↑ ( 4 ↑ ↑ 4 ) ⏟ ⏟ = 4 256 3 copies of 4 3 copies of 4 {\displaystyle {\begin{matrix}4\uparrow \uparrow 3=&\underbrace {4^{4^{4}}} &=&\underbrace {4\uparrow (4\uparrow 4)} &=&4^{256}&&\\&3{\mbox{ copies of }}4&&3{\mbox{ copies of }}4\end{matrix}}} Expressions are evaluated from right to left, as the operators are defined to be right-associative .

According to this definition, 3 ↑ ↑ ↑ ↑ 2 = 3 3 = 27 {\displaystyle 3\uparrow \uparrow 2=3^{3}=27} 3 ↑ ↑ ↑ ↑ 3 = 3 3 3 = 3 27 = 7 , 625 , 597 , 484 , 987 {\displaystyle 3\uparrow \uparrow 3=3^{3^{3}}=3^{27}=7,625,597,484,987} 3 ↑ ↑ ↑ ↑ 4 = 3 3 3 3 = 3 3 27 = 3 7625597484987 {\displaystyle 3\uparrow \uparrow 4=3^{3^{3^{3}}}=3^{3^{27}}=3^{7625597484987}} 3 ↑ ↑ ↑ ↑ 5 = 3 3 3 3 3 = 3 3 3 27 = 3 3 7625597484987 {\displaystyle 3\uparrow \uparrow 5=3^{3^{3^{3^{3}}}}=3^{3^{3^{27}}}=3^{3^{7625597484987}}} etc.

This already leads to some fairly large numbers, but the hyperoperator sequence does not stop here.

Pentation , defined as iterated tetration, is represented by the “triple arrow”: a ↑ ↑ ↑ ↑ ↑ ↑ b = H 5 ( a , b ) = a ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ ( ⋯ ⋯ ↑ ↑ ↑ ↑ a ) ) ⏟ ⏟ b copies of a {\displaystyle {\begin{matrix}a\uparrow \uparrow \uparrow b=H_{5}(a,b)=&\underbrace {a_{}\uparrow \uparrow (a\uparrow \uparrow (\cdots \uparrow \uparrow a))} \\&b{\mbox{ copies of }}a\end{matrix}}} Hexation , defined as iterated pentation, is represented by the “quadruple arrow”: a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b = H 6 ( a , b ) = a ↑ ↑ ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ ↑ ↑ ( ⋯ ⋯ ↑ ↑ ↑ ↑ ↑ ↑ a ) ) ⏟ ⏟ b copies of a {\displaystyle {\begin{matrix}a\uparrow \uparrow \uparrow \uparrow b=H_{6}(a,b)=&\underbrace {a_{}\uparrow \uparrow \uparrow (a\uparrow \uparrow \uparrow (\cdots \uparrow \uparrow \uparrow a))} \\&b{\mbox{ copies of }}a\end{matrix}}} and so on. The general rule is that an n {\displaystyle n} -arrow operator expands into a right-associative series of ( n − − 1 {\displaystyle n-1} )-arrow operators. Symbolically, a ↑ ↑ ↑ ↑ ⋯ ⋯ ↑ ↑ ⏟ ⏟ n b = a ↑ ↑ ⋯ ⋯ ↑ ↑ ⏟ ⏟ n − − 1 ( a ↑ ↑ ⋯ ⋯ ↑ ↑ ⏟ ⏟ n − − 1 ( ⋯ ⋯ ↑ ↑ ⋯ ⋯ ↑ ↑ ⏟ ⏟ n − − 1 a ) ) ⏟ ⏟ b copies of a {\displaystyle {\begin{matrix}a\ \underbrace {\uparrow _{}\uparrow \!\!\cdots \!\!\uparrow } _{n}\ b=\underbrace {a\ \underbrace {\uparrow \!\!\cdots \!\!\uparrow } _{n-1}\ (a\ \underbrace {\uparrow _{}\!\!\cdots \!\!\uparrow } _{n-1}\ (\cdots \ \underbrace {\uparrow _{}\!\!\cdots \!\!\uparrow } _{n-1}\ a))} _{b{\text{ copies of }}a}\end{matrix}}} Examples: 3 ↑ ↑ ↑ ↑ ↑ ↑ 2 = 3 ↑ ↑ ↑ ↑ 3 = 3 3 3 = 3 27 = 7 , 625 , 597 , 484 , 987 {\displaystyle 3\uparrow \uparrow \uparrow 2=3\uparrow \uparrow 3=3^{3^{3}}=3^{27}=7,625,597,484,987} 3 ↑ ↑ ↑ ↑ ↑ ↑ 3 = 3 ↑ ↑ ↑ ↑ ( 3 ↑ ↑ ↑ ↑ 3 ) = 3 ↑ ↑ ↑ ↑ ( 3 ↑ ↑ 3 ↑ ↑ 3 ) = 3 ↑ ↑ 3 ↑ ↑ ⋯ ⋯ ↑ ↑ 3 ⏟ ⏟ 3 ↑ ↑ 3 ↑ ↑ 3 copies of 3 = 3 ↑ ↑ 3 ↑ ↑ ⋯ ⋯ ↑ ↑ 3 ⏟ ⏟ 7,625,597,484,987 copies of 3 = 3 3 3 3 ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ 3 ⏟ ⏟ 7,625,597,484,987 copies of 3 {\displaystyle {\begin{aligned}3\uparrow \uparrow \uparrow 3&=3\uparrow \uparrow (3\uparrow \uparrow 3)\\&=3\uparrow \uparrow (3\uparrow 3\uparrow 3)\\&={\begin{matrix}\underbrace {3\uparrow 3\uparrow \cdots \uparrow 3} \\3\uparrow 3\uparrow 3{\mbox{ copies of }}3\end{matrix}}\\&={\begin{matrix}\underbrace {3\uparrow 3\uparrow \cdots \uparrow 3} \\{\mbox{7,625,597,484,987 copies of 3}}\end{matrix}}\\&={\begin{matrix}\underbrace {3^{3^{3^{3^{\cdot ^{\cdot ^{\cdot ^{\cdot ^{3}}}}}}}}} \\{\mbox{7,625,597,484,987 copies of 3}}\end{matrix}}\end{aligned}}} Notation In expressions such as a b {\displaystyle a^{b}} , the notation for exponentiation is usually to write the exponent b {\displaystyle b} as a superscript to the base number a {\displaystyle a} . But many environments — such as programming languages and plain-text e-mail — do not support superscript typesetting. People have adopted the linear notation a ↑ ↑ b {\displaystyle a\uparrow b} for such environments; the up-arrow suggests 'raising to the power of'. If the character set does not contain an up arrow, the caret (^) is used instead.

The superscript notation a b {\displaystyle a^{b}} doesn't lend itself well to generalization, which explains why Knuth chose to work from the inline notation a ↑ ↑ b {\displaystyle a\uparrow b} instead.

a ↑ ↑ n b {\displaystyle a\uparrow ^{n}b} is a shorter alternative notation for n uparrows. Thus a ↑ ↑ 4 b = a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle a\uparrow ^{4}b=a\uparrow \uparrow \uparrow \uparrow b} .

Writing out up-arrow notation in terms of powers Attempting to write a ↑ ↑ ↑ ↑ b {\displaystyle a\uparrow \uparrow b} using the familiar superscript notation gives a power tower .

For example: a ↑ ↑ ↑ ↑ 4 = a ↑ ↑ ( a ↑ ↑ ( a ↑ ↑ a ) ) = a a a a {\displaystyle a\uparrow \uparrow 4=a\uparrow (a\uparrow (a\uparrow a))=a^{a^{a^{a}}}} If b {\displaystyle b} is a variable (or is too large), the power tower might be written using dots and a note indicating the height of the tower.

a ↑ ↑ ↑ ↑ b = a a .

.

.

a ⏟ ⏟ b {\displaystyle a\uparrow \uparrow b={}\underbrace {a^{a^{.^{.^{.{a}}}}}} _{b}} Continuing with this notation, a ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle a\uparrow \uparrow \uparrow b} could be written with a stack of such power towers, each describing the size of the one above it.

a ↑ ↑ ↑ ↑ ↑ ↑ 4 = a ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ a ) ) = a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ a {\displaystyle a\uparrow \uparrow \uparrow 4=a\uparrow \uparrow (a\uparrow \uparrow (a\uparrow \uparrow a))=\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{a}}}} Again, if b {\displaystyle b} is a variable or is too large, the stack might be written using dots and a note indicating its height.

a ↑ ↑ ↑ ↑ ↑ ↑ b = a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } b {\displaystyle a\uparrow \uparrow \uparrow b=\left.\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}b} Furthermore, a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle a\uparrow \uparrow \uparrow \uparrow b} might be written using several columns of such stacks of power towers, each column describing the number of power towers in the stack to its left: a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ 4 = a ↑ ↑ ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ ↑ ↑ ( a ↑ ↑ ↑ ↑ ↑ ↑ a ) ) = a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } a {\displaystyle a\uparrow \uparrow \uparrow \uparrow 4=a\uparrow \uparrow \uparrow (a\uparrow \uparrow \uparrow (a\uparrow \uparrow \uparrow a))=\left.\left.\left.\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}a} And more generally: a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b = a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } a a .

.

.

a ⏟ ⏟ a a .

.

.

a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } ⋯ ⋯ } a ⏟ ⏟ b {\displaystyle a\uparrow \uparrow \uparrow \uparrow b=\underbrace {\left.\left.\left.\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {a^{a^{.^{.^{.{a}}}}}} _{\underbrace {\vdots } _{a}}}\right\}\cdots \right\}a} _{b}} This might be carried out indefinitely to represent a ↑ ↑ n b {\displaystyle a\uparrow ^{n}b} as iterated exponentiation of iterated exponentiation for any a {\displaystyle a} , n {\displaystyle n} , and b {\displaystyle b} (although it clearly becomes rather cumbersome).

Using tetration The Rudy Rucker notation b a {\displaystyle ^{b}a} for tetration allows us to make these diagrams slightly simpler while still employing a geometric representation (we could call these tetration towers ).

a ↑ ↑ ↑ ↑ b = b a {\displaystyle a\uparrow \uparrow b={}^{b}a} a ↑ ↑ ↑ ↑ ↑ ↑ b = a .

.

.

a a ⏟ ⏟ b {\displaystyle a\uparrow \uparrow \uparrow b=\underbrace {^{^{^{^{^{a}.}.}.}a}a} _{b}} a ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b = a .

.

.

a a ⏟ ⏟ a .

.

.

a a ⏟ ⏟ ⋮ ⋮ ⏟ ⏟ a } b {\displaystyle a\uparrow \uparrow \uparrow \uparrow b=\left.\underbrace {^{^{^{^{^{a}.}.}.}a}a} _{\underbrace {^{^{^{^{^{a}.}.}.}a}a} _{\underbrace {\vdots } _{a}}}\right\}b} Finally, as an example, the fourth Ackermann number 4 ↑ ↑ 4 4 {\displaystyle 4\uparrow ^{4}4} could be represented as: 4 .

.

.

4 4 ⏟ ⏟ 4 .

.

.

4 4 ⏟ ⏟ 4 .

.

.

4 4 ⏟ ⏟ 4 = 4 .

.

.

4 4 ⏟ ⏟ 4 .

.

.

4 4 ⏟ ⏟ 4 4 4 4 {\displaystyle \underbrace {^{^{^{^{^{4}.}.}.}4}4} _{\underbrace {^{^{^{^{^{4}.}.}.}4}4} _{\underbrace {^{^{^{^{^{4}.}.}.}4}4} _{4}}}=\underbrace {^{^{^{^{^{4}.}.}.}4}4} _{\underbrace {^{^{^{^{^{4}.}.}.}4}4} _{^{^{^{4}4}4}4}}} Generalizations Some numbers are so large that multiple arrows of Knuth's up-arrow notation become too cumbersome; then an n -arrow operator ↑ ↑ n {\displaystyle \uparrow ^{n}} is useful (and also for descriptions with a variable number of arrows), or equivalently, hyper operators .

Some numbers are so large that even that notation is not sufficient. The Conway chained arrow notation can then be used: a chain of three elements is equivalent with the other notations, but a chain of four or more is even more powerful.

a ↑ ↑ n b = a [ n + 2 ] b = a → → b → → n (Knuth) (hyperoperation) (Conway) {\displaystyle {\begin{matrix}a\uparrow ^{n}b&=&a[n+2]b&=&a\to b\to n\\{\text{(Knuth)}}&&{\text{(hyperoperation)}}&&{\text{(Conway)}}\end{matrix}}} 6 ↑ ↑ ↑ ↑ 4 = 6 6 .

.

.

6 ⏟ ⏟ 4 {\displaystyle 6\uparrow \uparrow 4=\underbrace {6^{6^{.^{.^{.^{6}}}}}} _{4}} , Since 6 ↑ ↑ ↑ ↑ 4 = 6 6 6 6 = 6 6 46 , 656 {\displaystyle 6\uparrow \uparrow 4=6^{6^{6^{6}}}=6^{6^{46,656}}} , Thus the result comes out with 6 6 .

.

.

6 ⏟ ⏟ 4 {\displaystyle \underbrace {6^{6^{.^{.^{.^{6}}}}}} _{4}} 10 ↑ ↑ ( 3 × × 10 ↑ ↑ ( 3 × × 10 ↑ ↑ 15 ) + 3 ) = 100000 … … 000 ⏟ ⏟ 300000 … … 003 ⏟ ⏟ 300000 … … 000 ⏟ ⏟ 15 {\displaystyle 10\uparrow (3\times 10\uparrow (3\times 10\uparrow 15)+3)=\underbrace {100000\ldots 000} _{\underbrace {300000\ldots 003} _{\underbrace {300000\ldots 000} _{15}}}} or 10 3 × × 10 3 × × 10 15 + 3 {\displaystyle 10^{3\times 10^{3\times 10^{15}}+3}} Even faster-growing functions can be categorized using an ordinal analysis called the fast-growing hierarchy . The fast-growing hierarchy uses successive function iteration and diagonalization to systematically create faster-growing functions from some base function f ( x ) {\displaystyle f(x)} . For the standard fast-growing hierarchy using f 0 ( x ) = x + 1 {\displaystyle f_{0}(x)=x+1} , f 2 ( x ) {\displaystyle f_{2}(x)} already exhibits exponential growth, f 3 ( x ) {\displaystyle f_{3}(x)} is comparable to tetrational growth and is upper-bounded by a function involving the first four hyperoperators;. Then, f ω ω ( x ) {\displaystyle f_{\omega }(x)} is comparable to the Ackermann function , f ω ω + 1 ( x ) {\displaystyle f_{\omega +1}(x)} is already beyond the reach of indexed arrows but can be used to approximate Graham's number , and f ω ω 2 ( x ) {\displaystyle f_{\omega ^{2}}(x)} is comparable to arbitrarily-long Conway chained arrow notation.

These functions are all computable. Even faster computable functions, such as the Goodstein sequence and the TREE sequence require the usage of large ordinals, may occur in certain combinatorical and proof-theoretic contexts. There exist functions which grow uncomputably fast, such as the Busy Beaver , whose very nature will be completely out of reach from any up-arrow, or even any ordinal-based analysis.

Definition Without reference to hyperoperation the up-arrow operators can be formally defined by a ↑ ↑ n b = { a b , if n = 1 ; 1 , if n > 1 and b = 0 ; a ↑ ↑ n − − 1 ( a ↑ ↑ n ( b − − 1 ) ) , otherwise {\displaystyle a\uparrow ^{n}b={\begin{cases}a^{b},&{\text{if }}n=1;\\1,&{\text{if }}n>1{\text{ and }}b=0;\\a\uparrow ^{n-1}(a\uparrow ^{n}(b-1)),&{\text{otherwise }}\end{cases}}} for all integers a , b , n {\displaystyle a,b,n} with a ≥ ≥ 0 , n ≥ ≥ 1 , b ≥ ≥ 0 {\displaystyle a\geq 0,n\geq 1,b\geq 0} .

[ nb 1 ] This definition uses exponentiation ( a ↑ ↑ 1 b = a ↑ ↑ b = a b ) {\displaystyle (a\uparrow ^{1}b=a\uparrow b=a^{b})} as the base case, and tetration ( a ↑ ↑ 2 b = a ↑ ↑ ↑ ↑ b ) {\displaystyle (a\uparrow ^{2}b=a\uparrow \uparrow b)} as repeated exponentiation.  This is equivalent to the hyperoperation sequence except it omits the three more basic operations of succession , addition and multiplication .

One can alternatively choose multiplication ( a ↑ ↑ 0 b = a × × b ) {\displaystyle (a\uparrow ^{0}b=a\times b)} as the base case and iterate from there. Then exponentiation becomes repeated multiplication. The formal definition would be a ↑ ↑ n b = { a × × b , if n = 0 ; 1 , if n > 0 and b = 0 ; a ↑ ↑ n − − 1 ( a ↑ ↑ n ( b − − 1 ) ) , otherwise {\displaystyle a\uparrow ^{n}b={\begin{cases}a\times b,&{\text{if }}n=0;\\1,&{\text{if }}n>0{\text{ and }}b=0;\\a\uparrow ^{n-1}(a\uparrow ^{n}(b-1)),&{\text{otherwise }}\end{cases}}} for all integers a , b , n {\displaystyle a,b,n} with a ≥ ≥ 0 , n ≥ ≥ 0 , b ≥ ≥ 0 {\displaystyle a\geq 0,n\geq 0,b\geq 0} .

Note, however, that Knuth did not define the "nil-arrow" ( ↑ ↑ 0 {\displaystyle \uparrow ^{0}} ). One could extend the notation to negative indices (n ≥ -2) in such a way as to agree with the entire hyperoperation sequence, except for the lag in the indexing: H n ( a , b ) = a [ n ] b = a ↑ ↑ n − − 2 b for n ≥ ≥ 0.

{\displaystyle H_{n}(a,b)=a[n]b=a\uparrow ^{n-2}b{\text{ for }}n\geq 0.} The up-arrow operation is a right-associative operation , that is, a ↑ ↑ b ↑ ↑ c {\displaystyle a\uparrow b\uparrow c} is understood to be a ↑ ↑ ( b ↑ ↑ c ) {\displaystyle a\uparrow (b\uparrow c)} , instead of ( a ↑ ↑ b ) ↑ ↑ c {\displaystyle (a\uparrow b)\uparrow c} . If ambiguity is not an issue parentheses are sometimes dropped.

Tables of values Computing 0↑ n b Computing 0 ↑ ↑ n b = H n + 2 ( 0 , b ) = 0 [ n + 2 ] b {\displaystyle 0\uparrow ^{n}b=H_{n+2}(0,b)=0[n+2]b} results in 0, when n = 0 [ nb 2 ] 1, when n = 1 and b = 0 [ nb 1 ] [ nb 3 ] 0, when n = 1 and b > 0 [ nb 1 ] [ nb 3 ] 1, when n > 1 and b is even (including 0) 0, when n > 1 and b is odd Computing 2↑ n b Computing 2 ↑ ↑ n b {\displaystyle 2\uparrow ^{n}b} can be restated in terms of an infinite table. We place the numbers 2 b {\displaystyle 2^{b}} in the top row, and fill the left column with values 2. To determine a number in the table, take the number immediately to the left, then look up the required number in the previous row, at the position given by the number just taken.

Values of 2 ↑ ↑ n b = {\displaystyle 2\uparrow ^{n}b={}} H n + 2 ( 2 , b ) = {\displaystyle H_{n+2}(2,b)={}} 2 [ n + 2 ] b = {\displaystyle 2[n+2]b={}} 2 → b → n b ⁿ 1 2 3 4 5 6 formula 1 2 4 8 16 32 64 2 b {\displaystyle 2^{b}} 2 2 4 16 65,536 2,003,...,156,736 212,003,...,428,736 2 ↑ ↑ ↑ ↑ b {\displaystyle 2\uparrow \uparrow b} 3 2 4 65,536 24,636,...,948,736 1,300,...,948,736 320,146,...,948,736 2 ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 2\uparrow \uparrow \uparrow b} 4 2 4 24,636,...,948,736 68,225,...,948,736 167,167,...,948,736 3,449,...,948,736 2 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 2\uparrow \uparrow \uparrow \uparrow b} The table is the same as that of the Ackermann function , except for a shift in n {\displaystyle n} and b {\displaystyle b} , and an addition of 3 to all values.

Computing 3 ↑ n b We place the numbers 3 b {\displaystyle 3^{b}} in the top row, and fill the left column with values 3. To determine a number in the table, take the number immediately to the left, then look up the required number in the previous row, at the position given by the number just taken.

Values of 3 ↑ ↑ n b = {\displaystyle 3\uparrow ^{n}b={}} H n + 2 ( 3 , b ) = {\displaystyle H_{n+2}(3,b)={}} 3 [ n + 2 ] b = {\displaystyle 3[n+2]b={}} 3 → b → n b ⁿ 1 2 3 4 5 formula 1 3 9 27 81 243 3 b {\displaystyle 3^{b}} 2 3 27 7,625,597,484,987 12,580,...,739,387 338,605,...,355,387 3 ↑ ↑ ↑ ↑ b {\displaystyle 3\uparrow \uparrow b} 3 3 7,625,597,484,987 1,945,...,195,387 93,652,...,195,387 4,854,...,195,387 3 ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 3\uparrow \uparrow \uparrow b} 4 3 1,945,...,195,387 834,215,...,195,387 25,653,...,195,387 17,124,...,195,387 3 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 3\uparrow \uparrow \uparrow \uparrow b} Computing 4  ↑ n b We place the numbers 4 b {\displaystyle 4^{b}} in the top row, and fill the left column with values 4. To determine a number in the table, take the number immediately to the left, then look up the required number in the previous row, at the position given by the number just taken.

Values of 4 ↑ ↑ n b = {\displaystyle 4\uparrow ^{n}b={}} H n + 2 ( 4 , b ) = {\displaystyle H_{n+2}(4,b)={}} 4 [ n + 2 ] b = {\displaystyle 4[n+2]b={}} 4 → b → n b ⁿ 1 2 3 4 5 formula 1 1 1 1 1 1 4 b {\displaystyle 4^{b}} 2 1 4 19,728 603,122,606,263,029,537,... << 19,692 >> ...,149,530,140,391,357,847 10 10 19727 digits 4 ↑ ↑ ↑ ↑ b {\displaystyle 4\uparrow \uparrow b} 3 1 12 3,638,334,640,024 600,225,356,799,454,734,... << 3,638,334,639,988 >> ...,581,273,077,839,447,635 10 10 3638334640023 digits 4 ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 4\uparrow \uparrow \uparrow b} 4 2 155 807,230,472,602,822,537,... << 118 >> ...,481,244,990,261,351,117 10 10 153 digits 10 10 10 153 digits 4 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 4\uparrow \uparrow \uparrow \uparrow b} Computing 10 ↑ n b We place the numbers 10 b {\displaystyle 10^{b}} in the top row, and fill the left column with values 10. To determine a number in the table, take the number immediately to the left, then look up the required number in the previous row, at the position given by the number just taken.

Values of 10 ↑ ↑ n b = {\displaystyle 10\uparrow ^{n}b={}} H n + 2 ( 10 , b ) = {\displaystyle H_{n+2}(10,b)={}} 10 [ n + 2 ] b = {\displaystyle 10[n+2]b={}} 10 → b → n b ⁿ 1 2 3 4 5 formula 1 10 100 1,000 10,000 100,000 10 b {\displaystyle 10^{b}} 2 10 10,000,000,000 10 10 , 000 , 000 , 000 {\displaystyle 10^{10,000,000,000}} 10 10 10 , 000 , 000 , 000 {\displaystyle 10^{10^{10,000,000,000}}} 10 10 10 10 , 000 , 000 , 000 {\displaystyle 10^{10^{10^{10,000,000,000}}}} 10 ↑ ↑ ↑ ↑ b {\displaystyle 10\uparrow \uparrow b} 3 10 10 10 .

.

.

10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\10{\mbox{ copies of }}10\end{matrix}}} 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\10{\mbox{ copies of }}10\end{matrix}}} 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\10{\mbox{ copies of }}10\end{matrix}}} 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 10 .

.

.

10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\\underbrace {10_{}^{10^{{}^{.\,^{.\,^{.\,^{10}}}}}}} \\10{\mbox{ copies of }}10\end{matrix}}} 10 ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 10\uparrow \uparrow \uparrow b} 4 10 10 .

.

.

10 10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\10{\mbox{ copies of }}10\end{matrix}}} 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\10{\mbox{ copies of }}10\end{matrix}}} 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\10{\mbox{ copies of }}10\end{matrix}}} 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 .

.

.

10 10 ⏟ ⏟ 10 copies of 10 {\displaystyle {\begin{matrix}\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\\underbrace {^{^{^{^{^{10}.}.}.}10}10} \\10{\mbox{ copies of }}10\end{matrix}}} 10 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ b {\displaystyle 10\uparrow \uparrow \uparrow \uparrow b} For 2 ≤ b ≤ 9 the numerical order of the numbers 10 ↑ ↑ n b {\displaystyle 10\uparrow ^{n}b} is the lexicographical order with n as the most significant number, so for the numbers of these 8 columns the numerical order is simply line-by-line. The same applies for the numbers in the 97 columns with 3 ≤ b ≤ 99, and if we start from n = 1 even for 3 ≤ b ≤ 9,999,999,999.

See also Primitive recursion Hyperoperation Busy beaver Cutler's bar notation Tetration Pentation Ackermann function Graham's number Steinhaus–Moser notation Notes ^ a b c For more details, see Powers of zero .

^ Keep in mind that Knuth did not define the operator ↑ ↑ 0 {\displaystyle \uparrow ^{0}} .

^ a b For more details, see Zero to the power of zero .

References ^ Knuth, Donald E. (1976). "Mathematics and Computer Science: Coping with Finiteness".

Science .

194 (4271): 1235– 1242.

Bibcode : 1976Sci...194.1235K .

doi : 10.1126/science.194.4271.1235 .

PMID 17797067 .

S2CID 1690489 .

^ R. L. Goodstein (Dec 1947). "Transfinite Ordinals in Recursive Number Theory".

Journal of Symbolic Logic .

12 (4): 123– 129.

doi : 10.2307/2266486 .

JSTOR 2266486 .

S2CID 1318943 .

External links Weisstein, Eric W.

"Knuth Up-Arrow Notation" .

MathWorld .

Robert Munafo, Large Numbers: Higher hyper operators v t e Hyperoperations Primary Successor (0) Addition (1) Multiplication (2) Exponentiation (3) Tetration (4) Pentation (5) Hexation (6) Inverse for left argument Predecessor (0) Subtraction (1) Division (2) Root extraction (3) Super-root (4) Inverse for right argument Predecessor (0) Subtraction (1) Division (2) Logarithm (3) Super-logarithm (4) Related articles Ackermann function Conway chained arrow notation Grzegorczyk hierarchy Knuth's up-arrow notation Steinhaus–Moser notation v t e Large numbers Examples in numerical order Hundred Thousand Ten thousand Hundred thousand Million Billion Trillion Quadrillion Quintillion Sextillion Septillion Octillion Nonillion Decillion Eddington number Googol Shannon number Googolplex Skewes's number Moser's number Graham's number TREE(3) SSCG(3) BH(3) Rayo's number Expression methods Notations Scientific notation Knuth's up-arrow notation Conway chained arrow notation Steinhaus–Moser notation Operators Hyperoperation Tetration Pentation Ackermann function Grzegorczyk hierarchy Fast-growing hierarchy Related articles (alphabetical order) Busy beaver Extended real number line Indefinite and fictitious numbers Infinitesimal Largest known prime number List of numbers Long and short scales Number systems Number names Orders of magnitude Power of two Power of three Power of 10 Sagan Unit Names History v t e Donald Knuth Publications The Art of Computer Programming " The Complexity of Songs " Computers and Typesetting Concrete Mathematics Surreal Numbers Things a Computer Scientist Rarely Talks About Selected papers series Software TeX Metafont MIXAL ( MIX MMIX ) Fonts AMS Euler Computer Modern Concrete Roman Literate programming WEB CWEB Algorithms Knuth's Algorithm X Knuth–Bendix completion algorithm Knuth–Morris–Pratt algorithm Knuth shuffle Robinson–Schensted–Knuth correspondence Trabb Pardo–Knuth algorithm Generalization of Dijkstra's algorithm Knuth's Simpath algorithm Other Dancing Links Knuth reward check Knuth Prize Knuth's up-arrow notation Man or boy test Quater-imaginary base -yllion Potrzebie system of weights and measures Retrieved from " https://en.wikipedia.org/w/index.php?title=Knuth%27s_up-arrow_notation&oldid=1292770425 " Categories : Mathematical notation Large numbers Donald Knuth 1976 introductions Hidden categories: Articles with short description Short description matches Wikidata Wikipedia semi-protected pages This page was last edited on 28 May 2025, at 18:27 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Knuth's up-arrow notation 26 languages Add topic

