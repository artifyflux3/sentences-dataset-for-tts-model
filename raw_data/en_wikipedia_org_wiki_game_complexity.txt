Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Measures of game complexity Toggle Measures of game complexity subsection 1.1 State-space complexity 1.2 Game tree size 1.3 Decision trees 1.3.1 Decision complexity 1.3.2 Game-tree complexity 1.4 Computational complexity 2 Example: tic-tac-toe (noughts and crosses) 3 Complexities of some well-known games 4 Notes 5 References 6 See also 7 External links Toggle the table of contents Game complexity 7 languages Deutsch Español فارسی 한국어 Português 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Notion in combinatorial game theory Combinatorial game theory measures game complexity in several ways: State-space complexity (the number of legal game positions from the initial position) Game tree size (total number of possible games) Decision complexity (number of leaf nodes in the smallest decision tree for initial position) Game-tree complexity (number of leaf nodes in the smallest full-width decision tree for initial position) Computational complexity (asymptotic difficulty of a game as it grows arbitrarily large) These measures involve understanding the game positions, possible outcomes, and computational complexity of various game scenarios.

Measures of game complexity [ edit ] State-space complexity [ edit ] The state-space complexity of a game is the number of legal game positions reachable from the initial position of the game.

[ 1 ] When this is too hard to calculate, an upper bound can often be computed by also counting (some) illegal positions (positions that can never arise in the course of a game).

Game tree size [ edit ] The game tree size is the total number of possible games that can be played. This is the number of leaf nodes in the game tree rooted at the game's initial position.

The game tree is typically vastly larger than the state-space because the same positions can occur in many games by making moves in a different order (for example, in a tic-tac-toe game with two X and one O on the board, this position could have been reached in two different ways depending on where the first X was placed). An upper bound for the size of the game tree can sometimes be computed by simplifying the game in a way that only increases the size of the game tree (for example, by allowing illegal moves) until it becomes tractable.

For games where the number of moves is not limited (for example by the size of the board, or by a rule about repetition of position) the game tree is generally infinite.

Decision trees [ edit ] A decision tree is a subtree of the game tree, with each position labelled "player A wins", "player B wins", or "draw" if that position can be proved to have that value (assuming best play by both sides) by examining only other positions in the graph. Terminal positions can be labelled directly—with player A to move, a position can be labelled "player A wins" if any successor position is a win for A; "player B wins" if all successor positions are wins for B; or "draw" if all successor positions are either drawn or wins for B. (With player B to move, corresponding positions are marked similarly.) The following two methods of measuring game complexity use decision trees: Decision complexity [ edit ] Decision complexity of a game is the number of leaf nodes in the smallest decision tree that establishes the value of the initial position.

Game-tree complexity [ edit ] Game-tree complexity of a game is the number of leaf nodes in the smallest full-width decision tree that establishes the value of the initial position.

[ 1 ] A full-width tree includes all nodes at each depth. This is an estimate of the number of positions one would have to evaluate in a minimax search to determine the value of the initial position.

It is hard even to estimate the game-tree complexity, but for some games an approximation can be given by G T C ≥ ≥ b d {\displaystyle GTC\geq b^{d}} , where b is the game's average branching factor and d is the number of plies in an average game.

Computational complexity [ edit ] The computational complexity of a game describes the asymptotic difficulty of a game as it grows arbitrarily large, expressed in big O notation or as membership in a complexity class . This concept doesn't apply to particular games, but rather to games that have been generalized so they can be made arbitrarily large, typically by playing them on an n -by- n board. (From the point of view of computational complexity, a game on a fixed size of board is a finite problem that can be solved in O(1), for example by a look-up table from positions to the best move in each position.) The asymptotic complexity is defined by the most efficient algorithm for solving the game (in terms of whatever computational resource one is considering). The most common complexity measure, computation time , is always lower-bounded by the logarithm of the asymptotic state-space complexity, since a solution algorithm must work for every possible state of the game. It will be upper-bounded by the complexity of any particular algorithm that works for the family of games. Similar remarks apply to the second-most commonly used complexity measure, the amount of space or computer memory used by the computation. It is not obvious that there is any lower bound on the space complexity for a typical game, because the algorithm need not store game states; however many games of interest are known to be PSPACE-hard , and it follows that their space complexity will be lower-bounded by the logarithm of the asymptotic state-space complexity as well (technically the bound is only a polynomial in this quantity; but it is usually known to be linear).

The depth-first minimax strategy will use computation time proportional to the game's tree-complexity (since it must explore the whole tree), and an amount of memory polynomial in the logarithm of the tree-complexity (since the algorithm must always store one node of the tree at each possible move-depth, and the number of nodes at the highest move-depth is precisely the tree-complexity).

Backward induction will use both memory and time proportional to the state-space complexity, as it must compute and record the correct move for each possible position.

Example: tic-tac-toe (noughts and crosses) [ edit ] For tic-tac-toe , a simple upper bound for the size of the state space is 3 9 = 19,683. (There are three states for each of the nine cells.) This count includes many illegal positions, such as a position with five crosses and no noughts, or a position in which both players have a row of three. A more careful count, removing these illegal positions, gives 5,478.

[ 2 ] [ 3 ] And when rotations and reflections of positions are considered identical, there are only 765 essentially different positions.

To bound the game tree, there are 9 possible initial moves, 8 possible responses, and so on, so that there are at most 9! or 362,880 total games. However, games may take less than 9 moves to resolve, and an exact enumeration gives 255,168 possible games. When rotations and reflections of positions are considered the same, there are only 26,830 possible games.

The computational complexity of tic-tac-toe depends on how it is generalized . A natural generalization is to m , n , k -games : played on an m by n board with winner being the first player to get k in a row. This game can be solved in DSPACE ( mn ) by searching the entire game tree. This places it in the important complexity class PSPACE ; with more work, it can be shown to be PSPACE-complete .

[ 4 ] Complexities of some well-known games [ edit ] Due to the large size of game complexities, this table gives the ceiling of their logarithm to base 10. (In other words, the number of digits). All of the following numbers should be considered with caution: seemingly minor changes to the rules of a game can change the numbers (which are often rough estimates anyway) by tremendous factors, which might easily be much greater than the numbers shown.

Game Board size (positions) State-space complexity (as log to base 10) Game-tree complexity (as log to base 10) Average game length ( plies ) Branching factor Ref Complexity class of suitable generalized game Tic-tac-toe 9 3 5 9 4 PSPACE-complete [ 5 ] Sim 15 3 8 14 3.7 PSPACE-complete [ 6 ] Pentominoes 64 12 18 10 75 [ 7 ] [ 8 ] ?, but in PSPACE Kalah [ 9 ] 14 13 18 50 [ 7 ] Generalization is unclear Connect Four 42 13 21 36 4 [ 1 ] [ 10 ] ?, but in PSPACE Domineering (8 × 8) 64 15 27 30 8 [ 7 ] ?, but in PSPACE ; in P for certain dimensions [ 11 ] Congkak 14 15 33 [ 7 ] English draughts (8x8) (checkers) 32 20 or 18 40 70 2.8 [ 1 ] [ 12 ] [ 13 ] EXPTIME-complete [ 14 ] Awari [ 15 ] 12 12 32 60 3.5 [ 1 ] Generalization is unclear Qubic 64 30 34 20 54.2 [ 1 ] PSPACE-complete [ 5 ] Double dummy bridge [ nb 1 ] (52) <17 <40 52 5.6 PSPACE-complete [ 16 ] Fanorona 45 21 46 44 11 [ 17 ] ?, but in EXPTIME Nine men's morris 24 10 50 50 10 [ 1 ] ?, but in EXPTIME Tablut 81 27 [ 18 ] International draughts (10x10) 50 30 54 90 4 [ 1 ] EXPTIME-complete [ 14 ] Chinese checkers (2 sets) 121 23 180 [ 19 ] EXPTIME -complete [ 20 ] Chinese checkers (6 sets) 121 78 600 [ 19 ] EXPTIME -complete [ 20 ] Reversi (Othello) 64 28 58 58 10 [ 1 ] PSPACE-complete [ 21 ] OnTop (2p base game) 72 88 62 31 23.77 [ 22 ] Lines of Action 64 23 64 44 29 [ 23 ] ?, but in EXPTIME Gomoku (15x15, freestyle) 225 105 70 30 210 [ 1 ] PSPACE-complete [ 5 ] Hex (11x11) 121 57 98 50 96 [ 7 ] PSPACE-complete [ 5 ] Chess 64 44 123 70 35 [ 24 ] EXPTIME-complete (without 50-move drawing rule ) [ 25 ] Bejeweled and Candy Crush (8x8) 64 <50 70 [ 26 ] NP-hard GIPF 37 25 132 90 29.3 [ 27 ] Connect6 361 172 140 30 46000 [ 28 ] PSPACE-complete [ 29 ] Backgammon 28 20 144 55 250 [ 30 ] Generalization is unclear Xiangqi 90 40 150 95 38 [ 1 ] [ 31 ] [ 32 ] ?, believed to be EXPTIME-complete Abalone 61 25 154 87 60 [ 33 ] [ 34 ] PSPACE-hard , and in EXPTIME Havannah 271 127 157 66 240 [ 7 ] [ 35 ] PSPACE-complete [ 36 ] Twixt 572 140 159 60 452 [ 37 ] Janggi 90 44 160 100 40 [ 32 ] ?, believed to be EXPTIME-complete Quoridor 81 42 162 91 60 [ 38 ] ?, but in PSPACE Carcassonne (2p base game) 72 >40 195 71 55 [ 39 ] Generalization is unclear Amazons (10x10) 100 40 212 84 374 or 299 [ 40 ] [ 41 ] [ 42 ] PSPACE-complete [ 43 ] Shogi 81 71 226 115 92 [ 31 ] [ 44 ] EXPTIME-complete [ 45 ] Thurn and Taxis (2 player) 33 66 240 56 879 [ 46 ] Go (19x19) 361 170 505 211 250 [ 1 ] [ 47 ] [ 48 ] [ 49 ] EXPTIME-complete (without the superko rule ) [ 50 ] Arimaa 64 43 402 92 17281 [ 51 ] [ 52 ] [ 53 ] ?, but in EXPTIME Stratego 92 115 535 381 21.739 [ 54 ] Infinite chess infinite infinite infinite infinite infinite [ 55 ] Un­known, but mate-in- n is decidable [ 56 ] Magic: The Gathering [ 57 ] AH-hard [ 58 ] Wordle 5 4.113 (12,972) 6 [ 59 ] NP-hard , unknown if PSPACE-complete with parametization Notes [ edit ] ^ Double dummy bridge (i.e., double dummy problems in the context of contract bridge ) is not a proper board game but has a similar game tree, and is studied in computer bridge . The bridge table can be regarded as having one slot for each player and trick to play a card in, which corresponds to board size 52. Game-tree complexity is a very weak upper bound: 13! to the power of 4 players regardless of legality. State-space complexity is for one given deal; likewise regardless of legality but with many transpositions eliminated. The last 4 plies are always forced moves with branching factor 1.

References [ edit ] ^ a b c d e f g h i j k l Victor Allis (1994).

Searching for Solutions in Games and Artificial Intelligence (PDF) (Ph.D. thesis). University of Limburg, Maastricht, The Netherlands.

ISBN 90-900748-8-0 .

^ "combinatorics - TicTacToe State Space Choose Calculation" .

Mathematics Stack Exchange . Retrieved 2020-04-08 .

^ T, Brian (October 20, 2018).

"Btsan/generate_tictactoe" .

GitHub . Retrieved 2020-04-08 .

^ Stefan Reisch (1980). "Gobang ist PSPACE-vollständig (Gobang is PSPACE-complete)".

Acta Informatica .

13 (1): 59– 66.

doi : 10.1007/bf00288536 .

S2CID 21455572 .

^ a b c d Stefan Reisch (1981). "Hex ist PSPACE-vollständig (Hex is PSPACE-complete)".

Acta Inform (15): 167– 191.

^ Slany, Wolfgang (2000). "The complexity of graph Ramsey games". In Marsland, T. Anthony; Frank, Ian (eds.).

Computers and Games, Second International Conference, CG 2000, Hamamatsu, Japan, October 26-28, 2000, Revised Papers . Lecture Notes in Computer Science. Vol. 2063. Springer. pp.

186– 203.

doi : 10.1007/3-540-45579-5_12 .

^ a b c d e f H. J. van den Herik; J. W. H. M. Uiterwijk; J. van Rijswijck (2002).

"Games solved: Now and in the future" .

Artificial Intelligence .

134 ( 1– 2): 277– 311.

doi : 10.1016/S0004-3702(01)00152-7 .

^ Orman, Hilarie K. (1996).

"Pentominoes: a first player win" (PDF) . In Nowakowski, Richard J. (ed.).

Games of No Chance: Papers from the Combinatorial Games Workshop held in Berkeley, CA, July 11–21, 1994 . Mathematical Sciences Research Institute Publications. Vol. 29. Cambridge University Press. pp.

339– 344.

ISBN 0-521-57411-0 .

MR 1427975 .

^ See van den Herik et al for rules.

^ John Tromp (2010).

"John's Connect Four Playground" .

^ Lachmann, Michael; Moore, Cristopher; Rapaport, Ivan (2002). "Who wins Domineering on rectangular boards?". In Nowakowski, Richard (ed.).

More Games of No Chance: Proceedings of the 2nd Combinatorial Games Theory Workshop held in Berkeley, CA, July 24–28, 2000 . Mathematical Sciences Research Institute Publications. Vol. 42. Cambridge University Press. pp.

307– 315.

ISBN 0-521-80832-4 .

MR 1973019 .

^ Jonathan Schaeffer; et al. (July 6, 2007).

"Checkers is Solved" .

Science .

317 (5844): 1518– 1522.

Bibcode : 2007Sci...317.1518S .

doi : 10.1126/science.1144079 .

PMID 17641166 .

S2CID 10274228 .

^ Schaeffer, Jonathan (2007).

"Game over: Black to play and draw in checkers" (PDF) .

ICGA Journal .

30 (4): 187– 197.

doi : 10.3233/ICG-2007-30402 . Archived from the original (PDF) on 2016-04-03.

^ a b J. M. Robson (1984). "N by N checkers is Exptime complete".

SIAM Journal on Computing .

13 (2): 252– 267.

doi : 10.1137/0213018 .

^ See Allis 1994 for rules ^ Bonnet, Edouard; Jamain, Florian; Saffidine, Abdallah (2013).

"On the complexity of trick-taking card games" . In Rossi, Francesca (ed.).

IJCAI 2013, Proceedings of the 23rd International Joint Conference on Artificial Intelligence, Beijing, China, August 3-9, 2013 . IJCAI/AAAI. pp.

482– 488.

^ M.P.D. Schadd; M.H.M. Winands; J.W.H.M. Uiterwijk; H.J. van den Herik; M.H.J. Bergsma (2008).

"Best Play in Fanorona leads to Draw" (PDF) .

New Mathematics and Natural Computation .

4 (3): 369– 387.

doi : 10.1142/S1793005708001124 .

^ Andrea Galassi (2018).

"An Upper Bound on the Complexity of Tablut" .

^ a b G.I. Bell (2009). "The Shortest Game of Chinese Checkers and Related Problems".

Integers .

9 .

arXiv : 0803.1245 .

Bibcode : 2008arXiv0803.1245B .

doi : 10.1515/INTEG.2009.003 .

S2CID 17141575 .

^ a b Kasai, Takumi; Adachi, Akeo; Iwata, Shigeki (1979). "Classes of pebble games and complete problems".

SIAM Journal on Computing .

8 (4): 574– 586.

doi : 10.1137/0208046 .

MR 0573848 .

Proves completeness of the generalization to arbitrary graphs.

^ Iwata, Shigeki; Kasai, Takumi (1994).

"The Othello game on an n × × n {\displaystyle n\times n} board is PSPACE-complete" .

Theoretical Computer Science .

123 (2): 329– 340.

doi : 10.1016/0304-3975(94)90131-7 .

MR 1256205 .

^ Robert Briesemeister (2009).

Analysis and Implementation of the Game OnTop (PDF) (Thesis). Maastricht University, Dept of Knowledge Engineering.

^ Mark H.M. Winands (2004).

Informed Search in Complex Games (PDF) (Ph.D. thesis). Maastricht University, Maastricht, The Netherlands.

ISBN 90-5278-429-9 .

^ The size of the state space and game tree for chess were first estimated in Claude Shannon (1950).

"Programming a Computer for Playing Chess" (PDF) .

Philosophical Magazine .

41 (314). Archived from the original (PDF) on 2010-07-06.

Shannon gave estimates of 10 43 and 10 120 respectively, smaller than the upper bound in the table,
which is detailed in Shannon number .

^ Fraenkel, Aviezri S.

; Lichtenstein, David (1981).

"Computing a perfect strategy for n × × n {\displaystyle n\times n} chess requires time exponential in n {\displaystyle n} " .

Journal of Combinatorial Theory, Series A .

31 (2): 199– 214.

doi : 10.1016/0097-3165(81)90016-9 .

MR 0629595 .

^ Gualà, Luciano; Leucci, Stefano; Natale, Emanuele (2014). "Bejeweled, Candy Crush and other match-three games are (NP-)hard".

2014 IEEE Conference on Computational Intelligence and Games, CIG 2014, Dortmund, Germany, August 26-29, 2014 . IEEE. pp.

1– 8.

arXiv : 1403.5830 .

doi : 10.1109/CIG.2014.6932866 .

^ Diederik Wentink (2001).

Analysis and Implementation of the game Gipf (PDF) (Thesis). Maastricht University.

^ Chang-Ming Xu; Ma, Z.M.; Jun-Jie Tao; Xin-He Xu (2009). "Enhancements of proof number search in connect6".

2009 Chinese Control and Decision Conference . p. 4525.

doi : 10.1109/CCDC.2009.5191963 .

ISBN 978-1-4244-2722-2 .

S2CID 20960281 .

^ Hsieh, Ming Yu; Tsai, Shi-Chun (October 1, 2007).

"On the fairness and complexity of generalized k -in-a-row games" .

Theoretical Computer Science .

385 ( 1– 3): 88– 100.

doi : 10.1016/j.tcs.2007.05.031 . Retrieved 2018-04-12 – via dl.acm.org.

^ Tesauro, Gerald (May 1, 1992).

"Practical issues in temporal difference learning" .

Machine Learning .

8 ( 3– 4): 257– 277.

doi : 10.1007/BF00992697 .

^ a b Shi-Jim Yen, Jr-Chang Chen; Tai-Ning Yang; Shun-Chin Hsu (March 2004).

"Computer Chinese Chess" (PDF) .

International Computer Games Association Journal .

27 (1): 3– 18.

doi : 10.3233/ICG-2004-27102 .

S2CID 10336286 . Archived from the original (PDF) on 2007-06-14.

^ a b Donghwi Park (2015). "Space-state complexity of Korean chess and Chinese chess".

arXiv : 1507.06401 [ math.GM ].

^ Chorus, Pascal.

"Implementing a Computer Player for Abalone Using Alpha-Beta and Monte-Carlo Search" (PDF) . Dept of Knowledge Engineering, Maastricht University . Retrieved 2012-03-29 .

^ Kopczynski, Jacob S (2014).

Pushy Computing: Complexity Theory and the Game Abalone (Thesis). Reed College.

^ Joosten, B.

"Creating a Havannah Playing Agent" (PDF) . Retrieved 2012-03-29 .

^ E. Bonnet; F. Jamain; A. Saffidine (March 25, 2014). "Havannah and TwixT are PSPACE-complete".

arXiv : 1403.6518 [ cs.CC ].

^ Kevin Moesker (2009).

Txixt: Theory, Analysis, and Implementation (PDF) (Thesis). Faculty of Humanities and Sciences of Maastricht University.

^ Lisa Glendenning (May 2005).

Mastering Quoridor (PDF) . Computer Science (B.Sc. thesis).

University of New Mexico . Archived from the original (PDF) on 2012-03-15.

^ Cathleen Heyden (2009).

Implementing a Computer Player for Carcassonne (PDF) (Thesis). Maastricht University, Dept of Knowledge Engineering.

^ The lower branching factor is for the second player.

^ Kloetzer, Julien; Iida, Hiroyuki; Bouzy, Bruno (2007).

"The Monte-Carlo approach in Amazons" (PDF) .

Computer Games Workshop, Amsterdam, the Netherlands, 15-17 June 2007 . pp.

185– 192.

^ P. P. L. M. Hensgens (2001).

"A Knowledge-Based Approach of the Game of Amazons" (PDF) . Universiteit Maastricht, Institute for Knowledge and Agent Technology.

^ R. A. Hearn (February 2, 2005). "Amazons is PSPACE-complete".

arXiv : cs.CC/0502013 .

^ Hiroyuki Iida; Makoto Sakuta; Jeff Rollason (January 2002).

"Computer shogi" .

Artificial Intelligence .

134 ( 1– 2): 121– 144.

doi : 10.1016/S0004-3702(01)00157-6 .

^ H. Adachi; H. Kamekawa; S. Iwata (1987). "Shogi on n × n board is complete in exponential time".

Trans. IEICE . J70-D: 1843– 1852.

^ F.C. Schadd (2009).

Monte-Carlo Search Techniques in the Modern Board Game Thurn and Taxis (PDF) (Thesis). Maastricht University. Archived from the original (PDF) on 2021-01-14.

^ John Tromp; Gunnar Farnebäck (2007).

"Combinatorics of Go" .

This paper derives the bounds 48<log(log( N ))<171 on the number of possible games N .

^ John Tromp (2016).

"Number of legal Go positions" .

^ "Statistics on the length of a go game" .

^ J. M. Robson (1983). "The complexity of Go".

Information Processing; Proceedings of IFIP Congress . pp.

413– 417.

^ Christ-Jan Cox (2006).

"Analysis and Implementation of the Game Arimaa" (PDF) .

^ David Jian Wu (2011).

"Move Ranking and Evaluation in the Game of Arimaa" (PDF) .

^ Brian Haskin (2006).

"A Look at the Arimaa Branching Factor" .

^ A.F.C. Arts (2010).

Competitive Play in Stratego (PDF) (Thesis). Maastricht.

^ CDA Evans and Joel David Hamkins (2014). "Transfinite game values in infinite chess".

arXiv : 1302.4377 [ math.LO ].

^ Stefan Reisch, Joel David Hamkins, and Phillipp Schlicht (2012). "The mate-in-n problem of infinite chess is decidable".

Conference on Computability in Europe : 78– 88.

arXiv : 1201.5597 .

{{ cite journal }} :  CS1 maint: multiple names: authors list ( link ) ^ Alex Churchill, Stella Biderman, and Austin Herrick (2020). "Magic: the Gathering is Turing Complete".

arXiv : 1904.09828 [ cs.AI ].

{{ cite arXiv }} :  CS1 maint: multiple names: authors list ( link ) ^ Stella Biderman (2020). "Magic: the Gathering is as Hard as Arithmetic".

arXiv : 2003.05119 [ cs.AI ].

^ Lokshtanov, Daniel; Subercaseaux, Bernardo (May 14, 2022). "Wordle is NP-hard".

arXiv : 2203.16713 [ cs.CC ].

See also [ edit ] Go and mathematics Solved game Solving chess Shannon number list of NP-complete games and puzzles list of PSPACE-complete games and puzzles External links [ edit ] David Eppstein 's Computational Complexity of Games and Puzzles v t e Game theory Glossary Game theorists Games Traditional game theory Definitions Asynchrony Bayesian regret Best response Bounded rationality Cheap talk Coalition Complete contract Complete information Complete mixing Confrontation analysis Conjectural variation Contingent cooperator Coopetition Cooperative game theory Dynamic inconsistency Escalation of commitment Farsightedness Game semantics Hierarchy of beliefs Imperfect information Incomplete information Information set Move by nature Mutual knowledge Non-cooperative game theory Non-credible threat Outcome Perfect information Perfect recall Ply Preference Rationality Sequential game Simultaneous action selection Spite Strategic complements Strategic dominance Strategic form Strategic interaction Strategic move Strategy Subgame Succinct game Topological game Tragedy of the commons Uncorrelated asymmetry Equilibrium concepts Backward induction Bayes correlated equilibrium Bayesian efficiency Bayesian game Bayesian Nash equilibrium Berge equilibrium Bertrand–Edgeworth model Coalition-proof Nash equilibrium Core Correlated equilibrium Cursed equilibrium Edgeworth price cycle Epsilon-equilibrium Gibbs equilibrium Incomplete contracts Inequity aversion Individual rationality Iterated elimination of dominated strategies Markov perfect equilibrium Mertens-stable equilibrium Nash equilibrium Open-loop model Pareto efficiency Payoff dominance Perfect Bayesian equilibrium Price of anarchy Program equilibrium Proper equilibrium Quantal response equilibrium Quasi-perfect equilibrium Rational agent Rationalizability Rationalizable strategy Satisfaction equilibrium Self-confirming equilibrium Sequential equilibrium Shapley value Strong Nash equilibrium Subgame perfect equilibrium Trembling hand equilibrium Strategies Appeasement Bid shading Cheap talk Collusion Commitment device De-escalation Deterrence Escalation Fictitious play Focal point Grim trigger Hobbesian trap Markov strategy Max-dominated strategy Mixed strategy Pure strategy Tit for tat Win–stay, lose–switch Games All-pay auction Battle of the sexes Nash bargaining game Bertrand competition Blotto game Centipede game Coordination game Cournot competition Deadlock Dictator game Trust game Diner's dilemma Dollar auction El Farol Bar problem Electronic mail game Gift-exchange game Guess 2/3 of the average Keynesian beauty contest Kuhn poker Lewis signaling game Matching pennies Obligationes Optional prisoner's dilemma Pirate game Prisoner's dilemma Public goods game Rendezvous problem Rock paper scissors Stackelberg competition Stag hunt Traveler's dilemma Ultimatum game Volunteer's dilemma War of attrition Theorems Arrow's impossibility theorem Aumann's agreement theorem Brouwer fixed-point theorem Competitive altruism Folk theorem Gibbard–Satterthwaite theorem Gibbs lemma Glicksberg's theorem Kakutani fixed-point theorem Kuhn's theorem One-shot deviation principle Prim–Read theory Rational ignorance Rational irrationality Sperner's lemma Zermelo's theorem Subfields Algorithmic game theory Behavioral game theory Behavioral strategy Compositional game theory Contract theory Drama theory Graphical game theory Heresthetic Mean-field game theory Negotiation theory Quantum game theory Social software Key people Albert W. Tucker Alvin E. Roth Amos Tversky Antoine Augustin Cournot Ariel Rubinstein David Gale David K. Levine David M. Kreps Donald B. Gillies Drew Fudenberg Eric Maskin Harold W. Kuhn Herbert Simon Herbert Scarf Hervé Moulin Jean Tirole Jean-François Mertens Jennifer Tour Chayes Ken Binmore Kenneth Arrow Leonid Hurwicz Lloyd Shapley Martin Shubik Melvin Dresher Merrill M. Flood Olga Bondareva Oskar Morgenstern Paul Milgrom Peyton Young Reinhard Selten Robert Aumann Robert Axelrod Robert B. Wilson Roger Myerson Samuel Bowles Suzanne Scotchmer Thomas Schelling William Vickrey Combinatorial game theory Core concepts Combinatorial explosion Determinacy Disjunctive sum First-player and second-player win Game complexity Game tree Impartial game Misère Partisan game Solved game Sprague–Grundy theorem Strategy-stealing argument Zugzwang Games Chess Chomp Clobber Cram Domineering Hackenbush Nim Notakto Subtract a square Sylver coinage Toads and Frogs Mathematical tools Mex Nimber On Numbers and Games Star Surreal number Winning Ways for Your Mathematical Plays Search algorithms Alpha–beta pruning Expectiminimax Minimax Monte Carlo tree search Negamax Paranoid algorithm Principal variation search Key people Claude Shannon John Conway John von Neumann Evolutionary game theory Core concepts Bishop–Cannings theorem Evolution and the Theory of Games Evolutionarily stable set Evolutionarily stable state Evolutionarily stable strategy Replicator equation Risk dominance Stochastically stable equilibrium Weak evolutionarily stable strategy Games Chicken Stag hunt Applications Cultural group selection Fisher's principle Mobbing Terminal investment hypothesis Key people John Maynard Smith Robert Axelrod Mechanism design Core concepts Algorithmic mechanism design Bayesian-optimal mechanism Incentive compatibility Market design Monotonicity Participation constraint Revelation principle Strategyproofness Vickrey–Clarke–Groves mechanism Theorems Myerson–Satterthwaite theorem Revenue equivalence Applications Digital goods auction Knapsack auction Truthful cake-cutting Other topics Bertrand paradox Chainstore paradox Computational complexity of games Helly metric Multi-agent system PPAD-complete Mathematics portal Commons WikiProject Category NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐jg8ss
Cached time: 20250812003750
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.682 seconds
Real time usage: 0.807 seconds
Preprocessor visited node count: 3735/1000000
Revision size: 37781/2097152 bytes
Post‐expand include size: 187748/2097152 bytes
Template argument size: 1944/2097152 bytes
Highest expansion depth: 12/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 222913/5000000 bytes
Lua time usage: 0.372/10.000 seconds
Lua memory usage: 5645333/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  623.206      1 -total
 58.43%  364.141      2 Template:Reflist
 16.11%  100.370     10 Template:Cite_thesis
 15.91%   99.181      1 Template:Game_theory
 15.52%   96.748      1 Template:Navbox_with_collapsible_groups
 14.31%   89.187     18 Template:Cite_journal
 10.39%   64.771      1 Template:Short_description
  8.64%   53.827     13 Template:Cite_web
  8.29%   51.642      1 Template:Sticky_header
  5.76%   35.908      6 Template:Cite_conference Saved in parser cache with key enwiki:pcache:317419:|#|:idhash:canonical and timestamp 20250812003750 and revision id 1293148023. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Game_complexity&oldid=1293148023 " Category : Combinatorial game theory Hidden categories: CS1: long volume value CS1 maint: multiple names: authors list Articles with short description Short description matches Wikidata Use mdy dates from May 2023 This page was last edited on 31 May 2025, at 00:34 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Game complexity 7 languages Add topic

