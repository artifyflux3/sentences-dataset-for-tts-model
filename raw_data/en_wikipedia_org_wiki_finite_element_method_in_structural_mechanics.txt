Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History Toggle History subsection 1.1 Element interconnection and displacement 2 Practical considerations 3 Theoretical overview of FEM-Displacement Formulation: From elements, to system, to solution 4 Interpolation or shape functions 5 Internal virtual work in a typical element Toggle Internal virtual work in a typical element subsection 5.1 Element matrices 5.2 Element virtual work in terms of system nodal displacements 6 System virtual work 7 Assembly of system matrices 8 See also 9 References Toggle the table of contents Finite element method in structural mechanics 3 languages Español Português Українська Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia The finite element method (FEM) is a powerful technique originally developed for the numerical solution of complex problems in structural mechanics , and it remains the method of choice for analyzing complex systems. In FEM, the structural system is modeled by a set of appropriate finite elements interconnected at discrete points called nodes. Elements may have physical properties such as thickness, coefficient of thermal expansion , density , Young's modulus , shear modulus and Poisson's ratio .

History [ edit ] The origin of the finite element method can be traced to the matrix analysis of structures [ 1 ] [ 2 ] where the concept of a displacement or stiffness matrix approach was introduced. Finite element concepts were developed based on engineering methods in the 1950s. The finite element method obtained its real impetus in the 1960s and 1970s by John Argyris , and co-workers; at the University of Stuttgart , by Ray W. Clough ; at the University of California, Berkeley , by Olgierd Zienkiewicz , and co-workers Ernest Hinton , Bruce Irons ; [ 3 ] at the University of Swansea , by Philippe G. Ciarlet ; at the University of Paris ; at Cornell University , by Richard Gallagher and co-workers. The original works such as those by Argyris [ 4 ] and Clough [ 5 ] became the foundation for today’s finite element structural analysis methods.

One-dimensional straight or curved elements with physical properties such as axial, bending, and torsional stiffnesses. This type of element is suitable for modeling cables, braces, trusses, beams, stiffeners, grids and frames. Straight elements usually have two nodes, one at each end, while curved elements require at least three nodes including the end-nodes. The elements are positioned at the centroidal axis of the actual members.

Two-dimensional elements that resist only in-plane forces by membrane action (plane stress , plane strain ), and plates that resist transverse loads by transverse shear and  bending action (plates and shells ). They may have a variety of shapes such as flat or curved triangles and quadrilaterals . Nodes are usually placed at the element corners, and additional nodes can be placed along the element edges or even within the element for higher accuracy. The elements are positioned at the mid-surface of the actual layer thickness.

Torus -shaped elements for axisymmetric problems such as membranes, thick plates, shells, and solids. The cross-section of the elements are similar to the previously described types: one-dimensional for thin plates and shells, and two-dimensional for solids, thick plates and shells.

Three-dimensional elements for modeling 3-D solids such as machine components, dams , embankments or soil masses. Common element shapes include tetrahedrals and hexahedrals . Nodes are placed at the vertexes and possibly on element faces or within the element.

Element interconnection and displacement [ edit ] The elements are interconnected only at the exterior nodes, and altogether they should cover the entire domain as accurately as possible. Nodes will have nodal (vector) displacements or degrees of freedom which may include translations, rotations, and for special applications, higher order derivatives of displacements. When the nodes displace, they will drag the elements along in a certain manner dictated by the element formulation. In other words, displacements of any points in the element will be interpolated from the nodal displacements, and this is the main reason for the approximate nature of the solution.

Practical considerations [ edit ] From the application point of view, it is important to model the system such that: Symmetry or anti-symmetry conditions are exploited in order to reduce the size of the model.

Displacement compatibility, including any required discontinuity, is ensured at the nodes, and preferably, along the element edges as well, particularly when adjacent elements are of different types, material or thickness. Compatibility of displacements of many nodes can usually be imposed via constraint relations.

Elements' behaviors must capture the dominant actions of the actual system, both locally and globally.

The element mesh should be sufficiently fine in order to produce acceptable accuracy. To assess accuracy, the mesh is refined until the important results shows little change. For higher accuracy, the aspect ratio of the elements should be as close to unity as possible, and smaller elements are used over the parts of higher stress gradient .

Proper support constraints are imposed with special attention paid to nodes on symmetry axes.

Large scale commercial software packages often provide facilities for generating the mesh, and the graphical display of input and output, which greatly facilitate the verification of both input data and interpretation of the results.

Theoretical overview of FEM-Displacement Formulation: From elements, to system, to solution [ edit ] While the theory of FEM can be presented in different perspectives or emphases, its development for structural analysis follows the more traditional approach via the virtual work principle or the minimum total potential energy principle . The virtual work principle approach is more general as it is applicable to both linear and non-linear material behaviors. The virtual work method is an expression of conservation of energy : for conservative systems, the work added to the system by a set of applied forces is equal to the energy stored in the system in the form of strain energy of the structure's components.

The principle of virtual displacements for the structural system expresses the mathematical identity of external and internal virtual work: External virtual work = ∫ ∫ V δ δ ϵ ϵ T σ σ d V {\displaystyle {\mbox{External virtual work}}=\int _{V}\delta {\boldsymbol {\epsilon }}^{T}{\boldsymbol {\sigma }}\,dV} 1 In other words, the summation of the work done on the system by the set of external forces is equal to the work stored as strain energy in the elements that make up the system.

The virtual internal work in the right-hand-side of the above equation may be found by summing the virtual work done on the individual elements. The latter requires that force-displacement functions be used that describe the  response for each individual element. Hence, the displacement of the structure is described by the response of individual (discrete) elements collectively. The equations are written only for the small domain of individual  elements of the structure rather than a single equation that describes the response of the system as a whole (a continuum). The latter would result in an intractable problem, hence the utility of the finite element method. As shown in the subsequent sections, Eq.( 1 ) leads to the following governing equilibrium equation for the system: R = K r + R o {\displaystyle \mathbf {R} =\mathbf {Kr} +\mathbf {R} ^{o}} 2 where R {\displaystyle \mathbf {R} } = vector of nodal forces, representing external forces applied to the system's nodes.

K {\displaystyle \mathbf {K} } = system stiffness matrix, which is the collective effect of the individual elements' stiffness matrices : k e {\displaystyle \mathbf {k} ^{e}} .

r {\displaystyle \mathbf {r} } = vector of the system's nodal displacements.

R o {\displaystyle \mathbf {R} ^{o}} = vector of equivalent nodal forces, representing all external effects other than the nodal forces which are already included in the preceding nodal force vector R . These external effects may include distributed or concentrated surface forces, body forces, thermal effects, initial stresses and strains.

Once the supports' constraints are accounted for, the nodal displacements are found by solving the system of linear equations ( 2 ), symbolically: r = K − − 1 ( R − − R o ) {\displaystyle \mathbf {r} =\mathbf {K} ^{-1}(\mathbf {R} -\mathbf {R} ^{o})} 3 Subsequently, the strains and stresses in individual elements may be found as follows: ϵ ϵ = B q {\displaystyle \mathbf {\epsilon } =\mathbf {Bq} } 4 σ σ = E ( ϵ ϵ − − ϵ ϵ o ) + σ σ o = E ( B q − − ϵ ϵ o ) + σ σ o {\displaystyle \mathbf {\sigma } =\mathbf {E} (\mathbf {\epsilon } -\mathbf {\epsilon } ^{o})+\mathbf {\sigma } ^{o}=\mathbf {E} (\mathbf {Bq} -\mathbf {\epsilon } ^{o})+\mathbf {\sigma } ^{o}} 5 where q {\displaystyle \mathbf {q} } = vector of a nodal displacements--a subset of the system displacement vector r that pertains to the elements under consideration.

B {\displaystyle \mathbf {B} } = strain-displacement matrix that transforms nodal displacements q to strains at any point in the element.

E {\displaystyle \mathbf {E} } = elasticity matrix that transforms effective strains to stresses at any point in the element.

ϵ ϵ o {\displaystyle \mathbf {\epsilon } ^{o}} = vector of initial strains in the elements.

σ σ o {\displaystyle \mathbf {\sigma } ^{o}} = vector of initial stresses in the elements.

By applying the virtual work equation ( 1 ) to the system, we can establish the element matrices B {\displaystyle \mathbf {B} } , k e {\displaystyle \mathbf {k} ^{e}} as well as the technique of assembling the system matrices R o {\displaystyle \mathbf {R} ^{o}} and K {\displaystyle \mathbf {K} } . Other matrices such as ϵ ϵ o {\displaystyle \mathbf {\epsilon } ^{o}} , σ σ o {\displaystyle \mathbf {\sigma } ^{o}} , R {\displaystyle \mathbf {R} } and E {\displaystyle \mathbf {E} } are known values and can be directly set up from data input.

Interpolation or shape functions [ edit ] Let q {\displaystyle \mathbf {q} } be the vector of nodal displacements of a typical element. The displacements at any other point of the element may be found by the use of interpolation functions as, symbolically: u = N q {\displaystyle \mathbf {u} =\mathbf {N} \mathbf {q} } 6 where u {\displaystyle \mathbf {u} } = vector of displacements at any point {x,y,z} of the element.

N {\displaystyle \mathbf {N} } = matrix of shape functions serving as interpolation functions.

Equation ( 6 ) gives rise to other quantities of great interest: Virtual displacements that are a function of virtual nodal displacements: δ δ u = N δ δ q {\displaystyle \delta \mathbf {u} =\mathbf {N} \delta \mathbf {q} } 6b Strains in the elements that result from displacements of the element's nodes: ϵ ϵ = D u = D N q {\displaystyle \mathbf {\epsilon } =\mathbf {Du} =\mathbf {DNq} } 7 where D {\displaystyle \mathbf {D} } = matrix of differential operators that convert displacements to strains using linear elasticity theory. Eq.( 7 ) shows that matrix B in ( 4 ) is B = D N {\displaystyle \mathbf {B} =\mathbf {DN} } 8 Virtual strains consistent with element's virtual nodal displacements: δ δ ϵ ϵ = B δ δ q {\displaystyle \delta {\boldsymbol {\epsilon }}=\mathbf {B} \delta \mathbf {q} } 9 Internal virtual work in a typical element [ edit ] For a typical element of volume V e {\displaystyle V^{e}} , the internal virtual work due to virtual displacements is obtained by substitution of ( 5 ) and ( 9 ) into ( 1 ): Internal virtual work = ∫ ∫ V e δ δ ϵ ϵ T σ σ d V e = δ δ q T ∫ ∫ V e B T { E ( B q − − ϵ ϵ o ) + σ σ o } d V e {\displaystyle {\mbox{Internal virtual work}}=\int _{V^{e}}\delta {\boldsymbol {\epsilon }}^{T}{\boldsymbol {\sigma }}\,dV^{e}=\delta \ \mathbf {q} ^{T}\int _{V^{e}}\mathbf {B} ^{T}{\big \{}\mathbf {E} (\mathbf {Bq} -\mathbf {\epsilon } ^{o})+\mathbf {\sigma } ^{o}{\big \}}\,dV^{e}} 10 Element matrices [ edit ] Primarily for the convenience of reference, the following matrices pertaining to a typical elements may now be defined: Element stiffness matrix K e = ∫ ∫ V e B T E B d V e {\displaystyle \mathbf {K} ^{e}=\int _{V^{e}}\mathbf {B} ^{T}\mathbf {E} \mathbf {B} \,dV^{e}} 11 Equivalent element load vector Q o e = ∫ ∫ V e − − B T ( E ϵ ϵ o − − σ σ o ) d V e {\displaystyle \mathbf {Q} ^{oe}=\int _{V^{e}}-\mathbf {B} ^{T}{\big (}\mathbf {E} \mathbf {\epsilon } ^{o}-\mathbf {\sigma } ^{o}{\big )}\,dV^{e}} 12 These matrices are usually evaluated numerically using Gaussian quadrature for numerical integration .
Their use simplifies ( 10 ) to the following: Internal virtual work = δ δ q T ( K e q + Q o e ) {\displaystyle {\mbox{Internal virtual work}}=\delta \ \mathbf {q} ^{T}{\big (}\mathbf {K} ^{e}\mathbf {q} +\mathbf {Q} ^{oe}{\big )}} 13 Element virtual work in terms of system nodal displacements [ edit ] Since the nodal displacement vector q is a subset of the system nodal displacements r (for compatibility with adjacent elements), we can replace q with r by expanding the size of the element matrices with new columns and rows of zeros: Internal virtual work = δ δ r T ( K e r + Q o e ) {\displaystyle {\mbox{Internal virtual work}}=\delta \ \mathbf {r} ^{T}\left(\mathbf {K} ^{e}\mathbf {r} +\mathbf {Q} ^{oe}\right)} 14 where, for simplicity, we use the same symbols for the element matrices, which now have expanded size as well as suitably rearranged rows and columns.

System virtual work [ edit ] Summing the internal virtual work ( 14 ) for all elements gives the right-hand-side of ( 1 ): System internal virtual work = ∑ ∑ e δ δ r T ( k e r + Q o e ) = δ δ r T ( ∑ ∑ e k e ) r + δ δ r T ∑ ∑ e Q o e {\displaystyle {\mbox{System internal virtual work}}=\sum _{e}\delta \ \mathbf {r} ^{T}\left(\mathbf {k} ^{e}\mathbf {r} +\mathbf {Q} ^{oe}\right)=\delta \ \mathbf {r} ^{T}\left(\sum _{e}\mathbf {k} ^{e}\right)\mathbf {r} +\delta \ \mathbf {r} ^{T}\sum _{e}\mathbf {Q} ^{oe}} 15 Considering now the left-hand-side of ( 1 ), the system external virtual work consists of: The work done by the nodal forces R : δ δ r T R {\displaystyle \delta \ \mathbf {r} ^{T}\mathbf {R} } 16 The work done by external forces T e {\displaystyle \mathbf {T} ^{e}} on the part S e {\displaystyle \mathbf {S} ^{e}} of the elements' edges or surfaces, and by the body forces f e {\displaystyle \mathbf {f} ^{e}} ∑ ∑ e ∫ ∫ S e δ δ u T T e d S e + ∑ ∑ e ∫ ∫ V e δ δ u T f e d V e {\displaystyle \sum _{e}\int _{S^{e}}\delta \ \mathbf {u} ^{T}\mathbf {T} ^{e}\,dS^{e}+\sum _{e}\int _{V^{e}}\delta \ \mathbf {u} ^{T}\mathbf {f} ^{e}\,dV^{e}} Substitution of ( 6b ) gives: δ δ q T ∑ ∑ e ∫ ∫ S e N T T e d S e + δ δ q T ∑ ∑ e ∫ ∫ V e N T f e d V e {\displaystyle \delta \ \mathbf {q} ^{T}\sum _{e}\int _{S^{e}}\mathbf {N} ^{T}\mathbf {T} ^{e}\,dS^{e}+\delta \ \mathbf {q} ^{T}\sum _{e}\int _{V^{e}}\mathbf {N} ^{T}\mathbf {f} ^{e}\,dV^{e}} or − − δ δ q T ∑ ∑ e ( Q t e + Q f e ) {\displaystyle -\delta \ \mathbf {q} ^{T}\sum _{e}\left(\mathbf {Q} ^{te}+\mathbf {Q} ^{fe}\right)} 17a where we have introduced additional element's matrices defined below: Q t e = − − ∫ ∫ S e N T T e d S e {\displaystyle \mathbf {Q} ^{te}=-\int _{S^{e}}\mathbf {N} ^{T}\mathbf {T} ^{e}\,dS^{e}} 18a Q f e = − − ∫ ∫ V e N T f e d V e {\displaystyle \mathbf {Q} ^{fe}=-\int _{V^{e}}\mathbf {N} ^{T}\mathbf {f} ^{e}\,dV^{e}} 18b Again, numerical integration is convenient for their evaluation. A similar replacement of q in ( 17a ) with r gives, after rearranging and expanding the vectors Q t e , Q f e {\displaystyle \mathbf {Q} ^{te},\mathbf {Q} ^{fe}} : − − δ δ r T ∑ ∑ e ( Q t e + Q f e ) {\displaystyle -\delta \ \mathbf {r} ^{T}\sum _{e}\left(\mathbf {Q} ^{te}+\mathbf {Q} ^{fe}\right)} 17b Assembly of system matrices [ edit ] Adding ( 16 ), ( 17b ) and equating the sum to ( 15 ) gives: δ δ r T R − − δ δ r T ∑ ∑ e ( Q t e + Q f e ) = δ δ r T ( ∑ ∑ e k e ) r + δ δ r T ∑ ∑ e Q o e {\displaystyle \delta \ \mathbf {r} ^{T}\mathbf {R} -\delta \ \mathbf {r} ^{T}\sum _{e}\left(\mathbf {Q} ^{te}+\mathbf {Q} ^{fe}\right)=\delta \ \mathbf {r} ^{T}\left(\sum _{e}\mathbf {k} ^{e}\right)\mathbf {r} +\delta \ \mathbf {r} ^{T}\sum _{e}\mathbf {Q} ^{oe}} Since the virtual displacements δ δ r {\displaystyle \delta \ \mathbf {r} } are arbitrary, the preceding equality reduces to: R = ( ∑ ∑ e k e ) r + ∑ ∑ e ( Q o e + Q t e + Q f e ) {\displaystyle \mathbf {R} =\left(\sum _{e}\mathbf {k} ^{e}\right)\mathbf {r} +\sum _{e}\left(\mathbf {Q} ^{oe}+\mathbf {Q} ^{te}+\mathbf {Q} ^{fe}\right)} Comparison with ( 2 ) shows that: The system stiffness matrix is obtained by summing the elements' stiffness matrices: K = ∑ ∑ e k e {\displaystyle \mathbf {K} =\sum _{e}\mathbf {k} ^{e}} The vector of equivalent nodal forces is obtained by summing the elements' load vectors: R o = ∑ ∑ e ( Q o e + Q t e + Q f e ) {\displaystyle \mathbf {R} ^{o}=\sum _{e}\left(\mathbf {Q} ^{oe}+\mathbf {Q} ^{te}+\mathbf {Q} ^{fe}\right)} In practice, the element matrices are neither expanded nor rearranged. Instead, the system stiffness matrix K {\displaystyle \mathbf {K} } is assembled by adding individual coefficients k i j e {\displaystyle {k}_{ij}^{e}} to K k l {\displaystyle {K}_{kl}} where the subscripts ij, kl mean that the element's nodal displacements q i e , q j e {\displaystyle {q}_{i}^{e},{q}_{j}^{e}} match respectively with the system's nodal displacements r k , r l {\displaystyle {r}_{k},{r}_{l}} . Similarly, R o {\displaystyle \mathbf {R} ^{o}} is assembled by adding individual coefficients Q i e {\displaystyle {Q}_{i}^{e}} to R k o {\displaystyle {R}_{k}^{o}} where q i e {\displaystyle {q}_{i}^{e}} matches r k {\displaystyle {r}_{k}} . This direct addition of k i j e {\displaystyle {k}_{ij}^{e}} into K k l {\displaystyle {K}_{kl}} gives the procedure the name Direct Stiffness Method .

See also [ edit ] Finite element method Flexibility method Interval finite element List of finite element software packages Matrix stiffness method Modal analysis using FEM Structural analysis Virtual work References [ edit ] ^ Matrix Analysis Of Framed Structures, 3rd Edition by Jr. William Weaver, James M. Gere, Springer-Verlag New York, LLC, ISBN 978-0-412-07861-3 , 1966 ^ Theory of Matrix Structural Analysis , J. S. Przemieniecki, McGraw-Hill Book Company, New York, 1968 ^ Hinton, Ernest; Irons, Bruce (July 1968). "Least squares smoothing of experimental data using finite elements".

Strain .

4 (3): 24– 27.

doi : 10.1111/j.1475-1305.1968.tb01368.x .

^ Argyris, J.H and Kelsey, S.

Energy theorems and Structural Analysis Butterworth Scientific publications, London, 1954 ^ Clough, R.W, “The Finite Element in Plane Stress Analysis.” Proceedings, 2nd ASCE Conference on Electronic Computations, Pittsburgh, Sep 1960 v t e Structural engineering History Dynamic analysis Duhamel's integral Modal analysis Static analysis Betti's theorem Castigliano's method Conjugate beam method FEM Flexibility method Macaulay's method Moment-area theorem Stiffness method Shear and moment diagram Theorem of three moments Structural elements 1-dimensional Beam I-beam Lintel Post and lintel Span Compression member Strut Tie 2-dimensional Arch Thin-shell structure Structural support Bracket Theories Euler–Bernoulli beam theory Mohr–Coulomb theory Plate theory Timoshenko–Ehrenfest beam theory Category NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐qk6mz
Cached time: 20250812051452
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.286 seconds
Real time usage: 0.428 seconds
Preprocessor visited node count: 1971/1000000
Revision size: 18512/2097152 bytes
Post‐expand include size: 30451/2097152 bytes
Template argument size: 4570/2097152 bytes
Highest expansion depth: 10/100
Expensive parser function count: 1/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 70601/5000000 bytes
Lua time usage: 0.124/10.000 seconds
Lua memory usage: 3311829/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  241.616      1 -total
 43.16%  104.270      1 Template:Reflist
 29.71%   71.783      1 Template:Structural_engineering_topics
 29.64%   71.612      2 Template:Navbox
 25.31%   61.162     21 Template:NumBlk
 25.03%   60.483      1 Template:ISBN
  9.38%   22.652      1 Template:Cite_journal
  2.94%    7.094      1 Template:Icon
  2.45%    5.928     21 Template:Trim
  1.25%    3.030     21 Template:EquationRef Saved in parser cache with key enwiki:pcache:3587096:|#|:idhash:canonical and timestamp 20250812051452 and revision id 1291276976. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Finite_element_method_in_structural_mechanics&oldid=1291276976 " Categories : Finite element method Numerical differential equations This page was last edited on 20 May 2025, at 05:39 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Finite element method in structural mechanics 3 languages Add topic

