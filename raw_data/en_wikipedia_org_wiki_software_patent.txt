Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Background 2 Early example of a software patent 3 Jurisdictions Toggle Jurisdictions subsection 3.1 Australia 3.2 Canada 3.3 China 3.4 Europe 3.4.1 Germany 3.4.2 United Kingdom 3.5 India 3.6 Japan 3.7 New Zealand 3.8 Philippines 3.9 Russian Federation 3.10 South Africa 3.11 South Korea 3.12 Thailand 3.13 United States 3.14 Indonesia 4 Purpose of patents 5 Proposals 6 Obviousness 7 Criticism Toggle Criticism subsection 7.1 Compatibility 7.2 Computer-implemented invention (CII) 7.3 Overlap with copyright 7.4 Debate 7.5 Open source software 7.6 Unisys case 7.7 Licensing 8 See also 9 References 10 External links Toggle External links subsection 10.1 Economic studies 10.2 Books 10.3 Papers and presentations Toggle the table of contents Software patent 26 languages العربية Azərbaycanca Български Català Čeština Dansk Deutsch Ελληνικά Español Français 한국어 हिन्दी Bahasa Indonesia Italiano Македонски Nederlands 日本語 Polski Русский Slovenčina Svenska Tagalog ไทย Українська 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Patent that covers a computer program Computer programs, software and patent law Topics Software patent Debate Free software List of patents Treaties TRIPS Agreement Patent Cooperation Treaty European Patent Convention Countries Canada United Kingdom United States Case law European Patent Office United Kingdom Related topics Business methods v t e Patent law Overviews Patent Patent claim History Economics Criticism Procedural concepts Application Prosecution Opposition Valuation Licensing Infringement Patentability requirements and related concepts Patentable subject matter Inventorship Novelty Inventive step and non-obviousness Industrial applicability Utility Person skilled in the art Prior art Other legal requirements Sufficiency of disclosure Unity of invention By region / country Patent Cooperation Treaty (PCT) Australia Canada China Europe Germany Japan Netherlands United States By specific subject matter Biological Business method Chemical Insurance Software Tax See also Patent analysis Pirate Party Category Glossary v t e A software patent is a patent on a piece of software , such as a computer program , library , user interface , or algorithm . The validity of these patents can be difficult to evaluate, as software is often at once a product of engineering , something typically eligible for patents, and an abstract concept, which is typically not. This gray area, along with the difficulty of patent evaluation for intangible, technical works such as libraries and algorithms, makes software patents a frequent subject of controversy and litigation.

Different jurisdictions have radically different policies concerning software patents, including a blanket ban, no restrictions, or attempts to distinguish between purely mathematical constructs and "embodiments" of these constructs. For example, an algorithm itself may be judged unpatentable, but its use in software judged patentable.

Background [ edit ] A patent is a set of exclusionary rights granted by a state to a patent holder for a limited period of time, usually 20 years. These rights are granted to patent applicants in exchange for their disclosure of the inventions. Once a patent is granted in a given country, no person may make, use, sell or import/export the claimed invention in that country without the permission of the patent holder. Permission, where granted, is typically in the form of a license which conditions are set by the patent owner: it may be free or in return for a royalty payment or lump sum fee.

Patents are territorial in nature. To obtain a patent, inventors must file patent applications in each and every country in which they want a patent. For example, separate applications must be filed in Japan , China , the United States and India if the applicant wishes to obtain patents in those countries. However, some regional offices exist, such as the European Patent Office (EPO), which act as supranational bodies with the power to grant patents which can then be brought into effect in the member states, and an international procedure also exists for filing a single international application under the Patent Cooperation Treaty (PCT), which can then give rise to patent protection in most countries.

These different countries and regional offices have different standards for granting patents. This is particularly true of software or computer-implemented inventions, especially where the software is implementing a business method.

Early example of a software patent [ edit ] On 21 May 1962, a British patent application entitled " A Computer Arranged for the Automatic Solution of Linear Programming Problems " was filed.

[ 1 ] The invention was concerned with efficient memory management for the simplex algorithm , and could be implemented by purely software means. The patent struggled to establish that it represented a 'vendible product'. "The focus of attention shifted to look at the relationship between the [unpatentable] computer program and the [potentially patentable] programmed computer".

[ 2 ] The patent was granted on August 17, 1966, and seems to be one of the first software patents, establishing the principle that the computer program itself was unpatentable and therefore covered by copyright law, while the computer program embedded in hardware was potentially patentable.

[ 3 ] [ 4 ] Jurisdictions [ edit ] Most countries place some limits on the patenting of inventions involving software, but there is no one legal definition of a software patent. For example, U.S. patent law excludes "abstract ideas", and this has been used to refuse some patents involving software. In Europe, "computer programs as such" are excluded from patentability, thus European Patent Office policy is consequently that a program for a computer is not patentable if it does not have the potential to cause a "technical effect" which is by now understood as a material effect (a "transformation of nature").

[ 5 ] Substantive law regarding the patentability of software and computer-implemented inventions, and case law interpreting the legal provisions, are different under different jurisdictions.

Software patents under multilateral treaties : Software patents under TRIPs Agreement Software patents under the European Patent Convention Computer programs and the Patent Cooperation Treaty Software patents under national laws: Software patents under United States patent law Software patents under United Kingdom patent law Australia [ edit ] In Australia, there is no particular exclusion for patents relating to software. The subject matter of an invention is patentable in Australia, if it is a manner of manufacture within the meaning of section 6 of the Statute of Monopolies .

[ 6 ] The High Court of Australia has refrained from ruling on the precise definition of manner of manufacture stating that any such attempt is bound to fail for the policy reason of encouraging national development in fields that may be unpredictable.

[ 7 ] In assessing whether an invention is a manner of manufacture, the High Court has relied on the inquiry of whether the subject of the claims defining the invention has as its end result an artificially created state of affairs .

[ 7 ] In a decision of the Federal Court of Australia, on the patentability of an improved method of representing curved images in computer graphics displays, it was held that the application of selected mathematical methods to computers may involve steps which are foreign to the normal use of computers and hence amount to a manner of manufacture.

[ 8 ] In another unanimous decision by the Full Federal Court of Australia, an invention for methods of storing and retrieving Chinese characters to perform word processing was held to be an artificially created state of affairs and consequently within the concept of a manner of manufacture.

[ 9 ] Nevertheless, in a recent decision on the patentability of a computer implemented method of generating an index based on selection and weighing of data based on certain criterion, the Full Federal Court of Australia reaffirmed that mere methods, schemes and plans are not manners of manufacture.

[ 10 ] The Full Court went on to hold that the use of a computer to implement a scheme did not contribute to the invention or the artificial effect of the invention.

[ 10 ] The subject matter of the invention was held to be an abstract idea and not a manner of manufacture within the meaning of the term in the Patents Act. The same Full Federal Court in another decision regarding the patentability of an invention regarding a method and system for assessing an individual's competency in relation to certain criterion, reiterated that a business method or mere scheme were per se are not patentable.

[ 11 ] In principle, computer software is still a valid patentable subject matter in Australia. But, in circumstances where patents have been sought over software to merely implement abstract ideas or business methods, the courts and the Commissioner of Patents have resisted granting patent protection to such applications both as a matter of statutory interpretation and policy.

Canada [ edit ] Main article: Software patents under Canadian patent law In Canada , courts have held that the use of a computer alone neither lends, nor reduces patentability of an invention. However, it is the position of the Canadian Patent Office that where a computer is an "essential element" of a patent's claims, the claimed invention is generally patentable subject matter.

[ 12 ] China [ edit ] In China, the starting time of software patent is relatively late. Before 2006, software patents were basically not granted, and software and hardware had to be combined when applying for a patent. With the development of network technology and software technology, China's patent examination system has been constantly updated. Recently, the design idea of the software itself has been allowed to apply for patent separately, instead of requiring to be combined with hardware. However, software patent writing requirements are relatively high.

Software patents can be written as either a product or a method, depending on the standards of review. However, no matter what form it is written in, it is difficult to highlight the creativity of the scheme, which requires specific case analysis.

Software that can be patented mainly includes (but is not limited to): (1) Industrial control software, such as controlling the movement of mechanical equipment; (2) Software to improve the internal performance of the computer, such as a software can improve the virtual memory of the computer; (3) External technical data processing software, such as digital camera image processing software.

It is fair to say that a considerable proportion of software belongs to category (3).

The patent protection measures can be seen in the patent law and the regulations on the protection of computer software.

Europe [ edit ] Main article: Software patents under the European Patent Convention Within European Union member states, the EPO and other national patent offices have issued many patents for inventions involving software since the European Patent Convention (EPC) came into force in the late 1970s.

Article 52 EPC excludes "programs for computers" from patentability (Art. 52(2)) to the extent that a patent application relates to a computer program "as such" (Art. 52(3)). This has been interpreted to mean that any invention that makes a non-obvious "technical contribution" or solves a "technical problem" in a non-obvious way is patentable even if that technical problem is solved by running a computer program.

[ 13 ] When the EPO examines a patent application with questionable subject matter eligibility, their approach is to simply [ dubious – discuss ] disregard any ineligible portions or aspects and evaluate the rest.

[ 14 ] This is notably different from the U.S. approach (see below).

Computer-implemented inventions that only solve a business problem using a computer, rather than a technical problem, are considered unpatentable as lacking an inventive step (see T 258/03 ). Nevertheless, the fact that an invention is useful in business does not mean it is not patentable if it also solves a technical problem.

A summary of the developments concerning patentability of computer programs under the European Patent Convention is given in (see G 3/08 ) as a response of the Enlarged Board of Appeal to questions filed by the President of the European Patent Office according to Article 112(1)(b) EPC .

[ needs update ] Concerns have been raised by free software campaigners, such as the Free Software Foundation , that the Unified Patent Court will be much more open to patents generally and software patents in particular.

[ 15 ] Germany [ edit ] In April 2013, the German Parliament adopted a joint motion "against the growing trend of patent offices to grant patents on software programs".

[ 16 ] United Kingdom [ edit ] Main article: Software patents under United Kingdom patent law United Kingdom patent law is interpreted to have the same effect as the European Patent Convention such that "programs for computers" are excluded from patentability to the extent that a patent application relates to a computer program "as such". Current case law in the UK states that an (alleged) invention will only be regarded as an invention if it provides a contribution that is not excluded and that is also technical. A computer program implementing a business process is therefore not an invention, but a computer program implementing an industrial process may well be.

India [ edit ] In India , a clause to include software patents was quashed by the Indian Parliament in April 2005.

[ 17 ] However, following publication of the new guidelines on the examination of computer-related inventions on 19 February 2016, the Office of the Controller General of Patents, Designs and Trade marks accepts applications for software patents, as long as the software is claimed in conjunction with a novel hardware.

[ 18 ] On 30 June 2017, revised guidelines on the examination of computer related inventions were published. This 2017 guidelines provides clarity on patentability of software invention in India, i.e., the claimed computer-related invention needs to be ascertained whether it is of a technical nature involving technical advancement as compared to the existing knowledge or having economic significance or both, and is not subject to exclusion under Section 3 of the Patents Act.

[ 19 ] In 2019, the Court observed, In today’s digital world, when most inventions are based on computer programs, it would be retrograde to argue that all such inventions would not be patentable. Innovation in the field of artificial intelligence, blockchain technologies and other digital products would be based on computer programs, however the same would not become nonpatentable inventions – simply for that reason. It is rare to see a product which is not based on a computer program. Whether they are cars and other automobiles, microwave ovens, washing machines, refrigerators, they all have some sort of computer programs in-built in them. Thus, the effect that such programs produce including in digital and electronic products is crucial in determining the test of patentability.

Patent applications in these fields would have to be examined to see if they result in a “technical contribution”, it added. Further elaborating on the usage of the term ‘per se’ in Section 3(k), the Court said, The words ‘per se’ were incorporated so as to ensure that genuine inventions which are developed, based on computer programs are not refused patents.

[ 20 ] With respect to the term per se, the joint parliamentary committee had expressed the following view: In the new proposed clause (k) the words: “per se” have been inserted. This change has been proposed because sometimes the computer programme may include certain other things, ancillary thereto or developed thereon. The intention here is not to reject them for grant of patent if they are inventions. However, the computer programs as such are not intended to be granted patent. This amendment has been proposed to clarify the purpose.

[ 21 ] Japan [ edit ] Software-related inventions are patentable. To qualify as an invention, however, there must be "a creation of technical ideas utilizing a law of nature" [ 22 ] although this requirement is typically met by "concretely realising the information processing performed by the software by using hardware resources".

[ 23 ] Software-related inventions may be considered obvious if they involve the application of an operation known in other fields, the addition of a commonly known means or replacement by equivalent, the implementation in software of functions which were previously performed by hardware, or the systematisation of known human transactions.

[ 24 ] In 1999, the allowance rate for business method patents at the Japan Patent Office (JPO) reached an all-time high of roughly 35 percent. Subsequently, the JPO experienced a surge in business method patent filings. This surge was met with a dramatic decrease in the average grant rate of business method patents during the following six years; it lingered around 8 percent between 2003 and 2006 (8 percent is extremely low in comparison to the average of 50 percent across all technical fields). A report from 2012 found that the average grant rate since 2006 for business method patents has risen to the current rate of roughly 25 percent.

[ 25 ] New Zealand [ edit ] In New Zealand computer programs are excluded from patentability under the Patents Act 2013, [ 26 ] but guidelines permitting embedded software were added since the initial Patents Bill.

[ 27 ] From 2013 computer programs 'as such' are excluded from patentability. The as such wording rules out only those software based patents where novelty lies solely in the software. Similar to Europe.

[ 28 ] Philippines [ edit ] In the Philippines , "schemes, rules and methods of performing mental acts, playing games or doing business, and programs for computers" are non-patentable inventions under Sec. 22.2 of Republic Act No. 8293, otherwise known as the "Intellectual Property Code of the Philippines".

Russian Federation [ edit ] In the Russian Federation according to article #1350 of the Civil Code of the Russian Federation the following do not qualify as inventions: discoveries; scientific theories and mathematical methods; solutions concerning only the appearance of products and aimed at meeting the aesthetic needs; the rules and methods of games, intellectual or economic activities; computer programs; solutions consisting only in the presentation of information.

However, the article provides for that the patentability of these objects is excluded only in the case when the application for the grant of a patent for an invention concerns these objects as such .

South Africa [ edit ] In South Africa , "a program for a computer" is excluded from recognition as an invention by section 25(2) of the Patents Act.

[ 29 ] However, this restriction applies "only to the extent to which a patent or an application for a patent relates to that thing as such" [ 30 ] and should not prevent, for example, a product, process, or method which may be implemented on a computer from being an invention, provided that the requirements of novelty and inventiveness are met.

South Korea [ edit ] In South Korea , software is considered patentable and many patents directed towards "computer programs" have been issued.

[ 31 ] In 2006, Microsoft 's sales of its "Office" suite were jeopardized due to a possible patent infringement.

[ 32 ] A ruling by the Supreme Court of Korea found that patents directed towards automatic language translation within software programs were valid and possibly violated by its software.

[ 32 ] Thailand [ edit ] As like as 52(2) of the European Patent Convention (EPC), section 9 of the Thai Patent Act 1999 states that Thai patent law does not include software (or computer program) from patentability because the computer software is not considered as an “invention”, in which it is not the idea of the product itself. Hence, the software is considered as the manual or instruction that was controlled by users to perform the tasks.

[ 33 ] A software patents law in Thailand has been controversial debates among the economists and national developers’ overtime since there were two significant developments in the international patent law; (1) the European Union's attempt to harmonize national patent laws by the Proposal for a Directive of the European Parliament and Council on the patentability of computer-implemented inventions, [ 34 ] and (2) the US court decision to expand patent protection to business methods.

[ 34 ] The opinions are divided into two sides. Dr. Tangkitvanich, the IT specialist of Thailand Development Research Institute (TDRI), raised his concern that Thailand is not in a good stage for a software patent as there were several flaws in patent rights. For example, the business method prevention has high tendency to hinder the growth in innovations especially for the infant software companies.

[ 35 ] Moreover, the software patent may cause monopoly and innovation problems. “Monopoly will thwart innovations of new software products, particularly open-source software”, said by a group of Thai Economists. However, Dr. Hirapruk who is the Director of Software Park Thailand, on the other hand, provides his support on allowing the computer programs to be patentable: “Thailand had to provide a patent-right protection for computer software to ensure foreign high-tech investors that software producers' creativity would be secured from violations in Thailand”. As a result, Mr. Sribhibhadh, president of the Association of Thai Software Industry, emphasized that there will need to be a clear overview of the impact on the local industry if Thailand really had to fully implement the patent right protections.

United States [ edit ] Growth of software patents in US In 2024, AI patents in China and the US numbered more than three-fourths of AI patents worldwide.

[ 36 ] Though China had more AI patents, the US had 35% more patents per AI patent-applicant company than China.

[ 36 ] Main article: Software patents under United States patent law The first software patent was issued June 19, 1968 to Martin Goetz for a data sorting algorithm.

[ 37 ] The United States Patent and Trademark Office has granted patents that may be referred to as software patents since at least the early 1970s.

[ 38 ] In Gottschalk v. Benson (1972), the United States Supreme Court ruled that a patent for a process should not be allowed if it would "wholly pre-empt the mathematical formula and in practical effect would be a patent on the algorithm itself", adding that "it is said that the decision precludes a patent for any program servicing a computer. We do not so hold." [ 39 ] In 1981, the Supreme Court stated that "a claim drawn to subject matter otherwise statutory does not become nonstatutory simply because it uses a mathematical formula, computer program, or digital computer" and a claim is patentable if it contains "a mathematical formula [and] implements or applies the formula in a structure or process which, when considered as a whole, is performing a function which the patent laws were designed to protect".

[ 40 ] When a patent application is examined by the USPTO, the initial threshold question (for each claim) is whether the subject matter is eligible, so this is evaluated separately and prior to the other patentability criteria (novelty, nonobviousness).

[ 41 ] This is notably different than the European approach (see above).

Due to different treatment of federal patent rights in different parts of the country, in 1982 the U.S. Congress created a new court (the Federal Circuit ) to hear patent cases. Following several landmark decisions by this court, by the early 1990s the patentability of software was well established, and in 1996 the USPTO issued Final Computer Related Examination Guidelines stating that "A practical application of a computer-related invention is statutory subject matter. This requirement can be discerned from the variously phrased prohibitions against the patenting of abstract ideas, laws of nature or natural phenomena" (emphasis added).

[ 42 ] The emergence of the Internet and e-commerce led to many patents being applied for and being granted for business methods implemented in software and the question of whether business methods are statutory subject matter is a separate issue from the question of whether software is. Critics of the Federal Circuit believe that the non-obviousness standard is partly responsible for the large increase in patents for software and business methods.

[ 43 ] There have been several successful enforcement trials in the United States, some of which are listed in the list of software patents article.

An issue with software patent intellectual property rights is typically revolved around deciding whether the company or inventor owns it.

As a matter of law, in the United States, the employee generally owns the IP right unless the employee's inventing skills or task to create the invention is the main specific hiring reason or a specific clause in the employment agreement assigning invention rights.

[ 44 ] [ 45 ] A work for hire created after 1978 has copyright protection for 120 years from its creation date or 90 years from its publication date whichever comes first.

[ 46 ] Patent protection for software lasts 20 years.

[ 47 ] Indonesia [ edit ] In Indonesia, software cannot be protected by patents, until the implementation of the Law No. 13 Year 2016, Patent Law in Indonesia.

[ 48 ] To begin evaluation, it is necessary to distinguish whether or not the application is considered an invention. Under Law No. 14 Year 2001, Article 1 of Patent Law in Indonesia, [ 49 ] application is considered as an invention if the activity is created to solve a particular conflict or problem in the technology sector. Furthermore, it can be executed in the medium of a new process or product or a developmental enhancement in a product or process. According to Law No. 14 Year 2001, Article 7 of Patent Law in Indonesia., [ 49 ] an application can not be patented as an invention if the product or process contradicts or challenges the current regulations and rules, public order or ethics, and religious morality. In addition, if the application is treated as a method or theory in the scientific or mathematics, argued to be any type of living creatures, with the exception of micro-organisms, or is considered as an essential biological measure to produce plants or animals, the application is not a patentable invention.

[ 49 ] As software contains algorithms, it is deemed to be part of the field of mathematics; hence, software cannot be protected by patents in Indonesia. However, one way for the Indonesian Intellectual Property office to grant software patents in Indonesia is if the application has been patented in other nations, which have ratified the Patent Corporation Treaty (PCT). Therefore, in accordance to the regulations under the Patent Cooperation Treaty, a software will have a regional protection among the participating entities of World Intellectual Property Organization (WIPO).

[ 50 ] An important update was enacted on 26 August 2016, the Law No. 13 Year 2016, Patent Law in Indonesia.

[ 48 ] This update is geared to encourage innovation and growth by augmenting the number of patents within the public and private sector in Indonesia. This update proposes an extension of protection for simple patent, which grants application for patents for new improvements or inventions to existing processes. Intangible inventions can also be patented; under the former law, simple patent is restricted for tangible inventions, which has a positive implication for software patents in Indonesia. Furthermore, these changes provide more protection to the pharmaceutical industry and encourage public access to medical knowledge. This can boost new software ideas and processes within the healthcare and pharmaceutical sector. This update provides a stronger protection of traditional knowledge. In addition, a significant update is the usability of electronic filling and electronic media. Under this new law, application can be made electronically.

Purpose of patents [ edit ] Main article: Patentable subject matter For the U.S., the purpose of patents is laid down in the constitutional clause that gives Congress the power to "promote the progress of science and useful arts, by securing for limited times to authors and inventors the exclusive right to their respective writings and discoveries;" (Article I, Section 8, Clause 8).

[ 51 ] For Europe, there is no similar definition. Commonly four patent justification theories are recognised, as laid down for instance by Machlup in 1958, [ 52 ] which include justice to the inventor and benefit for society by rewarding inventors. Disclosure is required in return for the exclusive right, and disclosure may promote further development. However, the value of disclosure should not be overestimated: some inventions could not be kept secret otherwise, and patents also prohibit independent reinventions to be exploited.

There is debate as to whether or not these aims are achieved with software patents.

Proposals [ edit ] In seeking to find a balance, different countries have different policies as to where the boundary between patentable and non-patentable software should lie. In Europe, a number of different proposals for setting a boundary line were put forward during the debate concerning the proposed Directive on the patentability of computer-implemented inventions , none of which were found acceptable by the various parties to the debate. Two particular suggestions for a hurdle that software must pass to be patentable include: A computer program that utilises "controllable forces of nature to achieve predictable results".

[ 53 ] A computer program which provides a "technical effect".

[ 54 ] In the US, Ben Klemens , a Guest Scholar at the Brookings Institution , proposed that patents should be granted only to inventions that include a physical component that is by itself nonobvious.

[ 55 ] This is based on Justice William Rehnquist 's ruling in the U.S. Supreme Court case of Diamond v. Diehr that stated that "... insignificant postsolution activity will not transform an unpatentable principle into a patentable process." [ 56 ] By this rule, one would consider software loaded onto a stock PC to be an abstract algorithm with obvious postsolution activity, while a new circuit design implementing the logic would likely be a nonobvious physical device. Upholding an "insignificant postsolution activity" rule as per Justice Rehnquist 's ruling would also eliminate most business method patents .

Obviousness [ edit ] A common objection to software patents is that they relate to trivial inventions.

[ 57 ] A patent on an invention that many people would easily develop independently of one another should not, it is argued, be granted since this impedes development.

Different countries have different ways of dealing with the question of inventive step and non-obviousness in relation to software patents. Europe uses an 'Inventive step test'; see the Inventive step requirement in Europe and, for instance, T 258/03 .

Criticism [ edit ] Compatibility [ edit ] There are a number of high-profile examples where the patenting of a data exchange standards forced another programming group to introduce an alternative format. For instance, the Portable Network Graphics (PNG) format was largely introduced to avoid the Graphics Interchange Format (GIF) patent problems, and Ogg Vorbis to avoid MP3 . If it is discovered that these new suggested formats are themselves covered by existing patents, the final result may be a large number of incompatible formats. Creating such formats and supporting them costs money and creates inconvenience to users.

Computer-implemented invention (CII) [ edit ] Main article: Software patents under the European Patent Convention Under the European Patent Convention (EPC), and in particular its Article 52, [ 58 ] " programs for computers " are not regarded as inventions for the purpose of granting European patents, [ 59 ] but this exclusion from patentability only applies to the extent to which a European patent application or European patent relates to a computer program as such.

[ 60 ] As a result of this partial exclusion, and despite the fact that the EPO subjects patent applications in this field to a much stricter scrutiny [ 61 ] when compared to their American counterpart , that does not mean that all inventions including some software are de jure not patentable .

Overlap with copyright [ edit ] See also: Software copyright and Copyright infringement of software Patent and copyright protection constitute two different means of legal protection which may cover the same subject matter, such as computer programs, since each of these two means of protection serves its own purpose.

[ 62 ] Software is protected as works of literature under the Berne Convention . This allows the creator to prevent another entity from copying the program and there is generally no need to register code in order for it to be copyrighted.

Patents, on the other hand, give their owners the right to prevent others from using the technology defined by the patent claims, even if the technology was independently developed and there was no copying of a software or software code involved. In fact, one of the most recent EPO decisions [ 63 ] clarifies the distinction, stating that software is patentable, because it is basically only a technical method executed on a computer, which is to be distinguished from the program itself for executing the method, the program being merely an expression of the method, and thus being copyrighted.

Patents cover the underlying methodologies embodied in a given piece of software, or the function that the software is intended to serve, independent of the particular language or code that the software is written in. Copyright prevents the direct copying of some or all of a particular version of a given piece of software, but does not prevent other authors from writing their own embodiments of the underlying methodologies. Assuming a dataset meets certain criteria, copyright can also be used to prevent a given set of data from being copied while still allowing the author to keep the contents of said set of data a trade secret .

[ 64 ] Whether and how the numerus clausus principle shall apply to the legal hybrid software [ 65 ] to provide a judicious balance between property rights of the title holders and freedom rights of computing professionals [ 66 ] and society as a whole, [ 67 ] is in dispute.

[ 68 ] [ 69 ] [ 70 ] Debate [ edit ] There is a debate over the extent to which software patents should be granted, if at all. Important issues concerning software patents include: Whether software patents should be allowed, and if so, where the boundary between patentable and non-patentable software should lie; [ 71 ] Whether the inventive step and non-obviousness requirement is applied too loosely to software; [ 72 ] and Whether patents covering software discourage, rather than encourage, innovation; [ 73 ] Whether software based on mathematical methods may be allowed if the mathematics or algorithm in question is complicated enough and may not be implemented with pencil and paper.

[ 74 ] Open source software [ edit ] Main article: Software patents and free software There is strong dislike in the free software community towards software patents. Much of this has been caused by free software or open source projects terminating [ 75 ] when the owners of patents covering aspects of a project demanded license fees that the project could not pay, or was not willing to pay, or offered licenses with terms that the project was unwilling to accept, or could not accept, because it conflicted with the free software license in use.

[ 76 ] Several patent holders have offered royalty-free patent licenses for a very small portion of their patent portfolios. Such actions have provoked only minor reaction from the free and open source software communities for reasons such as fear of the patent holder changing their mind or the license terms being so narrow as to have little use.

[ 77 ] Companies that have done this include Apple , [ 78 ] IBM , [ 79 ] Microsoft , [ 80 ] Nokia , [ 81 ] Novell , [ 82 ] Red Hat , [ 83 ] and Sun (now Oracle ).

[ 84 ] In 2005, Sun Microsystems announced that they were making a portfolio of 1,600 patents available through a patent license called Common Development and Distribution License .

[ 85 ] In 2006, Microsoft's pledge not to sue Novell Linux customers, openSUSE contributors, and free/open source software developers over patents [ 86 ] and the associated collaboration agreement with Novell [ 87 ] was met with disdain from the Software Freedom Law Center [ 88 ] while commentators from the Free Software Foundation stated that the agreement would not comply with GPLv3 . Meanwhile, Microsoft has reached similar agreements with Dell and Samsung , [ 89 ] due to alleged patent infringements of the Linux operating system. Microsoft has also derived revenue from Android by making such agreements-not-to-sue with Android vendors.

[ 90 ] Unisys case [ edit ] In the late 1990s, Unisys claimed to have granted royalty free licenses to hundreds of not-for-profit organizations that used the patented LZW compression method and, by extension, the GIF image format. However, this did not include most software developers and Unisys were "barraged" by negative and "sometimes obscene" emails from software developers.

[ 91 ] Licensing [ edit ] Main article: Software license Total US software patent counts by class of invention as of 2015 [ 92 ] US class Description Total patents issued 700 Data Processing: Generic Control Systems or Specific Applications 26042 701 Data Processing: Vehicles, Navigation, and Relative Location 38566 702 Data Processing: Measuring, Calibrating, or Testing 27130 703 Data Processing: Structural Design, Modeling, Simulation, and Emulation 10126 704 Data Processing: Speech Signal Processing, Linguistics, Language Translation, and Audio Compression/Decompression 17944 705 Data Processing: Financial, Business Practice, Management, or Cost/Price Determination 38284 706 Data Processing: Artificial Intelligence 9161 707 Data Processing: Database and File Management or Data Structures 47593 708 Electrical Computers: Arithmetic Processing and Calculating 9993 709 Electrical Computers and Digital Processing Systems: Multicomputer Data Transferring 56001 710 Electrical Computers and Digital Data Processing Systems: Input/Output 23991 711 Electrical Computers and Digital Processing Systems: Memory 34025 712 Electrical Computers and Digital Processing Systems: Processing Architectures and Instruction Processing (e.g., Processors) 10461 713 Electrical Computers and Digital Processing Systems: Support 30695 714 Error Detection/Correction and Fault Detection/Recovery 38532 715 Data Processing: Presentation Processing of Document, Operator Interface Processing, and Screen Saver Display Processing 25413 716 Computer-Aided Design and Analysis of Circuits and Semiconductor Masks 13809 717 Data Processing: Software Development, Installation, and Management 17336 718 Electrical Computers and Digital Processing Systems: Virtual Machine Task or Process Management or Task Management/Control 7615 719 Electrical Computers and Digital Processing Systems: Interprogram Communication or Interprocess Communication (Ipc) 5456 720 Dynamic Optical Information Storage or Retrieval 3877 725 Interactive Video Distribution Systems 12076 726 Information Security 21144 Total 525270 Patenting software is widespread in the US. As of 2015 [update] , approximately 500,000 patents had issued in the 23 classes of patents covering "computer implemented inventions" (see table).

Many software companies cross license their patents to each other. These agreements allow each party to practice the other party's patented inventions without the threat of being sued for patent infringement .

Microsoft , for example, has agreements with IBM , Sun (now Oracle ), SAP , Hewlett-Packard , Siemens , Cisco , Autodesk , [ 93 ] and recently Novell . Microsoft cross-licensed its patents with Sun, despite being direct competitors, and with Autodesk even though Autodesk has far fewer patents than Microsoft.

The ability to negotiate cross licensing agreements is a major reason that many software companies, including those providing open source software, file patents. As of June 2006, for example, Red Hat had developed a portfolio of 10 issued US patents, 1 issued European patent, 163 pending US patent applications, and 33 pending international PCT ( Patent Cooperation Treaty ) patent applications. Red Hat uses this portfolio to cross license with proprietary software companies so that they can preserve their freedom to operate.

[ 83 ] Other patent holders are in the business of inventing new "computer implemented inventions" and then commercializing the inventions by licensing the patents to other companies that manufacture the inventions.

Walker Digital , for example, has generated a large patent portfolio from its research efforts, including the basic patent on the Priceline.com reverse auction technology. US universities also fall into this class of patent owners. They collectively generate about $1.4 billion per year through licensing the inventions they develop to both established and start up companies in all fields of technology, including software.

[ 94 ] Still other patent holders focus on obtaining patents from original inventors and licensing them to companies that have introduced commercial products into the marketplace after the patents were filed. Some of these patent holders, such as Intellectual Ventures , are privately held companies financed by large corporations such as Apple, Microsoft, Intel , Google , etc. Others, such as Acacia Technologies , are publicly traded companies with institutional investors being the primary shareholders.

[ 95 ] The practice of acquiring patents merely to license them is controversial in the software industry. Companies that have this business model are pejoratively referred to as patent trolls . It is an integral part of the business model that patent licensing companies sue infringers that do not take a license. Furthermore, they may take advantage of the fact that many companies will pay a modest license fee (e.g. $100,000 to $1,000,000) for rights to a patent of questionable validity, rather than pay the high legal fees ($2,000,000 or more) to demonstrate in court that the patent is invalid.

[ citation needed ] See also [ edit ] Wikimedia Commons has media related to Software patents .

Open Invention Network (OIN) Patent Commons Project Piano roll blues Social networking patents References [ edit ] ^ GB 1039141 , "A computer arranged for the automatic solution of linear programming problems by British Petroleum, Patrick Vincent Slee and Pauline Margaret Joyce Harris" ^ Bellido, Jose (2017).

Landmark Cases in Intellectual Property Law . Hart Publishing.

^ Beresford, K (2000).

Patenting Software under the European Patent Convention . London: Sweet & Maxwell. p. 4.

Kretschmer, Martin (4 July 2003).

"Software as Text and Machine: The Legal Capture of Digital Innovation" .

Journal of Information Law & Technology . Centre for Intellectual Property Policy and Management, Bournemouth University.

^ "RDBMS Plenary 1: Early Years" (PDF) (Interview). Interviewed by Burton Grad. Computer History Museum. 2007-06-12. p. 22 . Retrieved 2025-05-30 .

^ Dhenne, M. (2016).

Technique et droit des brevets. L'invention en droit des brevets . France: LexisNexis. pp. 82 and following.

ISBN 9782711024100 .

^ Patents Act 1990 (Cth) s 18 Patentable inventions ^ a b National Research Development Corp v Commissioner of Patents [1959] HCA 67 , (1959) 102 CLR 252, High Court (Australia).

^ International Business Machines Corp v Commissioner of Patents [1991] FCA 811 , 105 ALR 388, Federal Court (Australia).

^ CCOM Pty Ltd v Jie-jing Pty Ltd [1994] FCA 396 , (1994) 51 FCR 260, Federal Court (Full Court) (Australia).

^ a b Research Affiliates LLC v Commissioner of Patents [2014] FCAFC 150 (10 November 2014), Federal Court (Full Court) (Australia).

^ Commissioner of Patents v RPL Central Pty Ltd [2015] FCAFC 177 (11 December 2015), Federal Court (Full Court) (Australia).

^ Examination Practice Respecting Computer-Implemented Inventions – PN 2013-03 , Canadian Intellectual Property Office, March 8, 2013 ^ DECISION of 24 February 2006, Case Number: T 0469/03 – 3.5.01 , European Patent Office, Boards of Appeal, 24 February 2006, pp. Reasons 5.1 to 5.3 ^ Guidelines for Examination in the EPO , section g - vii , 5.4 ^ "End Software Patents" .

"Europe's "unitary patent" could mean unlimited software patents" .

"EU unitary patent and Unified Patent Court" .

^ Ermert, Monika (22 April 2013).

"German Parliament Sends Message: Stop Granting Software Patents" .

Intellectual Property Watch . Retrieved April 29, 2013 .

^ "Software patents under Ordinance face reversal" . Financialexpress.com. 2005-03-29 . Retrieved 2012-10-09 .

^ Guido Noto La Diega, PhD.

Software Patents and the Internet of Things in Europe, the United States and India (FULL TEXT) – via www.academia.edu.

^ "Guidelines for Examination of Computer Related Inventions (CRIs)" (PDF) .

www.ipindia.nic.in .

^ Aditi, Singh (29 December 2019).

"A computer program which makes 'technical contribution' patentable, not hit by Sec 3(k) of Patents Act" . Bar and Bench . Retrieved 13 February 2020 .

^ Parliament of India, Report of the Joint Committee on Patents (Second Amendment) Bill, 1999 (Rajya Sabha Secretariat 2001) ^ "Examination Guidelines for Patent and Utility Model in Japan (REQUIREMENTS FOR PATENTABILITY)" (PDF) . jpo.go.jp. pp.

1– 3. Archived from the original (PDF) on 2011-03-23 . Retrieved 2009-11-21 .

^ Examination Guidelines for Inventions for Specific Fields (Computer Software-Related Inventions) in Japan (PDF) , Japanese Patent Office, April 2005, p. 10 (2.2.1), archived from the original (PDF) on 2011-03-23 , retrieved 2009-11-21 ^ Examination Guidelines for Inventions for Specific Fields (Computer Software-Related Inventions) in Japan (PDF) , Japanese Patent Office, April 2005, pp. 16–17 ("Systematization of human transactions"), archived from the original (PDF) on 2011-03-23 , retrieved 2009-11-21 ^ Sugimura, Kenji; Chen, Rebecca (1 October 2012), An important market: software patenting in Japan , World Intellectual Property Review ^ "Patents Act 2013, section 11 'Computer programs' " . 2020-08-07 . Retrieved 2022-01-25 .

^ "Minister announces way forward for software patents" . beehive.govt.nz. 2010-07-15. Archived from the original on 2010-09-20 . Retrieved 2012-10-09 .

Varghese, Sam (16 July 2010).

"New Zealand says no to software patents" .

Government Tech Policy . Archived from the original on 16 January 2013 . Retrieved 7 November 2012 .

"South Pacific cousins part ways over patents" . Cpaglobal.com. 2010-07-28. Archived from the original on 2012-08-26 . Retrieved 2012-10-09 .

"New Zealand bans software patents" . TG Daily. 2010-07-15. Archived from the original on 2012-04-06 . Retrieved 2012-10-09 .

Fairfax Media Business Group (2010-04-15).

"NZICT says patents 'integral' to software protection | Computerworld New Zealand" . Computerworld.co.nz. Archived from the original on 2013-01-15 . Retrieved 2012-10-09 .

{{ cite web }} : |author= has generic name ( help ) ^ Rob O’Neill (August 28, 2013).

"New Zealand bans software patents" .

ZDNet . Retrieved September 6, 2013 .

^ Patents Act, No. 57 of 1978, as amended (PDF) , 26 April 1978, archived from the original (PDF) on 12 December 2011 , retrieved 25 September 2011 ^ Patents Act, No. 57 of 1978, as amended Section 25(3) (PDF) , 26 April 1978, archived from the original (PDF) on 12 December 2011 , retrieved 25 September 2011 ^ FAQ – Korea , European Patent Office, archived from the original on 13 September 2009 , retrieved 29 October 2008 ^ a b Lombardi, Candace (November 27, 2006), "Microsoft lost in translation" , News Blog , CNET , retrieved October 29, 2008 ^ Sirivish Toomgum and Kwanchai Rungfapaisan, THE NATION, July 24, 2000, at 7.

^ a b Pitiyasak, Saravuth. "Thailand Debates Software Patents." Managing Intellectual Property .123 (2002): 62-4.

ProQuest.

Web. 11 Apr. 2020.

^ Newsbytes, Thailand Mulls Software Patent Rules, at (last visited Jul. 25, 2000).

^ a b Buntz, Brian (3 November 2024).

"Quality vs. quantity: US and China chart different paths in global AI patent race in 2024 / Geographical breakdown of AI patents in 2024" . R&D World.

Archived from the original on 9 December 2024.

^ Martin Goetz, "Unsung innovators: Marty Goetz, holder of first [US] software patent" . Computerworld. 1968.

^ U.S. patent 3,552,738 , U.S. patent 3,553,358 and U.S. patent 3,553,384 granted 5 January 1971, and U.S. patent 3,996,564 granted December 7, 1976, can be easily found using the Bessen/Hunt technique . Earlier patents may exist but US patent database does not permit full text searching for earlier patents ^ Gottschalk v Benson, 409 U.S.

63 (1972) ^ Diamond v. Diehr, 450 U.S.

175 (1981) ^ "MPEP" .

^ "Examination Guidelines for Computer-Related Inventions" . United States Patent Office. 1996-03-26 . Retrieved 2014-05-20 .

^ Bessen, James, and Michael J. Meurer. Patent Failure: How Judges, Bureaucrats, and Lawyers Put Innovators at Risk. Princeton, NJ: Princeton University Press, 2008 ^ Employment, Small Business and Training (2010-12-03).

"Home" .

www.business.qld.gov.au . Retrieved 2020-04-11 .

{{ cite web }} : |first= has generic name ( help ) ^ "Who owns the rights to a patent? The employer or inventor?" .

Adli Law Group . 2016-04-12 . Retrieved 2020-04-11 .

^ Peter B. Hirtle, Copyright Term and the Public Domain in the United States, 1 January 2007 .

Archived July 4, 2012, at the Wayback Machine ^ "SOFTWARE PATENT LAW: UNITED STATES AND EUROPE COMPARED" .

Duke Law . Retrieved 19 October 2021 .

^ a b "Law No. 13 of 2016 on Patents, Indonesia, WIPO Lex" .

www.wipo.int . Retrieved 2025-05-15 .

^ a b c "Law of the Republic of Indonesia Number 14 Year 2001" (PDF) .

WIPO .

^ "Regulations under the Patent Cooperation Treaty" .

wipo.int . Retrieved 2025-05-15 .

^ "Intellectual Property and Software-Copyright" . Retrieved 2021-12-16 .

^ "An Economic Review of the Patent System (1958)" (PDF) . 20 July 2005 . Retrieved 2012-10-09 .

^ Amendment 23 to the proposed Directive on the patentability of computer-implemented inventions (PDF) , European Parliament , September 2003, archived from the original (PDF) on February 10, 2006 Dispositions program decision , Bundesgerichtshof (, BGH, Federal Court of Justice of Germany), 1976-06-22 ^ "Reasons, point 3.4" , Decision T 0059/93 () of 20 April 1994 , European Patent Office, Boards of Appeal , 20 April 1994 ^ "The Gravity of the U.S. Patent Swindle" .

Wall Street Journal . 25 March 2006. p. A9.

^ Diamond v. Diehr , 49 U.S. 1112 ( SCOTUS 1981) (""... insignificant postsolution activity will not transform an unpatentable principle into a patentable process."").

^ Stallman, Richard (June 20, 2005).

"Patent absurdity" .

The Guardian . London . Retrieved May 23, 2010 .

^ Article 52 EPC ^ Article 52(1) EPC ^ Article 52(3) EPC ^ Laub, Christoph (2005) [Academic Year 2004/2005].

International Software Patent Filing: The Problem of Statutory Subject Matter in view of Legal Standards at the EPO-USPTO and Economic Implications (PDF) (Master's). Munich Intellectual Property Law Center. Archived from the original (PDF) on June 21, 2007 . Retrieved 21 March 2006 .

^ "Reasons 2.4" , Decision T 1173/97 (Computer program product/IBM) of 1.7.1998 , European Patent Office, Boards of Appeal, 1 July 1998 ^ Decision T 0424/03 (Clipboard formats I/MICROSOFT) of 23.2.2006 , European Patent Office Boards of Appeal, 23 February 2006 ^ Bro, Sarah (September 6, 2018).

"Copyright in Data Compilations is Thin" .

Mondaq Business Briefing . Retrieved January 25, 2019 .

^ Burk, Dan L. (February 2001).

"Copyrightable functions and patentable speech" .

Communications of the ACM .

44 (2). Association for Computing Machinery (ACM): 69– 75.

doi : 10.1145/359205.359231 .

S2CID 10784660 .

^ Kiesewetter-Köbinger, Swen (2010). "Programmers' Capital".

Computer .

43 (2): 106– 108.

doi : 10.1109/MC.2010.47 .

^ Standing Committee on the Law of Patents (January 20, 2010).

"Proposal from Brazil in respect of exceptions and limitations to patent rights" (PDF) . World Intellectual Property Organization . Retrieved 4 February 2010 .

^ Max-Planck-Institut (20 December 2000), Stellungnahme zum Sondierungspapier der Kommission der Europaischen Gemeinschaften: Die Patentierbarkeit Computer-implementierter Erfindungen [ Opinion on the consultation paper by the Commission of the European Communities: The patentability of computer-implemented inventions ] (PDF) ^ Hoffmann, Marcus (2008).

Mehrfachschutz geistigen Eigentums im deutschen Rechtssystem [ Multiple protection of intellectual property in the German legal system ].

ISBN 978-3-8316-0806-5 .

^ Peukert, Alexander (2008).

Güterzuordnung als Rechtsprinzip [ Goods classification as a legal principle ]. Mohr Siebeck.

ISBN 978-3-16-149724-7 .

^ Gray, John (2004-08-19), Software patents in Europe: debunking the myths , OUT-LAW News ^ "Public consultation on level of the inventive step required for obtaining patents" (PDF) .

UK Intellectual Property Office . Archived from the original (PDF) on 2012-01-04 . Retrieved 2007-06-05 .

^ "Patent Economics: Part 4 – Incentives" (blog entry) . Patenthawk. 2005-04-17.

Archived from the original on 2012-09-06 . Retrieved 2012-10-09 .

^ "The India Patents Act, 1970 and Software Patentability" (PDF) .

www.managingip.com . 7 March 2013. Archived from the original (PDF) on 2016-04-17 . Retrieved 2020-03-27 .

^ "Software patents that hurt free software" . Free Software Foundation . Retrieved 2012-10-09 .

^ "Effects" . Patentability and Democracy in Europe. Foundation for a Free Information Infrastructure. Archived from the original on February 10, 2007.

^ "Microsoft's Open Specification Promise: No Assurance for GPL" .

Software Freedom Law Center .

^ "License - APSL" .

opensource.apple.com .

^ Scherer, Markus; Davis, Mark (2006-02-04).

"UTN #6: BOCU-1" . Retrieved 2014-02-05 .

^ "Silverlight Controls License" . Microsoft Corporation.

^ "symbian-dump" .

SourceForge . 11 April 2013.

^ "Patent Policy" . Novell. Archived from the original on 2013-07-30 . Retrieved 2012-10-09 .

^ a b "Red Hat Patent Policy" . Red Hat.

^ "Oracle Technology Network for Java Developers" . Sun Microsystems . Retrieved 2012-10-09 .

^ "Sun Grants Global Open Source Community Access to More than 1,600 Patents" (Press release). Sun Microsystems. January 25, 2005. Archived from the original on December 2, 2008.

^ "Community Commitments – Microsoft & Novell Interoperability Collaboration" . Microsoft. November 2, 2006.

^ "Microsoft and Novell Announce Broad Collaboration on Windows and Linux Interoperability and Support" (Press release). Novell. November 2, 2006.

^ "Microsoft's developer patent pledge 'worse than useless' says SFLC" . November 10, 2006.

^ Eric Lai; Sumner Lemon (2007-05-13).

"Update: Microsoft wants royalties for open-source software" . Computerworld . Retrieved 2012-10-09 .

^ "Microsoft and LG Sign Patent Agreement Covering Android and Chrome OS Based Devices" . Microsoft. 2012-01-12 . Retrieved 2012-10-09 .

^ Miller, Robin ("Roblimo") (August 31, 1999).

"Unisys Not Suing (most) Webmasters for Using GIFs" . Slashdot.

^ "Patent Counts By Class By Year, CY 1977 - 2015" . United States Patent and Trademark Office . Retrieved 2017-03-13 .

^ "Microsoft, Autodesk in patent licensing deal" .

IDG News Service . 2004-12-17. Archived from the original on January 15, 2013 . Retrieved 2012-10-09 .

^ FY 2004 U.S. Licensing Survey , Association of University Technology Managers, 2012-09-08, archived from the original on 2012-10-15 , retrieved 2012-11-07 ^ Acacia Technologies LLC: Company Information , Hoovers [ dead link ] External links [ edit ] Media related to Software patents at Wikimedia Commons Software and Business Methods on the WIPO web site FFII Annotated Bibliography Softwarepatents.eu Archived 2017-06-26 at the Wayback Machine , an introduction to software patents in Europe and Germany (in German) Economic studies [ edit ] Bessen; Hunt (2004), An Empirical Look at Software Patents (PDF) This paper includes a method of identifying software patents that has proved popular with organisations such as the Public Patent Foundation.

[ citation needed ] Bessen, James; Hunt, Robert M. (March 16, 2004), The Software Patent Experiment (PDF) Hahn, Robert; Wallsten, Scott, A Review of Bessen and Hunt's Analysis of Software Patents (PDF) , American Enterprise Institute , archived from the original (PDF) on 2007-09-29 Bessen, James; Hunt, Robert M. (March 10, 2004), A Reply to Hahn and Wallsten (PDF) Federal Trade Commission (October 2003), To Promote Innovation: The Proper Balance of Competition and Patent Law and Policy, A Report by the Federal Trade Commission (PDF) FTC 2003 Report on Patents and Competition , Foundation for a Free Information Infrastructure (FFII), 2004-08-16, archived from the original on 2012-12-04 , retrieved 2012-11-07 – commentary on the FTC "To Promote Innovation" report, 2003 (translated into English) Noel, Michael; Schankerman, Mark (August 2006), CEP Discussion Paper No 740: Strategic Patenting and Software Innovation (PDF) , Centre for Economic Performance, London School of Economics and Political Science Books [ edit ] Bessen, James; Meurer, Michael (2008).

Patent Failure . Princeton University Press.

ISBN 9780691143217 .

Klemens, Ben (2005).

Math You Can't Use: Patents, Copyright, and Software . Brookings Institution Press.

Warshofsky, Fred (October 3, 1994).

The Patent Wars: The Battle to Own the World's Technology . Wiley.

ISBN 978-0-471-59902-9 .

Information Feudalism – Peter Drahos Drahos, Peter (May 1, 2003).

Information Feudalism: Who Owns the Knowledge Economy?

. The New Press.

ISBN 1-56584-804-7 .

Müller, Florian (2006).

No Lobbyists As Such: The War over Software Patents in the European Union (PDF) . Archived from the original (PDF) on 2009-03-26 . Retrieved 2008-05-28 .

– 377-page play-by-play memoir of the story of Florian's part in the campaign over the EU software patent directive.

Leith, Philip (2007).

Software and Patents in Europe . Cambridge University Press.

Papers and presentations [ edit ] Edwards, David, Platonism Is the Law of the Land (PDF) Hunt, R, You can patent that?

(PDF) , archived from the original (PDF) on 2013-01-12 , retrieved 2019-01-21 – Overview of the legal history and trends Szabo, N., Elemental Subject Matter (PDF) , archived from the original (PDF) on 2006-05-19 , retrieved 2006-03-25 – How software came to be patentable in the United States Pellegrini, François (2007), "Analysis of software patentability in Europe (Chapter 11)", Software Patents – Legal Perspectives (PDF) , Amicus Books – ICFAI University Press, pp.

192– 209, ISBN 978-81-314-0653-3 Furutani, Hideo (2003), Patentability of Business Method Inventions in Japan Compared with the US and Europe ( PDF presentation) , Arlington, Virginia; United States Patent and Trademark Office {{ citation }} :  CS1 maint: location missing publisher ( link ) Stallman, Richard M. (May 24, 2004), The Dangers of Software Patents , archived from the original on 2013-01-15 , retrieved 2007-01-29 Abecassis, Alexandre.

"Patenting Software Innovations: A brief overview of the situation in some jurisdictions of interest" (PDF) .

IEEE Canadian Review (55).

Institute of Electrical and Electronics Engineers (IEEE): 24– 27.

Kahin, Brian (April 1990).

"The Software Patent Crisis" .

Technology Review .

Massachusetts Institute of Technology .

NewPP limit report
Parsed by mw‐web.eqiad.main‐74cbc45b88‐w2cbz
Cached time: 20250812000249
Cache expiry: 86236
Reduced expiry: true
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 1.445 seconds
Real time usage: 1.670 seconds
Preprocessor visited node count: 8301/1000000
Revision size: 76101/2097152 bytes
Post‐expand include size: 216920/2097152 bytes
Template argument size: 13293/2097152 bytes
Highest expansion depth: 23/100
Expensive parser function count: 17/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 359976/5000000 bytes
Lua time usage: 0.945/10.000 seconds
Lua memory usage: 8234440/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00% 1485.328      1 -total
 55.57%  825.449      1 Template:Reflist
 19.51%  289.816     45 Template:Cite_web
 14.93%  221.712     31 Template:Citation
 12.26%  182.066     12 Template:Cite_book
  7.89%  117.188      2 Template:Sidebar
  7.32%  108.732      1 Template:Computer_programs,_software_and_patent_law
  5.27%   78.265      1 Template:Short_description
  4.39%   65.262      4 Template:Fix
  3.63%   53.858      1 Template:Commons_category Saved in parser cache with key enwiki:pcache:76266:|#|:idhash:canonical and timestamp 20250812000249 and revision id 1293186020. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Software_patent&oldid=1293186020 " Category : Software patent law Hidden categories: CS1 errors: generic name Webarchive template wayback links Pages using cite court with unknown parameters All articles with dead external links Articles with dead external links from December 2021 Articles with short description Short description is different from Wikidata All accuracy disputes Articles with disputed statements from April 2023 Wikipedia articles in need of updating from January 2022 All Wikipedia articles in need of updating Articles containing potentially dated statements from 2015 All articles containing potentially dated statements All articles with unsourced statements Articles with unsourced statements from November 2008 Commons category link is on Wikidata Commons category link from Wikidata Articles with unsourced statements from May 2025 CS1 maint: location missing publisher This page was last edited on 31 May 2025, at 07:01 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Software patent 26 languages Add topic

