Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Informal definition 2 Formal definition Toggle Formal definition subsection 2.1 Equivalent definitions 3 Properties Toggle Properties subsection 3.1 Not computably enumerable 3.2 Properties as a field 3.3 Non-computability of the ordering 3.4 Other properties 4 Non-computable numbers 5 Digit strings and the Cantor and Baire spaces 6 Use in place of the reals 7 Implementations of exact arithmetic 8 See also 9 Notes 10 References 11 Further reading Toggle the table of contents Computable number 19 languages العربية Bosanski Català Dansk Deutsch Español Français 한국어 Հայերեն עברית Lombard 日本語 Português Русский Slovenščina Svenska Türkçe Українська 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Real number that can be computed within arbitrary precision Not to be confused with constructible number .

π can be computed to arbitrary precision, while almost every real number is not computable.

In mathematics , computable numbers are the real numbers that can be computed to within any desired precision by a finite, terminating algorithm . They are also known as the recursive numbers , [ 1 ] effective numbers , [ 2 ] computable reals , [ 3 ] or recursive reals .

[ 4 ] The concept of a computable real number was introduced by Émile Borel in 1912, using the intuitive notion of computability available at the time.

[ 5 ] Equivalent definitions can be given using μ-recursive functions , Turing machines , or λ-calculus as the formal representation of algorithms. The computable numbers form a real closed field and can be used in the place of real numbers for many, but not all, mathematical purposes.

[ citation needed ] Informal definition [ edit ] In the following, Marvin Minsky defines the numbers to be computed in a manner similar to those defined by Alan Turing in 1936; [ 6 ] i.e., as "sequences of digits interpreted as decimal fractions" between 0 and 1: [ 7 ] A computable number [is] one for which there is a Turing machine which, given n on its initial tape, terminates with the n th digit of that number [encoded on its tape].

The key notions in the definition are (1) that some n is specified at the start, (2) for any n the computation only takes a finite number of steps, after which the machine produces the desired output and terminates.

An alternate form of (2) – the machine successively prints all n of the digits on its tape, halting after printing the n th – emphasizes Minsky's observation: (3) That by use of a Turing machine, a finite definition – in the form of the machine's state table – is being used to define what is a potentially infinite string of decimal digits.

This is however not the modern definition which only requires the result be accurate to within any given accuracy. The informal definition above is subject to a rounding problem called the table-maker's dilemma whereas the modern definition is not.

Formal definition [ edit ] A real number a is computable if it can be approximated by some computable function f : N → → Z {\displaystyle f:\mathbb {N} \to \mathbb {Z} } in the following manner: given any positive integer n , the function produces an integer f ( n ) such that: f ( n ) − − 1 n ≤ ≤ a ≤ ≤ f ( n ) + 1 n .

{\displaystyle {f(n)-1 \over n}\leq a\leq {f(n)+1 \over n}.} A complex number is called computable if its real and imaginary parts are computable.

Equivalent definitions [ edit ] There are two similar definitions that are equivalent: There exists a computable function which, given any positive rational error bound ε ε {\displaystyle \varepsilon } , produces a rational number r such that | r − − a | ≤ ≤ ε ε .

{\displaystyle |r-a|\leq \varepsilon .} There is a computable sequence of rational numbers q i {\displaystyle q_{i}} converging to a {\displaystyle a} such that | q i − − q i + 1 | < 2 − − i {\displaystyle |q_{i}-q_{i+1}|<2^{-i}\,} for each i .

There is another equivalent definition of computable numbers via computable Dedekind cuts . A computable Dedekind cut is a computable function D {\displaystyle D\;} which when provided with a rational number r {\displaystyle r} as input returns D ( r ) = t r u e {\displaystyle D(r)=\mathrm {true} \;} or D ( r ) = f a l s e {\displaystyle D(r)=\mathrm {false} \;} , satisfying the following conditions: ∃ ∃ r D ( r ) = t r u e {\displaystyle \exists rD(r)=\mathrm {true} \;} ∃ ∃ r D ( r ) = f a l s e {\displaystyle \exists rD(r)=\mathrm {false} \;} ( D ( r ) = t r u e ) ∧ ∧ ( D ( s ) = f a l s e ) ⇒ ⇒ r < s {\displaystyle (D(r)=\mathrm {true} )\wedge (D(s)=\mathrm {false} )\Rightarrow r<s\;} D ( r ) = t r u e ⇒ ⇒ ∃ ∃ s > r , D ( s ) = t r u e .

{\displaystyle D(r)=\mathrm {true} \Rightarrow \exists s>r,D(s)=\mathrm {true} .\;} An example is given by a program D that defines the cube root of 3. Assuming q > 0 {\displaystyle q>0\;} this is defined by: p 3 < 3 q 3 ⇒ ⇒ D ( p / q ) = t r u e {\displaystyle p^{3}<3q^{3}\Rightarrow D(p/q)=\mathrm {true} \;} p 3 > 3 q 3 ⇒ ⇒ D ( p / q ) = f a l s e .

{\displaystyle p^{3}>3q^{3}\Rightarrow D(p/q)=\mathrm {false} .\;} A real number is computable if and only if there is a computable Dedekind cut D corresponding to it. The function D is unique for each computable number (although of course two different programs may provide the same function).

Properties [ edit ] Not computably enumerable [ edit ] Assigning a Gödel number to each Turing machine definition produces a subset S {\displaystyle S} of the natural numbers corresponding to the computable numbers and identifies a surjection from S {\displaystyle S} to the computable numbers. There are only countably many Turing machines, showing that the computable numbers are subcountable . The set S {\displaystyle S} of these Gödel numbers, however, is not computably enumerable (and consequently, neither are subsets of S {\displaystyle S} that are defined in terms of it). This is because there is no algorithm to determine which Gödel numbers correspond to Turing machines that produce computable reals. In order to produce a computable real, a Turing machine must compute a total function , but the corresponding decision problem is in Turing degree 0′′ . Consequently, there is no surjective computable function from the natural numbers to the set S {\displaystyle S} of machines representing computable reals, and Cantor's diagonal argument cannot be used constructively to demonstrate uncountably many of them.

While the set of real numbers is uncountable , the set of computable numbers is classically countable and thus almost all real numbers are not computable. Here, for any given computable number x , {\displaystyle x,} the well ordering principle provides that there is a minimal element in S {\displaystyle S} which corresponds to x {\displaystyle x} , and therefore there exists a subset consisting of the minimal elements, on which the map is a bijection . The inverse of this bijection is an injection into the natural numbers of the computable numbers, proving that they are countable. But, again, this subset is not computable, even though the computable reals are themselves ordered.

Properties as a field [ edit ] The arithmetical operations on computable numbers are themselves computable in the sense that whenever real numbers a and b are computable then the following real numbers are also computable: a + b , a - b , ab , and a / b if b is nonzero.
These operations are actually uniformly computable ; for example, there is a Turing machine which on input ( A , B , ϵ ϵ {\displaystyle \epsilon } ) produces output r , where A is the description of a Turing machine approximating a , B is the description of a Turing machine approximating b , and r is an ϵ ϵ {\displaystyle \epsilon } approximation of a + b .

The fact that computable real numbers form a field was first proved by Henry Gordon Rice in 1954.

[ 8 ] Computable reals however do not form a computable field , because the definition of a computable field requires effective equality.

Non-computability of the ordering [ edit ] The order relation on the computable numbers is not computable. Let A be the description of a Turing machine approximating the number a {\displaystyle a} . Then there is no Turing machine which on input A outputs "YES" if a > 0 {\displaystyle a>0} and "NO" if a ≤ ≤ 0.

{\displaystyle a\leq 0.} To see why, suppose the machine described by A keeps outputting 0 as ϵ ϵ {\displaystyle \epsilon } approximations. It is not clear how long to wait before deciding that the machine will never output an approximation which forces a to be positive. Thus the machine will eventually have to guess that the number will equal 0, in order to produce an output; the sequence may later become different from 0. This idea can be used to show that the machine is incorrect on some sequences if it computes a total function. A similar problem occurs when the computable reals are represented as Dedekind cuts . The same holds for the equality relation: the equality test is not computable.

While the full order relation is not computable, the restriction of it to pairs of unequal numbers is computable. That is, there is a program that takes as input two Turing machines A and B approximating numbers a {\displaystyle a} and b {\displaystyle b} , where a ≠ ≠ b {\displaystyle a\neq b} , and outputs whether a < b {\displaystyle a<b} or a > b .

{\displaystyle a>b.} It is sufficient to use ϵ ϵ {\displaystyle \epsilon } -approximations where ϵ ϵ < | b − − a | / 2 , {\displaystyle \epsilon <|b-a|/2,} so by taking increasingly small ϵ ϵ {\displaystyle \epsilon } (approaching 0), one eventually can decide whether a < b {\displaystyle a<b} or a > b .

{\displaystyle a>b.} Other properties [ edit ] The computable real numbers do not share all the properties of the real numbers used in analysis. For example, the least upper bound of a bounded increasing computable sequence of computable real numbers need not be a computable real number.

[ 9 ] A sequence with this property is known as a Specker sequence , as the first construction is due to Ernst Specker in 1949.

[ 10 ] Despite the existence of counterexamples such as these, parts of calculus and real analysis can be developed in the field of computable numbers, leading to the study of computable analysis .

The set of computable real numbers (as well as every countable, densely ordered subset of computable reals without ends) is order-isomorphic to the set of rational numbers.

Non-computable numbers [ edit ] Every computable number is arithmetically definable , but not vice versa. There are many arithmetically definable, non-computable real numbers, including: any number that encodes the solution of the halting problem (or any other undecidable problem ) according to a chosen encoding scheme.

Chaitin's constant , Ω Ω {\displaystyle \Omega } , which is a type of real number that is Turing equivalent to the halting problem.

Both of these examples in fact define an infinite set of definable, uncomputable numbers, one for each universal Turing machine .
A real number is computable if and only if the set of natural numbers it represents (when written in binary and viewed as a characteristic function) is computable.

Digit strings and the Cantor and Baire spaces [ edit ] Turing's original paper defined computable numbers as follows: A real number is computable if its digit sequence can be produced by some algorithm or Turing machine. The algorithm takes an integer n ≥ ≥ 1 {\displaystyle n\geq 1} as input and produces the n {\displaystyle n} -th digit of the real number's decimal expansion as output.

(The decimal expansion of a only refers to the digits following the decimal point.) Turing was aware that this definition is equivalent to the ϵ ϵ {\displaystyle \epsilon } -approximation definition given above. The argument proceeds as follows: if a number is computable in the Turing sense, then it is also computable in the ϵ ϵ {\displaystyle \epsilon } sense: if n > log 10 ⁡ ⁡ ( 1 / ϵ ϵ ) {\displaystyle n>\log _{10}(1/\epsilon )} , then the first n digits of the decimal expansion for a provide an ϵ ϵ {\displaystyle \epsilon } approximation of a . For the converse, we pick an ϵ ϵ {\displaystyle \epsilon } computable real number a and generate increasingly precise approximations until the n th digit after the decimal point is certain. This always generates a decimal expansion equal to a but it may improperly end in an infinite sequence of 9's in which case it must have a finite (and thus computable) proper decimal expansion.

Unless certain topological properties of the real numbers are relevant, it is often more convenient to deal with elements of 2 ω ω {\displaystyle 2^{\omega }} (total 0,1 valued functions) instead of reals numbers in [ 0 , 1 ] {\displaystyle [0,1]} . The members of 2 ω ω {\displaystyle 2^{\omega }} can be identified with binary decimal expansions, but since the decimal expansions .

d 1 d 2 … … d n 0111 … … {\displaystyle .d_{1}d_{2}\ldots d_{n}0111\ldots } and .

d 1 d 2 … … d n 10 {\displaystyle .d_{1}d_{2}\ldots d_{n}10} denote the same real number, the interval [ 0 , 1 ] {\displaystyle [0,1]} can only be bijectively (and homeomorphically under the subset topology) identified with the subset of 2 ω ω {\displaystyle 2^{\omega }} not ending in all 1's.

Note that this property of decimal expansions means that it is impossible to effectively identify the computable real numbers defined in terms of a decimal expansion and those defined in the ϵ ϵ {\displaystyle \epsilon } approximation sense. Hirst has shown that there is no algorithm which takes as input the description of a Turing machine which produces ϵ ϵ {\displaystyle \epsilon } approximations for the computable number a , and produces as output a Turing machine which enumerates the digits of a in the sense of Turing's definition.

[ 11 ] Similarly, it means that the arithmetic operations on the computable reals are not effective on their decimal representations as when adding decimal numbers. In order to produce one digit, it may be necessary to look arbitrarily far to the right to determine if there is a carry to the current location. This lack of uniformity is one reason why the contemporary definition of computable numbers uses ϵ ϵ {\displaystyle \epsilon } approximations rather than decimal expansions.

However, from a computability theoretic or measure theoretic perspective, the two structures 2 ω ω {\displaystyle 2^{\omega }} and [ 0 , 1 ] {\displaystyle [0,1]} are essentially identical. Thus, computability theorists often refer to members of 2 ω ω {\displaystyle 2^{\omega }} as reals. While 2 ω ω {\displaystyle 2^{\omega }} is totally disconnected , for questions about Π Π 1 0 {\displaystyle \Pi _{1}^{0}} classes or randomness it is easier to work in 2 ω ω {\displaystyle 2^{\omega }} .

Elements of ω ω ω ω {\displaystyle \omega ^{\omega }} are sometimes called reals as well and though containing a homeomorphic image of R {\displaystyle \mathbb {R} } , ω ω ω ω {\displaystyle \omega ^{\omega }} isn't even locally compact (in addition to being totally disconnected). This leads to genuine differences in the computational properties. For instance the x ∈ ∈ R {\displaystyle x\in \mathbb {R} } satisfying ∀ ∀ ( n ∈ ∈ ω ω ) ϕ ϕ ( x , n ) {\displaystyle \forall (n\in \omega )\phi (x,n)} , with ϕ ϕ ( x , n ) {\displaystyle \phi (x,n)} quantifier free, must be computable while the unique x ∈ ∈ ω ω ω ω {\displaystyle x\in \omega ^{\omega }} satisfying a universal formula may have an arbitrarily high position in the hyperarithmetic hierarchy .

Use in place of the reals [ edit ] The computable numbers include the specific real numbers which appear in practice, including all real algebraic numbers , as well as e , π , and many other transcendental numbers . Though the computable reals exhaust those reals we can calculate or approximate, the assumption that all reals are computable leads to substantially different conclusions about the real numbers. The question naturally arises of whether it is possible to dispose of the full set of reals and use computable numbers for all of mathematics. This idea is appealing from a constructivist point of view, and has been pursued by the Russian school of constructive mathematics.

[ 12 ] To actually develop analysis over computable numbers, some care must be taken. For example, if one uses the classical definition of a sequence, the set of computable numbers is not closed under the basic operation of taking the supremum of a bounded sequence (for example, consider a Specker sequence , see the section above). This difficulty is addressed by considering only sequences which have a computable modulus of convergence . The resulting mathematical theory is called computable analysis .

Implementations of exact arithmetic [ edit ] Computer packages representing real numbers as programs computing approximations have been proposed as early as 1985, under the name "exact arithmetic".

[ 13 ] Modern examples include the CoRN library (Coq), [ 14 ] and the RealLib package (C++).

[ 15 ] A related line of work is based on taking a real RAM program and running it with rational or floating-point numbers of sufficient precision, such as the iRRAM package.

[ 16 ] See also [ edit ] Constructible number Definable number Semicomputable function Transcomputational problem Notes [ edit ] ^ Mazur, Stanisław (1963).

Grzegorczyk, Andrzej ; Rasiowa, Helena (eds.).

Computable analysis . Rozprawy Matematyczne. Vol. 33.

Institute of Mathematics of the Polish Academy of Sciences . p. 4.

^ van der Hoeven (2006) .

^ Pour-El, Marian Boykan ; Richards, Ian (1983).

"Noncomputability in analysis and physics: a complete determination of the class of noncomputable linear operators" .

Advances in Mathematics .

48 (1): 44– 74.

doi : 10.1016/0001-8708(83)90004-X .

MR 0697614 .

^ Rogers, Hartley, Jr. (1959). "The present theory of Turing machine computability".

Journal of the Society for Industrial and Applied Mathematics .

7 : 114– 130.

doi : 10.1137/0107009 .

MR 0099923 .

{{ cite journal }} :  CS1 maint: multiple names: authors list ( link ) ^ P. Odifreddi, Classical Recursion Theory (1989), p.8. North-Holland, 0-444-87295-7 ^ Turing (1936) .

^ Minsky (1967) .

^ Rice (1954) .

^ Bridges & Richman (1987) , p. 58.

^ Specker (1949) .

^ Hirst (2007) .

^ Kushner, Boris A. (2006). "The constructive mathematics of A. A. Markov".

The American Mathematical Monthly .

113 (6): 559– 566.

doi : 10.2307/27641983 .

JSTOR 27641983 .

MR 2231143 .

^ Boehm, Hans-J.; Cartwright, Robert; Riggle, Mark; O'Donnell, Michael J. (8 August 1986).

"Exact real arithmetic: A case study in higher order programming" (PDF) .

Proceedings of the 1986 ACM conference on LISP and functional programming - LFP '86 . pp.

162– 173.

doi : 10.1145/319838.319860 .

ISBN 0897912004 .

S2CID 12934546 .

Archived (PDF) from the original on 2020-09-24.

^ O’Connor, Russell (2008). "Certified Exact Transcendental Real Number Computation in Coq".

Theorem Proving in Higher Order Logics . Lecture Notes in Computer Science. Vol. 5170. pp.

246– 261.

arXiv : 0805.2438 .

doi : 10.1007/978-3-540-71067-7_21 .

ISBN 978-3-540-71065-3 .

S2CID 17959745 .

^ Lambov (2015) .

^ Gowland, Paul; Lester, David (2001).

"A Survey of Exact Arithmetic Implementations" (PDF) .

Computability and Complexity in Analysis . Lecture Notes in Computer Science. Vol. 2064. Springer. pp.

30– 47.

doi : 10.1007/3-540-45335-0_3 .

ISBN 978-3-540-42197-9 .

Archived (PDF) from the original on 2022-03-24.

References [ edit ] Bridges, Douglas; Richman, Fred (1987).

Varieties of Constructive Mathematics . Cambridge University Press.

ISBN 978-0-521-31802-0 .

Hirst, Jeffry L. (2007).

"Representations of reals in reverse mathematics" .

Bulletin of the Polish Academy of Sciences, Mathematics .

55 (4): 303– 316.

doi : 10.4064/ba55-4-2 .

Lambov, Branimir (5 April 2015).

"RealLib" . GitHub.

Minsky, Marvin (1967). "9. The Computable Real Numbers".

Computation: Finite and Infinite Machines . Prentice-Hall.

ISBN 0-13-165563-9 .

OCLC 0131655639 .

Rice, Henry Gordon (1954).

"Recursive real numbers" .

Proceedings of the American Mathematical Society .

5 (5): 784– 791.

doi : 10.1090/S0002-9939-1954-0063328-5 .

JSTOR 2031867 .

Specker, E.

(1949).

"Nicht konstruktiv beweisbare Sätze der Analysis" (PDF) .

Journal of Symbolic Logic .

14 (3): 145– 158.

doi : 10.2307/2267043 .

JSTOR 2267043 .

S2CID 11382421 .

Archived (PDF) from the original on 2018-07-21.

Turing, A. M. (1936). "On Computable Numbers, with an Application to the Entscheidungsproblem".

Proceedings of the London Mathematical Society . Series 2.

42 (1) (published 1937): 230– 65.

doi : 10.1112/plms/s2-42.1.230 .

S2CID 73712 .

Turing, A. M. (1938).

"On Computable Numbers, with an Application to the Entscheidungsproblem: A correction" .

Proceedings of the London Mathematical Society . Series 2.

43 (6) (published 1937): 544– 6.

doi : 10.1112/plms/s2-43.6.544 .

Computable numbers (and Turing's a-machines) were introduced in this paper; the definition of computable numbers uses infinite decimal sequences.

van der Hoeven, Joris (2006).

"Computations with effective real numbers" .

Theoretical Computer Science .

351 (1): 52– 60.

doi : 10.1016/j.tcs.2005.09.060 .

Further reading [ edit ] Aberth, Oliver (1968).

"Analysis in the Computable Number Field" .

Journal of the Association for Computing Machinery .

15 (2): 276– 299.

doi : 10.1145/321450.321460 .

S2CID 18135005 .

This paper describes the development of the calculus over the computable number field.

Bishop, Errett; Bridges, Douglas (1985).

Constructive Analysis . Springer.

ISBN 0-387-15066-8 .

Stoltenberg-Hansen, V.; Tucker, J.V. (1999).

"Computable Rings and Fields" . In Griffor, E.R. (ed.).

Handbook of Computability Theory . Elsevier. pp.

363– 448.

ISBN 978-0-08-053304-9 .

Weihrauch, Klaus (2000).

Computable analysis . Texts in Theoretical Computer Science. Springer.

ISBN 3-540-66817-9 .

§1.3.2 introduces the definition by nested sequences of intervals converging to the singleton real. Other representations are discussed in §4.1.

Weihrauch, Klaus (1995).

A simple introduction to computable analysis . Fernuniv., Fachbereich Informatik.

v t e Number systems Sets of definable numbers Natural numbers ( N {\displaystyle \mathbb {N} } ) Integers ( Z {\displaystyle \mathbb {Z} } ) Rational numbers ( Q {\displaystyle \mathbb {Q} } ) Constructible numbers Algebraic numbers ( A {\displaystyle \mathbb {A} } ) Closed-form numbers Periods ( P {\displaystyle {\mathcal {P}}} ) Computable numbers Arithmetical numbers Set-theoretically definable numbers Gaussian integers Gaussian rationals Eisenstein integers Composition algebras Division algebras : Real numbers ( R {\displaystyle \mathbb {R} } ) Complex numbers ( C {\displaystyle \mathbb {C} } ) Quaternions ( H {\displaystyle \mathbb {H} } ) Octonions ( O {\displaystyle \mathbb {O} } ) Split types Over R {\displaystyle \mathbb {R} } : Split-complex numbers Split-quaternions Split-octonions Over C {\displaystyle \mathbb {C} } : Bicomplex numbers Biquaternions Bioctonions Other hypercomplex Dual numbers Dual quaternions Dual-complex numbers Hyperbolic quaternions Sedenions ( S {\displaystyle \mathbb {S} } ) Trigintaduonions ( T {\displaystyle \mathbb {T} } ) Split-biquaternions Multicomplex numbers Geometric algebra / Clifford algebra Algebra of physical space Spacetime algebra Plane-based geometric algebra Infinities and infinitesimals Cardinal numbers Extended natural numbers Extended real numbers Projective Extended complex numbers Hyperreal numbers Levi-Civita field Ordinal numbers Supernatural numbers Surreal numbers Superreal numbers Other types Irrational numbers Fuzzy numbers Transcendental numbers p -adic numbers ( p -adic solenoids ) Profinite integers Normal numbers Classification List NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐mzfdj
Cached time: 20250812002633
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.513 seconds
Real time usage: 0.684 seconds
Preprocessor visited node count: 2718/1000000
Revision size: 24155/2097152 bytes
Post‐expand include size: 67391/2097152 bytes
Template argument size: 2669/2097152 bytes
Highest expansion depth: 12/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 77449/5000000 bytes
Lua time usage: 0.299/10.000 seconds
Lua memory usage: 7586426/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  461.317      1 -total
 26.36%  121.589     10 Template:Cite_book
 25.11%  115.831      1 Template:Reflist
 14.82%   68.368      1 Template:Number_systems
 14.41%   66.490      1 Template:Navbox
 12.99%   59.939      1 Template:Short_description
 12.57%   58.002     10 Template:Cite_journal
 11.21%   51.704      8 Template:Sfnp
  8.17%   37.670      2 Template:Pagetype
  6.74%   31.080      1 Template:Citation_needed Saved in parser cache with key enwiki:pcache:6206:|#|:idhash:canonical and timestamp 20250812002633 and revision id 1303836409. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Computable_number&oldid=1303836409 " Categories : Computability theory Theory of computation Hidden categories: CS1 maint: multiple names: authors list Articles with short description Short description is different from Wikidata All articles with unsourced statements Articles with unsourced statements from October 2024 This page was last edited on 2 August 2025, at 09:54 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Computable number 19 languages Add topic

