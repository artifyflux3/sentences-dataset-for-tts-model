Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Algebraic fitting of functions to data points Toggle Algebraic fitting of functions to data points subsection 1.1 Fitting lines and polynomial functions to data points 1.2 Fitting other functions to data points 2 Geometric fitting of plane curves to data points Toggle Geometric fitting of plane curves to data points subsection 2.1 Fitting a circle by geometric fit 2.2 Fitting an ellipse by geometric fit 3 Fitting surfaces 4 Software 5 See also 6 References 7 Further reading Toggle the table of contents Curve fitting 26 languages Afrikaans Alemannisch العربية Català Deutsch Eesti Español Euskara فارسی Français हिन्दी Ido Italiano ಕನ್ನಡ Magyar 日本語 Norsk bokmål Norsk nynorsk Polski Português Русский Simple English Sunda Türkçe 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Function fitting ) Process of constructing a curve that has the best fit to a series of data points "Best fit" redirects here. For placing ("fitting") variable-sized objects in storage, see Fragmentation (computing) .

Fitting of a noisy curve by an asymmetrical peak model, with an iterative process ( Gauss–Newton algorithm with variable damping factor α) Curve fitting [ 1 ] [ 2 ] is the process of constructing a curve , or mathematical function , that has the best fit to a series of data points , [ 3 ] possibly subject to constraints.

[ 4 ] [ 5 ] Curve fitting can involve either interpolation , [ 6 ] [ 7 ] where an exact fit to the data is required, or smoothing , [ 8 ] [ 9 ] in which a "smooth" function is constructed that approximately fits the data.  A related topic is regression analysis , [ 10 ] [ 11 ] which focuses more on questions of statistical inference such as how much uncertainty is present in a curve that is fitted to data observed with random errors. Fitted curves can be used as an aid for data visualization, [ 12 ] [ 13 ] to infer values of a function where no data are available, [ 14 ] and to summarize the relationships among two or more variables.

[ 15 ] Extrapolation refers to the use of a fitted curve beyond the range of the observed data, [ 16 ] and is subject to a degree of uncertainty [ 17 ] since it may reflect the method used to construct the curve as much as it reflects the observed data.

For linear-algebraic analysis of data, "fitting" usually means trying to find the curve that minimizes the vertical ( y -axis) displacement of a point from the curve (e.g., ordinary least squares ). However, for graphical and image applications, geometric fitting seeks to provide the best visual fit; which usually means trying to minimize the orthogonal distance to the curve (e.g., total least squares ), or to otherwise include both axes of displacement of a point from the curve. Geometric fits are not popular because they usually require non-linear and/or iterative calculations, although they have the advantage of a more aesthetic and geometrically accurate result.

[ 18 ] [ 19 ] [ 20 ] Algebraic fitting of functions to data points [ edit ] Most commonly, one fits a function of the form y = f ( x ) .

Fitting lines and polynomial functions to data points [ edit ] Main article: Polynomial regression See also: Polynomial interpolation Polynomial curves fitting points generated with a sine function. The black dotted line is the "true" data, the red line is a first degree polynomial , the green line is second degree , the orange line is third degree and the blue line is fourth degree .

The first degree polynomial equation y = a x + b {\displaystyle y=ax+b\;} is a line with slope a .  A line will connect any two points, so a first degree polynomial equation is an exact fit through any two points with distinct x coordinates.

If the order of the equation is increased to a second degree polynomial, the following results: y = a x 2 + b x + c .

{\displaystyle y=ax^{2}+bx+c\;.} This will exactly fit a simple curve to three points.

If the order of the equation is increased to a third degree polynomial, the following is obtained: y = a x 3 + b x 2 + c x + d .

{\displaystyle y=ax^{3}+bx^{2}+cx+d\;.} This will exactly fit four points.

A more general statement would be to say it will exactly fit four constraints .  Each constraint can be a point, angle , or curvature (which is the reciprocal of the radius of an osculating circle ).  Angle and curvature constraints are most often added to the ends of a curve, and in such cases are called end conditions .  Identical end conditions are frequently used to ensure a smooth transition between polynomial curves contained within a single spline .  Higher-order constraints, such as "the change in the rate of curvature", could also be added.  This, for example, would be useful in highway cloverleaf design to understand the rate of change of the forces applied to a car (see jerk ), as it follows the cloverleaf, and to set reasonable speed limits, accordingly.

The first degree polynomial equation could also be an exact fit for a single point and an angle while the third degree polynomial equation could also be an exact fit for two points, an angle constraint, and a curvature constraint.  Many other combinations of constraints are possible for these and for higher order polynomial equations.

If there are more than n + 1 constraints ( n being the degree of the polynomial), the polynomial curve can still be run through those constraints. An exact fit to all constraints is not certain (but might happen, for example, in the case of a first degree polynomial exactly fitting three collinear points ). In general, however, some method is then needed to evaluate each approximation. The least squares method is one way to compare the deviations.

There are several reasons given to get an approximate fit when it is possible to simply increase the degree of the polynomial equation and get an exact match.: Even if an exact match exists, it does not necessarily follow that it can be readily discovered. Depending on the algorithm used there may be a divergent case, where the exact fit cannot be calculated, or it might take too much computer time to find the solution. This situation might require an approximate solution.

The effect of averaging out questionable data points in a sample, rather than distorting the curve to fit them exactly, may be desirable.

Runge's phenomenon : high order polynomials can be highly oscillatory. If a curve runs through two points A and B , it would be expected that the curve would run somewhat near the midpoint of A and B , as well.  This may not happen with high-order polynomial curves; they may even have values that are very large in positive or negative magnitude .  With low-order polynomials, the curve is more likely to fall near the midpoint (it's even guaranteed to exactly run through the midpoint on a first degree polynomial).

Low-order polynomials tend to be smooth and high order polynomial curves tend to be "lumpy".  To define this more precisely, the maximum number of inflection points possible in a polynomial curve is n-2 , where n is the order of the polynomial equation.  An inflection point is a location on the curve where it switches from a positive radius to negative.  We can also say this is where it transitions from "holding water" to "shedding water".  Note that it is only "possible" that high order polynomials will be lumpy; they could also be smooth, but there is no guarantee of this, unlike with low order polynomial curves.  A fifteenth degree polynomial could have, at most, thirteen inflection points, but could also have eleven, or nine or any odd number down to one. (Polynomials with even numbered degree could have any even number of inflection points from n - 2 down to zero.) The degree of the polynomial curve being higher than needed for an exact fit is undesirable for all the reasons listed previously for high order polynomials, but also leads to a case where there are an infinite number of solutions.  For example, a first degree polynomial (a line) constrained by only a single point, instead of the usual two, would give an infinite number of solutions.  This brings up the problem of how to compare and choose just one solution, which can be a problem for both software and humans. Because of this, it is usually best to choose as low a degree as possible for an exact match on all constraints, and perhaps an even lower degree, if an approximate fit is acceptable.

Relation between wheat yield and soil salinity [ 21 ] Fitting other functions to data points [ edit ] Other types of curves, such as trigonometric functions (such as sine and cosine), may also be used, in certain cases.

In spectroscopy, data may be fitted with Gaussian , Lorentzian , Voigt and related functions.

In biology, ecology, demography, epidemiology, and many other disciplines, the growth of a population , the spread of infectious disease, etc. can be fitted using the logistic function .

In agriculture the inverted logistic sigmoid function (S-curve) is used to describe the relation between crop yield and growth factors. The blue figure was made by a sigmoid regression of data measured in farm lands. It can be seen that initially, i.e. at low soil salinity, the crop yield reduces slowly at increasing soil salinity, while thereafter the decrease progresses faster.

Geometric fitting of plane curves to data points [ edit ] If a function of the form y = f ( x ) {\displaystyle y=f(x)} cannot be postulated, one can still try to fit a plane curve .

Other types of curves, such as conic sections (circular, elliptical, parabolic, and hyperbolic arcs) or trigonometric functions (such as sine and cosine), may also be used, in certain cases.  For example, trajectories of objects under the influence of gravity follow a parabolic path, when air resistance is ignored.  Hence, matching trajectory data points to a parabolic curve would make sense.  Tides follow sinusoidal patterns, hence tidal data points should be matched to a sine wave, or the sum of two sine waves of different periods, if the effects of the Moon and Sun are both considered.

For a parametric curve , it is effective to fit each of its coordinates as a separate function of arc length ; assuming that data points can be ordered, the chord distance may be used.

[ 22 ] Fitting a circle by geometric fit [ edit ] Circle fitting with the Coope method, the points describing a circle arc, centre (1 ; 1), radius 4 different models of ellipse fitting Ellipse fitting minimising the algebraic distance (Fitzgibbon method) Coope [ 23 ] approaches the problem of trying to find the best visual fit of circle to a set of 2D data points. The method elegantly transforms the ordinarily non-linear problem into a linear problem that can be solved without using iterative numerical methods, and is hence much faster than previous techniques.

Fitting an ellipse by geometric fit [ edit ] The above technique is extended to general ellipses [ 24 ] by adding a non-linear step, resulting in a method that is fast, yet finds visually pleasing ellipses of arbitrary orientation and displacement.

Fitting surfaces [ edit ] Further information: Computer representation of surfaces See also: Multivariate interpolation and Smoothing Note that while this discussion was in terms of 2D curves, much of this logic also extends to 3D surfaces, each patch of which is defined by a net of curves in two parametric directions, typically called u and v .  A surface may be composed of one or more surface patches in each direction.

Software [ edit ] Many statistical packages such as R and numerical software such as the gnuplot , GNU Scientific Library , Igor Pro , MLAB , Maple , MATLAB , TK Solver 6.0, Scilab , Mathematica , GNU Octave , and SciPy include commands for doing curve fitting in a variety of scenarios. There are also programs specifically written to do curve fitting; they can be found in the lists of statistical and numerical-analysis programs as well as in Category:Regression and curve fitting software .

See also [ edit ] Calibration curve Curve-fitting compaction Discretization Estimation theory Function approximation Genetic programming Goodness of fit Least-squares adjustment Levenberg–Marquardt algorithm Line fitting Linear interpolation Linear trend estimation Mathematical model Multi expression programming Multi-curve framework and Bootstrapping (finance) Nonlinear regression Overfitting Plane curve Probability distribution fitting Progressive-iterative approximation method Sinusoidal model Smoothing Splines ( interpolating , smoothing ) Time series Total least squares References [ edit ] ^ Sandra Lach Arlinghaus, PHB Practical Handbook of Curve Fitting. CRC Press, 1994.

^ William M. Kolb.

Curve Fitting for Programmable Calculators . Syntec, Incorporated, 1984.

^ S.S. Halli, K.V. Rao. 1992. Advanced Techniques of Population Analysis.

ISBN 0306439972 Page 165 ( cf . ... functions are fulfilled if we have a good to moderate fit for the observed data.) ^ The Signal and the Noise: Why So Many Predictions Fail-but Some Don't.

By Nate Silver ^ Data Preparation for Data Mining : Text. By Dorian Pyle.

^ Numerical Methods in Engineering with MATLAB®. By Jaan Kiusalaas. Page 24.

^ Numerical Methods in Engineering with Python 3 . By Jaan Kiusalaas. Page 21.

^ Numerical Methods of Curve Fitting . By P. G. Guest, Philip George Guest. Page 349.

^ See also: Mollifier ^ Fitting Models to Biological Data Using Linear and Nonlinear Regression . By Harvey Motulsky, Arthur Christopoulos.

^ Regression Analysis By Rudolf J. Freund, William J. Wilson, Ping Sa. Page 269.

^ Visual Informatics. Edited by Halimah Badioze Zaman, Peter Robinson, Maria Petrou, Patrick Olivier, Heiko Schröder. Page 689.

^ Numerical Methods for Nonlinear Engineering Models . By John R. Hauser. Page 227.

^ Methods of Experimental Physics: Spectroscopy, Volume 13, Part 1. By Claire Marton. Page 150.

^ Encyclopedia of Research Design, Volume 1. Edited by Neil J. Salkind. Page 266.

^ Community Analysis and Planning Techniques . By Richard E. Klosterman. Page 1.

^ An Introduction to Risk and Uncertainty in the Evaluation of Environmental Investments. DIANE Publishing.

Pg 69 ^ Ahn, Sung-Joon (December 2008), "Geometric Fitting of Parametric Curves and Surfaces" (PDF) , Journal of Information Processing Systems , 4 (4): 153– 158, doi : 10.3745/JIPS.2008.4.4.153 , archived from the original (PDF) on 2014-03-13 ^ Chernov, N.; Ma, H. (2011), "Least squares fitting of quadratic curves and surfaces", in Yoshida, Sota R. (ed.), Computer Vision , Nova Science Publishers, pp.

285– 302, ISBN 9781612093994 ^ Liu, Yang; Wang, Wenping (2008), "A Revisit to Least Squares Orthogonal Distance Fitting of Parametric Curves and Surfaces", in Chen, F.; Juttler, B. (eds.), Advances in Geometric Modeling and Processing , Lecture Notes in Computer Science, vol. 4975, pp.

384– 397, CiteSeerX 10.1.1.306.6085 , doi : 10.1007/978-3-540-79246-8_29 , ISBN 978-3-540-79245-1 ^ Calculator for sigmoid regression ^ p.51 in Ahlberg & Nilson (1967) The theory of splines and their applications , Academic Press, 1967 [1] ^ Coope, I.D. (1993). "Circle fitting by linear and nonlinear least squares".

Journal of Optimization Theory and Applications .

76 (2): 381– 388.

doi : 10.1007/BF00939613 .

hdl : 10092/11104 .

S2CID 59583785 .

^ Paul Sheer, A software assistant for manual stereo photometrology , M.Sc. thesis, 1997 Further reading [ edit ] Wikimedia Commons has media related to Curve fitting .

N. Chernov (2010), Circular and linear regression: Fitting circles and lines by least squares , Chapman & Hall/CRC, Monographs on Statistics and Applied Probability, Volume 117 (256 pp.).

[2] Authority control databases National Germany Poland Other Yale LUX NewPP limit report
Parsed by mw‐web.codfw.main‐597b4b5bbd‐8cfl5
Cached time: 20250814225316
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.292 seconds
Real time usage: 0.429 seconds
Preprocessor visited node count: 1206/1000000
Revision size: 17864/2097152 bytes
Post‐expand include size: 20448/2097152 bytes
Template argument size: 1360/2097152 bytes
Highest expansion depth: 13/100
Expensive parser function count: 8/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 36647/5000000 bytes
Lua time usage: 0.173/10.000 seconds
Lua memory usage: 5156623/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  326.157      1 -total
 31.46%  102.611      1 Template:Reflist
 19.43%   63.381      1 Template:Short_description
 17.92%   58.438      1 Template:Authority_control
 14.48%   47.214      1 Template:ISBN
 13.38%   43.639      1 Template:Commons_category
 12.79%   41.726      1 Template:Sister_project
 12.29%   40.076      1 Template:Side_box
 10.61%   34.615      2 Template:Pagetype
 10.40%   33.908      3 Template:Citation Saved in parser cache with key enwiki:pcache:555425:|#|:idhash:canonical and timestamp 20250814225316 and revision id 1299439568. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Curve_fitting&oldid=1299439568#Functions " Category : Curve fitting Hidden categories: Articles with short description Short description is different from Wikidata Commons category link is on Wikidata This page was last edited on 8 July 2025, at 11:47 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Curve fitting 26 languages Add topic

