Title: Index notation

URL Source: https://en.wikipedia.org/wiki/Index_notation

Published Time: 2003-09-16T23:44:44Z

Markdown Content:
From Wikipedia, the free encyclopedia

In [mathematics](https://en.wikipedia.org/wiki/Mathematics "Mathematics") and [computer programming](https://en.wikipedia.org/wiki/Computer_programming "Computer programming"), **index notation** is used to specify the elements of an array of numbers. The formalism of how indices are used varies according to the subject. In particular, there are different methods for referring to the elements of a list, a [vector](https://en.wikipedia.org/wiki/Vector_space "Vector space"), or a [matrix](https://en.wikipedia.org/wiki/Matrix_(mathematics) "Matrix (mathematics)"), depending on whether one is writing a formal mathematical paper for publication, or when one is writing a [computer program](https://en.wikipedia.org/wiki/Computer_program "Computer program").

It is frequently helpful in mathematics to refer to the elements of an array using subscripts. The subscripts can be [integers](https://en.wikipedia.org/wiki/Integer "Integer") or [variables](https://en.wikipedia.org/wiki/Variable_(mathematics) "Variable (mathematics)"). The array takes the form of [tensors](https://en.wikipedia.org/wiki/Tensors "Tensors") in general, since these can be treated as multi-dimensional arrays. Special (and more familiar) cases are [vectors](https://en.wikipedia.org/wiki/Vector_(geometry) "Vector (geometry)") (1d arrays) and [matrices](https://en.wikipedia.org/wiki/Matrix_(mathematics) "Matrix (mathematics)") (2d arrays).

The following is only an introduction to the concept: index notation is used in more detail in mathematics (particularly in the representation and manipulation of [tensor operations](https://en.wikipedia.org/wiki/Tensor#Operations "Tensor")). See the main article for further details.

### One-dimensional arrays (vectors)

[[edit](https://en.wikipedia.org/w/index.php?title=Index_notation&action=edit&section=2 "Edit section: One-dimensional arrays (vectors)")]

A vector treated as an array of numbers by writing as a [row vector](https://en.wikipedia.org/wiki/Row_vector "Row vector") or [column vector](https://en.wikipedia.org/wiki/Column_vector "Column vector") (whichever is used depends on convenience or context):

![Image 1: {\displaystyle \mathbf {a} ={\begin{pmatrix}a_{1}\\a_{2}\\\vdots \\a_{n}\end{pmatrix}},\quad \mathbf {a} ={\begin{pmatrix}a_{1}&a_{2}&\cdots &a_{n}\end{pmatrix}}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/d45dc9351e7df537d4e638a6c8cdc224294f4d0c)
Index notation allows indication of the elements of the array by simply writing _a i_, where the index _i_ is known to run from 1 to _n_, because of n-dimensions.[[1]](https://en.wikipedia.org/wiki/Index_notation#cite_note-1) For example, given the vector:

![Image 2: {\displaystyle \mathbf {a} ={\begin{pmatrix}10&8&9&6&3&5\\\end{pmatrix}}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/0a611c1893881d3c600b3a20364a6ae12d08d075)
then some entries are

![Image 3: {\displaystyle a_{1}=10,\,a_{2}=8,\,\cdots ,\,a_{6}=5}](https://wikimedia.org/api/rest_v1/media/math/render/svg/ff9e813c82c7e8c31282dd341871ced099da6fc8).
The notation can be applied to [vectors in mathematics and physics](https://en.wikipedia.org/wiki/Vectors_in_mathematics_and_physics "Vectors in mathematics and physics"). The following [vector equation](https://en.wikipedia.org/wiki/Vector_equation "Vector equation")

![Image 4: {\displaystyle \mathbf {a} +\mathbf {b} =\mathbf {c} }](https://wikimedia.org/api/rest_v1/media/math/render/svg/ed421f7137b68fa14938bebd2bf0ca003eac53b1)
can also be written in terms of the elements of the vector (aka components), that is

![Image 5: {\displaystyle a_{i}+b_{i}=c_{i}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/8211229098bafb97cbd469bc380286969d3444c4)
where the indices take a given range of values. This expression represents a set of equations, one for each index. If the vectors each have _n_ elements, meaning _i_ = 1,2,…_n_, then the equations are explicitly

![Image 6: {\displaystyle {\begin{aligned}a_{1}+b_{1}&=c_{1}\\a_{2}+b_{2}&=c_{2}\\&\ \ \vdots \\a_{n}+b_{n}&=c_{n}\end{aligned}}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/7ce382f666d94c90f7c37b951b0c5bab9c7db16d)
Hence, index notation serves as an efficient shorthand for

1.   representing the general structure to an equation,
2.   while applicable to individual components.

### Two-dimensional arrays

[[edit](https://en.wikipedia.org/w/index.php?title=Index_notation&action=edit&section=3 "Edit section: Two-dimensional arrays")]

[![Image 7](https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Matrix.svg/247px-Matrix.svg.png)](https://en.wikipedia.org/wiki/File:Matrix.svg)

Elements of matrix **A** are described with two subscripts or indices.

More than one index is used to describe arrays of numbers, in two or more dimensions, such as the elements of a matrix, (see also image to right);

![Image 8: {\displaystyle \mathbf {A} ={\begin{pmatrix}a_{11}&a_{12}&\cdots &a_{1n}\\a_{21}&a_{22}&\cdots &a_{2n}\\\vdots &\vdots &\ddots &\vdots \\a_{m1}&a_{m2}&\cdots &a_{mn}\\\end{pmatrix}}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/6222e9f1577287b35d8c10bdb1a8018dcb46a934)
The entry of a matrix **A** is written using two indices, say _i_ and _j_, with or without commas to separate the indices: _a ij_ or _a i,j_, where the first subscript is the row number and the second is the column number. [Juxtaposition](https://en.wikipedia.org/wiki/Multiplication "Multiplication") is also used as notation for multiplication; this may be a source of confusion. For example, if

![Image 9: {\displaystyle \mathbf {A} ={\begin{pmatrix}9&8&6\\1&2&7\\4&9&2\\6&0&5\end{pmatrix}}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/1fe81f3f6e4aab5b22321804d04a2db837fd7461)
then some entries are

![Image 10: {\displaystyle a_{11}=9,\,a_{12}=8,\,a_{21}=1,\,\cdots ,\,a_{23}=7,\,\cdots }](https://wikimedia.org/api/rest_v1/media/math/render/svg/3fe66a29a13843220e5ad9b311165a81c825c412).
For indices larger than 9, the comma-based notation may be preferable (e.g., _a_ 3,12 instead of _a_ 312).

[Matrix equations](https://en.wikipedia.org/wiki/Matrix_equation "Matrix equation") are written similarly to vector equations, such as

![Image 11: {\displaystyle \mathbf {A} +\mathbf {B} =\mathbf {C} }](https://wikimedia.org/api/rest_v1/media/math/render/svg/052fe65afc30b4ce3e339a1e181d20e00a2dcf60)
in terms of the elements of the matrices (aka components)

![Image 12: {\displaystyle A_{ij}+B_{ij}=C_{ij}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/2262f9f9df01c00db34bb30293282a7fd78f4d8e)
for all values of _i_ and _j_. Again this expression represents a set of equations, one for each index. If the matrices each have _m_ rows and _n_ columns, meaning _i_ = 1, 2, …, _m_ and _j_ = 1, 2, …, _n_, then there are _mn_ equations.

### Multi-dimensional arrays

[[edit](https://en.wikipedia.org/w/index.php?title=Index_notation&action=edit&section=4 "Edit section: Multi-dimensional arrays")]

The notation allows a clear generalization to multi-dimensional arrays of elements: tensors. For example,

![Image 13: {\displaystyle A_{i_{1}i_{2}\cdots }+B_{i_{1}i_{2}\cdots }=C_{i_{1}i_{2}\cdots }}](https://wikimedia.org/api/rest_v1/media/math/render/svg/6bd0fd171d9a841f0487b8e88a218abb6aa0b14d)
representing a set of many equations.

In tensor analysis, superscripts are used instead of subscripts to distinguish covariant from contravariant entities, see [covariance and contravariance of vectors](https://en.wikipedia.org/wiki/Covariance_and_contravariance_of_vectors "Covariance and contravariance of vectors") and [raising and lowering indices](https://en.wikipedia.org/wiki/Raising_and_lowering_indices "Raising and lowering indices").

In several programming languages, index notation is a way of addressing elements of an array. This method is used since it is closest to how it is implemented in [assembly language](https://en.wikipedia.org/wiki/Assembly_language "Assembly language") whereby the address of the first element is used as a base, and a multiple (the index) of the element size is used to address inside the array.

For example, if an array of integers is stored in a region of the computer's memory starting at the memory cell with address 3000 (the [base address](https://en.wikipedia.org/wiki/Base_address "Base address")), and each integer occupies four cells (bytes), then the elements of this array are at memory locations 0x3000, 0x3004, 0x3008, …, 0x3000 + 4(_n_ − 1) (note the [zero-based numbering](https://en.wikipedia.org/wiki/Zero-based_numbering "Zero-based numbering")). In general, the address of the _i_ th element of an array with [base address](https://en.wikipedia.org/wiki/Base_address "Base address")_b_ and element size _s_ is _b_ + _is_.

Implementation details
----------------------

[[edit](https://en.wikipedia.org/w/index.php?title=Index_notation&action=edit&section=6 "Edit section: Implementation details")]

In the [C programming language](https://en.wikipedia.org/wiki/C_(programming_language) "C (programming language)"), we can write the above as `*(base + i)` (pointer form) or `base[i]` (array indexing form), which is exactly equivalent because the C standard defines the array indexing form as a transformation to pointer form. Coincidentally, since pointer addition is commutative, this allows for obscure expressions such as `3[base]` which is equivalent to `base[3]`.[[2]](https://en.wikipedia.org/wiki/Index_notation#cite_note-2)

### Multidimensional arrays

[[edit](https://en.wikipedia.org/w/index.php?title=Index_notation&action=edit&section=7 "Edit section: Multidimensional arrays")]

Things become more interesting when we consider arrays with more than one index, for example, a two-dimensional table. We have three possibilities:

*   make the two-dimensional array one-dimensional by computing a single index from the two
*   consider a one-dimensional array where each element is another one-dimensional array, i.e. an array of arrays
*   use additional storage to hold the array of addresses of each row of the original array, and store the rows of the original array as separate one-dimensional arrays

In C, all three methods can be used. When the first method is used, the programmer decides how the elements of the array are laid out in the computer's memory, and provides the formulas to compute the location of each element. The second method is used when the number of elements in each row is the same and known at the time the program is written. The programmer declares the array to have, say, three columns by writing e.g. `elementtype tablename[][3];`. One then refers to a particular element of the array by writing `tablename[first index][second index]`. The compiler computes the total number of memory cells occupied by each row, uses the first index to find the address of the desired row, and then uses the second index to find the address of the desired element in the row. When the third method is used, the programmer declares the table to be an array of pointers, like in `elementtype *tablename[];`. When the programmer subsequently specifies a particular element `tablename[first index][second index]`, the compiler generates instructions to look up the address of the row specified by the first index, and use this address as the base when computing the address of the element specified by the second index.

void mult3x3f(float result[][3], const float A[][3], const float B[][3])
{
 int i, j, k;
 for (i = 0; i < 3; ++i) {
 for (j = 0; j < 3; ++j) {
 result[i][j] = 0;
 for (k = 0; k < 3; ++k)
 result[i][j] += A[i][k] * B[k][j];
 }
 }
}

In other programming languages such as Pascal, indices may start at 1, so indexing in a block of memory can be changed to fit a start-at-1 addressing scheme by a simple linear transformation – in this scheme, the memory location of the _i_ th element with [base address](https://en.wikipedia.org/wiki/Base_address "Base address")_b_ and element size _s_ is _b_ + (_i_ − 1)_s_.

1.   **[^](https://en.wikipedia.org/wiki/Index_notation#cite_ref-1 "Jump up")**An introduction to Tensor Analysis: For Engineers and Applied Scientists, J.R. Tyldesley, Longman, 1975, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-582-44355-5](https://en.wikipedia.org/wiki/Special:BookSources/0-582-44355-5 "Special:BookSources/0-582-44355-5")
2.   **[^](https://en.wikipedia.org/wiki/Index_notation#cite_ref-2 "Jump up")**Programming with C++, J. Hubbard, Schaum's Outlines, McGraw Hill (USA), 1996, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-07-114328-9](https://en.wikipedia.org/wiki/Special:BookSources/0-07-114328-9 "Special:BookSources/0-07-114328-9")

*   _Programming with C++_, J. Hubbard, Schaum's Outlines, McGraw Hill (USA), 1996, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-07-114328-9](https://en.wikipedia.org/wiki/Special:BookSources/0-07-114328-9 "Special:BookSources/0-07-114328-9")
*   _Tensor Calculus_, D.C. Kay, Schaum's Outlines, McGraw Hill (USA), 1988, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-07-033484-6](https://en.wikipedia.org/wiki/Special:BookSources/0-07-033484-6 "Special:BookSources/0-07-033484-6")
*   _Mathematical methods for physics and engineering_, K.F. Riley, M.P. Hobson, S.J. Bence, Cambridge University Press, 2010, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-521-86153-3](https://en.wikipedia.org/wiki/Special:BookSources/978-0-521-86153-3 "Special:BookSources/978-0-521-86153-3")
