Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 In mathematics Toggle In mathematics subsection 1.1 One-dimensional arrays (vectors) 1.2 Two-dimensional arrays 1.3 Multi-dimensional arrays 2 In computing 3 Implementation details Toggle Implementation details subsection 3.1 Multidimensional arrays 4 In other languages 5 References Toggle the table of contents Index notation 5 languages العربية Español Français 日本語 Română Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikibooks Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Manner of referring to elements of arrays or tensors "Subscript notation" redirects here. For other similarly named notations, see Double-subscript notation and Double-letter voltage subscript notation .

For index notation , or indicial notation in relativity theory and abstract algebra, see Einstein notation and abstract index notation .

In mathematics and computer programming , index notation is used to specify the elements of an array of numbers. The formalism of how indices are used varies according to the subject.  In particular, there are different methods for referring to the elements of a list, a vector , or a matrix , depending on whether one is writing a formal mathematical paper for publication, or when one is writing a computer program .

In mathematics [ edit ] Main articles: Ricci calculus and Tensor It is frequently helpful in mathematics to refer to the elements of an array using subscripts. The subscripts can be integers or variables . The array takes the form of tensors in general, since these can be treated as multi-dimensional arrays. Special (and more familiar) cases are vectors (1d arrays) and matrices (2d arrays).

The following is only an introduction to the concept: index notation is used in more detail in mathematics (particularly in the representation and manipulation of tensor operations ). See the main article for further details.

One-dimensional arrays (vectors) [ edit ] Main article: Vector (mathematics and physics) A vector treated as an array of numbers by writing as a row vector or column vector (whichever is used depends on convenience or context): a = ( a 1 a 2 ⋮ ⋮ a n ) , a = ( a 1 a 2 ⋯ ⋯ a n ) {\displaystyle \mathbf {a} ={\begin{pmatrix}a_{1}\\a_{2}\\\vdots \\a_{n}\end{pmatrix}},\quad \mathbf {a} ={\begin{pmatrix}a_{1}&a_{2}&\cdots &a_{n}\end{pmatrix}}} Index notation allows indication of the elements of the array by simply writing a i , where the index i is known to run from 1 to n , because of n-dimensions.

[ 1 ] For example, given the vector: a = ( 10 8 9 6 3 5 ) {\displaystyle \mathbf {a} ={\begin{pmatrix}10&8&9&6&3&5\\\end{pmatrix}}} then some entries are a 1 = 10 , a 2 = 8 , ⋯ ⋯ , a 6 = 5 {\displaystyle a_{1}=10,\,a_{2}=8,\,\cdots ,\,a_{6}=5} .

The notation can be applied to vectors in mathematics and physics . The following vector equation a + b = c {\displaystyle \mathbf {a} +\mathbf {b} =\mathbf {c} } can also be written in terms of the elements of the vector (aka components), that is a i + b i = c i {\displaystyle a_{i}+b_{i}=c_{i}} where the indices take a given range of values. This expression represents a set of equations, one for each index. If the vectors each have n elements, meaning i = 1,2,… n , then the equations are explicitly a 1 + b 1 = c 1 a 2 + b 2 = c 2 ⋮ ⋮ a n + b n = c n {\displaystyle {\begin{aligned}a_{1}+b_{1}&=c_{1}\\a_{2}+b_{2}&=c_{2}\\&\ \ \vdots \\a_{n}+b_{n}&=c_{n}\end{aligned}}} Hence, index notation serves as an efficient shorthand for representing the general structure to an equation, while applicable to individual components.

Two-dimensional arrays [ edit ] Elements of matrix A are described with two subscripts or indices.

Main article: Matrix (mathematics) See also: Dyadics More than one index is used to describe arrays of numbers, in two or more dimensions, such as the elements of a matrix, (see also image to right); A = ( a 11 a 12 ⋯ ⋯ a 1 n a 21 a 22 ⋯ ⋯ a 2 n ⋮ ⋮ ⋮ ⋮ ⋱ ⋱ ⋮ ⋮ a m 1 a m 2 ⋯ ⋯ a m n ) {\displaystyle \mathbf {A} ={\begin{pmatrix}a_{11}&a_{12}&\cdots &a_{1n}\\a_{21}&a_{22}&\cdots &a_{2n}\\\vdots &\vdots &\ddots &\vdots \\a_{m1}&a_{m2}&\cdots &a_{mn}\\\end{pmatrix}}} The entry of a matrix A is written using two indices, say i and j , with or without commas to separate the indices: a ij or a i,j , where the first subscript is the row number and the second is the column number.

Juxtaposition is also used as notation for multiplication; this may be a source of confusion. For example, if A = ( 9 8 6 1 2 7 4 9 2 6 0 5 ) {\displaystyle \mathbf {A} ={\begin{pmatrix}9&8&6\\1&2&7\\4&9&2\\6&0&5\end{pmatrix}}} then some entries are a 11 = 9 , a 12 = 8 , a 21 = 1 , ⋯ ⋯ , a 23 = 7 , ⋯ ⋯ {\displaystyle a_{11}=9,\,a_{12}=8,\,a_{21}=1,\,\cdots ,\,a_{23}=7,\,\cdots } .

For indices larger than 9, the comma-based notation may be preferable (e.g., a 3,12 instead of a 312 ).

Matrix equations are written similarly to vector equations, such as A + B = C {\displaystyle \mathbf {A} +\mathbf {B} =\mathbf {C} } in terms of the elements of the matrices (aka components) A i j + B i j = C i j {\displaystyle A_{ij}+B_{ij}=C_{ij}} for all values of i and j . Again this expression represents a set of equations, one for each index. If the matrices each have m rows and n columns, meaning i = 1, 2, …, m and j = 1, 2, …, n , then there are mn equations.

Multi-dimensional arrays [ edit ] Main article: Tensors See also: Classical treatment of tensors The notation allows a clear generalization to multi-dimensional arrays of elements: tensors. For example, A i 1 i 2 ⋯ ⋯ + B i 1 i 2 ⋯ ⋯ = C i 1 i 2 ⋯ ⋯ {\displaystyle A_{i_{1}i_{2}\cdots }+B_{i_{1}i_{2}\cdots }=C_{i_{1}i_{2}\cdots }} representing a set of many equations.

In tensor analysis, superscripts are used instead of subscripts to distinguish covariant from contravariant entities, see covariance and contravariance of vectors and raising and lowering indices .

In computing [ edit ] In several programming languages, index notation is a way of addressing elements of an array. This method is used since it is closest to how it is implemented in assembly language whereby the address of the first element is used as a base, and a multiple (the index) of the element size is used to address inside the array.

For example, if an array of integers is stored in a region of the computer's memory starting at the memory cell with address 3000 (the base address ), and each integer occupies four cells (bytes), then the elements of this array are at memory locations 0x3000, 0x3004, 0x3008, …, 0x3000 + 4( n − 1) (note the zero-based numbering ). In general, the address of the i th element of an array with base address b and element size s is b + is .

Implementation details [ edit ] In the C programming language , we can write the above as *(base + i) (pointer form) or base[i] (array indexing form), which is exactly equivalent because the C standard defines the array indexing form as a transformation to pointer form. Coincidentally, since pointer addition is commutative, this allows for obscure expressions such as 3[base] which is equivalent to base[3] .

[ 2 ] Multidimensional arrays [ edit ] Things become more interesting when we consider arrays with more than one index, for example, a two-dimensional table. We have three possibilities: make the two-dimensional array one-dimensional by computing a single index from the two consider a one-dimensional array where each element is another one-dimensional array, i.e. an array of arrays use additional storage to hold the array of addresses of each row of the original array, and store the rows of the original array as separate one-dimensional arrays In C, all three methods can be used. When the first method is used, the programmer decides how the elements of the array are laid out in the computer's memory, and provides the formulas to compute the location of each element. The second method is used when the number of elements in each row is the same and known at the time the program is written. The programmer declares the array to have, say, three columns by writing e.g.

elementtype tablename[][3]; . One then refers to a particular element of the array by writing tablename[first index][second index] .  The compiler computes the total number of memory cells occupied by each row, uses the first index to find the address of the desired row, and then uses the second index to find the address of the desired element in the row. When the third method is used, the programmer declares the table to be an array of pointers, like in elementtype *tablename[]; . When the programmer subsequently specifies a particular element tablename[first index][second index] , the compiler generates instructions to look up the address of the row specified by the first index, and use this address as the base when computing the address of the element specified by the second index.

void mult3x3f ( float result [][ 3 ], const float A [][ 3 ], const float B [][ 3 ]) { int i , j , k ; for ( i = 0 ; i < 3 ; ++ i ) { for ( j = 0 ; j < 3 ; ++ j ) { result [ i ][ j ] = 0 ; for ( k = 0 ; k < 3 ; ++ k ) result [ i ][ j ] += A [ i ][ k ] * B [ k ][ j ]; } } } In other languages [ edit ] See also: Index origin In other programming languages such as Pascal, indices may start at 1, so indexing in a block of memory can be changed to fit a start-at-1 addressing scheme by a simple linear transformation – in this scheme, the memory location of the i th element with base address b and element size s is b + ( i − 1) s .

References [ edit ] ^ An introduction to Tensor Analysis: For Engineers and Applied Scientists, J.R. Tyldesley, Longman, 1975, ISBN 0-582-44355-5 ^ Programming with C++, J. Hubbard, Schaum's Outlines, McGraw Hill (USA), 1996, ISBN 0-07-114328-9 Programming with C++ , J. Hubbard, Schaum's Outlines, McGraw Hill (USA), 1996, ISBN 0-07-114328-9 Tensor Calculus , D.C. Kay, Schaum's Outlines, McGraw Hill (USA), 1988, ISBN 0-07-033484-6 Mathematical methods for physics and engineering , K.F. Riley, M.P. Hobson, S.J. Bence, Cambridge University Press, 2010, ISBN 978-0-521-86153-3 NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐p8tdn
Cached time: 20250812012944
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.167 seconds
Real time usage: 0.419 seconds
Preprocessor visited node count: 729/1000000
Revision size: 9971/2097152 bytes
Post‐expand include size: 6658/2097152 bytes
Template argument size: 874/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 23/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 21933/5000000 bytes
Lua time usage: 0.088/10.000 seconds
Lua memory usage: 3301901/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  338.569      1 -total
 21.68%   73.387      8 Template:Code
 17.93%   60.689      1 Template:Short_description
 17.24%   58.354      1 Template:Reflist
 15.02%   50.851      5 Template:ISBN
  9.62%   32.558      2 Template:Pagetype
  6.85%   23.180      1 Template:Redirect
  5.77%   19.540      3 Template:Main_other
  5.27%   17.845      1 Template:SDcat
  3.10%   10.481      4 Template:Main Saved in parser cache with key enwiki:pcache:320026:|#|:idhash:canonical and timestamp 20250812012944 and revision id 1303422406. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Index_notation&oldid=1303422406 " Categories : Mathematical notation Programming constructs Hidden categories: Articles with short description Short description matches Wikidata This page was last edited on 30 July 2025, at 22:49 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Index notation 5 languages Add topic

