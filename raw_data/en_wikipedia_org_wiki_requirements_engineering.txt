Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Activities 2 Problems 3 Criticism 4 See also 5 References 6 External links Toggle the table of contents Requirements engineering 14 languages العربية Català Español فارسی Gaeilge 한국어 Italiano Magyar 日本語 Norsk bokmål Português Русский Suomi 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Defining and maintaining requirements in systems engineering This article may be too technical for most readers to understand .

Please help improve it to make it understandable to non-experts , without removing the technical details.

( July 2025 ) ( Learn how and when to remove this message ) In the waterfall model , [ 1 ] requirements engineering is presented as the first phase of the software development process. Later development methods, including the Rational Unified Process (RUP) for software, assume that requirements engineering continues through a system's lifetime.

Requirements management , which is a sub-function of Systems Engineering practices, is also indexed in the International Council on Systems Engineering (INCOSE) manuals.

Activities [ edit ] The activities involved in requirements engineering vary widely, depending on the type of system being developed and the organization's specific practice(s) involved.

[ 2 ] These may include: Requirements inception or requirements elicitation – Developers and stakeholders meet; the latter are inquired concerning their needs and wants regarding the software product.

Requirements analysis and negotiation – Requirements are identified (including new ones if the development is iterative), and conflicts with stakeholders are solved. Both written and graphical tools (the latter commonly used in the design phase, but some find them helpful at this stage, too) are successfully used as aids. Examples of written analysis tools: use cases and user stories . Examples of graphical tools: Unified Modeling Language [ 3 ] (UML) and Lifecycle Modeling Language (LML).

System modeling – Some engineering fields (or specific situations) require the product to be completely designed and modeled before its construction or fabrication starts.  Therefore, the design phase must be performed in advance. For instance, blueprints for a building must be elaborated before any contract can be approved and signed. Many fields might derive models of the system with the LML , whereas others, might use UML . Note: In many fields, such as software engineering, most modeling activities are classified as design activities and not as requirement engineering activities.

Requirements specification – Requirements are documented in a formal artifact called a Requirements Specification (RS), which will become official only after validation. A RS can contain both written and graphical (models) information if necessary. Example: Software requirements specification (SRS).

Requirements validation – Checking that the documented requirements and models are consistent and meet the stakeholder's needs. Only if the final draft passes the validation process, the RS becomes official.

Requirements management – Managing all the activities related to the requirements since inception, supervising as the system is developed, and even until after it is put into use (e. g., changes, extensions, etc.) These are sometimes presented as chronological stages although, in practice, there is considerable interleaving of these activities.

Requirements engineering has been shown to clearly contribute to software project successes.

[ 4 ] Problems [ edit ] One limited study in Germany presented possible problems in implementing requirements engineering and asked respondents whether they agreed that they were actual problems. The results were not presented as being generalizable but suggested that the principal perceived problems were incomplete requirements, moving targets, and time boxing, with lesser problems being communications flaws, lack of traceability, terminological problems, and unclear responsibilities.

[ 5 ] Criticism [ edit ] Problem structuring, a key aspect of requirements engineering, has been speculated to reduce design performance.

[ 6 ] Some research suggests that it is possible if there are deficiencies in the requirements engineering process resulting in a situation where requirements do not exist, software requirements may be created regardless as an illusion misrepresenting design decisions as requirements [ 7 ] See also [ edit ] List of requirements engineering tools Requirements analysis , requirements engineering focused in software engineering.

Requirements Engineering Specialist Group (RESG) International Requirements Engineering Board (IREB) International Council on Systems Engineering (INCOSE) IEEE 12207 "Systems and software engineering – Software life cycle processes" TOGAF (Chapter 17) Concept of operations (ConOps) Operations management Software requirements Software requirements specification Software Engineering Body of Knowledge (SWEBOK) Design specification Specification (technical standard) Formal specification Software Quality Quality Management Scope Management References [ edit ] ^ Royce, W. W.

(1970).

Managing the Development of Large Software Systems: Concepts and Techniques (PDF) .

ICSE '87.

Proceedings of the 9th international conference on Software Engineering . pp.

1– 9.

^ Sommerville, Ian (2009).

Software Engineering (9th ed.).

Addison-Wesley .

ISBN 978-0-13-703515-1 .

^ "Uncovering Requirements With UML Class Diagrams Part 1" .

tynerblain.com . March 7, 2008 . Retrieved March 14, 2018 .

^ Hofmann, H.F.; Lehner, F. (2001). "Requirements engineering as a success factor in software projects".

IEEE Software .

18 (4): 58– 66.

Bibcode : 2001ISoft..18d..58H .

doi : 10.1109/MS.2001.936219 .

ISSN 0740-7459 .

^ Méndez Fernández, Daniel; Wagner, Stefan (2015). "Naming the pain in requirements engineering: A design for a global family of surveys and first results from Germany".

Information and Software Technology .

57 : 616– 643.

arXiv : 1611.04976 .

doi : 10.1016/j.infsof.2014.05.008 .

S2CID 1924926 .

^ Ralph, Paul; Mohanani, Rahul (May 2015).

"Is Requirements Engineering Inherently Counterproductive?" . IEEE.

doi : 10.13140/2.1.3831.6321 .

{{ cite journal }} : Cite journal requires |journal= ( help ) ^ Ralph, P. (September 2013). "The illusion of requirements in software development".

Requirements Engineering .

18 (3): 293– 296.

arXiv : 1304.0116 .

Bibcode : 2013AIPC.1516..293R .

doi : 10.1007/s00766-012-0161-4 .

S2CID 11499083 .

External links [ edit ] Systems and software engineering -- Life cycle processes --Requirements engineering . 2011. pp.

1– 94.

doi : 10.1109/IEEESTD.2011.6146379 .

ISBN 978-0-7381-6591-2 .

("This standard replaces IEEE 830–1998, IEEE 1233–1998, IEEE 1362-1998 - https://standards.ieee.org/ieee/29148/5289/ ") Systems Engineering Body of Knowledge Requirements Engineering Management Handbook by FAA International Requirements Engineering Board (IREB) IBM Rational Resource Library by IEEE Spectrum v t e Systems engineering Subfields Aerospace engineering Biological systems engineering Cognitive systems engineering Configuration management Earth systems engineering and management Electrical engineering Enterprise systems engineering Health systems engineering Performance engineering Reliability engineering Safety engineering Sociocultural Systems Engineering Processes Requirements engineering Functional Analysis and Allocation System integration Verification and validation Design review System of systems engineering Concepts Business process Fault tolerance System System lifecycle V-Model Systems development life cycle Tools Decision-making Function modelling IDEF Optimization Quality function deployment Spare part System dynamics Systems Modeling Language Systems analysis Systems modeling Work breakdown structure People James S. Albus Ruzena Bajcsy Benjamin S. Blanchard Wernher von Braun Kathleen Carley Harold Chestnut Wolt Fabrycky Barbara Grosz Arthur David Hall III Derek Hitchins Robert E. Machol Radhika Nagpal Simon Ramo Joseph Francis Shea Katia Sycara Manuela M. Veloso John N. Warfield Related fields Control engineering Computer engineering Industrial engineering Operations research Project management Quality management Risk management Software engineering Category v t e Software engineering Fields Computer programming DevOps Empirical software engineering Experimental software engineering Formal methods Requirements engineering Search-based software engineering Site reliability engineering Social software engineering Software deployment Software design Software maintenance Software testing Systems analysis Concepts Abstraction CI/CD Compatibility Backward compatibility Compatibility layer Compatibility mode Forward compatibility Software incompatibility Component-based software engineering Data modeling Enterprise architecture Functional specification Modeling language Programming paradigm Software Software archaeology Software architecture Software configuration management Software development process/methodology Software quality Software quality assurance Software system Software verification and validation Structured analysis Essential analysis Orientations Agile Aspect-oriented Object orientation Ontology SDLC Service orientation Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD Scrum Spiral model UP V-model Waterfall model XP Model-driven engineering Round-trip engineering Other CMMI Data model ER model Function model Information model Metamodeling Object model SPICE Systems model View model Languages IDEF SysML UML USL Systems design Requirements Functional requirement Non-functional requirement Capacity Users Compute Memory Storage Network Web traffic Interface API SOAP REST GraphQL gRPC Webhook High-level design Client Load balancing Application server Message queue Integration Vertical Peer-to-peer API gateway pub-sub Event source ETL Batch Stream Orchestration Architectures Monolithic Microservices Event-driven Client–server Serverless Circuit breaker Rate limiting Database Relational NoSQL Graph Key–value LSM tree Time series Column oriented Principles Consistency Reliability CAP theorem Maintainability Configurability Modularity Durability Scalability Stateless Asynchronous I/O Loose coupling Availability Fault tolerance Failover Single point of failure Replication Consistent hashing Circuit breaker Latency Cache CDN Shard Database index Pre-caching Storage Object storage Block storage Observability Logging Metrics Tracing Error rate Queries per second Notification system Anomaly detection Related fields Computer engineering Computer science Information science Project management Risk management Systems engineering Commons Category v t e IEEE standards Current 488 693 730 754 Revision 854 828 829 896 1003 1014 1016 1076 1149.1 1154 1164 1275 1278 1284 1355 1394 1451 1497 1516 1541 1547 1584 1588 1596 1603 1613 1619 1666 1667 1675 1685 1722 1733 1800 1801 1815 1849 1850 1855 1900 1901 1902 1904 1905 2030 2050 11073 12207 14764 16085 16326 29148 42010 802 series 802 .2 .4 .5 .6 .7 .8 .9 .10 .12 .14 .16 WiMAX · d · e .17 .18 .20 .21 .22 .24 802.1 D p Q Qav Qat Qay Qaz Qbb w X AB ad AE ag ah ak aq AS AX ( LACP ) BA 802.3 ( Ethernet ) -1983 a b d e i j u x y z ab ac ad ae af ah ak an aq at au av az ba bt bu by bz ca cb cc cd ce cg ch ck cm cn cp cq cr cs ct cu cv cw cx cy cz da db dd de df 802.11 ( Wi-Fi ) -1997 legacy mode a b c d e f g h i j k n ( Wi-Fi 4 ) p r s u v w y z aa ac ( Wi-Fi 5 ) ad ( WiGig ) ae af ah ai aj ak aq ax ( Wi-Fi 6 ) ay az ba bb bc bd be ( Wi-Fi 7 ) bf bh bi bk bn ( Wi-Fi 8 ) 802.15 .1 ( Bluetooth ) .2 .3 .4 ( Zigbee ) .4a .4b .4c .4d .4e .4f .4g .4z .5 .6 .7 Proposed P1363 P1619 P1699 P1823 P1906.1 Superseded 754-1985 830 1219 1233 1362 1364 1471 Category v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category Authority control databases National Germany United States Israel Other Yale LUX Retrieved from " https://en.wikipedia.org/w/index.php?title=Requirements_engineering&oldid=1303649133 " Categories : Systems engineering Software requirements IEEE standards ISO/IEC standards Hidden categories: CS1 errors: missing periodical Articles with short description Short description is different from Wikidata Use American English from March 2019 All Wikipedia articles written in American English Use mdy dates from March 2019 Wikipedia articles that are too technical from July 2025 All articles that are too technical This page was last edited on 1 August 2025, at 07:08 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Requirements engineering 14 languages Add topic

