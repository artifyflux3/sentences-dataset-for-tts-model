Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Positioning 2 History Toggle History subsection 2.1 Industry support and adoption 2.2 Standardization status 3 Features 4 Technical details 5 Software Toggle Software subsection 5.1 Codec implementations 5.2 Official software support 5.2.1 Operating systems 5.2.2 Graphics editors 5.2.3 Libraries 5.2.4 Services 5.2.5 Web browsers 5.3 Unofficial or indirect support 5.4 Preliminary web browser support 6 Rivals 7 Notes 8 References 9 External links Toggle the table of contents JPEG XL 16 languages Català Čeština Deutsch Español Esperanto Français 한국어 Bahasa Indonesia Italiano עברית Nederlands 日本語 Polski Русский Suomi 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Lossy and lossless image format JPEG XL Filename extension .jxl Internet media type image/jxl [ 1 ] Uniform Type Identifier (UTI) public.jpeg-xl [ 2 ] Magic number FF 0A or 00 00 00 0C 4A 58 4C 20 0D 0A 87 0A [ 3 ] Developed by Joint Photographic Experts Group Google Cloudinary Type of format Lossy / lossless bitmap image format Extended from PIK [ 4 ] FLIF – FUIF [ 4 ] ISO-BMFF Standard ISO/IEC 18181 [ 5 ] Open format ?

Yes [ 6 ] Website jpeg .org /jpegxl (official website) jpegxl .info (community website) The JPEG XL Image Coding System [ 7 ] is a free and open standard for a compressed raster image format. It defines a graphics file format and the abstract device for coding JPEG XL bitstreams. It is developed by the Joint Photographic Experts Group (JPEG) and standardized by the International Electrotechnical Commission (IEC) and the International Organization for Standardization (ISO) as the international standard ISO/IEC 18181 . As a superset of JPEG /JFIF encoding, it features a compression mode built on a traditional block-based transform coding core. Additionally, there is a "modular mode" for synthetic image content and lossless compression. Optional lossy quantization enables both lossless and lossy compression.

The name refers to the design committee ( JPEG ), the X designates the series of its image coding standards published since 2000 ( JPEG XT / XR / XS ), and L stands for "long-term", highlighting the intent to create a future-proof, long-lived format to succeed JPEG /JFIF.

[ 8 ] The main authors of the specification are Jon Sneyers, Jyrki Alakuijala, and Luca Versari. Other collaborators are Sami Boukortt, Alex Deymo, Moritz Firsching, Thomas Fischbacher, Eugene Kliuchnikov, Robert Obryk, Alexander Rhatushnyak, Zoltan Szabadka, Lode Vandevenne, and Jan Wassenberg.

Positioning [ edit ] It was designed to become a universal replacement for all established raster formats for the Web.

[ 6 ] To reach widespread adoption (unlike previous attempts, including several JPEG standards), the designers hope for beneficial network effects by offering the single best option for as many popular use cases as possible.
To that end the format offers significant improvements over all other (established) options with a comprehensive set of useful properties, geared especially towards accessibility over the Web and a smooth upgrade path, in combination with uncompromisingly powerful, yet efficiently computable compression and efficient data representation. Following a study about the most popular JPEG quality on the Web, developers paid special attention to the range with negligible or no perceived loss , and the default settings were adjusted accordingly. Several serious attempts at replacing JPEG that provided poor support for the high end of the quality range have failed.

[ 9 ] The JPEG XL call for proposals [ 10 ] talks about the requirement of substantially better compression efficiency (60% improvement) comparing to JPEG. The standard is expected to outperform the still image compression performance shown by HEIC , AVIF , WebP , and JPEG 2000 .

History [ edit ] In 2015, Jon Sneyers of the company Cloudinary published his Free Lossless Image Format (FLIF) on which he based his standardization proposal, called the Free Universal Image Format (FUIF), that begot JXL's "modular mode".
In 2017 Google 's data compression research team in Zurich published the PIK format, the prototype for the frequency transform coding mode.

In 2018, the Joint Photographic Experts Group (JTC1 / SC29 / WG1) published a call for proposals for JPEG XL, its next-generation image coding standard.

[ 10 ] The proposals were submitted by September 2018. From seven proposals, the committee selected two as the starting point for the development of the new format: FUIF [ 11 ] and PIK.

[ 12 ] [ 13 ] In July 2019 the committee published a draft, mainly based on a combination of the two proposals.

[ 14 ] The bitstream was informally frozen on 24 December 2020 with the release of version 0.2 of the libjxl reference software.

[ 15 ] The file format and core coding system were formally standardized on 13 October 2021 and 30 March 2022 respectively.

[ 5 ] [ 16 ] Industry support and adoption [ edit ] Besides Cloudinary , throughout JPEG XL's preliminary implementation in web browsers, various representatives of well-known industry brand names have publicly voiced support for JPEG XL as their preferred choice, including Facebook , [ 17 ] [ 18 ] Adobe , [ 19 ] [ 20 ] Intel and the Video Electronics Standards Association , [ 21 ] [ 22 ] The Guardian , [ 23 ] [ 24 ] Flickr and SmugMug , [ 25 ] Shopify , [ 26 ] the Krita Foundation, [ 27 ] and Serif Ltd.

[ 28 ] Google's stance on JPEG XL is ambiguous, as it has contributed to the format but refrained from shipping an implementation of it in its browser. Support in Chromium and Chrome web browsers was introduced for testing April 1, 2021 [ 29 ] and removed on December 9, 2022 – with support removed in version 110.

[ 30 ] [ 31 ] The Chrome team cited a lack of interest from the ecosystem, insufficient improvements, and a wish to focus on improving existing formats as reasons for removing JPEG XL support.

[ 29 ] [ 32 ] [ 30 ] The decision was met with opposition from the community, with many voicing support for JPEG XL on Chromium's bug tracker.

[ 29 ] [ 33 ] [ 32 ] Jon Sneyers, co-author of the JPEG XL spec, has questioned the conclusions drawn by the Chrome team, saying: "I think there has been an unfortunate misinterpretation of the data ... which has unfortunately led to an incorrect decision." [ 34 ] The decision was also criticized by Greg Farough from the Free Software Foundation , who said it demonstrated Google's "disturbing amount of control" over the web and web browsers.

[ 35 ] Mozilla expressed security concerns, as they feel that the rather bulky reference decoder would add a substantial amount of attack surface to Firefox. They expressed willingness to ship a decoder that meets their criteria if someone provides and integrates a suitable implementation. The JPEG-XL team at Google Research has offered to write a decoder using the Rust programming language [ 36 ] but maintains neutral position on supporting JPEG-XL [ 37 ] An extension to enable JPEG XL support in Chrome [ 38 ] and Firefox [ 39 ] became available in January 2024.

Apple Inc.

included native JPEG XL file support starting with iOS / iPadOS 17, macOS 14 Sonoma , and Safari 17 .

iPhone 16 Pro supports JPEG XL compression when capturing ProRAW photos.

[ 40 ] Microsoft added support for opening and saving JPEG XL files for Windows 11 24H2 via the JPEG XL image extension in Microsoft Store .

[ 41 ] Also Microsoft Photos added native JPEG XL support in the 2025.11030.20006.0 build.

[ 42 ] The raw image format Digital Negative (DNG) allows image data contained within to be compressed using JPEG XL. Starting in version 1.7.0.0 from June 2023, JPEG XL compression was included as part of the specification.

[ 43 ] This created a basis for later use as part of "Expert RAW" in Samsung Galaxy smartphones and Apple's "ProRAW".

Standardization status [ edit ] Common Name Part First public release date (First edition) ISO/IEC Number Formal Title JPEG XL Part 1 30 March 2022 18181-1:2024 JPEG XL Image Coding System — Part 1: Core coding system [ 5 ] Part 2 13 October 2021 18181-2:2024 JPEG XL Image Coding System — Part 2: File format [ 16 ] Part 3 3 October 2022 18181-3:2025 JPEG XL Image Coding System — Part 3: Conformance testing Part 4 5 August 2022 18181-4:2022 JPEG XL Image Coding System — Part 4: Reference software Features [ edit ] JPEG XL has features aimed at web delivery such as advanced progressive decoding, [ 44 ] embedded previews, and minimal header overhead, as well as features aimed at image editing and digital printing , such as support for multiple layers , CMYK , and spot colors . It also supports animated images.

The main features are: [ 45 ] [ 46 ] [ 47 ] Compression: Lossless encoding for any channel, including alpha.

Support for both photographic and synthetic imagery: The format features two complementary modes that can be used depending on the image contents.

Computationally efficient encoding and decoding without requiring specialized hardware: JPEG XL is about as fast to encode and decode as old JPEG using libjpeg-turbo and an order of magnitude faster to encode and decode compared to HEIC with x265 .

[ 48 ] [ 49 ] It is also parallelizable.

Data reduction: Lossy compression is supported through the optional quantization of transform coefficients.

High image fidelity is well supported.

Graceful quality degradation across a large range of bitrates : Quality loss isn't as abrupt as with older formats.

Perceptually optimized reference encoder which uses a perceptual color space , and adaptive quantization.

Versatile and future-proof size limits: JPEG XL supports ultra- high-resolution images (up to 1 terapixel) with dimensions of over a billion (2 30 -1) pixels per side, [ 48 ] sample precision of up to 32 bits, e.g. for HDR content.

up to 4099 channels/components : either one (grayscale), three ( RGB ), or four ( CMYK ) main channels. The rest of the channels are optional and can be used to store e.g.

alpha for transparency/compositing (either "straight" or "premultiplied"), depth , or thermal data.

[ 48 ] There can be multiple frames , with non-zero duration (for animation) or with zero duration (for e.g. editing layers in graphics software or multi-page documents). Frames can be smaller or larger than the image canvas and can be blended in various ways. However, regular video codecs are still preferred for encoding realistic moving content.

JPEG XL has built-in support for various color spaces , transfer curves , and high screen brightness. It is specifically designed to seamlessly handle wide color gamut color spaces with high dynamic range such as Rec. 2100 with the PQ or HLG transfer function .

Data structuring: Tiles: Independent coding of sections of a large image by allowing images to be stored in tiles, e.g. for parallelization.

Progressive decoding: Mode specifically designed for responsive loading of large images depending on the viewing device's resolution.

Upgrade path: JPEG transcoding : Being a JPEG superset, JXL provides efficient lossless recompression options for images in the traditional/legacy JPEG format that can represent JPEG data in a more space-efficient way (~20% size reduction due to the better entropy coder) and can easily be reversed, e.g. on the fly. Wrapped inside a JPEG XL file/stream, it can be combined with additional elements, e.g. an alpha channel.

The format is extensible .

Freedom to use, batteries included: Royalty-free licensing of relevant (own) intellectual property/software patents.

Production-ready open-source reference implementation available on GitHub under liberal licensing terms ( 3-clause BSD license ).

[ 50 ] Technical details [ edit ] Codec architecture JPEG XL is based on ideas from Google's PIK format and Cloudinary 's FUIF format (which was in turn based on FLIF ).

[ 51 ] The format is mainly based on two encoding modes: VarDCT mode (variable-blocksize DCT ) – it is based from the same DCT algorithm as legacy JPEG , but blocks, instead of being restricted to 8×8, come in various sizes (2×2 up to 256×256), non-square shapes (e.g. 16×8, 8×32, 32×64), or can use another transforms (AFV, Hornuss). It is only used for the 3 color channels, which typically use the XYB color space (although YCbCr is also supported in order to recompress legacy JPEG). The VarDCT mode is based on (lossy) PIK. Lossy modes typically use the XYB color space derived from LMS .

[ 52 ] Modular mode is responsible, among other things, for efficient lossless content encoding and also for lossy and near-lossless purposes. Modular can also be used internally in VarDCT to save 2D data, i.e. everything except the AC (high-frequency) DCT coefficients, including the DC image (which is always a 1:8 subsampled image so also includes low-frequency AC coefficients in case block sizes larger than 8×8 are used), the weights of adaptive quantization and filter strengths.

Any additional/extra channels (e.g.

alpha , depth , thermal , spot colors , etc.) are always encoded in the modular mode. It was based on FUIF, combined with elements of lossless PIK, lossless WebP, and new ideas that have been developed during the collaborative phase of the standardization process.

[ 53 ] Modular mode allows lossy compression with the help of the modified Haar transform called "squeeze" which has progressive properties, quality of the image increases with the amount of data loaded.

One of the ways VarDCT-based images can be loaded more progressively is by saving the DC coefficients in a separate "DC frame" that uses modular squeeze: allowing previews corresponding to 1:16, 1:32 etc. subsampled images. A squeeze transform can also be used to encode the alpha channel progressively together with VarDCT-encoded color channels, making both modes work in tandem.

JPEG XL defaults to a visually near-lossless setting that still provides good compression.

[ 48 ] These modes can be assisted by separate modeling of specific image features called: Splines for coding e.g. hairs (not yet used by the reference encoder).

Repeating "patches" like text, dots, or sprites .

Noise synthesis: since noise is hard to compress, it is better to separate it out and then regenerate it in the decoder. This is similar to film grain synthesis in modern video codecs like AV1 , although JPEG XL's noise synthesis is not aiming to mimick the granularity of analog photographic film, but rather to model the photon noise at the pixel level, i.e. those visible with a digital camera at high ISO settings.

JPEG XL codec can losslessly transcode a widely supported subset of JPEG files, by directly copying JPEG's DCT block coefficients to 8×8 VarDCT blocks, making smaller file sizes possible due to JPEG XL's superior entropy coding. This process is reversible and it allows for the original JPEG file to be reconstructed bit-for-bit, although constraints limit support for some files.

[ 54 ] Prediction is run using a pixel-by-pixel decorrelator without side information, including a parameterized self-correcting weighted ensemble of predictors.

Context modeling includes specialized static models and powerful meta-adaptive models that take local error into account, with a signaled tree structure and predictor selection per context.

Entropy coding is LZ77 -enabled and can use either asymmetric numeral systems or prefix codes (useful for low-complexity encoders, or reducing the overhead of short streams).

[ 46 ] Animated (multi-frame) images do not perform advanced inter-frame prediction , though some rudimentary inter-frame coding tools are available: Frames can be smaller than the full canvas size, leaving other pixels untouched.

Frames support several blending modes in addition to replacing previous frames, such as addition or multiplication.

[ 55 ] Up to four frames can be remembered and referenced by later frames, using the "patches" coding tool.

Software [ edit ] Codec implementations [ edit ] JPEG XL Reference Software (libjxl) Screenshot of cjxl (encoder), jxlinfo (file information), and djxl (decoder) command-line tools Initial release December 27, 2019 ; 5 years ago ( 2019-12-27 ) [ 56 ] Stable release 0.11.1
   /    November 26, 2024 ; 8 months ago ( 2024-11-26 ) Repository https://github.com/libjxl/libjxl [ 57 ] Written in C++ Operating system Unix-like Windows License New BSD License (previously Apache License 2.0 ) Website jpeg .org /jpegxl The reference implementation software is called libjxl. It is written in C++ and published on GitHub as free software under the terms of the New BSD License (before 2021 the Apache License 2.0 ). It supports Unix-like operating systems, like Linux and Apple's OS family, as well as Windows systems. It is available from the standard software repositories of all major Linux and BSD distributions.

[ 58 ] In addition to the eponymous codec library, it packages a suite of auxiliary tools, like the command line encoder cjxl and decoder djxl , the image codec benchmarking tool (speed, quality) benchmark_xl , the image comparison tool of perceptual metric ssimulacra2 , as well as the GIMP and gdk -pixbuf plugin file-jxl .

J40: Independent, self-contained JPEG XL decoder.

[ 59 ] license: MIT License No Attribution C99 single header library (no dependencies) In Roman numerals , "XL" denotes 40, hence the name libjxl-tiny: a simpler encoder implementation of JPEG XL, aimed at photographic images without an alpha channel.

[ 60 ] license: New BSD License jxlatte: Java JPEG XL decoder.

[ 61 ] license: MIT License jxl_decode: A Python JPEG XL decoder.

[ 62 ] license: MIT License hydrium: Fast, ultra-low-memory, streaming JPEG XL encoder written in portable C.

[ 63 ] license: BSD License jxl-oxide: Small JPEG XL decoder written completely in Rust. Fully conforms to the specification.

[ 64 ] dual license: MIT License and Apache License 2.0 An official Rust decoder written by the libjxl team is planned but is still incomplete. Work on it has been accelerated by Firefox suggesting they will more strongly consider support if an official Rust decoder is implemented.

[ 65 ] Since April 2023, the libjxl repository includes Jpegli , an improved JPEG codec that backports applicable new techniques of JPEG XL to the old format, offering image quality improvements even for the decoder.

[ 66 ] A separate repository is also created by Google after the announcement of Jpegli in April 2024.

[ 67 ] [ 68 ] Official software support [ edit ] Operating systems [ edit ] Android One UI in Samsung Galaxy S24 – storage capacity in Expert Raw.

[ 69 ] Apple Inc.

[ 70 ] iOS / iPadOS 17 and later – system-wide reading including Files and Photos .

macOS Sonoma (version 14) and later – reading on Finder and Preview .

[ 71 ] visionOS (presumed).

watchOS 10 and later.

Linux COSMIC desktop environment Alpha 3 and later.

[ 72 ] GNOME 45 and later.

GTK via the GDK pixbuf plugin.

[ 73 ] Prior to 45, it wasn't supported officially.

[ 74 ] Shell – used to store the default wallpapers.

[ 75 ] Image Viewer via the Glycin image decoding library.

[ 76 ] Epiphany [ 77 ] via the WebKitGTK engine.

[ 78 ] KDE applications can be built with KImageFormats plugin with native JPEG XL support.

[ 79 ] This gives most KDE apps native support for both read and writing and works with all apps from the Dolphin file manager including Gwenview image viewer, Krita digital painting tool and DigiKam photo manager.

Windows File Explorer (Windows 11 24H2 and later) via the official image extension.

[ 80 ] Microsoft Photos (as of version 2025.11030.20006.0) [ 81 ] Graphics editors [ edit ] Adobe Lightroom – reading and writing of JPEG XL images.

[ 82 ] Adobe Photoshop – reading and writing of JPEG XL images (version 26.8 onwards).

[ 83 ] Affinity suite – reading and writing of JPEG XL images.

[ 84 ] Darktable photography editor.

GIMP 3.0 and later.

[ 85 ] ImageMagick – reading and writing of JPEG XL images.

[ 86 ] GraphicsMagick IrfanView – reading and writing of JPEG XL images.

Krita – graphics editor.

Paint.NET 5.1.5 – released on March 11th, 2025 and later.

[ 87 ] Pixelmator Pro (read-only) PureRef – supported image format in PureRef 2.

[ 88 ] Tachiyomi 0.12.1 and later.

[ 89 ] XnView – reading and writing of JPEG XL images.

[ 90 ] Zoner Photo Studio – photo and video editing software.

Libraries [ edit ] DICOM version 2024d introduced JPEG XL as a payload codec.

[ 91 ] FFmpeg library and video conversion application.

imlib2 of Enlightenment / EFL , that many image viewers are based on.

Simple DirectMedia Layer 's image-loading subsystem.

VIPS image processing software package.

JDeli pure Java reading library.

Services [ edit ] Amazon Photos – Amazon Prime Photo Storage.

[ 92 ] Web browsers [ edit ] Basilisk v2023.01.07 and later [ 93 ] Orion Browser Pale Moon v31.4.0 and later (v31.4.1 fixed wrong color of decoded JPEG XL images, v31.4.2 fixed JPEG-XL's transparency display for images with an alpha channel , and v32.0.0 support progressive decoding and animation for JPEG XL.).

[ 94 ] Safari 17 and later [ 95 ] [ 96 ] via the WebKit engine.

[ 97 ] Thorium , including JPEG XL animations.

Waterfox G5.1.2 [ 98 ] and later.

Unofficial or indirect support [ edit ] Microsoft Windows – A 3rd-party Windows Imaging Component (WIC) plugin adds viewing to File Explorer , Microsoft Photos , Windows Photo Viewer , and thumbnails, and aware apps. Only on Windows 7/10.

[ 99 ] Another Windows Imaging Component plugin, jxl-winthumb.

[ 100 ] macOS (prior to 14.0 Sonoma) – via a standalone app and a plugin for Quick Look .

[ 101 ] Qt support can be added with the qt-jpegxl-image-plugin.

[ 102 ] jpeg-xl-encode: a PHP JPEG XL wrapper for the reference implementation.

[ 103 ] Preliminary web browser support [ edit ] Firefox web browser – introduced for testing in Firefox Nightly build .

[ 104 ] Rivals [ edit ] The main competitor for JPEG XL is AVIF , which is based on the AV1 video codec in a HEIF container. JPEG XL beats AVIF for higher quality images, but AVIF will often outperform JPEG XL on low quality images in low-fidelity, high-appeal compression: low quality AVIF images will smooth out details and hide compression artifacts better, making them more visually appealing than JPEG XL images of the same size. However, it is unclear to what extent this results from inherent properties of the two image formats themselves, and to what extent this results from the engineering focus of the available encoders.

[ 105 ] Other rival formats include: HEIC – HEVC video codec in a HEIF container.

WebP – VP8 video codec in a RIFF container.

Notes [ edit ] References [ edit ] ^ "Media Types" . IANA.

Archived from the original on 2024-03-05 . Retrieved 2024-03-06 .

^ "UTTypeJPEGXL | Apple Developer Documentation" . Apple.

^ "JPEG XL Format Overview" . GitHub.

Archived from the original on 2022-10-20 . Retrieved 2022-10-20 .

^ a b "fuif/README.md" . GitHub. 2019-04-04.

Archived from the original on 2021-04-24.

^ a b c ISO/IEC 18181-1:2024 Information technology — JPEG XL image coding system — Part 1: Core coding system .

^ a b "Can JPEG XL Become the Next Free and Open Image Format? – Slashdot" . 2021-02-20.

Archived from the original on 2021-12-30.

^ "JPEG - JPEG XL" .

jpeg.org . Retrieved 2025-03-01 .

^ "Support for reading/Writing JPEG XL images (#4681) · Issues · GNOME / GIMP" . 2021-02-26.

Archived from the original on 2021-12-30.

^ Alakuijala, Jyrki; van Asseldonk, Ruud; Boukortt, Sami; Szabadka, Zoltan; Bruse, Martin; Comsa, Iulia-Maria; Firsching, Moritz; Fischbacher, Thomas; Kliuchnikov, Evgenii; Gomez, Sebastian; Obryk, Robert; Potempa, Krzysztof; Rhatushnyak, Alexander; Sneyers, Jon; Szabadka, Zoltan (2019-09-06).

"JPEG XL next-generation image compression architecture and coding tools" . In Tescher, Andrew G.; Ebrahimi, Touradj (eds.).

Applications of Digital Image Processing XLII . Vol. 11137. SPIE. p. 20.

Bibcode : 2019SPIE11137E..0KA .

doi : 10.1117/12.2529237 .

ISBN 978-1-5106-2967-7 .

^ a b "N79010 Final Call for Proposals for a Next-Generation Image Coding Standard (JPEG XL)" (PDF) .

ISO/IEC JTC 1/SC 29/WG 1 (ITU-T SG16) . 15 April 2018.

Archived (PDF) from the original on 31 October 2022 . Retrieved 27 September 2022 .

^ "FUIF, Free Universal Image Format" .

GitHub .

Archived from the original on 2022-11-12 . Retrieved 2022-10-17 .

^ "PIK, A new lossy/lossless image format for photos and the internet" .

GitHub .

Archived from the original on 2022-11-13 . Retrieved 2022-10-17 .

^ Jon Sneyers (Cloudinary), 22 August 2019: Next-Gen Image Format – JPEG XL ^ Rhatushnyak, Alexander; Wassenberg, Jan; Sneyers, Jon; Alakuijala, Jyrki; Vandevenne, Lode; Versari, Luca; Obryk, Robert; Szabadka, Zoltan; Kliuchnikov, Evgenii; Comsa, Iulia-Maria; Potempa, Krzysztof; Bruse, Martin; Firsching, Moritz; Khasanova, Renata; Ruud van Asseldonk; Boukortt, Sami; Gomez, Sebastian; Fischbacher, Thomas (2019). "Committee Draft of JPEG XL Image Coding System".

arXiv : 1908.03565 [ eess.IV ].

^ "v0.2 JPEG XL Reference Software" .

GitLab . 2021-02-19.

Archived from the original on 2021-10-20.

^ a b ISO/IEC 18181-2:2021 Information technology — JPEG XL image coding system — Part 2: File format .

^ Andre, Erik (2021-04-20).

"Statement of support by Facebook on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-03 .

^ Andre, Erik (2021-05-24).

"Statement of support by Facebook on Firefox's issue #1539075" .

bugzilla.mozilla.org .

Archived from the original on 2022-01-04 . Retrieved 2022-11-03 .

^ Rosenthol, Leonard (2021-06-07).

"Statement of support by Adobe on Firefox's issue #1539075" .

bugzilla.mozilla.org .

Archived from the original on 2022-01-04 . Retrieved 2022-11-03 .

^ Chan, Eric (2022-08-23).

"Statement of support by Adobe on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-03 .

^ Wooster, Roland (2022-08-24).

"Statement of support on Chromium's issue #1178058 by VESA's DisplayHDR Chairman and Principal Engineer at Intel's Client Computing Group" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-03 .

^ Wooster, Roland (2022-11-11).

"Reinforced statement of support on Chromium's issue #1178058 by VESA's DisplayHDR Chairman and Principal Engineer at Intel's Client Computing Group" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-11 .

^ Chauvin, Mariot (2022-08-26).

"Statement of support by The Guardian on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-03 .

^ Chauvin, Mariot (2022-01-13).

"Statement of support by The Guardian on Firefox's issue #1539075" .

bugzilla.mozilla.org .

Archived from the original on 2022-01-04 . Retrieved 2022-11-03 .

^ MacAskill, Don (2022-01-04).

"Statement of support by Flickr and SmugMug on Firefox's issue #1539075" .

bugzilla.mozilla.org .

Archived from the original on 2022-01-04 . Retrieved 2022-11-03 .

^ Bendell, Colin (2022-10-17).

"Statement of support by Shopify on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-03 .

^ Rempt, Rempt (2022-11-10).

"Statement of support by the Krita Foundation on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-11 .

^ Brightman, Tony (2022-11-11).

"Statement of support by Serif Ltd.'s SerifLabs on Chromium's issue #1178058" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-11-11 .

^ a b c "Issue 1178058: JPEG XL decoding support (image/jxl) in blink (tracking bug)" .

bugs.chromium.org .

Archived from the original on 2021-12-30 . Retrieved 2022-12-16 .

^ a b Proven, Liam.

"Google drops forthcoming version of JPEG from Chromium" .

www.theregister.com .

Archived from the original on 2023-07-23 . Retrieved 2023-06-06 .

^ JPEG XL support ^ a b Sneyers, Jon (2022-11-02).

"The Case for JPEG-XL" .

Cloudinary Blog . Retrieved 2022-12-30 .

^ Shankland, Stephen (2022-11-03).

"Chrome Banishes JPEG XL Photo Format That Could Save Phone Space" .

CNET .

Archived from the original on 2022-11-03 . Retrieved 2022-11-03 .

^ Sneyers, Jon (2022-12-14).

"Re: Intent to Prototype: JPEG XL decoding support (image/jxl) in blink" .

blink-dev (Mailing list) . Retrieved 2022-12-30 .

^ Purdy, Kevin (2023-04-17).

"FSF: Chrome's JPEG XL killing shows how the web works under browser hegemony" .

Ars Technica . Retrieved 2023-06-06 .

^ "Mozilla Is Interested In A Rust JPEG-XL Decoder For Firefox & Google Might Develop It" .

Phoronix .

^ "Mozilla Comes Out Neutral On JPEG-XL Image Format Support" .

Phoronix .

^ "JPEG XL Viewer" .

chromewebstore.google.com . Retrieved 2024-02-07 .

^ "JPEG XL viewer – Get this Extension for 🦊 Firefox (en-US)" .

addons.mozilla.org .

Archived from the original on 2023-11-17 . Retrieved 2024-02-20 .

^ Gray, Jeremy (2024-09-18).

"Why Apple Uses JPEG XL in the iPhone 16 and What it Means for Your Photos" .

PetaPixel .

Archived from the original on 2024-10-02 . Retrieved 2024-10-03 .

^ "JPEG XL Image Extension" .

Microsoft Store .

^ "March 2025 Microsoft Photos update now rolling out to Windows Insiders" .

Windows Insider Blog .

Archived from the original on 2025-03-25 . Retrieved 2025-03-25 .

^ "Digital Negative (DNG) Specification Version 1.7.1.0" (PDF) . September 2023.

^ "Using Saliency in progressive JPEG XL images" .

Archived from the original on 2023-01-09 . Retrieved 2022-10-17 .

^ "JPEG XL reaches Committee Draft" .

JPEG.org . 2019-08-03.

Archived from the original on 2019-08-03 . Retrieved 2019-08-03 .

The current contributors have committed to releasing it publicly under a royalty-free and open source license.

^ a b "JPEG XL White Paper" (PDF) .

JPEG.org . 2021-01-29.

Archived (PDF) from the original on 2 May 2021 . Retrieved 2025-03-14 .

^ "JPEG XL vs. AVIF – Page 6" .

encode.su .

Archived from the original on 2022-10-18 . Retrieved 2022-10-22 .

^ a b c d Sneyers, Jon (26 May 2020).

"How JPEG XL Compares to Other Image Codecs" .

Cloudinary .

Archived from the original on 2021-12-30 . Retrieved 2021-02-19 .

^ Alakuijala, Jyrki; Boukortt, Sami; Ebrahimi, Touradj; Kliuchnikov, Evgenii; Sneyers, Jon; Upenik, Evgeniy; Vandevenne, Lode; Versari, Luca; Wassenberg, Jan (2020). "Benchmarking JPEG XL image compression". In Schelkens, Peter; Kozacki, Tomasz (eds.).

Optics, Photonics and Digital Technologies for Imaging Applications VI . p. 32.

doi : 10.1117/12.2556264 .

ISBN 978-1-5106-3478-7 .

Archived from the original on 2022-07-05 . Retrieved 2025-03-13 .

^ "libjxl/libjxl: JPEG XL image format reference implementation" .

GitHub .

Archived from the original on 2022-05-22 . Retrieved 2022-06-05 .

^ "FLIF – Free Lossless Image Format" .

Archived from the original on 2021-12-21 . Retrieved 2021-04-06 .

^ Alakuijala, Jyrki; van Asseldonk, Ruud; Boukortt, Sami; Szabadka, Zoltan; Bruse, Martin; Comsa, Iulia-Maria; Firsching, Moritz; Fischbacher, Thomas; Kliuchnikov, Evgenii; Gomez, Sebastian; Obryk, Robert; Potempa, Krzysztof; Rhatushnyak, Alexander; Sneyers, Jon; Szabadka, Zoltan; Vandervenne, Lode; Versari, Luca; Wassenberg, Jan (6 September 2019). "JPEG XL next-generation image compression architecture and coding tools". In Tescher, Andrew G; Ebrahimi, Touradj (eds.).

Applications of Digital Image Processing XLII . Vol. 11137. p. 20.

Bibcode : 2019SPIE11137E..0KA .

doi : 10.1117/12.2529237 .

ISBN 9781510629677 .

^ "FLIF, 3 Sep 2021, jonsneyers comment" .

GitHub .

Archived from the original on 17 December 2022 . Retrieved 28 August 2022 .

^ Sneyers, Jon (2021-12-10).

"Feature request: allow jbrd to reconstruct a part of the file when it's not possible for the whole file" .

GitHub .

Archived from the original on 2022-10-18 . Retrieved 2022-03-19 .

^ "JPEG XL reference implementation" .

GitHub . 3 December 2021.

Archived from the original on 30 December 2021 . Retrieved 24 June 2021 .

^ "Update JPEG-XL with latest changes" .

GitHub . 2019-12-27.

Archived from the original on 2022-10-10 . Retrieved 10 October 2022 .

^ "PLEASE DO NOT OPEN NEW ISSUES HERE" . Retrieved 27 May 2021 .

^ "Libjxl package versions - Repology" .

Archived from the original on 24 June 2025 . Retrieved 11 August 2025 .

^ "J40: Independent, self-contained JPEG XL decoder" .

Archived from the original on 2022-10-12 . Retrieved 2022-09-18 .

^ "libjxl-tiny" .

GitHub . 4 November 2022.

Archived from the original on 9 December 2022 . Retrieved 6 November 2022 .

^ "jxlatte" .

GitHub . 23 December 2022.

Archived from the original on 4 December 2022 . Retrieved 6 November 2022 .

^ "jxl_decode" .

GitHub . 8 June 2023.

Archived from the original on 8 June 2023 . Retrieved 8 June 2023 .

^ Leo Izen (6 March 2023).

"hydrium" .

GitHub . Retrieved 2023-04-02 .

^ Wonwoo Choi (29 October 2023).

"jxl-oxide" .

GitHub . Retrieved 2023-09-29 .

^ libjxl/jxl-rs , libjxl, 2024-09-29 , retrieved 2024-09-29 ^ "Add cjpegli binary, remove old cjpeg_hdr binary" . GitHub . Retrieved 19 February 2025 .

^ Alfonso Maruccia, April 8, 2024: Google's new coding library aims to improve the JPEG image format on the web ^ Gianni Rosato, June 14, 2023: Mini Image Codec Comparison; jpegli ^ "Introducing the Galaxy S24 Camera/Gallery!" .

Samsung Community . 17 January 2024.

Archived from the original on 2024-03-28 . Retrieved 2024-03-28 .

^ Jon Sneyers (12 July 2023).

"JPEG XL: How It Started, How It's Going" . Cloudinary . Retrieved 3 November 2023 .

^ "macOS 14 Sonoma: The Ars Technica review" .

ArsTechnica . 2023-10-29 . Retrieved 2023-10-29 .

^ "Alpha 3: Tales from the COSMIC Desktop Environment" .

System76 Blog . 2024-10-31.

Archived from the original on 2024-11-02 . Retrieved 2024-11-01 .

^ "Add libjxl to SDK and enable it for WebKitGTK" .

GNOME GitLab . 10 June 2022.

Archived from the original on 21 July 2023 . Retrieved 2 July 2024 .

^ "GDK-pixbuf loader plugin's hard dependency on SKIA / SCMS may hurt adoption in core components of Linux desktop environments and distros" .

libjxl GitHub . Retrieved 2024-07-02 .

^ "default: switch JPG>JXL format" .

GNOME GitLab . 2023-07-31.

^ "Image Viewer 45.beta" .

GNOME GitLab . 28 June 2024 . Retrieved 2024-07-02 .

^ "Support for JPEG-XL (#2040)" .

Issues · GNOME / Epiphany · GitLab . 2023-04-12 . Retrieved 2023-07-28 .

^ "257871 – [CMake] Enable JPEG XL by default, no longer experimental" .

bugs.webkit.org . Retrieved 2023-07-28 .

^ "KImageFormats" .

KDE Invent . Retrieved 29 October 2023 .

^ "JPEG XL Image Extension" .

Microsoft Store . 2025-03-03 . Retrieved 2025-04-17 .

^ "jpeg xl photos app" .

Archived from the original on 2025-03-25 . Retrieved 2025-03-25 .

^ "Supported image formats in Lightroom Classic and Lightroom" .

Adobe Help Center . 2024-07-29.

Archived from the original on 2021-05-02 . Retrieved 2025-08-03 .

^ "Feature summary - Photoshop desktop (June 2025 release)" .

Adobe Photoshop Changelog . 2025-06-17 . Retrieved 2025-06-17 .

^ "Photo Editing Feature List" .

Affinity Photo . Retrieved 2024-06-12 .

^ "GIMP 3.0 Release Notes" . GIMP's Team . Retrieved 18 March 2025 .

^ "ImageMagick – Image Formats" .

ImageMagick .

Archived from the original on 2022-01-02 . Retrieved 2024-09-05 .

^ "Paint.NET 5.1.5 is now available" .

Paint.NET Blog . 2025-03-11 . Retrieved 2025-03-13 .

^ "Support:What image formats does PureRef support?" .

pureref.com/ . Retrieved 2024-09-27 .

^ "Changelogs" .

Tachiyomi . 13 January 2024.

Archived from the original on 2024-06-12 . Retrieved 2024-07-08 .

^ "Supported graphic and image formats" .

XnView.com .

Archived from the original on 2024-01-13 . Retrieved 2024-01-17 .

^ "DICOM PS3.5 2024d – Data Structures and Encoding" .

dicom.nema.org .

Archived from the original on 2024-10-09 . Retrieved 2024-10-09 .

^ "File Requirements for Amazon Photos" .

Amazon Photos . Retrieved 2024-09-24 .

^ "Old Release notes" . The Basilisk Development Team . Retrieved 7 March 2025 .

^ "Pale Moon – Release Notes for Archived Versions" .

Archived from the original on 2020-10-17 . Retrieved 2024-01-17 .

^ "Explore media formats for the web – WWDC23 – Videos" .

Apple Developer .

Archived from the original on 2023-06-08 . Retrieved 2023-06-06 .

^ "Safari 17 Beta Release Notes" .

Apple Developer Documentation . Retrieved 2023-06-06 .

^ "208235 – Support JPEG XL images" .

bugs.webkit.org . Retrieved 2023-07-28 .

^ "G5.1.2" .

Waterfox . 2023 . Retrieved 25 March 2025 .

^ "Jpeg Xl Wic" .

GitHub . 27 November 2021.

Archived from the original on 30 December 2021 . Retrieved 23 March 2021 .

^ "JXL WIN Thumb" .

GitHub . 11 June 2022 . Retrieved 27 December 2022 .

^ "JXLook" .

GitHub . December 2021.

Archived from the original on 2021-12-30 . Retrieved 2021-03-01 .

^ "Qt jpegxl image plugin" .

GitHub .

Archived from the original on 3 March 2021 . Retrieved 29 October 2023 .

^ Siipola, Johannes (2022-10-31), JPEG XL Encode , archived from the original on 2022-11-29 , retrieved 2022-11-29 ^ "1539075 – (JPEG-XL) Implement support for JPEG XL (Image/JXL)" .

Archived from the original on 2022-01-04 . Retrieved 2021-03-01 .

^ "It's High Time to Replace JPEG With a Next-Generation Image Codec" .

Cloudinary Blog . 2021-02-22 . Retrieved 2024-09-13 .

External links [ edit ] Wikimedia Commons has media related to JPEG XL .

Official website Reference implementation on GitHub builds: Nightly dev builds Community website J40 Independent, self-contained JPEG XL decoder v t e Graphics file formats Raster ANI ANIM ART AVIF BMP BPG BSAVE CAL CIN CPC CPT DDS DPX ECW EXR FITS FLIC FLIF FPX GIF HDRi HEVC ICER ICNS ICO/CUR ICS ILBM JBIG JBIG2 JNG JPEG JPEG LS JPEG 2000 JPEG XL JPEG XR JPEG XS JPEG XT JPEG-HDR KRA MNG MIFF NRRD ORA PAM PBM/PGM/PPM/PNM PCX PGF PICtor PNG APNG PSD/PSB PSP QOI QTVR RAS RGBE Logluv TIFF SGI TGA TIFF TIFF/EP TIFF/IT UFO/UFP WBMP WebP XBM XCF XPM XWD Raw CIFF DNG Vector AI CDR CGM DXF EMF EMF+ Gerber HVIF IGES PGML SVG VML WMF Xar Compound CDF DjVu EPS MODCA PDF PICT PS SWF XAML Metadata Exchangeable image file format ( Exif ) International Press Telecommunications Council § Photo metadata Extensible Metadata Platform (XMP) GIF § Metadata Steganography Comparison • Category v t e Multimedia compression and container formats Video compression ISO , IEC , MPEG DV MJPEG Motion JPEG 2000 MPEG-1 MPEG-2 Part 2 MPEG-4 Part 2 / ASP Part 10 / AVC Part 33 / IVC MPEG-H Part 2 / HEVC MPEG-I Part 3 / VVC MPEG-5 Part 1 / EVC Part 2 / LCEVC ITU-T , VCEG H.120 H.261 H.262 H.263 H.264 / AVC H.265 / HEVC H.266 / VVC H.267 / Enhanced Compression Model SMPTE VC-1 VC-2 VC-3 VC-5 VC-6 TrueMotion and AOMedia TrueMotion S VP3 VP6 VP7 VP8 VP9 AV1 Chinese Standard AVS1 P2/AVS+ (GB/T 20090.2/16) AVS2 P2 (GB/T 33475.2,GY/T 299.1) HDR Vivid(GY/T 358) AVS3 P2(GY/T 368) Others Apple Video AVS Bink Cinepak Daala DVI FFV1 Huffyuv Indeo Lagarith Microsoft Video 1 MSU Lossless OMS Video Pixlet ProRes 422 4444 QuickTime Animation Graphics RealVideo RTVideo SheerVideo Smacker Sorenson Video/Spark Theora Thor Ut WMV XEB YULS Audio compression ISO , IEC , MPEG MPEG-1 Layer II Multichannel MPEG-1 Layer I MPEG-1 Layer III (MP3) AAC HE-AAC AAC-LD MPEG Surround MPEG-4 ALS MPEG-4 SLS MPEG-4 DST MPEG-4 HVXC MPEG-4 CELP MPEG-D USAC MPEG-H 3D Audio ITU-T G.711 A-law µ-law G.718 G.719 G.722 G.722.1 G.722.2 G.723 G.723.1 G.726 G.728 G.729 G.729.1 IETF Opus iLBC Speex Vorbis FLAC 3GPP AMR AMR-WB AMR-WB+ EVRC EVRC-B EVS GSM-HR GSM-FR GSM-EFR ETSI AC-3 AC-4 DTS Bluetooth SIG SBC LC3 Chinese Standard AVS1 P10 (GB/T 20090.10) AVS2 P3 (GB/T 33475.3) Audio Vivid (GY/T 363) DRA (GB/T 22726) ExAC(SJ/T 11299.4) Others ACELP ALAC Asao ATRAC CELT Codec 2 iSAC Lyra MELP Monkey's Audio MT9 Musepack OptimFROG OSQ QCELP RCELP RealAudio SD2 SHN SILK Siren SMV SVOPC TTA True Audio TwinVQ VMR-WB VSELP WavPack WMA MQA aptX aptX HD aptX Low Latency aptX Adaptive LDAC LHDC LLAC Image compression IEC , ISO , IETF , W3C , ITU-T , JPEG CCITT Group 4 GIF HEIC / HEIF HEVC JBIG JBIG2 JPEG JPEG 2000 JPEG-LS JPEG XL JPEG XR JPEG XS JPEG XT PNG APNG TIFF TIFF/EP TIFF/IT Others AV1 AVIF BPG DjVu EXR FLIF ICER MNG PGF QOI QTVR WBMP WebP Containers ISO , IEC MPEG-ES MPEG-PES MPEG-PS MPEG-TS ISO/IEC base media file format MPEG-4 Part 14 (MP4) Motion JPEG 2000 MPEG-21 Part 9 MPEG media transport ITU-T H.222.0 T.802 IETF RTP Ogg Matroska SMPTE GXF MXF Others 3GP and 3G2 AMV ASF AIFF AVI AU BPG Bink Smacker BMP DivX Media Format EVO Flash Video HEIF IFF M2TS Matroska WebM QuickTime File Format RatDVD RealMedia RIFF WAV MOD and TOD VOB, IFO and BUP Collaborations NETVC MPEG LA Alliance for Open Media Methods Entropy Arithmetic Huffman Modified LPC ACELP CELP LSP WLPC Lossless Lossy LZ DEFLATE LZW PCM A-law µ-law ADPCM DPCM Transforms DCT FFT MDCT Wavelet Daubechies DWT Lists Comparison of audio coding formats Comparison of video codecs List of codecs See Compression methods for techniques and Compression software for codecs v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category v t e IEC standards IEC 60027 60034 60038 60062 60063 60068 60112 60228 60269 60297 60309 60320 60364 60446 60559 60601 60870 60870-5 60870-6 60906-1 60908 60929 60958 60980-344 61030 61131 61131-3 61131-9 61158 61162 61334 61355 61360 61400 61499 61508 61511 61784 61850 61851 61883 61960 61968 61970 62014-4 62026 62056 62061 62196 62262 62264 62304 62325 62351 62365 62366 62379 62386 62455 62680 62682 62700 63110 63119 63382 ISO/IEC 646 1989 2022 4909 5218 6429 6523 7810 7811 7812 7813 7816 7942 8613 8632 8652 8859 9126 9293 9496 9529 9592 9593 9899 9945 9995 10021 10116 10165 10179 10279 10646 10967 11172 11179 11404 11544 11801 12207 13250 13346 13522-5 13568 13816 13818 14443 14496 14651 14882 15288 15291 15408 15444 15445 15504 15511 15693 15897 15938 16262 16485 17024 17025 18004 18014 18181 19752 19757 19770 19788 20000 20802 21000 21827 22275 22537 23000 23003 23008 23270 23360 24707 24727 24744 24752 26300 27000 27000 family 27002 27040 29110 29119 33001 38500 39075 42010 80000 81346 Related International Electrotechnical Commission NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐5rctn
Cached time: 20250817054051
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 1.346 seconds
Real time usage: 1.532 seconds
Preprocessor visited node count: 7855/1000000
Revision size: 62510/2097152 bytes
Post‐expand include size: 341802/2097152 bytes
Template argument size: 8391/2097152 bytes
Highest expansion depth: 27/100
Expensive parser function count: 4/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 395508/5000000 bytes
Lua time usage: 0.794/10.000 seconds
Lua memory usage: 8345530/52428800 bytes
Number of Wikibase entities loaded: 3/500 Transclusion expansion time report (%,ms,calls,template)
100.00% 1206.180      1 -total
 53.18%  641.473      2 Template:Reflist
 37.37%  450.705     91 Template:Cite_web
 24.67%  297.534      3 Template:Infobox
 19.99%  241.066      1 Template:Infobox_software
 10.37%  125.072      2 Template:Wikidata
  9.35%  112.757      8 Template:Navbox
  7.03%   84.841      1 Template:Graphics_file_formats
  5.63%   67.913      1 Template:Short_description
  4.65%   56.040      1 Template:Infobox_file_format Saved in parser cache with key enwiki:pcache:57017279:|#|:idhash:canonical and timestamp 20250817054051 and revision id 1305493753. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=JPEG_XL&oldid=1305493753 " Categories : JPEG Animated graphics file formats Graphics standards Image compression ISO standards ITU-T recommendations Open formats Raster graphics file formats Hidden categories: Articles with short description Short description is different from Wikidata Commons category link from Wikidata This page was last edited on 12 August 2025, at 11:04 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents JPEG XL 16 languages Add topic

