Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Background 3 Definition and examples 4 Verifying tautologies 5 Tautological implication 6 Substitution 7 Semantic completeness and soundness 8 Efficient verification and the Boolean satisfiability problem 9 Tautologies versus validities in first-order logic 10 Tautologies in Non-Classical Logics 11 See also Toggle See also subsection 11.1 Normal forms 11.2 Related logical topics 12 References 13 Further reading 14 External links Toggle the table of contents Tautology (logic) 37 languages العربية Български Català Čeština Dansk Deutsch Eesti Español Esperanto Euskara فارسی Français Galego 한국어 Bahasa Indonesia Íslenska Italiano עברית Кыргызча Lietuvių Magyar Македонски مصرى Nederlands 日本語 Norsk bokmål Polski Português Русский Simple English Slovenčina Српски / srpski Svenska Türkçe Українська اردو 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia In logic, a statement which is always true In mathematical logic , a tautology (from Ancient Greek : ταυτολογία ) is a formula that is true regardless of the interpretation of its component terms , with only the logical constants having a fixed meaning.  For example, a formula that states "the ball is green or the ball is not green" is always true, regardless of what a ball is and regardless of its colour. Tautology is usually, though not always, used to refer to valid formulas of propositional logic .

The philosopher Ludwig Wittgenstein first applied the term to redundancies of propositional logic in 1921, borrowing from rhetoric , where a tautology is a repetitive statement. In logic, a formula is satisfiable if it is true under at least one interpretation, and thus a tautology is a formula whose negation is unsatisfiable. In other words, it cannot be false.

Unsatisfiable statements, both through negation and affirmation, are known formally as contradictions . A formula that is neither a tautology nor a contradiction is said to be logically contingent . Such a formula can be made either true or false based on the values assigned to its propositional variables.

The double turnstile notation ⊨ ⊨ S {\displaystyle \vDash S} is used to indicate that S is a tautology. Tautology is sometimes symbolized by "V pq ", and contradiction by "O pq ". The tee symbol ⊤ ⊤ {\displaystyle \top } is sometimes used to denote an arbitrary tautology, with the dual symbol ⊥ ⊥ {\displaystyle \bot } ( falsum ) representing an arbitrary contradiction; in any symbolism, a tautology may be substituted for the truth value " true ", as symbolized, for instance, by "1".

[ 1 ] Tautologies are a key concept in propositional logic , where a tautology is defined as a propositional formula that is true under any possible Boolean valuation of its propositional variables .

[ 2 ] A key property of tautologies in propositional logic is that an effective method exists for testing whether a given formula is always satisfied (equiv., whether its negation is unsatisfiable).

The definition of tautology can be extended to sentences in predicate logic , which may contain quantifiers —a feature absent from sentences of propositional logic. Indeed, in propositional logic, there is no distinction between a tautology and a logically valid formula. In the context of predicate logic, many authors define a tautology to be a sentence that can be obtained by taking a tautology of propositional logic, and uniformly replacing each propositional variable by a first-order formula (one formula per propositional variable). The set of such formulas is a proper subset of the set of logically valid sentences of predicate logic (i.e., sentences that are true in every model ).

An example of a tautology is "it's either a tautology, or it isn't." History [ edit ] The word tautology was used by the ancient Greeks to describe a statement that was asserted to be true merely by virtue of saying the same thing twice, a pejorative meaning that is still used for rhetorical tautologies . Between 1800 and 1940, the word gained new meaning in logic, and is currently used in mathematical logic to denote a certain type of propositional formula, without the pejorative connotations it originally possessed.

In 1800, Immanuel Kant wrote in his book Logic : The identity of concepts in analytical judgments can be either explicit ( explicita ) or non-explicit ( implicita ). In the former case analytic propositions are tautological.

Here, analytic proposition refers to an analytic truth , a statement in natural language that is true solely because of the terms involved.

In 1884, Gottlob Frege proposed in his Grundlagen that a truth is analytic exactly if it can be derived using logic. However, he maintained a distinction between analytic truths (i.e., truths based only on the meanings of their terms) and tautologies (i.e., statements devoid of content).

In his Tractatus Logico-Philosophicus in 1921, Ludwig Wittgenstein proposed that statements that can be deduced by logical deduction are tautological (empty of meaning), as well as being analytic truths.

Henri Poincaré had made similar remarks in Science and Hypothesis in 1905. Although Bertrand Russell at first argued against these remarks by Wittgenstein and Poincaré, claiming that mathematical truths were not only non-tautologous but were synthetic , he later spoke in favor of them in 1918: Everything that is a proposition of logic has got to be in some sense or the other like a tautology. It has got to be something that has some peculiar quality, which I do not know how to define, that belongs to logical propositions but not to others.

Here, logical proposition refers to a proposition that is provable using the laws of logic.

Many logicians in the early 20th century used the term 'tautology' for any formula that is universally valid, whether a formula of propositional logic or of predicate logic . In this broad sense, a tautology is a formula that is true under all interpretations , or that is logically equivalent to the negation of a contradiction.

Tarski and Gödel followed this usage and it appears in textbooks such as that of Lewis and Langford.

[ 3 ] This broad use of the term is less common today, though some textbooks continue to use it.

[ 4 ] [ 5 ] Modern textbooks more commonly restrict the use of 'tautology' to valid sentences of propositional logic, or valid sentences of predicate logic that can be reduced to propositional tautologies by substitution.

[ 6 ] [ 7 ] Background [ edit ] Main article: Propositional logic Propositional logic begins with propositional variables , atomic units that represent concrete propositions. A formula consists of propositional variables connected by logical connectives, built up in such a way that the truth of the overall formula can be deduced from the truth or falsity of each variable. A valuation is a function that assigns each propositional variable to either T (for truth) or F (for falsity). So by using the propositional variables A and B , the binary connectives ∨ ∨ {\displaystyle \lor } and ∧ ∧ {\displaystyle \land } representing disjunction and conjunction respectively, and the unary connective ¬ ¬ {\displaystyle \lnot } representing negation , the following formula can be obtained: ( A ∧ ∧ B ) ∨ ∨ ( ¬ ¬ A ) ∨ ∨ ( ¬ ¬ B ) {\displaystyle (A\land B)\lor (\lnot A)\lor (\lnot B)} .

A valuation here must assign to each of A and B either T or F. But no matter how this assignment is made, the overall formula will come out true. For if the first disjunct ( A ∧ ∧ B ) {\displaystyle (A\land B)} is not satisfied by a particular valuation, then A or B must be assigned F, which will make one of the following disjunct to be assigned T. In natural language, either both A and B are true or at least one of them is false.

Definition and examples [ edit ] This article may be written in a style that is too abstract to be readily understandable by general audiences .

Please improve it by defining technical terminology, and by adding examples.

( May 2020 ) A formula of propositional logic is a tautology if the formula itself is always true, regardless of which valuation is used for the propositional variables . There are infinitely many tautologies.

In many of the following examples A represents the statement "object X is bound", B represents "object X is a book", and C represents "object X is on the shelf". Without a specific referent object X , A → → B {\displaystyle A\to B} corresponds to the proposition "all bound things are books".

( A ∨ ∨ ¬ ¬ A ) {\displaystyle (A\lor \lnot A)} (" A or not A "), the law of excluded middle . This formula has only one propositional variable, A . Any valuation for this formula must, by definition, assign A one of the truth values true or false , and assign ¬ ¬ {\displaystyle \lnot } A the other truth value. For instance, "The cat is black or the cat is not black".

( A → → B ) ⇔ ⇔ ( ¬ ¬ B → → ¬ ¬ A ) {\displaystyle (A\to B)\Leftrightarrow (\lnot B\to \lnot A)} ("if A implies B , then not- B implies not- A ", and vice versa), which expresses the law of contraposition . For instance, "If it's bound, it is a book; if it's not a book, it's not bound" and vice versa.

( ( ¬ ¬ A → → B ) ∧ ∧ ( ¬ ¬ A → → ¬ ¬ B ) ) → → A {\displaystyle ((\lnot A\to B)\land (\lnot A\to \lnot B))\to A} ("if not- A implies both B and its negation not- B , then not- A must be false, then A must be true"), which is the principle known as reductio ad absurdum . For instance, "If it's not bound, we know it's a book, if it's not bound, we know it's also not a book, so it is bound".

¬ ¬ ( A ∧ ∧ B ) ⇔ ⇔ ( ¬ ¬ A ∨ ∨ ¬ ¬ B ) {\displaystyle \lnot (A\land B)\Leftrightarrow (\lnot A\lor \lnot B)} ("if not both A and B , then not- A or not- B ", and vice versa), which is known as De Morgan's law . "If it is not both a book and bound, then we are sure that it's not a book or that it's not bound" and vice versa.

( ( A → → B ) ∧ ∧ ( B → → C ) ) → → ( A → → C ) {\displaystyle ((A\to B)\land (B\to C))\to (A\to C)} ("if A implies B and B implies C , then A implies C "), which is the principle known as hypothetical syllogism . "If it's bound, then it's a book and if it's a book, then it's on that shelf, so if it's bound, it's on that shelf".

( ( A ∨ ∨ B ) ∧ ∧ ( A → → C ) ∧ ∧ ( B → → C ) ) → → C {\displaystyle ((A\lor B)\land (A\to C)\land (B\to C))\to C} ("if at least one of A or B is true, and each implies C , then C must be true as well"), which is the principle known as proof by cases . "Bound things and books are on that shelf. If it's either a book or it's bound, it's on that shelf".

A minimal tautology is a tautology that is not the instance of a shorter tautology.

( A ∨ ∨ B ) → → ( A ∨ ∨ B ) {\displaystyle (A\lor B)\to (A\lor B)} is a tautology, but not a minimal one, because it is an instantiation of C → → C {\displaystyle C\to C} .

Verifying tautologies [ edit ] The problem of determining whether a formula is a tautology is fundamental in propositional logic. If there are n variables occurring in a formula then there are 2 n distinct valuations for the formula. Therefore, the task of determining whether or not the formula is a tautology is a finite and mechanical one: one needs only to evaluate the truth value of the formula under each of its possible valuations. One algorithmic method for verifying that every valuation makes the formula to be true is to make a truth table that includes every possible valuation.

[ 2 ] For example, consider the formula ( ( A ∧ ∧ B ) → → C ) ⇔ ⇔ ( A → → ( B → → C ) ) .

{\displaystyle ((A\land B)\to C)\Leftrightarrow (A\to (B\to C)).} There are 8 possible valuations for the propositional variables A , B , C , represented by the first three columns of the following table. The remaining columns show the truth of subformulas of the formula above, culminating in a column showing the truth value of the original formula under each valuation.

⁠ A {\displaystyle A} ⁠ ⁠ B {\displaystyle B} ⁠ ⁠ C {\displaystyle C} ⁠ A ∧ ∧ B {\displaystyle A\land B} ( A ∧ ∧ B ) → → C {\displaystyle (A\land B)\to C} B → → C {\displaystyle B\to C} A → → ( B → → C ) {\displaystyle A\to (B\to C)} ( ( A ∧ ∧ B ) → → C ) ⇔ ⇔ ( A → → ( B → → C ) ) {\displaystyle ((A\land B)\to C)\Leftrightarrow (A\to (B\to C))} T T T T T T T T T T F T F F F T T F T F T T T T T F F F T T T T F T T F T T T T F T F F T F T T F F T F T T T T F F F F T T T T Because each row of the final column shows T , the sentence in question is verified to be a tautology.

It is also possible to define a deductive system (i.e., proof system) for propositional logic, as a simpler variant of the deductive systems employed for first-order logic (see Kleene 1967, Sec 1.9 for one such system). A proof of a tautology in an appropriate deduction system may be much shorter than a complete truth table (a formula with n propositional variables requires a truth table with 2 n lines, which quickly becomes infeasible as n increases). Proof systems are also required for the study of intuitionistic propositional logic, in which the method of truth tables cannot be employed because the law of the excluded middle is not assumed.

Tautological implication [ edit ] Main article: Tautological consequence A formula R is said to tautologically imply a formula S if every valuation that causes R to be true also causes S to be true. This situation is denoted R ⊨ ⊨ S {\displaystyle R\models S} . It is equivalent to the formula R → → S {\displaystyle R\to S} being a tautology (Kleene 1967 p. 27).

For example, let S {\displaystyle S} be A ∧ ∧ ( B ∨ ∨ ¬ ¬ B ) {\displaystyle A\land (B\lor \lnot B)} . Then S {\displaystyle S} is not a tautology, because any valuation that makes A {\displaystyle A} false will make S {\displaystyle S} false. But any valuation that makes A {\displaystyle A} true will make S {\displaystyle S} true, because B ∨ ∨ ¬ ¬ B {\displaystyle B\lor \lnot B} is a tautology. Let R {\displaystyle R} be the formula A ∧ ∧ C {\displaystyle A\land C} . Then R ⊨ ⊨ S {\displaystyle R\models S} , because any valuation satisfying R {\displaystyle R} will make A {\displaystyle A} true—and thus makes S {\displaystyle S} true.

It follows from the definition that if a formula R {\displaystyle R} is a contradiction, then R {\displaystyle R} tautologically implies every formula, because there is no truth valuation that causes R {\displaystyle R} to be true, and so the definition of tautological implication is trivially satisfied. Similarly, if S {\displaystyle S} is a tautology, then S {\displaystyle S} is tautologically implied by every formula.

Substitution [ edit ] Main article: Substitution instance There is a general procedure, the substitution rule , that allows additional tautologies to be constructed from a given tautology (Kleene 1967 sec. 3). Suppose that S is a tautology and for each propositional variable A in S a fixed sentence S A is chosen. Then the sentence obtained by replacing each variable A in S with the corresponding sentence S A is also a tautology.

For example, let S be the tautology: ( A ∧ ∧ B ) ∨ ∨ ¬ ¬ A ∨ ∨ ¬ ¬ B {\displaystyle (A\land B)\lor \lnot A\lor \lnot B} .

Let S A be C ∨ ∨ D {\displaystyle C\lor D} and let S B be C → → E {\displaystyle C\to E} .

It follows from the substitution rule that the sentence: ( ( C ∨ ∨ D ) ∧ ∧ ( C → → E ) ) ∨ ∨ ¬ ¬ ( C ∨ ∨ D ) ∨ ∨ ¬ ¬ ( C → → E ) {\displaystyle ((C\lor D)\land (C\to E))\lor \lnot (C\lor D)\lor \lnot (C\to E)} is also a tautology.

Semantic completeness and soundness [ edit ] An axiomatic system is complete if every tautology is a theorem (derivable from axioms). An axiomatic system is sound if every theorem is a tautology.

Efficient verification and the Boolean satisfiability problem [ edit ] The problem of constructing practical algorithms to determine whether sentences with large numbers of propositional variables are tautologies is an area of contemporary research in the area of automated theorem proving .

The method of truth tables illustrated above is provably correct – the truth table for a tautology will end in a column with only T , while the truth table for a sentence that is not a tautology will contain a row whose final column is F , and the valuation corresponding to that row is a valuation that does not satisfy the sentence being tested. This method for verifying tautologies is an effective procedure , which means that given unlimited computational resources it can always be used to mechanistically determine whether a sentence is a tautology. This means, in particular, the set of tautologies over a fixed finite or countable alphabet is a decidable set .

As an efficient procedure , however, truth tables are constrained by the fact that the number of valuations that must be checked increases as 2 k , where k is the number of variables in the formula. This exponential growth in the computation length renders the truth table method useless for formulas with thousands of propositional variables, as contemporary computing hardware cannot execute the algorithm in a feasible time period.

The problem of determining whether there is any valuation that makes a formula true is the Boolean satisfiability problem ; the problem of checking tautologies is equivalent to this problem, because verifying that a sentence S is a tautology is equivalent to verifying that there is no valuation satisfying ¬ ¬ S {\displaystyle \lnot S} . The Boolean satisfiability problem is NP-complete , and consequently, tautology is co-NP-complete . It is widely believed that (equivalently for all NP-complete problems) no polynomial-time algorithm can solve the satisfiability problem, although some algorithms perform well on special classes of formulas, or terminate quickly on many instances.

[ 8 ] Tautologies versus validities in first-order logic [ edit ] Main article: Validity (logic) The fundamental definition of a tautology is in the context of propositional logic. The definition can be extended, however, to sentences in first-order logic .

[ 9 ] These sentences may contain quantifiers, unlike sentences of propositional logic. In the context of first-order logic, a distinction is maintained between logical validities , sentences that are true in every model, and tautologies (or, tautological validities ), which are a proper subset of the first-order logical validities. In the context of propositional logic, these two terms coincide.

A tautology in first-order logic is a sentence that can be obtained by taking a tautology of propositional logic and uniformly replacing each propositional variable by a first-order formula (one formula per propositional variable). For example, because A ∨ ∨ ¬ ¬ A {\displaystyle A\lor \lnot A} is a tautology of propositional logic, ( ∀ ∀ x ( x = x ) ) ∨ ∨ ( ¬ ¬ ∀ ∀ x ( x = x ) ) {\displaystyle (\forall x(x=x))\lor (\lnot \forall x(x=x))} is a tautology in first order logic. Similarly, in a first-order language with a unary relation symbols R , S , T , the following sentence is a tautology: ( ( ( ∃ ∃ x R x ) ∧ ∧ ¬ ¬ ( ∃ ∃ x S x ) ) → → ∀ ∀ x T x ) ⇔ ⇔ ( ( ∃ ∃ x R x ) → → ( ( ¬ ¬ ∃ ∃ x S x ) → → ∀ ∀ x T x ) ) .

{\displaystyle (((\exists xRx)\land \lnot (\exists xSx))\to \forall xTx)\Leftrightarrow ((\exists xRx)\to ((\lnot \exists xSx)\to \forall xTx)).} It is obtained by replacing A {\displaystyle A} with ∃ ∃ x R x {\displaystyle \exists xRx} , B {\displaystyle B} with ¬ ¬ ∃ ∃ x S x {\displaystyle \lnot \exists xSx} , and C {\displaystyle C} with ∀ ∀ x T x {\displaystyle \forall xTx} in the propositional tautology: ( ( A ∧ ∧ B ) → → C ) ⇔ ⇔ ( A → → ( B → → C ) ) {\displaystyle ((A\land B)\to C)\Leftrightarrow (A\to (B\to C))} .

Tautologies in Non-Classical Logics [ edit ] Whether a given formula is a tautology depends on the formal system of logic that is in use. For example, the following formula is a tautology of classical logic but not of intuitionistic logic : ¬ ¬ ¬ ¬ A → → A {\displaystyle \neg \neg A\to A} See also [ edit ] Normal forms [ edit ] Algebraic normal form Conjunctive normal form Disjunctive normal form Logic optimization Related logical topics [ edit ] Boolean algebra Boolean domain Boolean function Contradiction False (logic) Syllogism Law of identity List of logic symbols Logic synthesis Logical consequence Logical graph Logical truth Vacuous truth References [ edit ] ^ Weisstein, Eric W.

"Tautology" .

mathworld.wolfram.com . Retrieved 2020-08-14 .

^ a b "tautology | Definition & Facts" .

Encyclopedia Britannica . Retrieved 2020-08-14 .

^ Lewis, C I; Langford, C H (1959).

Symbolic Logic (2nd ed.). Dover.

^ Hedman, Shawn (2004).

A First Course in Logic . Oxford University Press. p. 63.

^ Rautenberg, Wolfgang (2010).

A Concise Introduction to Mathematical Logic . Springer. p. 64.

^ Enderton, Herbert (2001).

Mathematical Introduction to Logic . Academic Press. p. 88.

^ Hinman, Peter (2010).

Fundamentals of Mathematical Logic . Springer. p. 98.

^ See SAT solver for references.

^ "New Members" .

Naval Engineers Journal .

114 (1): 17– 18. January 2002.

Bibcode : 2002NEngJ.114Q..17.

.

doi : 10.1111/j.1559-3584.2002.tb00103.x .

ISSN 0028-1425 .

Further reading [ edit ] Bocheński, J. M.

(1959) Précis of Mathematical Logic , translated from the French and German editions by Otto Bird, Dordrecht , South Holland : D. Reidel .

Enderton, H. B.

(2002) A Mathematical Introduction to Logic , Harcourt / Academic Press , ISBN 0-12-238452-0 .

Kleene, S. C.

(1967) Mathematical Logic , reprinted 2002, Dover Publications , ISBN 0-486-42533-9 .

Reichenbach, H.

(1947).

Elements of Symbolic Logic , reprinted 1980, Dover, ISBN 0-486-24004-5 Wittgenstein, L.

(1921). "Logisch-philosophiche Abhandlung", Annalen der Naturphilosophie (Leipzig), v. 14, pp. 185–262, reprinted in English translation as Tractatus logico-philosophicus , New York City and London , 1922.

External links [ edit ] "Tautology" , Encyclopedia of Mathematics , EMS Press , 2001 [1994] v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal v t e Logic History Major fields Computer science Formal semantics (natural language) Inference Philosophy of logic Proof Semantics of logic Syntax Logics Classical Informal Critical thinking Reason Mathematical Non-classical Philosophical Theories Argumentation Metalogic Metamathematics Set Foundations Abduction Analytic and synthetic propositions Antecedent Consequent Contradiction Paradox Antinomy Deduction Deductive closure Definition Description Dichotomy Entailment Linguistic Form Induction Logical truth Name Necessity and sufficiency Premise Probability Proposition Reference Statement Substitution Truth Validity Lists Topics Mathematical logic Boolean algebra Set theory Other Logicians Rules of inference Paradoxes Fallacies Logic symbols Category Outline Portal WikiProject changes v t e Common logical connectives Tautology / True ⊤ ⊤ {\displaystyle \top } Alternative denial ( NAND gate ) ∧ ∧ ¯ ¯ {\displaystyle {\overline {\wedge }}} Converse implication ⇐ ⇐ {\displaystyle \Leftarrow } Implication ( IMPLY gate ) ⇒ ⇒ {\displaystyle \Rightarrow } Disjunction ( OR gate ) ∨ ∨ {\displaystyle \lor } Negation ( NOT gate ) ¬ ¬ {\displaystyle \neg } Exclusive or ( XOR gate ) ⊕ ⊕ {\displaystyle \oplus } Biconditional ( XNOR gate ) ⊙ ⊙ {\displaystyle \odot } Statement ( Digital buffer ) Joint denial ( NOR gate ) ∨ ∨ ¯ ¯ {\displaystyle {\overline {\vee }}} Nonimplication ( NIMPLY gate ) ⇏ ⇏ {\displaystyle \nRightarrow } Converse nonimplication ⇍ ⇍ {\displaystyle \nLeftarrow } Conjunction ( AND gate ) ∧ ∧ {\displaystyle \land } Contradiction / False ⊥ ⊥ {\displaystyle \bot } Philosophy portal v t e ‌ Logical truth ⊤ Functional: Truth value Truth function ⊨ Tautology Formal: Theory Formal proof Theorem Negation ⊥ False Contradiction Inconsistency v t e Common logical symbols ∧ or & and ∨ or ¬ or ~ not → implies ⊃ implies , superset ↔ or ≡ iff | nand ∀ universal quantification ∃ existential quantification ⊤ true , tautology ⊥ false , contradiction ⊢ entails, proves ⊨ entails, therefore ∴ therefore ∵ because Philosophy portal Mathematics portal Authority control databases : National Germany Czech Republic NewPP limit report
Parsed by mw‐web.codfw.main‐597b4b5bbd‐9ngs9
Cached time: 20250814215157
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.604 seconds
Real time usage: 0.925 seconds
Preprocessor visited node count: 2524/1000000
Revision size: 23176/2097152 bytes
Post‐expand include size: 141009/2097152 bytes
Template argument size: 2699/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 7/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 89209/5000000 bytes
Lua time usage: 0.305/10.000 seconds
Lua memory usage: 12874769/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  518.134      1 -total
 26.01%  134.757      9 Template:Navbox
 21.33%  110.521      1 Template:Reflist
 17.62%   91.312      1 Template:Mathematical_logic
 15.27%   79.114      1 Template:Langx
 13.68%   70.895      2 Template:Cite_web
 11.33%   58.690      1 Template:Short_description
  7.06%   36.566      2 Template:Pagetype
  5.99%   31.040      1 Template:Authority_control
  4.55%   23.592      1 Template:Too_abstract Saved in parser cache with key enwiki:pcache:4495335:|#|:idhash:canonical and timestamp 20250814215157 and revision id 1304974071. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Tautology_(logic)&oldid=1304974071 " Categories : Logical expressions Logical truth Mathematical logic Propositional calculus Propositions Semantics Sentences by type Hidden categories: Articles with short description Short description is different from Wikidata Articles containing Ancient Greek (to 1453)-language text Pages that use a deprecated format of the math tags This page was last edited on 9 August 2025, at 08:10 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Tautology (logic) 37 languages Add topic

