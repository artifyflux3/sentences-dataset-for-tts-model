Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Complexity classes 2 Machine models 3 Hierarchy theorem 4 Relation with other complexity classes 5 References 6 External links Toggle the table of contents DSPACE 9 languages Català Deutsch Español فارسی Français 한국어 日本語 Português Српски / srpski Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia For digital repositories, see DSpace .

This article needs additional citations for verification .

Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed.

Find sources: "DSPACE" – news · newspapers · books · scholar · JSTOR ( October 2009 ) ( Learn how and when to remove this message ) In computational complexity theory , DSPACE or SPACE is the computational resource describing the resource of memory space for a deterministic Turing machine .  It represents the total amount of memory space that a "normal" physical computer would need to solve a given computational problem with a given algorithm .

Complexity classes [ edit ] The measure DSPACE is used to define complexity classes , sets of all of the decision problems that can be solved using a certain amount of memory space.  For each function f ( n ), there is a complexity class SPACE( f ( n )), the set of decision problems that can be solved by a deterministic Turing machine using space O ( f ( n )).  There is no restriction on the amount of computation time that can be used, though there may be restrictions on some other complexity measures (like alternation ).

Several important complexity classes are defined in terms of DSPACE . These include: REG = DSPACE( O (1)), where REG is the class of regular languages . In fact, REG = DSPACE( o (log log n )) (that is, Ω(log log n ) space is required to recognize any non-regular language).

[ 1 ] [ 2 ] Proof: Suppose that there exists a non-regular language L ∈ DSPACE( s ( n )), for s ( n ) = o (log log n ). Let M be a Turing machine deciding L in space s ( n ). By our assumption L ∉ DSPACE( O (1)); thus, for any arbitrary k ∈ ∈ N {\displaystyle k\in \mathbb {N} } , there exists an input of M requiring more space than k .

Let x be an input of smallest size, denoted by n, that requires more space than k , and C {\displaystyle {\mathcal {C}}} be the set of all configurations of M on input x . Because M ∈ DSPACE( s ( n )), then | C | ≤ ≤ 2 c .

s ( n ) = o ( log ⁡ ⁡ n ) {\displaystyle |{\mathcal {C}}|\leq 2^{c.s(n)}=o(\log n)} , where c is a constant depending on M .

Let S denote the set of all possible crossing sequences of M on x . Note that the length of a crossing sequence of M on x is at most | C | {\displaystyle |{\mathcal {C}}|} : if it is longer than that, then some configuration will repeat, and M will go into an infinite loop. There are also at most | C | {\displaystyle |{\mathcal {C}}|} possibilities for every element of a crossing sequence, so the number of different crossing sequences of M on x is | S | ≤ ≤ | C | | C | ≤ ≤ ( 2 c .

s ( n ) ) 2 c .

s ( n ) = 2 c .

s ( n ) .2 c .

s ( n ) < 2 2 2 c .

s ( n ) = 2 2 o ( log ⁡ ⁡ log ⁡ ⁡ n ) = o ( n ) {\displaystyle |S|\leq |{\mathcal {C}}|^{|{\mathcal {C}}|}\leq (2^{c.s(n)})^{2^{c.s(n)}}=2^{c.s(n).2^{c.s(n)}}<2^{2^{2c.s(n)}}=2^{2^{o(\log \log n)}}=o(n)} According to pigeonhole principle , there exist indexes i < j such that C i ( x ) = C j ( x ) {\displaystyle {\mathcal {C}}_{i}(x)={\mathcal {C}}_{j}(x)} , where C i ( x ) {\displaystyle {\mathcal {C}}_{i}(x)} and C j ( x ) {\displaystyle {\mathcal {C}}_{j}(x)} are the crossing sequences at boundary i and j , respectively.

Let x' be the string obtained from x by removing all cells from i + 1 to j . The machine M still behaves exactly the same way on input x' as on input x , so it needs the same space to compute x' as to compute x . However, | x' | < | x | , contradicting the definition of x . Hence, there does not exist such a language L as assumed. □ The above theorem implies the necessity of the space-constructible function assumption in the space hierarchy theorem .

L = DSPACE( O (log n )) PSPACE = ⋃ ⋃ k ∈ ∈ N D S P A C E ( n k ) {\displaystyle \bigcup _{k\in \mathbb {N} }{\mathsf {DSPACE}}(n^{k})} EXPSPACE = ⋃ ⋃ k ∈ ∈ N D S P A C E ( 2 n k ) {\displaystyle \bigcup _{k\in \mathbb {N} }{\mathsf {DSPACE}}(2^{n^{k}})} Machine models [ edit ] DSPACE is traditionally measured on a deterministic Turing machine .  Several important space complexity classes are sublinear , that is, smaller than the size of the input.  Thus, "charging" the algorithm for the size of the input, or for the size of the output, would not truly capture the memory space used.  This is solved by defining the multi-tape Turing machine with input and output , which is a standard multi-tape Turing machine, except that the input tape may never be written-to, and the output tape may never be read from.  This allows smaller space classes, such as L (logarithmic space), to be defined in terms of the amount of space used by all of the work tapes (excluding the special input and output tapes).

Since many symbols might be packed into one by taking a suitable power of the alphabet, for all c ≥ 1 and f such that f ( n ) ≥ 1 , the class of languages recognizable in c f ( n ) space is the same as the class of languages recognizable in f ( n ) space. This justifies usage of big O notation in the definition.

Hierarchy theorem [ edit ] The space hierarchy theorem shows that, for every space-constructible function f : N → → N {\displaystyle f:\mathbb {N} \to \mathbb {N} } , there exists some language L which is decidable in space O ( f ( n ) ) {\displaystyle O(f(n))} but not in space o ( f ( n ) ) {\displaystyle o(f(n))} .

Further information: space hierarchy theorem Relation with other complexity classes [ edit ] DSPACE is the deterministic counterpart of NSPACE , the class of memory space on a non-deterministic Turing machine .  By Savitch's theorem , [ 3 ] we have that D S P A C E ( s ( n ) ) ⊆ ⊆ N S P A C E ( s ( n ) ) ⊆ ⊆ D S P A C E ( ( s ( n ) ) 2 ) .

{\displaystyle {\mathsf {DSPACE}}(s(n))\subseteq {\mathsf {NSPACE}}(s(n))\subseteq {\mathsf {DSPACE}}{\bigl (}(s(n))^{2}{\bigr )}.} NTIME is related to DSPACE in the following way. For any time constructible function t ( n ), we have N T I M E ( t ( n ) ) ⊆ ⊆ D S P A C E ( t ( n ) ) {\displaystyle {\mathsf {NTIME}}(t(n))\subseteq {\mathsf {DSPACE}}(t(n))} .

A much better simulation is known for deterministic time : if t ( n ) ≥ ≥ n {\displaystyle t(n)\geq n} , D T I M E ( t ( n ) ) ⊆ ⊆ D S P A C E ( t ( n ) log ⁡ ⁡ t ( n ) ) {\displaystyle {\mathsf {DTIME}}(t(n))\subseteq {\mathsf {DSPACE}}\left({\sqrt {t(n)\log t(n)}}\right)} by a result of Williams , [ 4 ] improving an older bound of O ( t / log ⁡ ⁡ t ) {\displaystyle O(t/\log t)} by Hopcroft , Paul, and Valiant .

[ 5 ] On the other hand, for any function s ( n ) ≥ ≥ log ⁡ ⁡ n {\displaystyle s(n)\geq \log n} , D S P A C E ( s ( n ) ) ⊆ ⊆ D T I M E ( 2 O ( s ( n ) ) ) {\displaystyle {\mathsf {DSPACE}}(s(n))\subseteq {\mathsf {DTIME}}{\bigl (}2^{O(s(n))}{\bigr )}} .

References [ edit ] ^ Szepietowski (1994) p. 28 ^ Alberts, Maris (1985), Space complexity of alternating Turing machines ^ Arora & Barak (2009) p. 86 ^ Ryan Williams, R. (2025-06-15).

"Simulating Time with Square-Root Space" .

Proceedings of the 57th Annual ACM Symposium on Theory of Computing . ACM. pp.

13– 23.

doi : 10.1145/3717823.3718225 .

ISBN 979-8-4007-1510-5 .

^ Hopcroft, John; Paul, Wolfgang; Valiant, Leslie (April 1977).

"On Time Versus Space" .

Journal of the ACM .

24 (2): 332– 337.

doi : 10.1145/322003.322015 .

ISSN 0004-5411 .

Szepietowski, Andrzej (1994).

Turing Machines with Sublogarithmic Space .

Springer Science+Business Media .

ISBN 978-3-540-58355-4 .

Arora, Sanjeev ; Barak, Boaz (2009).

Computational complexity. A modern approach .

Cambridge University Press .

ISBN 978-0-521-42426-4 .

Zbl 1193.68112 .

External links [ edit ] Complexity Zoo : DSPACE( f ( n )) .

v t e Complexity classes Considered feasible DLOGTIME AC 0 ACC 0 TC TC 0 L SL RL FL NL NL-complete NC SC CC P P-complete ZPP RP BPP BQP APX FP Suspected infeasible UP NP NP-complete NP-hard co-NP co-NP-complete TFNP FNP AM QMA PH ⊕P PP #P #P-complete IP PSPACE PSPACE-complete Considered infeasible EXPTIME NEXPTIME EXPSPACE 2-EXPTIME ELEMENTARY PR R RE ALL Class hierarchies Polynomial hierarchy Exponential hierarchy Grzegorczyk hierarchy Arithmetical hierarchy Boolean hierarchy Families of classes DTIME NTIME DSPACE NSPACE Probabilistically checkable proof Interactive proof system List of complexity classes NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐qz2gm
Cached time: 20250812074148
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.307 seconds
Real time usage: 0.467 seconds
Preprocessor visited node count: 795/1000000
Revision size: 7908/2097152 bytes
Post‐expand include size: 29197/2097152 bytes
Template argument size: 290/2097152 bytes
Highest expansion depth: 9/100
Expensive parser function count: 4/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 27959/5000000 bytes
Lua time usage: 0.195/10.000 seconds
Lua memory usage: 4739177/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  316.677      1 -total
 32.26%  102.168      1 Template:Reflist
 25.91%   82.054      1 Template:ComplexityClasses
 24.65%   78.066      1 Template:Navbox
 22.73%   71.972      1 Template:Citation
 19.57%   61.979      1 Template:Refimprove
 17.69%   56.025      1 Template:Ambox
 11.70%   37.041      1 Template:For
  5.98%   18.923      3 Template:Cite_book
  4.04%   12.797      1 Template:Find_sources_mainspace Saved in parser cache with key enwiki:pcache:658520:|#|:idhash:canonical and timestamp 20250812074148 and revision id 1297736559. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=DSPACE&oldid=1297736559 " Categories : Computational resources Complexity classes Hidden categories: Articles needing additional references from October 2009 All articles needing additional references This page was last edited on 28 June 2025, at 05:25 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents DSPACE 9 languages Add topic

