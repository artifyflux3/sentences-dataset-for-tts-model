Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Notation Toggle Notation subsection 1.1 Elementary set operations 2 One subset involved 3 Two sets involved Toggle Two sets involved subsection 3.1 Formulas for binary set operations ⋂, ⋃, \ , and ∆ 3.2 De Morgan's laws 3.3 Commutativity 3.4 Other identities involving two sets 3.5 Subsets ⊆ and supersets ⊇ 3.5.1 Set equality 3.5.1.1 Empty set 3.5.2 Meets, Joins, and lattice properties 4 Three sets involved Toggle Three sets involved subsection 4.1 Precedence rules 4.2 Associativity 4.3 Distributivity 4.3.1 Distributivity and symmetric difference ∆ 4.3.2 Distributivity and set subtraction \ 4.4 Two set subtractions 4.4.1 (L\M)\R 4.4.2 L\(M\R) 4.5 One set subtraction 4.5.1 (L\M) ⁎ R 4.5.2 L\(M ⁎ R) 4.5.3 (L ⁎ M)\R 4.5.4 L ⁎ (M\R) 4.6 Three operations on three sets 4.6.1 (L • M) ⁎ (M • R) 4.6.2 (L • M) ⁎ (R\M) 4.6.3 (L\M) ⁎ (L\R) 4.7 Other simplifications 5 Symmetric difference ∆ of finitely many sets 6 Cartesian products ⨯ of finitely many sets Toggle Cartesian products ⨯ of finitely many sets subsection 6.1 Binary ⨯ distributes over ⋃ and ⋂ and \ and ∆ 6.2 Binary ⋂ of finite ⨯ 6.3 Binary ⋃ of finite ⨯ 6.4 Difference \ of finite ⨯ 6.5 Finite ⨯ of differences \ 6.6 Symmetric difference ∆ and finite ⨯ 7 Arbitrary families of sets Toggle Arbitrary families of sets subsection 7.1 Definitions 7.2 Distributing unions and intersections 7.2.1 Binary ⋂ of arbitrary ⋃'s 7.2.2 Binary ⋃ of arbitrary ⋂'s 7.2.3 Arbitrary ⋂'s and arbitrary ⋃'s 7.2.3.1 Incorrectly distributing by swapping ⋂ and ⋃ 7.2.3.2 Correct distributive laws 7.2.3.3 Applying the distributive laws 7.3 Distributing subtraction over ⋃ and ⋂ 7.4 Commutativity and associativity of ⋃ and ⋂ 7.5 Cartesian products Π of arbitrarily many sets 7.5.1 Intersections ⋂ of Π 7.5.2 Binary ⨯ distributes over arbitrary ⋃ and ⋂ 7.5.3 Distributing arbitrary Π over arbitrary ⋃ 7.5.4 Unions ⋃ of Π 7.5.5 Difference \ of Π 7.5.6 Symmetric difference ∆ of Π 8 Functions and sets Toggle Functions and sets subsection 8.1 Definitions 8.2 (Pre)Images of arbitrary unions ⋃'s and intersections ⋂'s 8.3 (Pre)Images of binary set operations 8.3.1 Counter-examples: images of operations not distributing 8.3.2 Conditions guaranteeing that images distribute over set operations 8.3.2.1 Conditions for f(L⋂R) = f(L)⋂f(R) 8.3.2.2 Conditions for f(L\R) = f(L)\f(R) 8.3.2.3 Conditions for f(X\R) = f(X)\f(R) 8.3.2.4 Conditions for f(L∆R) = f(L)∆f(R) 8.3.3 Exact formulas/equalities for images of set operations 8.3.3.1 Formulas for f(L\R) = 8.3.3.2 Formulas for f(X\R) = 8.3.3.3 Formulas for f(L∆R) = 8.3.3.4 Formulas for f(L) = 8.3.3.5 Formulas for f(L⋂R) = 8.4 (Pre)Images of set operations on (pre)images 8.5 (Pre)Images and Cartesian products Π 8.6 (Pre)Image of a single set 8.6.1 Containments ⊆ and intersections ⋂ of images and preimages 9 Sequences and collections of families of sets Toggle Sequences and collections of families of sets subsection 9.1 Definitions 9.1.1 Definitions of categories of families of sets 9.1.2 Elementwise operations on families 9.2 Power set 9.3 Sequences of sets 9.3.1 Partitions 10 See also 11 Notes 12 Citations 13 References 14 External links Toggle the table of contents List of set identities and relations Add languages Add links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Equalities for combinations of sets This article lists mathematical properties and laws of sets , involving the set-theoretic operations of union , intersection , and complementation and the relations of set equality and set inclusion . It also provides systematic procedures for evaluating expressions, and performing calculations, involving these operations and relations.

The binary operations of set union ( ∪ ∪ {\displaystyle \cup } ) and intersection ( ∩ ∩ {\displaystyle \cap } ) satisfy many identities. Several of these identities or "laws" have well established names.

Notation [ edit ] Throughout this article, capital letters (such as A , B , C , L , M , R , S , {\displaystyle A,B,C,L,M,R,S,} and X {\displaystyle X} ) will denote sets. On the left hand side of an identity, typically, L {\displaystyle L} will be the leftmost set, M {\displaystyle M} will be the middle set, and R {\displaystyle R} will be the rightmost set.

This is to facilitate applying identities to expressions that are complicated or use the same symbols as the identity.

[ note 1 ] For example, the identity ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ ( M ∖ ∖ R ) {\displaystyle (L\,\setminus \,M)\,\setminus \,R~=~(L\,\setminus \,R)\,\setminus \,(M\,\setminus \,R)} may be read as: ( Left set ∖ ∖ Middle set ) ∖ ∖ Right set = ( Left set ∖ ∖ Right set ) ∖ ∖ ( Middle set ∖ ∖ Right set ) .

{\displaystyle ({\text{Left set}}\,\setminus \,{\text{Middle set}})\,\setminus \,{\text{Right set}}~=~({\text{Left set}}\,\setminus \,{\text{Right set}})\,\setminus \,({\text{Middle set}}\,\setminus \,{\text{Right set}}).} Elementary set operations [ edit ] For sets L {\displaystyle L} and R , {\displaystyle R,} define: L ∪ ∪ R = def { x : x ∈ ∈ L or x ∈ ∈ R } L ∩ ∩ R = def { x : x ∈ ∈ L and x ∈ ∈ R } L ∖ ∖ R = def { x : x ∈ ∈ L and x ∉ ∉ R } {\displaystyle {\begin{alignedat}{4}L\cup R&&~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{~x~:~x\in L\;&&{\text{ or }}\;\,&&\;x\in R~\}\\L\cap R&&~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{~x~:~x\in L\;&&{\text{ and }}&&\;x\in R~\}\\L\setminus R&&~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{~x~:~x\in L\;&&{\text{ and }}&&\;x\notin R~\}\\\end{alignedat}}} and L △ △ R = def { x : x belongs to exactly one of L and R } {\displaystyle L\triangle R~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{~x~:~x{\text{ belongs to exactly one of }}L{\text{ and }}R~\}} where the symmetric difference L △ △ R {\displaystyle L\triangle R} is sometimes denoted by L ⊖ ⊖ R {\displaystyle L\ominus R} and equals: [ 1 ] [ 2 ] L △ △ R = ( L ∖ ∖ R ) ∪ ∪ ( R ∖ ∖ L ) = ( L ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ R ) .

{\displaystyle {\begin{alignedat}{4}L\;\triangle \;R~&=~(L~\setminus ~&&R)~\cup ~&&(R~\setminus ~&&L)\\~&=~(L~\cup ~&&R)~\setminus ~&&(L~\cap ~&&R).\end{alignedat}}} One set L {\displaystyle L} is said to intersect another set R {\displaystyle R} if L ∩ ∩ R ≠ ≠ ∅ ∅ .

{\displaystyle L\cap R\neq \varnothing .} Sets that do not intersect are said to be disjoint .

The power set of X {\displaystyle X} is the set of all subsets of X {\displaystyle X} and will be denoted by ℘ ℘ ( X ) = def { L : L ⊆ ⊆ X } .

{\displaystyle \wp (X)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{~L~:~L\subseteq X~\}.} Universe set and complement notation The notation L ∁ ∁ = def X ∖ ∖ L .

{\displaystyle L^{\complement }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~X\setminus L.} may be used if L {\displaystyle L} is a subset of some set X {\displaystyle X} that is understood (say from context, or because it is clearly stated what the superset X {\displaystyle X} is). 
It is emphasized that the definition of L ∁ ∁ {\displaystyle L^{\complement }} depends on context. For instance, had L {\displaystyle L} been declared as a subset of Y , {\displaystyle Y,} with the sets Y {\displaystyle Y} and X {\displaystyle X} not necessarily related to each other in any way, then L ∁ ∁ {\displaystyle L^{\complement }} would likely mean Y ∖ ∖ L {\displaystyle Y\setminus L} instead of X ∖ ∖ L .

{\displaystyle X\setminus L.} If it is needed then unless indicated otherwise, it should be assumed that X {\displaystyle X} denotes the universe set , which means that all sets that are used in the formula are subsets of X .

{\displaystyle X.} In particular, the complement of a set L {\displaystyle L} will be denoted by L ∁ ∁ {\displaystyle L^{\complement }} where unless indicated otherwise, it should be assumed that L ∁ ∁ {\displaystyle L^{\complement }} denotes the complement of L {\displaystyle L} in (the universe) X .

{\displaystyle X.} One subset involved [ edit ] Assume L ⊆ ⊆ X .

{\displaystyle L\subseteq X.} Identity : [ 3 ] Definition : e {\displaystyle e} is called a left identity element of a binary operator ∗ ∗ {\displaystyle \,\ast \,} if e ∗ ∗ R = R {\displaystyle e\,\ast \,R=R} for all R {\displaystyle R} and it is called a right identity element of ∗ ∗ {\displaystyle \,\ast \,} if L ∗ ∗ e = L {\displaystyle L\,\ast \,e=L} for all L .

{\displaystyle L.} A left identity element that is also a right identity element if called an identity element .

The empty set ∅ ∅ {\displaystyle \varnothing } is an identity element of binary union ∪ ∪ {\displaystyle \cup } and symmetric difference △ △ , {\displaystyle \triangle ,} and it is also a right identity element of set subtraction ∖ ∖ : {\displaystyle \,\setminus :} L ∩ ∩ X = L = X ∩ ∩ L where L ⊆ ⊆ X L ∪ ∪ ∅ ∅ = L = ∅ ∅ ∪ ∪ L L △ △ ∅ ∅ = L = ∅ ∅ △ △ L L ∖ ∖ ∅ ∅ = L {\displaystyle {\begin{alignedat}{10}L\cap X&\;=\;&&L&\;=\;&X\cap L~~~~{\text{ where }}L\subseteq X\\[1.4ex]L\cup \varnothing &\;=\;&&L&\;=\;&\varnothing \cup L\\[1.4ex]L\,\triangle \varnothing &\;=\;&&L&\;=\;&\varnothing \,\triangle L\\[1.4ex]L\setminus \varnothing &\;=\;&&L\\[1.4ex]\end{alignedat}}} but ∅ ∅ {\displaystyle \varnothing } is not a left identity element of ∖ ∖ {\displaystyle \,\setminus \,} since ∅ ∅ ∖ ∖ L = ∅ ∅ {\displaystyle \varnothing \setminus L=\varnothing } so ∅ ∅ ∖ ∖ L = L {\textstyle \varnothing \setminus L=L} if and only if L = ∅ ∅ .

{\displaystyle L=\varnothing .} Idempotence [ 3 ] L ∗ ∗ L = L {\displaystyle L\ast L=L} and Nilpotence L ∗ ∗ L = ∅ ∅ {\displaystyle L\ast L=\varnothing } : L ∪ ∪ L = L (Idempotence) L ∩ ∩ L = L (Idempotence) L △ △ L = ∅ ∅ (Nilpotence of index 2) L ∖ ∖ L = ∅ ∅ (Nilpotence of index 2) {\displaystyle {\begin{alignedat}{10}L\cup L&\;=\;&&L&&\quad {\text{ (Idempotence)}}\\[1.4ex]L\cap L&\;=\;&&L&&\quad {\text{ (Idempotence)}}\\[1.4ex]L\,\triangle \,L&\;=\;&&\varnothing &&\quad {\text{ (Nilpotence of index 2)}}\\[1.4ex]L\setminus L&\;=\;&&\varnothing &&\quad {\text{ (Nilpotence of index 2)}}\\[1.4ex]\end{alignedat}}} Domination [ 3 ] / Absorbing element : Definition : z {\displaystyle z} is called a left absorbing element of a binary operator ∗ ∗ {\displaystyle \,\ast \,} if z ∗ ∗ R = z {\displaystyle z\,\ast \,R=z} for all R {\displaystyle R} and it is called a right absorbing element of ∗ ∗ {\displaystyle \,\ast \,} if L ∗ ∗ z = z {\displaystyle L\,\ast \,z=z} for all L .

{\displaystyle L.} A left absorbing element that is also a right absorbing element if called an absorbing element . Absorbing elements are also sometime called annihilating elements or zero elements .

A universe set is an absorbing element of binary union ∪ ∪ .

{\displaystyle \cup .} The empty set ∅ ∅ {\displaystyle \varnothing } is an absorbing element of binary intersection ∩ ∩ {\displaystyle \cap } and binary Cartesian product × × , {\displaystyle \times ,} and it is also a left absorbing element of set subtraction ∖ ∖ : {\displaystyle \,\setminus :} X ∪ ∪ L = X = L ∪ ∪ X where L ⊆ ⊆ X ∅ ∅ ∩ ∩ L = ∅ ∅ = L ∩ ∩ ∅ ∅ ∅ ∅ × × L = ∅ ∅ = L × × ∅ ∅ ∅ ∅ ∖ ∖ L = ∅ ∅ {\displaystyle {\begin{alignedat}{10}X\cup L&\;=\;&&X&\;=\;&L\cup X~~~~{\text{ where }}L\subseteq X\\[1.4ex]\varnothing \cap L&\;=\;&&\varnothing &\;=\;&L\cap \varnothing \\[1.4ex]\varnothing \times L&\;=\;&&\varnothing &\;=\;&L\times \varnothing \\[1.4ex]\varnothing \setminus L&\;=\;&&\varnothing &\;\;&\\[1.4ex]\end{alignedat}}} but ∅ ∅ {\displaystyle \varnothing } is not a right absorbing element of set subtraction since L ∖ ∖ ∅ ∅ = L {\displaystyle L\setminus \varnothing =L} where L ∖ ∖ ∅ ∅ = ∅ ∅ {\textstyle L\setminus \varnothing =\varnothing } if and only if L = ∅ ∅ .

{\textstyle L=\varnothing .} Double complement or involution law : X ∖ ∖ ( X ∖ ∖ L ) = L Also written ( L ∁ ∁ ) ∁ ∁ = L where L ⊆ ⊆ X (Double complement/Involution law) {\displaystyle {\begin{alignedat}{10}X\setminus (X\setminus L)&=L&&\qquad {\text{ Also written }}\quad &&\left(L^{\complement }\right)^{\complement }=L&&\quad &&{\text{ where }}L\subseteq X\quad {\text{ (Double complement/Involution law)}}\\[1.4ex]\end{alignedat}}} L ∖ ∖ ∅ ∅ = L {\displaystyle L\setminus \varnothing =L} ∅ ∅ = L ∖ ∖ L = ∅ ∅ ∖ ∖ L = L ∖ ∖ X where L ⊆ ⊆ X {\displaystyle {\begin{alignedat}{4}\varnothing &=L&&\setminus L\\&=\varnothing &&\setminus L\\&=L&&\setminus X~~~~{\text{ where }}L\subseteq X\\\end{alignedat}}} [ 3 ] L ∁ ∁ = X ∖ ∖ L (definition of notation) {\displaystyle L^{\complement }=X\setminus L\quad {\text{ (definition of notation)}}} L ∪ ∪ ( X ∖ ∖ L ) = X Also written L ∪ ∪ L ∁ ∁ = X where L ⊆ ⊆ X L △ △ ( X ∖ ∖ L ) = X Also written L △ △ L ∁ ∁ = X where L ⊆ ⊆ X L ∩ ∩ ( X ∖ ∖ L ) = ∅ ∅ Also written L ∩ ∩ L ∁ ∁ = ∅ ∅ {\displaystyle {\begin{alignedat}{10}L\,\cup (X\setminus L)&=X&&\qquad {\text{ Also written }}\quad &&L\cup L^{\complement }=X&&\quad &&{\text{ where }}L\subseteq X\\[1.4ex]L\,\triangle (X\setminus L)&=X&&\qquad {\text{ Also written }}\quad &&L\,\triangle L^{\complement }=X&&\quad &&{\text{ where }}L\subseteq X\\[1.4ex]L\,\cap (X\setminus L)&=\varnothing &&\qquad {\text{ Also written }}\quad &&L\cap L^{\complement }=\varnothing &&\quad &&\\[1.4ex]\end{alignedat}}} [ 3 ] X ∖ ∖ ∅ ∅ = X Also written ∅ ∅ ∁ ∁ = X (Complement laws for the empty set)) X ∖ ∖ X = ∅ ∅ Also written X ∁ ∁ = ∅ ∅ (Complement laws for the universe set) {\displaystyle {\begin{alignedat}{10}X\setminus \varnothing &=X&&\qquad {\text{ Also written }}\quad &&\varnothing ^{\complement }=X&&\quad &&{\text{ (Complement laws for the empty set))}}\\[1.4ex]X\setminus X&=\varnothing &&\qquad {\text{ Also written }}\quad &&X^{\complement }=\varnothing &&\quad &&{\text{ (Complement laws for the universe set)}}\\[1.4ex]\end{alignedat}}} Two sets involved [ edit ] In the left hand sides of the following identities, L {\displaystyle L} is the L eft most set and R {\displaystyle R} is the R ight most set. 
Assume both L and R {\displaystyle L{\text{ and }}R} are subsets of some universe set X .

{\displaystyle X.} Formulas for binary set operations ⋂, ⋃, \ , and ∆ [ edit ] In the left hand sides of the following identities, L is the L eft most set and R is the R ight most set. Whenever necessary, both L and R should be assumed to be subsets of some universe set X , so that L ∁ ∁ := X ∖ ∖ L and R ∁ ∁ := X ∖ ∖ R .

{\displaystyle L^{\complement }:=X\setminus L{\text{ and }}R^{\complement }:=X\setminus R.} L ∩ ∩ R = L ∖ ∖ ( L ∖ ∖ R ) = R ∖ ∖ ( R ∖ ∖ L ) = L ∖ ∖ ( L △ △ R ) = L △ △ ( L ∖ ∖ R ) {\displaystyle {\begin{alignedat}{9}L\cap R&=L&&\,\,\setminus \,&&(L&&\,\,\setminus &&R)\\&=R&&\,\,\setminus \,&&(R&&\,\,\setminus &&L)\\&=L&&\,\,\setminus \,&&(L&&\,\triangle \,&&R)\\&=L&&\,\triangle \,&&(L&&\,\,\setminus &&R)\\\end{alignedat}}} L ∪ ∪ R = ( L △ △ R ) ∪ ∪ L = ( L △ △ R ) △ △ ( L ∩ ∩ R ) = ( R ∖ ∖ L ) ∪ ∪ L (union is disjoint) {\displaystyle {\begin{alignedat}{9}L\cup R&=(&&L\,\triangle \,R)&&\,\,\cup &&&&L&&&&\\&=(&&L\,\triangle \,R)&&\,\triangle \,&&(&&L&&\cap \,&&R)\\&=(&&R\,\setminus \,L)&&\,\,\cup &&&&L&&&&~~~~~{\text{ (union is disjoint)}}\\\end{alignedat}}} L △ △ R = R △ △ L = ( L ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ R ) = ( L ∖ ∖ R ) ∪ ∪ ( R ∖ ∖ L ) (union is disjoint) = ( L △ △ M ) △ △ ( M △ △ R ) where M is an arbitrary set.

= ( L ∁ ∁ ) △ △ ( R ∁ ∁ ) {\displaystyle {\begin{alignedat}{9}L\,\triangle \,R&=&&R\,\triangle \,L&&&&&&&&\\&=(&&L\,\cup \,R)&&\,\setminus \,&&(&&L\,\,\cap \,R)&&\\&=(&&L\,\setminus \,R)&&\cup \,&&(&&R\,\,\setminus \,L)&&~~~~~{\text{ (union is disjoint)}}\\&=(&&L\,\triangle \,M)&&\,\triangle \,&&(&&M\,\triangle \,R)&&~~~~~{\text{ where }}M{\text{ is an arbitrary set. }}\\&=(&&L^{\complement })&&\,\triangle \,&&(&&R^{\complement })&&\\\end{alignedat}}} L ∖ ∖ R = L ∖ ∖ ( L ∩ ∩ R ) = L ∩ ∩ ( L △ △ R ) = L △ △ ( L ∩ ∩ R ) = R △ △ ( L ∪ ∪ R ) {\displaystyle {\begin{alignedat}{9}L\setminus R&=&&L&&\,\,\setminus &&(L&&\,\,\cap &&R)\\&=&&L&&\,\,\cap &&(L&&\,\triangle \,&&R)\\&=&&L&&\,\triangle \,&&(L&&\,\,\cap &&R)\\&=&&R&&\,\triangle \,&&(L&&\,\,\cup &&R)\\\end{alignedat}}} De Morgan's laws [ edit ] De Morgan's laws state that for L , R ⊆ ⊆ X : {\displaystyle L,R\subseteq X:} X ∖ ∖ ( L ∩ ∩ R ) = ( X ∖ ∖ L ) ∪ ∪ ( X ∖ ∖ R ) Also written ( L ∩ ∩ R ) ∁ ∁ = L ∁ ∁ ∪ ∪ R ∁ ∁ (De Morgan's law) X ∖ ∖ ( L ∪ ∪ R ) = ( X ∖ ∖ L ) ∩ ∩ ( X ∖ ∖ R ) Also written ( L ∪ ∪ R ) ∁ ∁ = L ∁ ∁ ∩ ∩ R ∁ ∁ (De Morgan's law) {\displaystyle {\begin{alignedat}{10}X\setminus (L\cap R)&=(X\setminus L)\cup (X\setminus R)&&\qquad {\text{ Also written }}\quad &&(L\cap R)^{\complement }=L^{\complement }\cup R^{\complement }&&\quad &&{\text{ (De Morgan's law)}}\\[1.4ex]X\setminus (L\cup R)&=(X\setminus L)\cap (X\setminus R)&&\qquad {\text{ Also written }}\quad &&(L\cup R)^{\complement }=L^{\complement }\cap R^{\complement }&&\quad &&{\text{ (De Morgan's law)}}\\[1.4ex]\end{alignedat}}} Commutativity [ edit ] Unions, intersection, and symmetric difference are commutative operations : [ 3 ] L ∪ ∪ R = R ∪ ∪ L (Commutativity) L ∩ ∩ R = R ∩ ∩ L (Commutativity) L △ △ R = R △ △ L (Commutativity) {\displaystyle {\begin{alignedat}{10}L\cup R&\;=\;&&R\cup L&&\quad {\text{ (Commutativity)}}\\[1.4ex]L\cap R&\;=\;&&R\cap L&&\quad {\text{ (Commutativity)}}\\[1.4ex]L\,\triangle R&\;=\;&&R\,\triangle L&&\quad {\text{ (Commutativity)}}\\[1.4ex]\end{alignedat}}} Set subtraction is not commutative. However, the commutativity of set subtraction can be characterized: from ( L ∖ ∖ R ) ∩ ∩ ( R ∖ ∖ L ) = ∅ ∅ {\displaystyle (L\,\setminus \,R)\cap (R\,\setminus \,L)=\varnothing } it follows that: L ∖ ∖ R = R ∖ ∖ L if and only if L = R .

{\displaystyle L\,\setminus \,R=R\,\setminus \,L\quad {\text{ if and only if }}\quad L=R.} Said differently, if distinct symbols always represented distinct sets, then the only true formulas of the form ⋅ ⋅ ∖ ∖ ⋅ ⋅ = ⋅ ⋅ ∖ ∖ ⋅ ⋅ {\displaystyle \,\cdot \,\,\setminus \,\,\cdot \,=\,\cdot \,\,\setminus \,\,\cdot \,} that could be written would be those involving a single symbol; that is, those of the form: S ∖ ∖ S = S ∖ ∖ S .

{\displaystyle S\,\setminus \,S=S\,\setminus \,S.} But such formulas are necessarily true for every binary operation ∗ ∗ {\displaystyle \,\ast \,} (because x ∗ ∗ x = x ∗ ∗ x {\displaystyle x\,\ast \,x=x\,\ast \,x} must hold by definition of equality ), and so in this sense, set subtraction is as diametrically opposite to being commutative as is possible for a binary operation. 
Set subtraction is also neither left alternative nor right alternative ; instead, ( L ∖ ∖ L ) ∖ ∖ R = L ∖ ∖ ( L ∖ ∖ R ) {\displaystyle (L\setminus L)\setminus R=L\setminus (L\setminus R)} if and only if L ∩ ∩ R = ∅ ∅ {\displaystyle L\cap R=\varnothing } if and only if ( R ∖ ∖ L ) ∖ ∖ L = R ∖ ∖ ( L ∖ ∖ L ) .

{\displaystyle (R\setminus L)\setminus L=R\setminus (L\setminus L).} Set subtraction is quasi-commutative and satisfies the Jordan identity .

Other identities involving two sets [ edit ] Absorption laws : L ∪ ∪ ( L ∩ ∩ R ) = L (Absorption) L ∩ ∩ ( L ∪ ∪ R ) = L (Absorption) {\displaystyle {\begin{alignedat}{4}L\cup (L\cap R)&\;=\;&&L&&\quad {\text{ (Absorption)}}\\[1.4ex]L\cap (L\cup R)&\;=\;&&L&&\quad {\text{ (Absorption)}}\\[1.4ex]\end{alignedat}}} Other properties L ∖ ∖ R = L ∩ ∩ ( X ∖ ∖ R ) Also written L ∖ ∖ R = L ∩ ∩ R ∁ ∁ where L , R ⊆ ⊆ X X ∖ ∖ ( L ∖ ∖ R ) = ( X ∖ ∖ L ) ∪ ∪ R Also written ( L ∖ ∖ R ) ∁ ∁ = L ∁ ∁ ∪ ∪ R where R ⊆ ⊆ X L ∖ ∖ R = ( X ∖ ∖ R ) ∖ ∖ ( X ∖ ∖ L ) Also written L ∖ ∖ R = R ∁ ∁ ∖ ∖ L ∁ ∁ where L , R ⊆ ⊆ X {\displaystyle {\begin{alignedat}{10}L\setminus R&=L\cap (X\setminus R)&&\qquad {\text{ Also written }}\quad &&L\setminus R=L\cap R^{\complement }&&\quad &&{\text{ where }}L,R\subseteq X\\[1.4ex]X\setminus (L\setminus R)&=(X\setminus L)\cup R&&\qquad {\text{ Also written }}\quad &&(L\setminus R)^{\complement }=L^{\complement }\cup R&&\quad &&{\text{ where }}R\subseteq X\\[1.4ex]L\setminus R&=(X\setminus R)\setminus (X\setminus L)&&\qquad {\text{ Also written }}\quad &&L\setminus R=R^{\complement }\setminus L^{\complement }&&\quad &&{\text{ where }}L,R\subseteq X\\[1.4ex]\end{alignedat}}} Intervals : ( a , b ) ∩ ∩ ( c , d ) = ( max { a , c } , min { b , d } ) {\displaystyle (a,b)\cap (c,d)=(\max\{a,c\},\min\{b,d\})} [ a , b ) ∩ ∩ [ c , d ) = [ max { a , c } , min { b , d } ) {\displaystyle [a,b)\cap [c,d)=[\max\{a,c\},\min\{b,d\})} Subsets ⊆ and supersets ⊇ [ edit ] The following statements are equivalent for any L , R ⊆ ⊆ X : {\displaystyle L,R\subseteq X:} [ 3 ] L ⊆ ⊆ R {\displaystyle L\subseteq R} Definition of subset : if l ∈ ∈ L {\displaystyle l\in L} then l ∈ ∈ R {\displaystyle l\in R} L ∩ ∩ R = L {\displaystyle L\cap R=L} L ∪ ∪ R = R {\displaystyle L\cup R=R} L △ △ R = R ∖ ∖ L {\displaystyle L\,\triangle \,R=R\setminus L} L △ △ R ⊆ ⊆ R ∖ ∖ L {\displaystyle L\,\triangle \,R\subseteq R\setminus L} L ∖ ∖ R = ∅ ∅ {\displaystyle L\setminus R=\varnothing } L {\displaystyle L} and X ∖ ∖ R {\displaystyle X\setminus R} are disjoint (that is, L ∩ ∩ ( X ∖ ∖ R ) = ∅ ∅ {\displaystyle L\cap (X\setminus R)=\varnothing } ) X ∖ ∖ R ⊆ ⊆ X ∖ ∖ L {\displaystyle X\setminus R\subseteq X\setminus L\qquad } (that is, R ∁ ∁ ⊆ ⊆ L ∁ ∁ {\displaystyle R^{\complement }\subseteq L^{\complement }} ) The following statements are equivalent for any L , R ⊆ ⊆ X : {\displaystyle L,R\subseteq X:} L ⊈ R {\displaystyle L\not \subseteq R} There exists some l ∈ ∈ L ∖ ∖ R .

{\displaystyle l\in L\setminus R.} Set equality [ edit ] See also: Extensionality The following statements are equivalent: L = R {\displaystyle L=R} L △ △ R = ∅ ∅ {\displaystyle L\,\triangle \,R=\varnothing } L ∖ ∖ R = R ∖ ∖ L {\displaystyle L\,\setminus \,R=R\,\setminus \,L} If L ∩ ∩ R = ∅ ∅ {\displaystyle L\cap R=\varnothing } then L = R {\displaystyle L=R} if and only if L = ∅ ∅ = R .

{\displaystyle L=\varnothing =R.} Uniqueness of complements : If L ∪ ∪ R = X and L ∩ ∩ R = ∅ ∅ {\textstyle L\cup R=X{\text{ and }}L\cap R=\varnothing } then R = X ∖ ∖ L {\displaystyle R=X\setminus L} Empty set [ edit ] A set L {\displaystyle L} is empty if the sentence ∀ ∀ x ( x ∉ L ) {\displaystyle \forall x(x\not \in L)} is true, where the notation x ∉ L {\displaystyle x\not \in L} is shorthand for ¬ ¬ ( x ∈ ∈ L ) .

{\displaystyle \lnot (x\in L).} If L {\displaystyle L} is any set then the following are equivalent: L {\displaystyle L} is not empty, meaning that the sentence ¬ ¬ [ ∀ ∀ x ( x ∉ L ) ] {\displaystyle \lnot [\forall x(x\not \in L)]} is true (literally, the logical negation of " L {\displaystyle L} is empty" holds true).

(In classical mathematics ) L {\displaystyle L} is inhabited , meaning: ∃ ∃ x ( x ∈ ∈ L ) {\displaystyle \exists x(x\in L)} In constructive mathematics , "not empty" and "inhabited" are not equivalent: every inhabited set is not empty but the converse is not always guaranteed; that is, in constructive mathematics, a set L {\displaystyle L} that is not empty (where by definition, " L {\displaystyle L} is empty" means that the statement ∀ ∀ x ( x ∉ L ) {\displaystyle \forall x(x\not \in L)} is true) might not have an inhabitant (which is an x {\displaystyle x} such that x ∈ ∈ L {\displaystyle x\in L} ).

L ⊈ R {\displaystyle L\not \subseteq R} for some set R {\displaystyle R} If L {\displaystyle L} is any set then the following are equivalent: L {\displaystyle L} is empty ( L = ∅ ∅ {\displaystyle L=\varnothing } ), meaning: ∀ ∀ x ( x ∉ L ) {\displaystyle \forall x(x\not \in L)} L ∪ ∪ R ⊆ ⊆ R {\displaystyle L\cup R\subseteq R} for every set R {\displaystyle R} L ⊆ ⊆ R {\displaystyle L\subseteq R} for every set R {\displaystyle R} L ⊆ ⊆ R ∖ ∖ L {\displaystyle L\subseteq R\setminus L} for some/every set R {\displaystyle R} ∅ ∅ / L = L {\displaystyle \varnothing /L=L} Given any x , {\displaystyle x,} the following are equivalent: x ∉ L ∖ ∖ R {\textstyle x\not \in L\setminus R} x ∈ ∈ L ∩ ∩ R or x ∉ L .

{\textstyle x\in L\cap R\;{\text{ or }}\;x\not \in L.} x ∈ ∈ R or x ∉ L .

{\textstyle x\in R\;{\text{ or }}\;x\not \in L.} Moreover, ( L ∖ ∖ R ) ∩ ∩ R = ∅ ∅ always holds .

{\displaystyle (L\setminus R)\cap R=\varnothing \qquad {\text{ always holds}}.} Meets, Joins, and lattice properties [ edit ] Inclusion is a partial order : 
Explicitly, this means that inclusion ⊆ ⊆ , {\displaystyle \,\subseteq ,\,} which is a binary operation , has the following three properties: [ 3 ] Reflexivity : L ⊆ ⊆ L {\textstyle L\subseteq L} Antisymmetry : ( L ⊆ ⊆ R and R ⊆ ⊆ L ) if and only if L = R {\textstyle (L\subseteq R{\text{ and }}R\subseteq L){\text{ if and only if }}L=R} Transitivity : If L ⊆ ⊆ M and M ⊆ ⊆ R then L ⊆ ⊆ R {\textstyle {\text{If }}L\subseteq M{\text{ and }}M\subseteq R{\text{ then }}L\subseteq R} The following proposition says that for any set S , {\displaystyle S,} the power set of S , {\displaystyle S,} ordered by inclusion, is a bounded lattice , and hence together with the distributive and complement laws above, show that it is a Boolean algebra .

Existence of a least element and a greatest element : ∅ ∅ ⊆ ⊆ L ⊆ ⊆ X {\displaystyle \varnothing \subseteq L\subseteq X} Joins /supremums exist : [ 3 ] L ⊆ ⊆ L ∪ ∪ R {\displaystyle L\subseteq L\cup R} The union L ∪ ∪ R {\displaystyle L\cup R} is the join/supremum of L {\displaystyle L} and R {\displaystyle R} with respect to ⊆ ⊆ {\displaystyle \,\subseteq \,} because: L ⊆ ⊆ L ∪ ∪ R {\displaystyle L\subseteq L\cup R} and R ⊆ ⊆ L ∪ ∪ R , {\displaystyle R\subseteq L\cup R,} and if Z {\displaystyle Z} is a set such that L ⊆ ⊆ Z {\displaystyle L\subseteq Z} and R ⊆ ⊆ Z {\displaystyle R\subseteq Z} then L ∪ ∪ R ⊆ ⊆ Z .

{\displaystyle L\cup R\subseteq Z.} The intersection L ∩ ∩ R {\displaystyle L\cap R} is the join/supremum of L {\displaystyle L} and R {\displaystyle R} with respect to ⊇ ⊇ .

{\displaystyle \,\supseteq .\,} Meets /infimums exist : [ 3 ] L ∩ ∩ R ⊆ ⊆ L {\displaystyle L\cap R\subseteq L} The intersection L ∩ ∩ R {\displaystyle L\cap R} is the meet/infimum of L {\displaystyle L} and R {\displaystyle R} with respect to ⊆ ⊆ {\displaystyle \,\subseteq \,} because: if L ∩ ∩ R ⊆ ⊆ L {\displaystyle L\cap R\subseteq L} and L ∩ ∩ R ⊆ ⊆ R , {\displaystyle L\cap R\subseteq R,} and if Z {\displaystyle Z} is a set such that Z ⊆ ⊆ L {\displaystyle Z\subseteq L} and Z ⊆ ⊆ R {\displaystyle Z\subseteq R} then Z ⊆ ⊆ L ∩ ∩ R .

{\displaystyle Z\subseteq L\cap R.} The union L ∪ ∪ R {\displaystyle L\cup R} is the meet/infimum of L {\displaystyle L} and R {\displaystyle R} with respect to ⊇ ⊇ .

{\displaystyle \,\supseteq .\,} Other inclusion properties : L ∖ ∖ R ⊆ ⊆ L {\displaystyle L\setminus R\subseteq L} ( L ∖ ∖ R ) ∩ ∩ L = L ∖ ∖ R {\displaystyle (L\setminus R)\cap L=L\setminus R} If L ⊆ ⊆ R {\displaystyle L\subseteq R} then L △ △ R = R ∖ ∖ L .

{\displaystyle L\,\triangle \,R=R\setminus L.} If L ⊆ ⊆ X {\displaystyle L\subseteq X} and R ⊆ ⊆ Y {\displaystyle R\subseteq Y} then L × × R ⊆ ⊆ X × × Y {\displaystyle L\times R\subseteq X\times Y} [ 3 ] Three sets involved [ edit ] In the left hand sides of the following identities, L {\displaystyle L} is the L eft most set, M {\displaystyle M} is the M iddle set, and R {\displaystyle R} is the R ight most set.

Precedence rules [ edit ] There is no universal agreement on the order of precedence of the basic set operators.
Nevertheless, many authors use precedence rules for set operators, although these rules vary with the author.

One common convention is to associate intersection L ∩ ∩ R = { x : ( x ∈ ∈ L ) ∧ ∧ ( x ∈ ∈ R ) } {\displaystyle L\cap R=\{x:(x\in L)\land (x\in R)\}} with logical conjunction (and) L ∧ ∧ R {\displaystyle L\land R} and associate union L ∪ ∪ R = { x : ( x ∈ ∈ L ) ∨ ∨ ( x ∈ ∈ R ) } {\displaystyle L\cup R=\{x:(x\in L)\lor (x\in R)\}} with logical disjunction (or) L ∨ ∨ R , {\displaystyle L\lor R,} and then transfer the precedence of these logical operators (where ∧ ∧ {\displaystyle \,\land \,} has precedence over ∨ ∨ {\displaystyle \,\lor \,} ) to these set operators, thereby giving ∩ ∩ {\displaystyle \,\cap \,} precedence over ∪ ∪ .

{\displaystyle \,\cup .\,} So for example, L ∪ ∪ M ∩ ∩ R {\displaystyle L\cup M\cap R} would mean L ∪ ∪ ( M ∩ ∩ R ) {\displaystyle L\cup (M\cap R)} since it would be associated with the logical statement L ∨ ∨ M ∧ ∧ R = L ∨ ∨ ( M ∧ ∧ R ) {\displaystyle L\lor M\land R~=~L\lor (M\land R)} and similarly, L ∪ ∪ M ∩ ∩ R ∪ ∪ Z {\displaystyle L\cup M\cap R\cup Z} would mean L ∪ ∪ ( M ∩ ∩ R ) ∪ ∪ Z {\displaystyle L\cup (M\cap R)\cup Z} since it would be associated with L ∨ ∨ M ∧ ∧ R ∨ ∨ Z = L ∨ ∨ ( M ∧ ∧ R ) ∨ ∨ Z .

{\displaystyle L\lor M\land R\lor Z~=~L\lor (M\land R)\lor Z.} Sometimes, set complement (subtraction) ∖ ∖ {\displaystyle \,\setminus \,} is also associated with logical complement (not) ¬ ¬ , {\displaystyle \,\lnot ,\,} in which case it will have the highest precedence. 
More specifically, L ∖ ∖ R = { x : ( x ∈ ∈ L ) ∧ ∧ ¬ ¬ ( x ∈ ∈ R ) } {\displaystyle L\setminus R=\{x:(x\in L)\land \lnot (x\in R)\}} is rewritten L ∧ ∧ ¬ ¬ R {\displaystyle L\land \lnot R} so that for example, L ∪ ∪ M ∖ ∖ R {\displaystyle L\cup M\setminus R} would mean L ∪ ∪ ( M ∖ ∖ R ) {\displaystyle L\cup (M\setminus R)} since it would be rewritten as the logical statement L ∨ ∨ M ∧ ∧ ¬ ¬ R {\displaystyle L\lor M\land \lnot R} which is equal to L ∨ ∨ ( M ∧ ∧ ¬ ¬ R ) .

{\displaystyle L\lor (M\land \lnot R).} For another example, because L ∧ ∧ ¬ ¬ M ∧ ∧ R {\displaystyle L\land \lnot M\land R} means L ∧ ∧ ( ¬ ¬ M ) ∧ ∧ R , {\displaystyle L\land (\lnot M)\land R,} which is equal to both ( L ∧ ∧ ( ¬ ¬ M ) ) ∧ ∧ R {\displaystyle (L\land (\lnot M))\land R} and L ∧ ∧ ( ( ¬ ¬ M ) ∧ ∧ R ) = L ∧ ∧ ( R ∧ ∧ ( ¬ ¬ M ) ) {\displaystyle L\land ((\lnot M)\land R)~=~L\land (R\land (\lnot M))} (where ( ¬ ¬ M ) ∧ ∧ R {\displaystyle (\lnot M)\land R} was rewritten as R ∧ ∧ ( ¬ ¬ M ) {\displaystyle R\land (\lnot M)} ), the formula L ∖ ∖ M ∩ ∩ R {\displaystyle L\setminus M\cap R} would refer to the set ( L ∖ ∖ M ) ∩ ∩ R = L ∩ ∩ ( R ∖ ∖ M ) ; {\displaystyle (L\setminus M)\cap R=L\cap (R\setminus M);} moreover, since L ∧ ∧ ( ¬ ¬ M ) ∧ ∧ R = ( L ∧ ∧ R ) ∧ ∧ ¬ ¬ M , {\displaystyle L\land (\lnot M)\land R=(L\land R)\land \lnot M,} this set is also equal to ( L ∩ ∩ R ) ∖ ∖ M {\displaystyle (L\cap R)\setminus M} (other set identities can similarly be deduced from propositional calculus identities in this way).
However, because set subtraction is not associative ( L ∖ ∖ M ) ∖ ∖ R ≠ ≠ L ∖ ∖ ( M ∖ ∖ R ) , {\displaystyle (L\setminus M)\setminus R\neq L\setminus (M\setminus R),} a formula such as L ∖ ∖ M ∖ ∖ R {\displaystyle L\setminus M\setminus R} would be ambiguous; for this reason, among others, set subtraction is often not assigned any precedence at all.

Symmetric difference L △ △ R = { x : ( x ∈ ∈ L ) ⊕ ⊕ ( x ∈ ∈ R ) } {\displaystyle L\triangle R=\{x:(x\in L)\oplus (x\in R)\}} is sometimes associated with exclusive or (xor) L ⊕ ⊕ R {\displaystyle L\oplus R} (also sometimes denoted by ⊻ ⊻ {\displaystyle \,\veebar } ), in which case if the order of precedence from highest to lowest is ¬ ¬ , ⊕ ⊕ , ∧ ∧ , ∨ ∨ {\displaystyle \,\lnot ,\,\oplus ,\,\land ,\,\lor \,} then the order of precedence (from highest to lowest) for the set operators would be ∖ ∖ , △ △ , ∩ ∩ , ∪ ∪ .

{\displaystyle \,\setminus ,\,\triangle ,\,\cap ,\,\cup .} There is no universal agreement on the precedence of exclusive disjunction ⊕ ⊕ {\displaystyle \,\oplus \,} with respect to the other logical connectives, which is why symmetric difference △ △ {\displaystyle \,\triangle \,} is not often assigned a precedence.

Associativity [ edit ] Definition : A binary operator ∗ ∗ {\displaystyle \,\ast \,} is called associative if ( L ∗ ∗ M ) ∗ ∗ R = L ∗ ∗ ( M ∗ ∗ R ) {\displaystyle (L\,\ast \,M)\,\ast \,R=L\,\ast \,(M\,\ast \,R)} always holds.

The following set operators are associative: [ 3 ] ( L ∪ ∪ M ) ∪ ∪ R = L ∪ ∪ ( M ∪ ∪ R ) ( L ∩ ∩ M ) ∩ ∩ R = L ∩ ∩ ( M ∩ ∩ R ) ( L △ △ M ) △ △ R = L △ △ ( M △ △ R ) {\displaystyle {\begin{alignedat}{5}(L\cup M)\cup R&\;=\;\;&&L\cup (M\cup R)\\[1.4ex](L\cap M)\cap R&\;=\;\;&&L\cap (M\cap R)\\[1.4ex](L\,\triangle M)\,\triangle R&\;=\;\;&&L\,\triangle (M\,\triangle R)\\[1.4ex]\end{alignedat}}} For set subtraction, instead of associativity, only the following is always guaranteed: ( L ∖ ∖ M ) ∖ ∖ R ⊆ ⊆ L ∖ ∖ ( M ∖ ∖ R ) {\displaystyle (L\,\setminus \,M)\,\setminus \,R\;~~{\color {red}{\subseteq }}~~\;L\,\setminus \,(M\,\setminus \,R)} where equality holds if and only if L ∩ ∩ R = ∅ ∅ {\displaystyle L\cap R=\varnothing } (this condition does not depend on M {\displaystyle M} ). Thus ( L ∖ ∖ M ) ∖ ∖ R = L ∖ ∖ ( M ∖ ∖ R ) {\textstyle \;(L\setminus M)\setminus R=L\setminus (M\setminus R)\;} if and only if ( R ∖ ∖ M ) ∖ ∖ L = R ∖ ∖ ( M ∖ ∖ L ) , {\displaystyle \;(R\setminus M)\setminus L=R\setminus (M\setminus L),\;} where the only difference between the left and right hand side set equalities is that the locations of L and R {\displaystyle L{\text{ and }}R} have been swapped.

Distributivity [ edit ] Definition : If ∗ ∗ and ∙ ∙ {\displaystyle \ast {\text{ and }}\bullet } are binary operators then ∗ ∗ {\displaystyle \,\ast \,} left distributes over ∙ ∙ {\displaystyle \,\bullet \,} if L ∗ ∗ ( M ∙ ∙ R ) = ( L ∗ ∗ M ) ∙ ∙ ( L ∗ ∗ R ) for all L , M , R {\displaystyle L\,\ast \,(M\,\bullet \,R)~=~(L\,\ast \,M)\,\bullet \,(L\,\ast \,R)\qquad \qquad {\text{ for all }}L,M,R} while ∗ ∗ {\displaystyle \,\ast \,} right distributes over ∙ ∙ {\displaystyle \,\bullet \,} if ( L ∙ ∙ M ) ∗ ∗ R = ( L ∗ ∗ R ) ∙ ∙ ( M ∗ ∗ R ) for all L , M , R .

{\displaystyle (L\,\bullet \,M)\,\ast \,R~=~(L\,\ast \,R)\,\bullet \,(M\,\ast \,R)\qquad \qquad {\text{ for all }}L,M,R.} The operator ∗ ∗ {\displaystyle \,\ast \,} distributes over ∙ ∙ {\displaystyle \,\bullet \,} if it both left distributes and right distributes over ∙ ∙ .

{\displaystyle \,\bullet \,.\,} In the definitions above, to transform one side to the other, the innermost operator (the operator inside the parentheses) becomes the outermost operator and the outermost operator becomes the innermost operator.

Right distributivity : [ 3 ] ( L ∩ ∩ M ) ∪ ∪ R = ( L ∪ ∪ R ) ∩ ∩ ( M ∪ ∪ R ) (Right-distributivity of ∪ ∪ over ∩ ∩ ) ( L ∪ ∪ M ) ∪ ∪ R = ( L ∪ ∪ R ) ∪ ∪ ( M ∪ ∪ R ) (Right-distributivity of ∪ ∪ over ∪ ∪ ) ( L ∪ ∪ M ) ∩ ∩ R = ( L ∩ ∩ R ) ∪ ∪ ( M ∩ ∩ R ) (Right-distributivity of ∩ ∩ over ∪ ∪ ) ( L ∩ ∩ M ) ∩ ∩ R = ( L ∩ ∩ R ) ∩ ∩ ( M ∩ ∩ R ) (Right-distributivity of ∩ ∩ over ∩ ∩ ) ( L △ △ M ) ∩ ∩ R = ( L ∩ ∩ R ) △ △ ( M ∩ ∩ R ) (Right-distributivity of ∩ ∩ over △ △ ) ( L ∩ ∩ M ) × × R = ( L × × R ) ∩ ∩ ( M × × R ) (Right-distributivity of × × over ∩ ∩ ) ( L ∪ ∪ M ) × × R = ( L × × R ) ∪ ∪ ( M × × R ) (Right-distributivity of × × over ∪ ∪ ) ( L ∖ ∖ M ) × × R = ( L × × R ) ∖ ∖ ( M × × R ) (Right-distributivity of × × over ∖ ∖ ) ( L △ △ M ) × × R = ( L × × R ) △ △ ( M × × R ) (Right-distributivity of × × over △ △ ) ( L ∪ ∪ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∪ ∪ ( M ∖ ∖ R ) (Right-distributivity of ∖ ∖ over ∪ ∪ ) ( L ∩ ∩ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∩ ∩ ( M ∖ ∖ R ) (Right-distributivity of ∖ ∖ over ∩ ∩ ) ( L △ △ M ) ∖ ∖ R = ( L ∖ ∖ R ) △ △ ( M ∖ ∖ R ) (Right-distributivity of ∖ ∖ over △ △ ) ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ ( M ∖ ∖ R ) (Right-distributivity of ∖ ∖ over ∖ ∖ ) = L ∖ ∖ ( M ∪ ∪ R ) {\displaystyle {\begin{alignedat}{9}(L\,\cap \,M)\,\cup \,R~&~~=~~&&(L\,\cup \,R)\,&&\cap \,&&(M\,\cup \,R)\qquad &&{\text{ (Right-distributivity of }}\,\cup \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex](L\,\cup \,M)\,\cup \,R~&~~=~~&&(L\,\cup \,R)\,&&\cup \,&&(M\,\cup \,R)\qquad &&{\text{ (Right-distributivity of }}\,\cup \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex](L\,\cup \,M)\,\cap \,R~&~~=~~&&(L\,\cap \,R)\,&&\cup \,&&(M\,\cap \,R)\qquad &&{\text{ (Right-distributivity of }}\,\cap \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex](L\,\cap \,M)\,\cap \,R~&~~=~~&&(L\,\cap \,R)\,&&\cap \,&&(M\,\cap \,R)\qquad &&{\text{ (Right-distributivity of }}\,\cap \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex](L\,\triangle \,M)\,\cap \,R~&~~=~~&&(L\,\cap \,R)\,&&\triangle \,&&(M\,\cap \,R)\qquad &&{\text{ (Right-distributivity of }}\,\cap \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex](L\,\cap \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\cap \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex](L\,\cup \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\cup \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex](L\,\setminus \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\setminus \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\setminus \,{\text{)}}\\[1.4ex](L\,\triangle \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\triangle \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex](L\,\cup \,M)\,\setminus \,R~&~~=~~&&(L\,\setminus \,R)\,&&\cup \,&&(M\,\setminus \,R)\qquad &&{\text{ (Right-distributivity of }}\,\setminus \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex](L\,\cap \,M)\,\setminus \,R~&~~=~~&&(L\,\setminus \,R)\,&&\cap \,&&(M\,\setminus \,R)\qquad &&{\text{ (Right-distributivity of }}\,\setminus \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex](L\,\triangle \,M)\,\setminus \,R~&~~=~~&&(L\,\setminus \,R)&&\,\triangle \,&&(M\,\setminus \,R)\qquad &&{\text{ (Right-distributivity of }}\,\setminus \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex](L\,\setminus \,M)\,\setminus \,R~&~~=~~&&(L\,\setminus \,R)&&\,\setminus \,&&(M\,\setminus \,R)\qquad &&{\text{ (Right-distributivity of }}\,\setminus \,{\text{ over }}\,\setminus \,{\text{)}}\\[1.4ex]~&~~=~~&&~~\;~~\;~~\;~L&&\,\setminus \,&&(M\cup R)\\[1.4ex]\end{alignedat}}} Left distributivity : [ 3 ] L ∪ ∪ ( M ∩ ∩ R ) = ( L ∪ ∪ M ) ∩ ∩ ( L ∪ ∪ R ) (Left-distributivity of ∪ ∪ over ∩ ∩ ) L ∪ ∪ ( M ∪ ∪ R ) = ( L ∪ ∪ M ) ∪ ∪ ( L ∪ ∪ R ) (Left-distributivity of ∪ ∪ over ∪ ∪ ) L ∩ ∩ ( M ∪ ∪ R ) = ( L ∩ ∩ M ) ∪ ∪ ( L ∩ ∩ R ) (Left-distributivity of ∩ ∩ over ∪ ∪ ) L ∩ ∩ ( M ∩ ∩ R ) = ( L ∩ ∩ M ) ∩ ∩ ( L ∩ ∩ R ) (Left-distributivity of ∩ ∩ over ∩ ∩ ) L ∩ ∩ ( M △ △ R ) = ( L ∩ ∩ M ) △ △ ( L ∩ ∩ R ) (Left-distributivity of ∩ ∩ over △ △ ) L × × ( M ∩ ∩ R ) = ( L × × M ) ∩ ∩ ( L × × R ) (Left-distributivity of × × over ∩ ∩ ) L × × ( M ∪ ∪ R ) = ( L × × M ) ∪ ∪ ( L × × R ) (Left-distributivity of × × over ∪ ∪ ) L × × ( M ∖ ∖ R ) = ( L × × M ) ∖ ∖ ( L × × R ) (Left-distributivity of × × over ∖ ∖ ) L × × ( M △ △ R ) = ( L × × M ) △ △ ( L × × R ) (Left-distributivity of × × over △ △ ) {\displaystyle {\begin{alignedat}{5}L\cup (M\cap R)&\;=\;\;&&(L\cup M)\cap (L\cup R)\qquad &&{\text{ (Left-distributivity of }}\,\cup \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex]L\cup (M\cup R)&\;=\;\;&&(L\cup M)\cup (L\cup R)&&{\text{ (Left-distributivity of }}\,\cup \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]L\cap (M\cup R)&\;=\;\;&&(L\cap M)\cup (L\cap R)&&{\text{ (Left-distributivity of }}\,\cap \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]L\cap (M\cap R)&\;=\;\;&&(L\cap M)\cap (L\cap R)&&{\text{ (Left-distributivity of }}\,\cap \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex]L\cap (M\,\triangle \,R)&\;=\;\;&&(L\cap M)\,\triangle \,(L\cap R)&&{\text{ (Left-distributivity of }}\,\cap \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex]L\times (M\cap R)&\;=\;\;&&(L\times M)\cap (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex]L\times (M\cup R)&\;=\;\;&&(L\times M)\cup (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]L\times (M\,\setminus R)&\;=\;\;&&(L\times M)\,\setminus (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\setminus \,{\text{)}}\\[1.4ex]L\times (M\,\triangle R)&\;=\;\;&&(L\times M)\,\triangle (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex]\end{alignedat}}} Distributivity and symmetric difference ∆ [ edit ] Intersection distributes over symmetric difference: L ∩ ∩ ( M △ △ R ) = ( L ∩ ∩ M ) △ △ ( L ∩ ∩ R ) {\displaystyle {\begin{alignedat}{5}L\,\cap \,(M\,\triangle \,R)~&~~=~~&&(L\,\cap \,M)\,\triangle \,(L\,\cap \,R)~&&~\\[1.4ex]\end{alignedat}}} ( L △ △ M ) ∩ ∩ R = ( L ∩ ∩ R ) △ △ ( M ∩ ∩ R ) {\displaystyle {\begin{alignedat}{5}(L\,\triangle \,M)\,\cap \,R~&~~=~~&&(L\,\cap \,R)\,\triangle \,(M\,\cap \,R)~&&~\\[1.4ex]\end{alignedat}}} Union does not distribute over symmetric difference because only the following is guaranteed in general: L ∪ ∪ ( M △ △ R ) ⊇ ⊇ ( L ∪ ∪ M ) △ △ ( L ∪ ∪ R ) = ( M △ △ R ) ∖ ∖ L = ( M ∖ ∖ L ) △ △ ( R ∖ ∖ L ) {\displaystyle {\begin{alignedat}{5}L\cup (M\,\triangle \,R)~~{\color {red}{\supseteq }}~~\color {black}{\,}(L\cup M)\,\triangle \,(L\cup R)~&~=~&&(M\,\triangle \,R)\,\setminus \,L&~=~&&(M\,\setminus \,L)\,\triangle \,(R\,\setminus \,L)\\[1.4ex]\end{alignedat}}} Symmetric difference does not distribute over itself: L △ △ ( M △ △ R ) ≠ ≠ ( L △ △ M ) △ △ ( L △ △ R ) = M △ △ R {\displaystyle L\,\triangle \,(M\,\triangle \,R)~~{\color {red}{\neq }}~~\color {black}{\,}(L\,\triangle \,M)\,\triangle \,(L\,\triangle \,R)~=~M\,\triangle \,R} and in general, for any sets L and A {\displaystyle L{\text{ and }}A} (where A {\displaystyle A} represents M △ △ R {\displaystyle M\,\triangle \,R} ), L △ △ A {\displaystyle L\,\triangle \,A} might not be a subset, nor a superset, of L {\displaystyle L} (and the same is true for A {\displaystyle A} ).

Distributivity and set subtraction \ [ edit ] Failure of set subtraction to left distribute : Set subtraction is right distributive over itself. However, set subtraction is not left distributive over itself because only the following is guaranteed in general: L ∖ ∖ ( M ∖ ∖ R ) ⊇ ⊇ ( L ∖ ∖ M ) ∖ ∖ ( L ∖ ∖ R ) = L ∩ ∩ R ∖ ∖ M {\displaystyle {\begin{alignedat}{5}L\,\setminus \,(M\,\setminus \,R)&~~{\color {red}{\supseteq }}~~&&\color {black}{\,}(L\,\setminus \,M)\,\setminus \,(L\,\setminus \,R)~~=~~L\cap R\,\setminus \,M\\[1.4ex]\end{alignedat}}} where equality holds if and only if L ∖ ∖ M = L ∩ ∩ R , {\displaystyle L\,\setminus \,M=L\,\cap \,R,} which happens if and only if L ∩ ∩ M ∩ ∩ R = ∅ ∅ and L ∖ ∖ M ⊆ ⊆ R .

{\displaystyle L\cap M\cap R=\varnothing {\text{ and }}L\setminus M\subseteq R.} For symmetric difference, the sets L ∖ ∖ ( M △ △ R ) {\displaystyle L\,\setminus \,(M\,\triangle \,R)} and ( L ∖ ∖ M ) △ △ ( L ∖ ∖ R ) = L ∩ ∩ ( M △ △ R ) {\displaystyle (L\,\setminus \,M)\,\triangle \,(L\,\setminus \,R)=L\,\cap \,(M\,\triangle \,R)} are always disjoint. 
So these two sets are equal if and only if they are both equal to ∅ ∅ .

{\displaystyle \varnothing .} Moreover, L ∖ ∖ ( M △ △ R ) = ∅ ∅ {\displaystyle L\,\setminus \,(M\,\triangle \,R)=\varnothing } if and only if L ∩ ∩ M ∩ ∩ R = ∅ ∅ and L ⊆ ⊆ M ∪ ∪ R .

{\displaystyle L\cap M\cap R=\varnothing {\text{ and }}L\subseteq M\cup R.} To investigate the left distributivity of set subtraction over unions or intersections, consider how the sets involved in (both of) De Morgan's laws are all related: ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∪ ∪ R ) ⊆ ⊆ L ∖ ∖ ( M ∩ ∩ R ) = ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) {\displaystyle {\begin{alignedat}{5}(L\,\setminus \,M)\,\cap \,(L\,\setminus \,R)~~=~~L\,\setminus \,(M\,\cup \,R)~&~~{\color {red}{\subseteq }}~~&&\color {black}{\,}L\,\setminus \,(M\,\cap \,R)~~=~~(L\,\setminus \,M)\,\cup \,(L\,\setminus \,R)\\[1.4ex]\end{alignedat}}} always holds (the equalities on the left and right are De Morgan's laws) but equality is not guaranteed in general (that is, the containment ⊆ ⊆ {\displaystyle {\color {red}{\subseteq }}} might be strict). 
Equality holds if and only if L ∖ ∖ ( M ∩ ∩ R ) ⊆ ⊆ L ∖ ∖ ( M ∪ ∪ R ) , {\displaystyle L\,\setminus \,(M\,\cap \,R)\;\subseteq \;L\,\setminus \,(M\,\cup \,R),} which happens if and only if L ∩ ∩ M = L ∩ ∩ R .

{\displaystyle L\,\cap \,M=L\,\cap \,R.} This observation about De Morgan's laws shows that ∖ ∖ {\displaystyle \,\setminus \,} is not left distributive over ∪ ∪ {\displaystyle \,\cup \,} or ∩ ∩ {\displaystyle \,\cap \,} because only the following are guaranteed in general: L ∖ ∖ ( M ∪ ∪ R ) ⊆ ⊆ ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∩ ∩ R ) {\displaystyle {\begin{alignedat}{5}L\,\setminus \,(M\,\cup \,R)~&~~{\color {red}{\subseteq }}~~&&\color {black}{\,}(L\,\setminus \,M)\,\cup \,(L\,\setminus \,R)~~=~~L\,\setminus \,(M\,\cap \,R)\\[1.4ex]\end{alignedat}}} L ∖ ∖ ( M ∩ ∩ R ) ⊇ ⊇ ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∪ ∪ R ) {\displaystyle {\begin{alignedat}{5}L\,\setminus \,(M\,\cap \,R)~&~~{\color {red}{\supseteq }}~~&&\color {black}{\,}(L\,\setminus \,M)\,\cap \,(L\,\setminus \,R)~~=~~L\,\setminus \,(M\,\cup \,R)\\[1.4ex]\end{alignedat}}} where equality holds for one (or equivalently, for both) of the above two inclusion formulas if and only if L ∩ ∩ M = L ∩ ∩ R .

{\displaystyle L\,\cap \,M=L\,\cap \,R.} The following statements are equivalent: L ∩ ∩ M = L ∩ ∩ R {\displaystyle L\cap M\,=\,L\cap R} L ∖ ∖ M = L ∖ ∖ R {\displaystyle L\,\setminus \,M\,=\,L\,\setminus \,R} L ∖ ∖ ( M ∩ ∩ R ) = ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) ; {\displaystyle L\,\setminus \,(M\,\cap \,R)=(L\,\setminus \,M)\,\cap \,(L\,\setminus \,R);} that is, ∖ ∖ {\displaystyle \,\setminus \,} left distributes over ∩ ∩ {\displaystyle \,\cap \,} for these three particular sets L ∖ ∖ ( M ∪ ∪ R ) = ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) ; {\displaystyle L\,\setminus \,(M\,\cup \,R)=(L\,\setminus \,M)\,\cup \,(L\,\setminus \,R);} that is, ∖ ∖ {\displaystyle \,\setminus \,} left distributes over ∪ ∪ {\displaystyle \,\cup \,} for these three particular sets L ∖ ∖ ( M ∩ ∩ R ) = L ∖ ∖ ( M ∪ ∪ R ) {\displaystyle L\,\setminus \,(M\,\cap \,R)\,=\,L\,\setminus \,(M\,\cup \,R)} L ∩ ∩ ( M ∪ ∪ R ) = L ∩ ∩ M ∩ ∩ R {\displaystyle L\cap (M\cup R)\,=\,L\cap M\cap R} L ∩ ∩ ( M ∪ ∪ R ) ⊆ ⊆ M ∩ ∩ R {\displaystyle L\cap (M\cup R)~\subseteq ~M\cap R} L ∩ ∩ R ⊆ ⊆ M {\displaystyle L\cap R~\subseteq ~M\;} and L ∩ ∩ M ⊆ ⊆ R {\displaystyle \;L\cap M~\subseteq ~R} L ∖ ∖ ( M ∖ ∖ R ) = L ∖ ∖ ( R ∖ ∖ M ) {\displaystyle L\setminus (M\setminus R)\,=\,L\setminus (R\setminus M)} L ∖ ∖ ( M ∖ ∖ R ) = L ∖ ∖ ( R ∖ ∖ M ) = L {\displaystyle L\setminus (M\setminus R)\,=\,L\setminus (R\setminus M)\,=\,L} Quasi-commutativity : ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ M (Quasi-commutative) {\displaystyle (L\setminus M)\setminus R~=~(L\setminus R)\setminus M\qquad {\text{ (Quasi-commutative)}}} always holds but in general, L ∖ ∖ ( M ∖ ∖ R ) ≠ ≠ L ∖ ∖ ( R ∖ ∖ M ) .

{\displaystyle L\setminus (M\setminus R)~~{\color {red}{\neq }}~~L\setminus (R\setminus M).} However, L ∖ ∖ ( M ∖ ∖ R ) ⊆ ⊆ L ∖ ∖ ( R ∖ ∖ M ) {\displaystyle L\setminus (M\setminus R)~\subseteq ~L\setminus (R\setminus M)} if and only if L ∩ ∩ R ⊆ ⊆ M {\displaystyle L\cap R~\subseteq ~M} if and only if L ∖ ∖ ( R ∖ ∖ M ) = L .

{\displaystyle L\setminus (R\setminus M)~=~L.} Set subtraction complexity : To manage the many identities involving set subtraction, this section is divided based on where the set subtraction operation and parentheses are located on the left hand side of the identity. The great variety and (relative) complexity of formulas involving set subtraction (compared to those without it) is in part due to the fact that unlike ∪ ∪ , ∩ ∩ , {\displaystyle \,\cup ,\,\cap ,} and △ △ , {\displaystyle \triangle ,\,} set subtraction is neither associative nor commutative and it also is not left distributive over ∪ ∪ , ∩ ∩ , △ △ , {\displaystyle \,\cup ,\,\cap ,\,\triangle ,} or even over itself.

Two set subtractions [ edit ] Set subtraction is not associative in general: ( L ∖ ∖ M ) ∖ ∖ R ≠ ≠ L ∖ ∖ ( M ∖ ∖ R ) {\displaystyle (L\,\setminus \,M)\,\setminus \,R\;~~{\color {red}{\neq }}~~\;L\,\setminus \,(M\,\setminus \,R)} since only the following is always guaranteed: ( L ∖ ∖ M ) ∖ ∖ R ⊆ ⊆ L ∖ ∖ ( M ∖ ∖ R ) .

{\displaystyle (L\,\setminus \,M)\,\setminus \,R\;~~{\color {red}{\subseteq }}~~\;L\,\setminus \,(M\,\setminus \,R).} (L\M)\R [ edit ] ( L ∖ ∖ M ) ∖ ∖ R = L ∖ ∖ ( M ∪ ∪ R ) = ( L ∖ ∖ R ) ∖ ∖ M = ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) = ( L ∖ ∖ R ) ∖ ∖ M = ( L ∖ ∖ R ) ∖ ∖ ( M ∖ ∖ R ) {\displaystyle {\begin{alignedat}{4}(L\setminus M)\setminus R&=&&L\setminus (M\cup R)\\[0.6ex]&=(&&L\setminus R)\setminus M\\[0.6ex]&=(&&L\setminus M)\cap (L\setminus R)\\[0.6ex]&=(&&L\setminus R)\setminus M\\[0.6ex]&=(&&L\,\setminus \,R)\,\setminus \,(M\,\setminus \,R)\\[1.4ex]\end{alignedat}}} L\(M\R) [ edit ] L ∖ ∖ ( M ∖ ∖ R ) = ( L ∖ ∖ M ) ∪ ∪ ( L ∩ ∩ R ) {\displaystyle {\begin{alignedat}{4}L\setminus (M\setminus R)&=(L\setminus M)\cup (L\cap R)\\[1.4ex]\end{alignedat}}} If L ⊆ ⊆ M then L ∖ ∖ ( M ∖ ∖ R ) = L ∩ ∩ R {\displaystyle L\subseteq M{\text{ then }}L\setminus (M\setminus R)=L\cap R} L ∖ ∖ ( M ∖ ∖ R ) ⊆ ⊆ ( L ∖ ∖ M ) ∪ ∪ R {\textstyle L\setminus (M\setminus R)\subseteq (L\setminus M)\cup R} with equality if and only if R ⊆ ⊆ L .

{\displaystyle R\subseteq L.} One set subtraction [ edit ] (L\M) ⁎ R [ edit ] Set subtraction on the left , and parentheses on the left ( L ∖ ∖ M ) ∪ ∪ R = ( L ∪ ∪ R ) ∖ ∖ ( M ∖ ∖ R ) = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ R (the outermost union is disjoint) {\displaystyle {\begin{alignedat}{4}\left(L\setminus M\right)\cup R&=(L\cup R)\setminus (M\setminus R)\\&=(L\setminus (M\cup R))\cup R~~~~~{\text{ (the outermost union is disjoint) }}\\\end{alignedat}}} ( L ∖ ∖ M ) ∩ ∩ R = ( L ∩ ∩ R ) ∖ ∖ ( M ∩ ∩ R ) (Distributive law of ∩ ∩ over ∖ ∖ ) = ( L ∩ ∩ R ) ∖ ∖ M = L ∩ ∩ ( R ∖ ∖ M ) {\displaystyle {\begin{alignedat}{4}(L\setminus M)\cap R&=(&&L\cap R)\setminus (M\cap R)~~~{\text{ (Distributive law of }}\cap {\text{ over }}\setminus {\text{ )}}\\&=(&&L\cap R)\setminus M\\&=&&L\cap (R\setminus M)\\\end{alignedat}}} [ 4 ] ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∪ ∪ R ) ⊆ ⊆ L ∖ ∖ ( M ∩ ∩ R ) = ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) {\displaystyle {\begin{alignedat}{5}(L\,\setminus \,M)\,\cap \,(L\,\setminus \,R)~~=~~L\,\setminus \,(M\,\cup \,R)~&~~{\color {red}{\subseteq }}~~&&\color {black}{\,}L\,\setminus \,(M\,\cap \,R)~~=~~(L\,\setminus \,M)\,\cup \,(L\,\setminus \,R)\\[1.4ex]\end{alignedat}}} ( L ∖ ∖ M ) △ △ R = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ ( R ∖ ∖ L ) ∪ ∪ ( L ∩ ∩ M ∩ ∩ R ) (the three outermost sets are pairwise disjoint) {\displaystyle {\begin{alignedat}{4}(L\setminus M)~\triangle ~R&=(L\setminus (M\cup R))\cup (R\setminus L)\cup (L\cap M\cap R)~~~{\text{ (the three outermost sets are pairwise disjoint) }}\\\end{alignedat}}} ( L ∖ ∖ M ) × × R = ( L × × R ) ∖ ∖ ( M × × R ) (Distributivity) {\displaystyle (L\,\setminus M)\times R=(L\times R)\,\setminus (M\times R)~~~~~{\text{ (Distributivity)}}} L\(M ⁎ R) [ edit ] Set subtraction on the left , and parentheses on the right L ∖ ∖ ( M ∪ ∪ R ) = ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) (De Morgan's law) = ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ M {\displaystyle {\begin{alignedat}{3}L\setminus (M\cup R)&=(L\setminus M)&&\,\cap \,(&&L\setminus R)~~~~{\text{ (De Morgan's law) }}\\&=(L\setminus M)&&\,\,\setminus &&R\\&=(L\setminus R)&&\,\,\setminus &&M\\\end{alignedat}}} L ∖ ∖ ( M ∩ ∩ R ) = ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) (De Morgan's law) {\displaystyle {\begin{alignedat}{4}L\setminus (M\cap R)&=(L\setminus M)\cup (L\setminus R)~~~~{\text{ (De Morgan's law) }}\\\end{alignedat}}} where the above two sets that are the subjects of De Morgan's laws always satisfy L ∖ ∖ ( M ∪ ∪ R ) ⊆ ⊆ L ∖ ∖ ( M ∩ ∩ R ) .

{\displaystyle L\,\setminus \,(M\,\cup \,R)~~{\color {red}{\subseteq }}~~\color {black}{\,}L\,\setminus \,(M\,\cap \,R).} L ∖ ∖ ( M △ △ R ) = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ ( L ∩ ∩ M ∩ ∩ R ) (the outermost union is disjoint) {\displaystyle {\begin{alignedat}{4}L\setminus (M~\triangle ~R)&=(L\setminus (M\cup R))\cup (L\cap M\cap R)~~~{\text{ (the outermost union is disjoint) }}\\\end{alignedat}}} (L ⁎ M)\R [ edit ] Set subtraction on the right , and parentheses on the left ( L ∪ ∪ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∪ ∪ ( M ∖ ∖ R ) {\displaystyle {\begin{alignedat}{4}(L\cup M)\setminus R&=(L\setminus R)\cup (M\setminus R)\\\end{alignedat}}} ( L ∩ ∩ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∩ ∩ ( M ∖ ∖ R ) = L ∩ ∩ ( M ∖ ∖ R ) = M ∩ ∩ ( L ∖ ∖ R ) {\displaystyle {\begin{alignedat}{4}(L\cap M)\setminus R&=(&&L\setminus R)&&\cap (M\setminus R)\\&=&&L&&\cap (M\setminus R)\\&=&&M&&\cap (L\setminus R)\\\end{alignedat}}} ( L △ △ M ) ∖ ∖ R = ( L ∖ ∖ R ) △ △ ( M ∖ ∖ R ) = ( L ∪ ∪ R ) △ △ ( M ∪ ∪ R ) {\displaystyle {\begin{alignedat}{4}(L\,\triangle \,M)\setminus R&=(L\setminus R)~&&\triangle ~(M\setminus R)\\&=(L\cup R)~&&\triangle ~(M\cup R)\\\end{alignedat}}} L ⁎ (M\R) [ edit ] Set subtraction on the right , and parentheses on the right L ∪ ∪ ( M ∖ ∖ R ) = L ∪ ∪ ( M ∖ ∖ ( R ∪ ∪ L ) ) (the outermost union is disjoint) = [ ( L ∖ ∖ M ) ∪ ∪ ( R ∩ ∩ L ) ] ∪ ∪ ( M ∖ ∖ R ) (the outermost union is disjoint) = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ ( R ∩ ∩ L ) ∪ ∪ ( M ∖ ∖ R ) (the three outermost sets are pairwise disjoint) {\displaystyle {\begin{alignedat}{3}L\cup (M\setminus R)&=&&&&L&&\cup \;&&(M\setminus (R\cup L))&&~~~{\text{ (the outermost union is disjoint) }}\\&=[&&(&&L\setminus M)&&\cup \;&&(R\cap L)]\cup (M\setminus R)&&~~~{\text{ (the outermost union is disjoint) }}\\&=&&(&&L\setminus (M\cup R))\;&&\;\cup &&(R\cap L)\,\,\cup (M\setminus R)&&~~~{\text{ (the three outermost sets are pairwise disjoint) }}\\\end{alignedat}}} L ∩ ∩ ( M ∖ ∖ R ) = ( L ∩ ∩ M ) ∖ ∖ ( L ∩ ∩ R ) (Distributive law of ∩ ∩ over ∖ ∖ ) = ( L ∩ ∩ M ) ∖ ∖ R = M ∩ ∩ ( L ∖ ∖ R ) = ( L ∖ ∖ R ) ∩ ∩ ( M ∖ ∖ R ) {\displaystyle {\begin{alignedat}{4}L\cap (M\setminus R)&=(&&L\cap M)&&\setminus (L\cap R)~~~{\text{ (Distributive law of }}\cap {\text{ over }}\setminus {\text{ )}}\\&=(&&L\cap M)&&\setminus R\\&=&&M&&\cap (L\setminus R)\\&=(&&L\setminus R)&&\cap (M\setminus R)\\\end{alignedat}}} [ 4 ] L × × ( M ∖ ∖ R ) = ( L × × M ) ∖ ∖ ( L × × R ) (Distributivity) {\displaystyle L\times (M\,\setminus R)=(L\times M)\,\setminus (L\times R)~~~~~{\text{ (Distributivity)}}} Three operations on three sets [ edit ] (L • M) ⁎ (M • R) [ edit ] Operations of the form ( L ∙ ∙ M ) ∗ ∗ ( M ∙ ∙ R ) {\displaystyle (L\bullet M)\ast (M\bullet R)} : ( L ∪ ∪ M ) ∪ ∪ ( M ∪ ∪ R ) = L ∪ ∪ M ∪ ∪ R ( L ∪ ∪ M ) ∩ ∩ ( M ∪ ∪ R ) = M ∪ ∪ ( L ∩ ∩ R ) ( L ∪ ∪ M ) ∖ ∖ ( M ∪ ∪ R ) = L ∖ ∖ ( M ∪ ∪ R ) ( L ∪ ∪ M ) △ △ ( M ∪ ∪ R ) = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ ( R ∖ ∖ ( L ∪ ∪ M ) ) = ( L △ △ R ) ∖ ∖ M ( L ∩ ∩ M ) ∪ ∪ ( M ∩ ∩ R ) = M ∩ ∩ ( L ∪ ∪ R ) ( L ∩ ∩ M ) ∩ ∩ ( M ∩ ∩ R ) = L ∩ ∩ M ∩ ∩ R ( L ∩ ∩ M ) ∖ ∖ ( M ∩ ∩ R ) = ( L ∩ ∩ M ) ∖ ∖ R ( L ∩ ∩ M ) △ △ ( M ∩ ∩ R ) = [ ( L ∩ ∩ M ) ∪ ∪ ( M ∩ ∩ R ) ] ∖ ∖ ( L ∩ ∩ M ∩ ∩ R ) ( L ∖ ∖ M ) ∪ ∪ ( M ∖ ∖ R ) = ( L ∪ ∪ M ) ∖ ∖ ( M ∩ ∩ R ) ( L ∖ ∖ M ) ∩ ∩ ( M ∖ ∖ R ) = ∅ ∅ ( L ∖ ∖ M ) ∖ ∖ ( M ∖ ∖ R ) = L ∖ ∖ M ( L ∖ ∖ M ) △ △ ( M ∖ ∖ R ) = ( L ∖ ∖ M ) ∪ ∪ ( M ∖ ∖ R ) = ( L ∪ ∪ M ) ∖ ∖ ( M ∩ ∩ R ) ( L △ △ M ) ∪ ∪ ( M △ △ R ) = ( L ∪ ∪ M ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ M ∩ ∩ R ) ( L △ △ M ) ∩ ∩ ( M △ △ R ) = ( ( L ∩ ∩ R ) ∖ ∖ M ) ∪ ∪ ( M ∖ ∖ ( L ∪ ∪ R ) ) ( L △ △ M ) ∖ ∖ ( M △ △ R ) = ( L ∖ ∖ ( M ∪ ∪ R ) ) ∪ ∪ ( ( M ∩ ∩ R ) ∖ ∖ L ) ( L △ △ M ) △ △ ( M △ △ R ) = L △ △ R {\displaystyle {\begin{alignedat}{9}(L\cup M)&\,\cup \,&&(&&M\cup R)&&&&\;=\;\;&&L\cup M\cup R\\[1.4ex](L\cup M)&\,\cap \,&&(&&M\cup R)&&&&\;=\;\;&&M\cup (L\cap R)\\[1.4ex](L\cup M)&\,\setminus \,&&(&&M\cup R)&&&&\;=\;\;&&L\,\setminus \,(M\cup R)\\[1.4ex](L\cup M)&\,\triangle \,&&(&&M\cup R)&&&&\;=\;\;&&(L\,\setminus \,(M\cup R))\,\cup \,(R\,\setminus \,(L\cup M))\\[1.4ex]&\,&&\,&&\,&&&&\;=\;\;&&(L\,\triangle \,R)\,\setminus \,M\\[1.4ex](L\cap M)&\,\cup \,&&(&&M\cap R)&&&&\;=\;\;&&M\cap (L\cup R)\\[1.4ex](L\cap M)&\,\cap \,&&(&&M\cap R)&&&&\;=\;\;&&L\cap M\cap R\\[1.4ex](L\cap M)&\,\setminus \,&&(&&M\cap R)&&&&\;=\;\;&&(L\cap M)\,\setminus \,R\\[1.4ex](L\cap M)&\,\triangle \,&&(&&M\cap R)&&&&\;=\;\;&&[(L\,\cap M)\cup (M\,\cap R)]\,\setminus \,(L\,\cap M\,\cap R)\\[1.4ex](L\,\setminus M)&\,\cup \,&&(&&M\,\setminus R)&&&&\;=\;\;&&(L\,\cup M)\,\setminus (M\,\cap \,R)\\[1.4ex](L\,\setminus M)&\,\cap \,&&(&&M\,\setminus R)&&&&\;=\;\;&&\varnothing \\[1.4ex](L\,\setminus M)&\,\setminus \,&&(&&M\,\setminus R)&&&&\;=\;\;&&L\,\setminus M\\[1.4ex](L\,\setminus M)&\,\triangle \,&&(&&M\,\setminus R)&&&&\;=\;\;&&(L\,\setminus M)\cup (M\,\setminus R)\\[1.4ex]&\,&&\,&&\,&&&&\;=\;\;&&(L\,\cup M)\setminus (M\,\cap R)\\[1.4ex](L\,\triangle \,M)&\,\cup \,&&(&&M\,\triangle \,R)&&&&\;=\;\;&&(L\,\cup \,M\,\cup \,R)\,\setminus \,(L\,\cap \,M\,\cap \,R)\\[1.4ex](L\,\triangle \,M)&\,\cap \,&&(&&M\,\triangle \,R)&&&&\;=\;\;&&((L\,\cap \,R)\,\setminus \,M)\,\cup \,(M\,\setminus \,(L\,\cup \,R))\\[1.4ex](L\,\triangle \,M)&\,\setminus \,&&(&&M\,\triangle \,R)&&&&\;=\;\;&&(L\,\setminus \,(M\,\cup \,R))\,\cup \,((M\,\cap \,R)\,\setminus \,L)\\[1.4ex](L\,\triangle \,M)&\,\triangle \,&&(&&M\,\triangle \,R)&&&&\;=\;\;&&L\,\triangle \,R\\[1.7ex]\end{alignedat}}} (L • M) ⁎ (R\M) [ edit ] Operations of the form ( L ∙ ∙ M ) ∗ ∗ ( R ∖ ∖ M ) {\displaystyle (L\bullet M)\ast (R\,\setminus \,M)} : ( L ∪ ∪ M ) ∪ ∪ ( R ∖ ∖ M ) = L ∪ ∪ M ∪ ∪ R ( L ∪ ∪ M ) ∩ ∩ ( R ∖ ∖ M ) = ( L ∩ ∩ R ) ∖ ∖ M ( L ∪ ∪ M ) ∖ ∖ ( R ∖ ∖ M ) = M ∪ ∪ ( L ∖ ∖ R ) ( L ∪ ∪ M ) △ △ ( R ∖ ∖ M ) = M ∪ ∪ ( L △ △ R ) ( L ∩ ∩ M ) ∪ ∪ ( R ∖ ∖ M ) = [ L ∩ ∩ ( M ∪ ∪ R ) ] ∪ ∪ [ R ∖ ∖ ( L ∪ ∪ M ) ] (disjoint union) = ( L ∩ ∩ M ) △ △ ( R ∖ ∖ M ) ( L ∩ ∩ M ) ∩ ∩ ( R ∖ ∖ M ) = ∅ ∅ ( L ∩ ∩ M ) ∖ ∖ ( R ∖ ∖ M ) = L ∩ ∩ M ( L ∩ ∩ M ) △ △ ( R ∖ ∖ M ) = ( L ∩ ∩ M ) ∪ ∪ ( R ∖ ∖ M ) (disjoint union) ( L ∖ ∖ M ) ∪ ∪ ( R ∖ ∖ M ) = L ∪ ∪ R ∖ ∖ M ( L ∖ ∖ M ) ∩ ∩ ( R ∖ ∖ M ) = ( L ∩ ∩ R ) ∖ ∖ M ( L ∖ ∖ M ) ∖ ∖ ( R ∖ ∖ M ) = L ∖ ∖ ( M ∪ ∪ R ) ( L ∖ ∖ M ) △ △ ( R ∖ ∖ M ) = ( L △ △ R ) ∖ ∖ M ( L △ △ M ) ∪ ∪ ( R ∖ ∖ M ) = ( L ∪ ∪ M ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ M ) ( L △ △ M ) ∩ ∩ ( R ∖ ∖ M ) = ( L ∩ ∩ R ) ∖ ∖ M ( L △ △ M ) ∖ ∖ ( R ∖ ∖ M ) = [ L ∖ ∖ ( M ∪ ∪ R ) ] ∪ ∪ ( M ∖ ∖ L ) (disjoint union) = ( L △ △ M ) ∖ ∖ ( L ∩ ∩ R ) ( L △ △ M ) △ △ ( R ∖ ∖ M ) = L △ △ ( M ∪ ∪ R ) {\displaystyle {\begin{alignedat}{9}(L\cup M)&\,\cup \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&L\cup M\cup R\\[1.4ex](L\cup M)&\,\cap \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\cap R)\,\setminus \,M\\[1.4ex](L\cup M)&\,\setminus \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&M\cup (L\,\setminus \,R)\\[1.4ex](L\cup M)&\,\triangle \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&M\cup (L\,\triangle \,R)\\[1.4ex](L\cap M)&\,\cup \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&[L\cap (M\cup R)]\cup [R\,\setminus \,(L\cup M)]\qquad {\text{ (disjoint union)}}\\[1.4ex]&\,&&\,&&\,&&&&\;=\;\;&&(L\cap M)\,\triangle \,(R\,\setminus \,M)\\[1.4ex](L\cap M)&\,\cap \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&\varnothing \\[1.4ex](L\cap M)&\,\setminus \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&L\cap M\\[1.4ex](L\cap M)&\,\triangle \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\cap M)\cup (R\,\setminus \,M)\qquad {\text{ (disjoint union)}}\\[1.4ex](L\,\setminus \,M)&\,\cup \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&L\cup R\,\setminus \,M\\[1.4ex](L\,\setminus \,M)&\,\cap \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\cap R)\,\setminus \,M\\[1.4ex](L\,\setminus \,M)&\,\setminus \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&L\,\setminus \,(M\cup R)\\[1.4ex](L\,\setminus \,M)&\,\triangle \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\,\triangle \,R)\,\setminus \,M\\[1.4ex](L\,\triangle \,M)&\,\cup \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\cup M\cup R)\,\setminus \,(L\cap M)\\[1.4ex](L\,\triangle \,M)&\,\cap \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&(L\cap R)\,\setminus \,M\\[1.4ex](L\,\triangle \,M)&\,\setminus \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&[L\,\setminus \,(M\cup R)]\cup (M\,\setminus \,L)\qquad {\text{ (disjoint union)}}\\[1.4ex]&\,&&\,&&\,&&&&\;=\;\;&&(L\,\triangle \,M)\setminus (L\,\cap R)\\[1.4ex](L\,\triangle \,M)&\,\triangle \,&&(&&R\,\setminus \,M)&&&&\;=\;\;&&L\,\triangle \,(M\cup R)\\[1.7ex]\end{alignedat}}} (L\M) ⁎ (L\R) [ edit ] Operations of the form ( L ∖ ∖ M ) ∗ ∗ ( L ∖ ∖ R ) {\displaystyle (L\,\setminus \,M)\ast (L\,\setminus \,R)} : ( L ∖ ∖ M ) ∪ ∪ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∩ ∩ R ) ( L ∖ ∖ M ) ∩ ∩ ( L ∖ ∖ R ) = L ∖ ∖ ( M ∪ ∪ R ) ( L ∖ ∖ M ) ∖ ∖ ( L ∖ ∖ R ) = ( L ∩ ∩ R ) ∖ ∖ M ( L ∖ ∖ M ) △ △ ( L ∖ ∖ R ) = L ∩ ∩ ( M △ △ R ) = ( L ∩ ∩ M ) △ △ ( L ∩ ∩ R ) {\displaystyle {\begin{alignedat}{9}(L\,\setminus M)&\,\cup \,&&(&&L\,\setminus R)&&\;=\;&&L\,\setminus \,(M\,\cap \,R)\\[1.4ex](L\,\setminus M)&\,\cap \,&&(&&L\,\setminus R)&&\;=\;&&L\,\setminus \,(M\,\cup \,R)\\[1.4ex](L\,\setminus M)&\,\setminus \,&&(&&L\,\setminus R)&&\;=\;&&(L\,\cap \,R)\,\setminus \,M\\[1.4ex](L\,\setminus M)&\,\triangle \,&&(&&L\,\setminus R)&&\;=\;&&L\,\cap \,(M\,\triangle \,R)\\[1.4ex]&\,&&\,&&\,&&\;=\;&&(L\cap M)\,\triangle \,(L\cap R)\\[1.4ex]\end{alignedat}}} Other simplifications [ edit ] Other properties : L ∩ ∩ M = R and L ∩ ∩ R = M if and only if M = R ⊆ ⊆ L .

{\displaystyle L\cap M=R\;{\text{ and }}\;L\cap R=M\qquad {\text{ if and only if }}\qquad M=R\subseteq L.} If L ⊆ ⊆ M {\displaystyle L\subseteq M} then L ∖ ∖ R = L ∩ ∩ ( M ∖ ∖ R ) .

{\displaystyle L\setminus R=L\cap (M\setminus R).} [ 4 ] L × × ( M ∖ ∖ R ) = ( L × × M ) ∖ ∖ ( L × × R ) {\displaystyle L\times (M\,\setminus R)=(L\times M)\,\setminus (L\times R)} If L ⊆ ⊆ R {\displaystyle L\subseteq R} then M ∖ ∖ R ⊆ ⊆ M ∖ ∖ L .

{\displaystyle M\setminus R\subseteq M\setminus L.} L ∩ ∩ M ∩ ∩ R = ∅ ∅ {\displaystyle L\cap M\cap R=\varnothing } if and only if for any x ∈ ∈ L ∪ ∪ M ∪ ∪ R , {\displaystyle x\in L\cup M\cup R,} x {\displaystyle x} belongs to at most two of the sets L , M , and R .

{\displaystyle L,M,{\text{ and }}R.} Symmetric difference ∆ of finitely many sets [ edit ] Given finitely many sets L 1 , … … , L n , {\displaystyle L_{1},\ldots ,L_{n},} something belongs to their symmetric difference if and only if it belongs to an odd number of these sets. Explicitly, for any x , {\displaystyle x,} x ∈ ∈ L 1 △ △ ⋯ ⋯ △ △ L n {\displaystyle x\in L_{1}\triangle \cdots \triangle L_{n}} if and only if the cardinality | { i : x ∈ ∈ L i } | {\displaystyle \left|\left\{i:x\in L_{i}\right\}\right|} is odd. (Recall that symmetric difference is associative so parentheses are not needed for the set L 1 △ △ ⋯ ⋯ △ △ L n {\displaystyle L_{1}\triangle \cdots \triangle L_{n}} ).

Consequently, the symmetric difference of three sets satisfies: L △ △ M △ △ R = ( L ∩ ∩ M ∩ ∩ R ) ∪ ∪ { x : x belongs to exactly one of the sets L , M , R } (the union is disjoint) = [ L ∩ ∩ M ∩ ∩ R ] ∪ ∪ [ L ∖ ∖ ( M ∪ ∪ R ) ] ∪ ∪ [ M ∖ ∖ ( L ∪ ∪ R ) ] ∪ ∪ [ R ∖ ∖ ( L ∪ ∪ M ) ] (all 4 sets enclosed by [ ] are pairwise disjoint) {\displaystyle {\begin{alignedat}{4}L\,\triangle \,M\,\triangle \,R&=(L\cap M\cap R)\cup \{x:x{\text{ belongs to exactly one of the sets }}L,M,R\}~~~~~~{\text{ (the union is disjoint) }}\\&=[L\cap M\cap R]\cup [L\setminus (M\cup R)]\cup [M\setminus (L\cup R)]\cup [R\setminus (L\cup M)]~~~~~~~~~{\text{ (all 4 sets enclosed by [ ] are pairwise disjoint) }}\\\end{alignedat}}} Cartesian products ⨯ of finitely many sets [ edit ] Binary ⨯ distributes over ⋃ and ⋂ and \ and ∆ [ edit ] The binary Cartesian product ⨯ distributes over unions, intersections, set subtraction, and symmetric difference: ( L ∩ ∩ M ) × × R = ( L × × R ) ∩ ∩ ( M × × R ) (Right-distributivity of × × over ∩ ∩ ) ( L ∪ ∪ M ) × × R = ( L × × R ) ∪ ∪ ( M × × R ) (Right-distributivity of × × over ∪ ∪ ) ( L ∖ ∖ M ) × × R = ( L × × R ) ∖ ∖ ( M × × R ) (Right-distributivity of × × over ∖ ∖ ) ( L △ △ M ) × × R = ( L × × R ) △ △ ( M × × R ) (Right-distributivity of × × over △ △ ) {\displaystyle {\begin{alignedat}{9}(L\,\cap \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\cap \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex](L\,\cup \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\cup \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex](L\,\setminus \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\setminus \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\setminus \,{\text{)}}\\[1.4ex](L\,\triangle \,M)\,\times \,R~&~~=~~&&(L\,\times \,R)\,&&\triangle \,&&(M\,\times \,R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex]\end{alignedat}}} L × × ( M ∩ ∩ R ) = ( L × × M ) ∩ ∩ ( L × × R ) (Left-distributivity of × × over ∩ ∩ ) L × × ( M ∪ ∪ R ) = ( L × × M ) ∪ ∪ ( L × × R ) (Left-distributivity of × × over ∪ ∪ ) L × × ( M ∖ ∖ R ) = ( L × × M ) ∖ ∖ ( L × × R ) (Left-distributivity of × × over ∖ ∖ ) L × × ( M △ △ R ) = ( L × × M ) △ △ ( L × × R ) (Left-distributivity of × × over △ △ ) {\displaystyle {\begin{alignedat}{5}L\times (M\cap R)&\;=\;\;&&(L\times M)\cap (L\times R)\qquad &&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\cap \,{\text{)}}\\[1.4ex]L\times (M\cup R)&\;=\;\;&&(L\times M)\cup (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]L\times (M\setminus R)&\;=\;\;&&(L\times M)\setminus (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\setminus \,{\text{)}}\\[1.4ex]L\times (M\triangle R)&\;=\;\;&&(L\times M)\triangle (L\times R)&&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\triangle \,{\text{)}}\\[1.4ex]\end{alignedat}}} But in general, ⨯ does not distribute over itself: L × × ( M × × R ) ≠ ≠ ( L × × M ) × × ( L × × R ) {\displaystyle L\times (M\times R)~\color {Red}{\neq }\color {Black}{}~(L\times M)\times (L\times R)} ( L × × M ) × × R ≠ ≠ ( L × × R ) × × ( M × × R ) .

{\displaystyle (L\times M)\times R~\color {Red}{\neq }\color {Black}{}~(L\times R)\times (M\times R).} Binary ⋂ of finite ⨯ [ edit ] ( L × × R ) ∩ ∩ ( L 2 × × R 2 ) = ( L ∩ ∩ L 2 ) × × ( R ∩ ∩ R 2 ) {\displaystyle (L\times R)\cap \left(L_{2}\times R_{2}\right)~=~\left(L\cap L_{2}\right)\times \left(R\cap R_{2}\right)} ( L × × M × × R ) ∩ ∩ ( L 2 × × M 2 × × R 2 ) = ( L ∩ ∩ L 2 ) × × ( M ∩ ∩ M 2 ) × × ( R ∩ ∩ R 2 ) {\displaystyle (L\times M\times R)\cap \left(L_{2}\times M_{2}\times R_{2}\right)~=~\left(L\cap L_{2}\right)\times \left(M\cap M_{2}\right)\times \left(R\cap R_{2}\right)} Binary ⋃ of finite ⨯ [ edit ] ( L × × R ) ∪ ∪ ( L 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × R ] ∪ ∪ [ ( L 2 ∖ ∖ L ) × × R 2 ] ∪ ∪ [ ( L ∩ ∩ L 2 ) × × ( R ∪ ∪ R 2 ) ] = [ L × × ( R ∖ ∖ R 2 ) ] ∪ ∪ [ L 2 × × ( R 2 ∖ ∖ R ) ] ∪ ∪ [ ( L ∪ ∪ L 2 ) × × ( R ∩ ∩ R 2 ) ] {\displaystyle {\begin{alignedat}{9}\left(L\times R\right)~\cup ~\left(L_{2}\times R_{2}\right)~&=~\left[\left(L\setminus L_{2}\right)\times R\right]~\cup ~\left[\left(L_{2}\setminus L\right)\times R_{2}\right]~\cup ~\left[\left(L\cap L_{2}\right)\times \left(R\cup R_{2}\right)\right]\\[0.5ex]~&=~\left[L\times \left(R\setminus R_{2}\right)\right]~\cup ~\left[L_{2}\times \left(R_{2}\setminus R\right)\right]~\cup ~\left[\left(L\cup L_{2}\right)\times \left(R\cap R_{2}\right)\right]\\\end{alignedat}}} Difference \ of finite ⨯ [ edit ] ( L × × R ) ∖ ∖ ( L 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × R ] ∪ ∪ [ L × × ( R ∖ ∖ R 2 ) ] {\displaystyle {\begin{alignedat}{9}\left(L\times R\right)~\setminus ~\left(L_{2}\times R_{2}\right)~&=~\left[\left(L\,\setminus \,L_{2}\right)\times R\right]~\cup ~\left[L\times \left(R\,\setminus \,R_{2}\right)\right]\\\end{alignedat}}} and ( L × × M × × R ) ∖ ∖ ( L 2 × × M 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × M × × R ] ∪ ∪ [ L × × ( M ∖ ∖ M 2 ) × × R ] ∪ ∪ [ L × × M × × ( R ∖ ∖ R 2 ) ] {\displaystyle (L\times M\times R)~\setminus ~\left(L_{2}\times M_{2}\times R_{2}\right)~=~\left[\left(L\,\setminus \,L_{2}\right)\times M\times R\right]~\cup ~\left[L\times \left(M\,\setminus \,M_{2}\right)\times R\right]~\cup ~\left[L\times M\times \left(R\,\setminus \,R_{2}\right)\right]} Finite ⨯ of differences \ [ edit ] ( L ∖ ∖ L 2 ) × × ( R ∖ ∖ R 2 ) = ( L × × R ) ∖ ∖ [ ( L 2 × × R ) ∪ ∪ ( L × × R 2 ) ] {\displaystyle \left(L\,\setminus \,L_{2}\right)\times \left(R\,\setminus \,R_{2}\right)~=~\left(L\times R\right)\,\setminus \,\left[\left(L_{2}\times R\right)\cup \left(L\times R_{2}\right)\right]} ( L ∖ ∖ L 2 ) × × ( M ∖ ∖ M 2 ) × × ( R ∖ ∖ R 2 ) = ( L × × M × × R ) ∖ ∖ [ ( L 2 × × M × × R ) ∪ ∪ ( L × × M 2 × × R ) ∪ ∪ ( L × × M × × R 2 ) ] {\displaystyle \left(L\,\setminus \,L_{2}\right)\times \left(M\,\setminus \,M_{2}\right)\times \left(R\,\setminus \,R_{2}\right)~=~\left(L\times M\times R\right)\,\setminus \,\left[\left(L_{2}\times M\times R\right)\cup \left(L\times M_{2}\times R\right)\cup \left(L\times M\times R_{2}\right)\right]} Symmetric difference ∆ and finite ⨯ [ edit ] L × × ( R △ △ R 2 ) = [ L × × ( R ∖ ∖ R 2 ) ] ∪ ∪ [ L × × ( R 2 ∖ ∖ R ) ] {\displaystyle L\times \left(R\,\triangle \,R_{2}\right)~=~\left[L\times \left(R\,\setminus \,R_{2}\right)\right]\,\cup \,\left[L\times \left(R_{2}\,\setminus \,R\right)\right]} ( L △ △ L 2 ) × × R = [ ( L ∖ ∖ L 2 ) × × R ] ∪ ∪ [ ( L 2 ∖ ∖ L ) × × R ] {\displaystyle \left(L\,\triangle \,L_{2}\right)\times R~=~\left[\left(L\,\setminus \,L_{2}\right)\times R\right]\,\cup \,\left[\left(L_{2}\,\setminus \,L\right)\times R\right]} ( L △ △ L 2 ) × × ( R △ △ R 2 ) = [ ( L ∪ ∪ L 2 ) × × ( R ∪ ∪ R 2 ) ] ∖ ∖ [ ( ( L ∩ ∩ L 2 ) × × R ) ∪ ∪ ( L × × ( R ∩ ∩ R 2 ) ) ] = [ ( L ∖ ∖ L 2 ) × × ( R 2 ∖ ∖ R ) ] ∪ ∪ [ ( L 2 ∖ ∖ L ) × × ( R 2 ∖ ∖ R ) ] ∪ ∪ [ ( L ∖ ∖ L 2 ) × × ( R ∖ ∖ R 2 ) ] ∪ ∪ [ ( L 2 ∖ ∖ L ) ∪ ∪ ( R ∖ ∖ R 2 ) ] {\displaystyle {\begin{alignedat}{4}\left(L\,\triangle \,L_{2}\right)\times \left(R\,\triangle \,R_{2}\right)~&=~&&&&\,\left[\left(L\cup L_{2}\right)\times \left(R\cup R_{2}\right)\right]\;\setminus \;\left[\left(\left(L\cap L_{2}\right)\times R\right)\;\cup \;\left(L\times \left(R\cap R_{2}\right)\right)\right]\\[0.7ex]&=~&&&&\,\left[\left(L\,\setminus \,L_{2}\right)\times \left(R_{2}\,\setminus \,R\right)\right]\,\cup \,\left[\left(L_{2}\,\setminus \,L\right)\times \left(R_{2}\,\setminus \,R\right)\right]\,\cup \,\left[\left(L\,\setminus \,L_{2}\right)\times \left(R\,\setminus \,R_{2}\right)\right]\,\cup \,\left[\left(L_{2}\,\setminus \,L\right)\cup \left(R\,\setminus \,R_{2}\right)\right]\\\end{alignedat}}} ( L △ △ L 2 ) × × ( M △ △ M 2 ) × × ( R △ △ R 2 ) = [ ( L ∪ ∪ L 2 ) × × ( M ∪ ∪ M 2 ) × × ( R ∪ ∪ R 2 ) ] ∖ ∖ [ ( ( L ∩ ∩ L 2 ) × × M × × R ) ∪ ∪ ( L × × ( M ∩ ∩ M 2 ) × × R ) ∪ ∪ ( L × × M × × ( R ∩ ∩ R 2 ) ) ] {\displaystyle {\begin{alignedat}{4}\left(L\,\triangle \,L_{2}\right)\times \left(M\,\triangle \,M_{2}\right)\times \left(R\,\triangle \,R_{2}\right)~&=~\left[\left(L\cup L_{2}\right)\times \left(M\cup M_{2}\right)\times \left(R\cup R_{2}\right)\right]\;\setminus \;\left[\left(\left(L\cap L_{2}\right)\times M\times R\right)\;\cup \;\left(L\times \left(M\cap M_{2}\right)\times R\right)\;\cup \;\left(L\times M\times \left(R\cap R_{2}\right)\right)\right]\\\end{alignedat}}} In general, ( L △ △ L 2 ) × × ( R △ △ R 2 ) {\displaystyle \left(L\,\triangle \,L_{2}\right)\times \left(R\,\triangle \,R_{2}\right)} need not be a subset nor a superset of ( L × × R ) △ △ ( L 2 × × R 2 ) .

{\displaystyle \left(L\times R\right)\,\triangle \,\left(L_{2}\times R_{2}\right).} ( L × × R ) △ △ ( L 2 × × R 2 ) = ( L × × R ) ∪ ∪ ( L 2 × × R 2 ) ∖ ∖ [ ( L ∩ ∩ L 2 ) × × ( R ∩ ∩ R 2 ) ] {\displaystyle {\begin{alignedat}{4}\left(L\times R\right)\,\triangle \,\left(L_{2}\times R_{2}\right)~&=~&&\left(L\times R\right)\cup \left(L_{2}\times R_{2}\right)\;\setminus \;\left[\left(L\cap L_{2}\right)\times \left(R\cap R_{2}\right)\right]\\[0.7ex]\end{alignedat}}} ( L × × M × × R ) △ △ ( L 2 × × M 2 × × R 2 ) = ( L × × M × × R ) ∪ ∪ ( L 2 × × M 2 × × R 2 ) ∖ ∖ [ ( L ∩ ∩ L 2 ) × × ( M ∩ ∩ M 2 ) × × ( R ∩ ∩ R 2 ) ] {\displaystyle {\begin{alignedat}{4}\left(L\times M\times R\right)\,\triangle \,\left(L_{2}\times M_{2}\times R_{2}\right)~&=~&&\left(L\times M\times R\right)\cup \left(L_{2}\times M_{2}\times R_{2}\right)\;\setminus \;\left[\left(L\cap L_{2}\right)\times \left(M\cap M_{2}\right)\times \left(R\cap R_{2}\right)\right]\\[0.7ex]\end{alignedat}}} Arbitrary families of sets [ edit ] Let ( L i ) i ∈ ∈ I , {\displaystyle \left(L_{i}\right)_{i\in I},} ( R j ) j ∈ ∈ J , {\displaystyle \left(R_{j}\right)_{j\in J},} and ( S i , j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J}} be indexed families of sets . Whenever the assumption is needed, then all indexing sets , such as I {\displaystyle I} and J , {\displaystyle J,} are assumed to be non-empty.

Definitions [ edit ] A family of sets or (more briefly) a family refers to a set whose elements are sets.

An indexed family of sets is a function from some set, called its indexing set , into some family of sets. 
An indexed family of sets will be denoted by ( L i ) i ∈ ∈ I , {\displaystyle \left(L_{i}\right)_{i\in I},} where this notation assigns the symbol I {\displaystyle I} for the indexing set and for every index i ∈ ∈ I , {\displaystyle i\in I,} assigns the symbol L i {\displaystyle L_{i}} to the value of the function at i .

{\displaystyle i.} The function itself may then be denoted by the symbol L ∙ ∙ , {\displaystyle L_{\bullet },} which is obtained from the notation ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} by replacing the index i {\displaystyle i} with a bullet symbol ∙ ∙ ; {\displaystyle \bullet \,;} explicitly, L ∙ ∙ {\displaystyle L_{\bullet }} is the function: L ∙ ∙ : I → → { L i : i ∈ ∈ I } i ↦ ↦ L i {\displaystyle {\begin{alignedat}{4}L_{\bullet }:\;&&I&&\;\to \;&\left\{L_{i}:i\in I\right\}\\[0.3ex]&&i&&\;\mapsto \;&L_{i}\\\end{alignedat}}} which may be summarized by writing L ∙ ∙ = ( L i ) i ∈ ∈ I .

{\displaystyle L_{\bullet }=\left(L_{i}\right)_{i\in I}.} Any given indexed family of sets L ∙ ∙ = ( L i ) i ∈ ∈ I {\displaystyle L_{\bullet }=\left(L_{i}\right)_{i\in I}} (which is a function ) can be canonically associated with its image/range Im ⁡ ⁡ L ∙ ∙ = def { L i : i ∈ ∈ I } {\displaystyle \operatorname {Im} L_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\left\{L_{i}:i\in I\right\}} (which is a family of sets). 
Conversely, any given family of sets B {\displaystyle {\mathcal {B}}} may be associated with the B {\displaystyle {\mathcal {B}}} -indexed family of sets ( B ) B ∈ ∈ B , {\displaystyle (B)_{B\in {\mathcal {B}}},} which is technically the identity map B → → B .

{\displaystyle {\mathcal {B}}\to {\mathcal {B}}.} However, this is not a bijective correspondence because an indexed family of sets L ∙ ∙ = ( L i ) i ∈ ∈ I {\displaystyle L_{\bullet }=\left(L_{i}\right)_{i\in I}} is not required to be injective (that is, there may exist distinct indices i ≠ ≠ j {\displaystyle i\neq j} such as L i = L j {\displaystyle L_{i}=L_{j}} ), which in particular means that it is possible for distinct indexed families of sets (which are functions) to be associated with the same family of sets (by having the same image/range).

Arbitrary unions defined [ 3 ] ⋃ ⋃ i ∈ ∈ I L i = def { x : there exists i ∈ ∈ I such that x ∈ ∈ L i } {\displaystyle \bigcup _{i\in I}L_{i}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{x~:~{\text{ there exists }}i\in I{\text{ such that }}x\in L_{i}\}} Def. 1 If I = ∅ ∅ {\displaystyle I=\varnothing } then ⋃ ⋃ i ∈ ∈ ∅ ∅ L i = { x : there exists i ∈ ∈ ∅ ∅ such that x ∈ ∈ L i } = ∅ ∅ , {\displaystyle \bigcup _{i\in \varnothing }L_{i}=\{x~:~{\text{ there exists }}i\in \varnothing {\text{ such that }}x\in L_{i}\}=\varnothing ,} which is somethings called the nullary union convention (despite being called a convention, this equality follows from the definition).

If B {\displaystyle {\mathcal {B}}} is a family of sets then ∪ ∪ B {\displaystyle \cup {\mathcal {B}}} denotes the set: ⋃ ⋃ B = def ⋃ ⋃ B ∈ ∈ B B = def { x : there exists B ∈ ∈ B such that x ∈ ∈ B } .

{\displaystyle \bigcup {\mathcal {B}}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcup _{B\in {\mathcal {B}}}B~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{x~:~{\text{ there exists }}B\in {\mathcal {B}}{\text{ such that }}x\in B\}.} Arbitrary intersections defined If I ≠ ≠ ∅ ∅ {\displaystyle I\neq \varnothing } then [ 3 ] ⋂ ⋂ i ∈ ∈ I L i = def { x : x ∈ ∈ L i for every i ∈ ∈ I } = { x : for all i , if i ∈ ∈ I then x ∈ ∈ L i } .

{\displaystyle \bigcap _{i\in I}L_{i}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{x~:~x\in L_{i}{\text{ for every }}i\in I\}~=~\{x~:~{\text{ for all }}i,{\text{ if }}i\in I{\text{ then }}x\in L_{i}\}.} Def. 2 If B ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {B}}\neq \varnothing } is a non-empty family of sets then ∩ ∩ B {\displaystyle \cap {\mathcal {B}}} denotes the set: ⋂ ⋂ B = def ⋂ ⋂ B ∈ ∈ B B = def { x : x ∈ ∈ B for every B ∈ ∈ B } = { x : for all B , if B ∈ ∈ B then x ∈ ∈ B } .

{\displaystyle \bigcap {\mathcal {B}}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcap _{B\in B}B~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{x~:~x\in B{\text{ for every }}B\in {\mathcal {B}}\}~=~\{x~:~{\text{ for all }}B,{\text{ if }}B\in {\mathcal {B}}{\text{ then }}x\in B\}.} Nullary intersections If I = ∅ ∅ {\displaystyle I=\varnothing } then ⋂ ⋂ i ∈ ∈ ∅ ∅ L i = { x : for all i , if i ∈ ∈ ∅ ∅ then x ∈ ∈ L i } {\displaystyle \bigcap _{i\in \varnothing }L_{i}=\{x~:~{\text{ for all }}i,{\text{ if }}i\in \varnothing {\text{ then }}x\in L_{i}\}} where every possible thing x {\displaystyle x} in the universe vacuously satisfied the condition: "if i ∈ ∈ ∅ ∅ {\displaystyle i\in \varnothing } then x ∈ ∈ L i {\displaystyle x\in L_{i}} ". Consequently, ⋂ ⋂ i ∈ ∈ ∅ ∅ L i = { x : true } {\displaystyle {\textstyle \bigcap \limits _{i\in \varnothing }}L_{i}=\{x:{\text{ true }}\}} consists of everything in the universe.

So if I = ∅ ∅ {\displaystyle I=\varnothing } and: if you are working in a model in which there exists some universe set X {\displaystyle X} then ⋂ ⋂ i ∈ ∈ ∅ ∅ L i = { x : x ∈ ∈ L i for every i ∈ ∈ ∅ ∅ } = X .

{\displaystyle {\textstyle \bigcap \limits _{i\in \varnothing }}L_{i}=\{x~:~x\in L_{i}{\text{ for every }}i\in \varnothing \}~=~X.} otherwise, if you are working in a model in which "the class of all things x {\displaystyle x} " is not a set (by far the most common situation) then ⋂ ⋂ i ∈ ∈ ∅ ∅ L i {\displaystyle {\textstyle \bigcap \limits _{i\in \varnothing }}L_{i}} is undefined because ⋂ ⋂ i ∈ ∈ ∅ ∅ L i {\displaystyle {\textstyle \bigcap \limits _{i\in \varnothing }}L_{i}} consists of everything , which makes ⋂ ⋂ i ∈ ∈ ∅ ∅ L i {\displaystyle {\textstyle \bigcap \limits _{i\in \varnothing }}L_{i}} a proper class and not a set.

Assumption : Henceforth, whenever a formula requires some indexing set to be non-empty in order for an arbitrary intersection to be well-defined, then this will automatically be assumed without mention.

A consequence of this is the following assumption/definition: A finite intersection of sets or an intersection of finitely many sets refers to the intersection of a finite collection of one or more sets.

Some authors adopt the so called nullary intersection convention , which is the convention that an empty intersection of sets is equal to some canonical set. In particular, if all sets are subsets of some set X {\displaystyle X} then some author may declare that the empty intersection of these sets be equal to X .

{\displaystyle X.} However, the nullary intersection convention is not as commonly accepted as the nullary union convention and this article will not adopt it (this is due to the fact that unlike the empty union, the value of the empty intersection depends on X {\displaystyle X} so if there are multiple sets under consideration, which is commonly the case, then the value of the empty intersection risks becoming ambiguous).

Multiple index sets ⋃ ⋃ j ∈ ∈ J i ∈ ∈ I , S i , j = def ⋃ ⋃ ( i , j ) ∈ ∈ I × × J S i , j {\displaystyle \bigcup _{\stackrel {i\in I,}{j\in J}}S_{i,j}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcup _{(i,j)\in I\times J}S_{i,j}} ⋂ ⋂ j ∈ ∈ J i ∈ ∈ I , S i , j = def ⋂ ⋂ ( i , j ) ∈ ∈ I × × J S i , j {\displaystyle \bigcap _{\stackrel {i\in I,}{j\in J}}S_{i,j}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcap _{(i,j)\in I\times J}S_{i,j}} Distributing unions and intersections [ edit ] Binary ⋂ of arbitrary ⋃'s [ edit ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∩ ∩ R = ⋃ ⋃ i ∈ ∈ I ( L i ∩ ∩ R ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\cap R~=~\bigcup _{i\in I}\left(L_{i}\cap R\right)} Eq. 3a and [ 4 ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∩ ∩ ( ⋃ ⋃ j ∈ ∈ J R j ) = ⋃ ⋃ j ∈ ∈ J i ∈ ∈ I , ( L i ∩ ∩ R j ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\cap \left(\bigcup _{j\in J}R_{j}\right)~=~\bigcup _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\cap R_{j}\right)} Eq. 3b If all ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} are pairwise disjoint and all ( R j ) j ∈ ∈ J {\displaystyle \left(R_{j}\right)_{j\in J}} are also pairwise disjoint, then so are all ( L i ∩ ∩ R j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(L_{i}\cap R_{j}\right)_{(i,j)\in I\times J}} (that is, if ( i , j ) ≠ ≠ ( i 2 , j 2 ) {\displaystyle (i,j)\neq \left(i_{2},j_{2}\right)} then ( L i ∩ ∩ R j ) ∩ ∩ ( L i 2 ∩ ∩ R j 2 ) = ∅ ∅ {\displaystyle \left(L_{i}\cap R_{j}\right)\cap \left(L_{i_{2}}\cap R_{j_{2}}\right)=\varnothing } ).

Importantly , if I = J {\displaystyle I=J} then in general, ( ⋃ ⋃ i ∈ ∈ I L i ) ∩ ∩ ( ⋃ ⋃ i ∈ ∈ I R i ) ≠ ≠ ⋃ ⋃ i ∈ ∈ I ( L i ∩ ∩ R i ) {\displaystyle ~\left(\bigcup _{i\in I}L_{i}\right)\cap \left(\bigcup _{i\in I}R_{i}\right)~~\color {Red}{\neq }\color {Black}{}~~\bigcup _{i\in I}\left(L_{i}\cap R_{i}\right)~} (an example of this is given below).  The single union on the right hand side must be over all pairs ( i , j ) ∈ ∈ I × × I : {\displaystyle (i,j)\in I\times I:} ( ⋃ ⋃ i ∈ ∈ I L i ) ∩ ∩ ( ⋃ ⋃ i ∈ ∈ I R i ) = ⋃ ⋃ j ∈ ∈ I i ∈ ∈ I , ( L i ∩ ∩ R j ) .

{\displaystyle ~\left(\bigcup _{i\in I}L_{i}\right)\cap \left(\bigcup _{i\in I}R_{i}\right)~~=~~\bigcup _{\stackrel {i\in I,}{j\in I}}\left(L_{i}\cap R_{j}\right).~} The same is usually true for other similar non-trivial set equalities and relations that depend on two (potentially unrelated) indexing sets I {\displaystyle I} and J {\displaystyle J} (such as Eq. 4b or Eq. 7g [ 4 ] ). Two exceptions are Eq. 2c (unions of unions) and Eq. 2d (intersections of intersections), but both of these are among the most trivial of set equalities (although even for these equalities there is still something that must be proven [ note 2 ] ).

Example where equality fails : Let X ≠ ≠ ∅ ∅ {\displaystyle X\neq \varnothing } and let I = { 1 , 2 } .

{\displaystyle I=\{1,2\}.} Let L 1 : : = R 2 : : = X {\displaystyle L_{1}\colon =R_{2}\colon =X} and let L 2 : : = R 1 : : = ∅ ∅ .

{\displaystyle L_{2}\colon =R_{1}\colon =\varnothing .} Then X = X ∩ ∩ X = ( L 1 ∪ ∪ L 2 ) ∩ ∩ ( R 2 ∪ ∪ R 2 ) = ( ⋃ ⋃ i ∈ ∈ I L i ) ∩ ∩ ( ⋃ ⋃ i ∈ ∈ I R i ) ≠ ≠ ⋃ ⋃ i ∈ ∈ I ( L i ∩ ∩ R i ) = ( L 1 ∩ ∩ R 1 ) ∪ ∪ ( L 2 ∩ ∩ R 2 ) = ∅ ∅ ∪ ∪ ∅ ∅ = ∅ ∅ .

{\displaystyle X=X\cap X=\left(L_{1}\cup L_{2}\right)\cap \left(R_{2}\cup R_{2}\right)=\left(\bigcup _{i\in I}L_{i}\right)\cap \left(\bigcup _{i\in I}R_{i}\right)~\neq ~\bigcup _{i\in I}\left(L_{i}\cap R_{i}\right)=\left(L_{1}\cap R_{1}\right)\cup \left(L_{2}\cap R_{2}\right)=\varnothing \cup \varnothing =\varnothing .} Furthermore, ∅ ∅ = ∅ ∅ ∪ ∪ ∅ ∅ = ( L 1 ∩ ∩ L 2 ) ∪ ∪ ( R 2 ∩ ∩ R 2 ) = ( ⋂ ⋂ i ∈ ∈ I L i ) ∪ ∪ ( ⋂ ⋂ i ∈ ∈ I R i ) ≠ ≠ ⋂ ⋂ i ∈ ∈ I ( L i ∪ ∪ R i ) = ( L 1 ∪ ∪ R 1 ) ∩ ∩ ( L 2 ∪ ∪ R 2 ) = X ∩ ∩ X = X .

{\displaystyle \varnothing =\varnothing \cup \varnothing =\left(L_{1}\cap L_{2}\right)\cup \left(R_{2}\cap R_{2}\right)=\left(\bigcap _{i\in I}L_{i}\right)\cup \left(\bigcap _{i\in I}R_{i}\right)~\neq ~\bigcap _{i\in I}\left(L_{i}\cup R_{i}\right)=\left(L_{1}\cup R_{1}\right)\cap \left(L_{2}\cup R_{2}\right)=X\cap X=X.} Binary ⋃ of arbitrary ⋂'s [ edit ] ( ⋂ ⋂ i ∈ ∈ I L i ) ∪ ∪ R = ⋂ ⋂ i ∈ ∈ I ( L i ∪ ∪ R ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\cup R~=~\bigcap _{i\in I}\left(L_{i}\cup R\right)} Eq. 4a and [ 4 ] ( ⋂ ⋂ i ∈ ∈ I L i ) ∪ ∪ ( ⋂ ⋂ j ∈ ∈ J R j ) = ⋂ ⋂ j ∈ ∈ J i ∈ ∈ I , ( L i ∪ ∪ R j ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\cup \left(\bigcap _{j\in J}R_{j}\right)~=~\bigcap _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\cup R_{j}\right)} Eq. 4b Importantly , if I = J {\displaystyle I=J} then in general, ( ⋂ ⋂ i ∈ ∈ I L i ) ∪ ∪ ( ⋂ ⋂ i ∈ ∈ I R i ) ≠ ≠ ⋂ ⋂ i ∈ ∈ I ( L i ∪ ∪ R i ) {\displaystyle ~\left(\bigcap _{i\in I}L_{i}\right)\cup \left(\bigcap _{i\in I}R_{i}\right)~~\color {Red}{\neq }\color {Black}{}~~\bigcap _{i\in I}\left(L_{i}\cup R_{i}\right)~} (an example of this is given above).  The single intersection on the right hand side must be over all pairs ( i , j ) ∈ ∈ I × × I : {\displaystyle (i,j)\in I\times I:} ( ⋂ ⋂ i ∈ ∈ I L i ) ∪ ∪ ( ⋂ ⋂ i ∈ ∈ I R i ) = ⋂ ⋂ j ∈ ∈ I i ∈ ∈ I , ( L i ∪ ∪ R j ) .

{\displaystyle ~\left(\bigcap _{i\in I}L_{i}\right)\cup \left(\bigcap _{i\in I}R_{i}\right)~~=~~\bigcap _{\stackrel {i\in I,}{j\in I}}\left(L_{i}\cup R_{j}\right).~} Arbitrary ⋂'s and arbitrary ⋃'s [ edit ] Incorrectly distributing by swapping ⋂ and ⋃ [ edit ] Naively swapping ⋃ ⋃ i ∈ ∈ I {\displaystyle \;{\textstyle \bigcup \limits _{i\in I}}\;} and ⋂ ⋂ j ∈ ∈ J {\displaystyle \;{\textstyle \bigcap \limits _{j\in J}}\;} may produce a different set The following inclusion always holds: ⋃ ⋃ i ∈ ∈ I ( ⋂ ⋂ j ∈ ∈ J S i , j ) ⊆ ⊆ ⋂ ⋂ j ∈ ∈ J ( ⋃ ⋃ i ∈ ∈ I S i , j ) {\displaystyle \bigcup _{i\in I}\left(\bigcap _{j\in J}S_{i,j}\right)~~\color {Red}{\subseteq }\color {Black}{}~~\bigcap _{j\in J}\left(\bigcup _{i\in I}S_{i,j}\right)} Inclusion 1 ∪∩ is a subset of ∩∪ In general, equality need not hold and moreover, the right hand side depends on how for each fixed i ∈ ∈ I , {\displaystyle i\in I,} the sets ( S i , j ) j ∈ ∈ J {\displaystyle \left(S_{i,j}\right)_{j\in J}} are labelled; and analogously, the left hand side depends on how for each fixed j ∈ ∈ J , {\displaystyle j\in J,} the sets ( S i , j ) i ∈ ∈ I {\displaystyle \left(S_{i,j}\right)_{i\in I}} are labelled. An example demonstrating this is now given.

Example of dependence on labeling and failure of equality : To see why equality need not hold when ∪ ∪ {\displaystyle \cup } and ∩ ∩ {\displaystyle \cap } are swapped, let I : : = J : : = { 1 , 2 } , {\displaystyle I\colon =J\colon =\{1,2\},} and let S 11 = { 1 , 2 } , S 12 = { 1 , 3 } , S 21 = { 3 , 4 } , {\displaystyle S_{11}=\{1,2\},~S_{12}=\{1,3\},~S_{21}=\{3,4\},} and S 22 = { 2 , 4 } .

{\displaystyle S_{22}=\{2,4\}.} Then { 1 , 4 } = { 1 } ∪ ∪ { 4 } = ( S 11 ∩ ∩ S 12 ) ∪ ∪ ( S 21 ∩ ∩ S 22 ) = ⋃ ⋃ i ∈ ∈ I ( ⋂ ⋂ j ∈ ∈ J S i , j ) ≠ ≠ ⋂ ⋂ j ∈ ∈ J ( ⋃ ⋃ i ∈ ∈ I S i , j ) = ( S 11 ∪ ∪ S 21 ) ∩ ∩ ( S 12 ∪ ∪ S 22 ) = { 1 , 2 , 3 , 4 } .

{\displaystyle \{1,4\}=\{1\}\cup \{4\}=\left(S_{11}\cap S_{12}\right)\cup \left(S_{21}\cap S_{22}\right)=\bigcup _{i\in I}\left(\bigcap _{j\in J}S_{i,j}\right)~\neq ~\bigcap _{j\in J}\left(\bigcup _{i\in I}S_{i,j}\right)=\left(S_{11}\cup S_{21}\right)\cap \left(S_{12}\cup S_{22}\right)=\{1,2,3,4\}.} If S 11 {\displaystyle S_{11}} and S 21 {\displaystyle S_{21}} are swapped while S 12 {\displaystyle S_{12}} and S 22 {\displaystyle S_{22}} are unchanged, which gives rise to the sets S ^ ^ 11 : : = { 3 , 4 } , S ^ ^ 12 : : = { 1 , 3 } , S ^ ^ 21 : : = { 1 , 2 } , {\displaystyle {\hat {S}}_{11}\colon =\{3,4\},~{\hat {S}}_{12}\colon =\{1,3\},~{\hat {S}}_{21}\colon =\{1,2\},} and S ^ ^ 22 : : = { 2 , 4 } , {\displaystyle {\hat {S}}_{22}\colon =\{2,4\},} then { 2 , 3 } = { 3 } ∪ ∪ { 2 } = ( S ^ ^ 11 ∩ ∩ S ^ ^ 12 ) ∪ ∪ ( S ^ ^ 21 ∩ ∩ S ^ ^ 22 ) = ⋃ ⋃ i ∈ ∈ I ( ⋂ ⋂ j ∈ ∈ J S ^ ^ i , j ) ≠ ≠ ⋂ ⋂ j ∈ ∈ J ( ⋃ ⋃ i ∈ ∈ I S ^ ^ i , j ) = ( S ^ ^ 11 ∪ ∪ S ^ ^ 21 ) ∩ ∩ ( S ^ ^ 12 ∪ ∪ S ^ ^ 22 ) = { 1 , 2 , 3 , 4 } .

{\displaystyle \{2,3\}=\{3\}\cup \{2\}=\left({\hat {S}}_{11}\cap {\hat {S}}_{12}\right)\cup \left({\hat {S}}_{21}\cap {\hat {S}}_{22}\right)=\bigcup _{i\in I}\left(\bigcap _{j\in J}{\hat {S}}_{i,j}\right)~\neq ~\bigcap _{j\in J}\left(\bigcup _{i\in I}{\hat {S}}_{i,j}\right)=\left({\hat {S}}_{11}\cup {\hat {S}}_{21}\right)\cap \left({\hat {S}}_{12}\cup {\hat {S}}_{22}\right)=\{1,2,3,4\}.} In particular, the left hand side is no longer { 1 , 4 } , {\displaystyle \{1,4\},} which shows that the left hand side ⋃ ⋃ i ∈ ∈ I ⋂ ⋂ j ∈ ∈ J S i , j {\displaystyle {\textstyle \bigcup \limits _{i\in I}}\;{\textstyle \bigcap \limits _{j\in J}}S_{i,j}} depends on how the sets are labelled. 
If instead S 11 {\displaystyle S_{11}} and S 12 {\displaystyle S_{12}} are swapped while S 21 {\displaystyle S_{21}} and S 22 {\displaystyle S_{22}} are unchanged, which gives rise to the sets S ¯ ¯ 11 : : = { 1 , 3 } , S ¯ ¯ 12 : : = { 1 , 2 } , S ¯ ¯ 21 : : = { 3 , 4 } , {\displaystyle {\overline {S}}_{11}\colon =\{1,3\},~{\overline {S}}_{12}\colon =\{1,2\},~{\overline {S}}_{21}\colon =\{3,4\},} and S ¯ ¯ 22 : : = { 2 , 4 } , {\displaystyle {\overline {S}}_{22}\colon =\{2,4\},} then both the left hand side and right hand side are equal to { 1 , 4 } , {\displaystyle \{1,4\},} which shows that the right hand side also depends on how the sets are labeled.

Equality in Inclusion 1 ∪∩ is a subset of ∩∪ can hold under certain circumstances, such as in 7e , which is the special case where ( S i , j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J}} is ( L i ∖ ∖ R j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(L_{i}\setminus R_{j}\right)_{(i,j)\in I\times J}} (that is, S i , j : : = L i ∖ ∖ R j {\displaystyle S_{i,j}\colon =L_{i}\setminus R_{j}} with the same indexing sets I {\displaystyle I} and J {\displaystyle J} ), or such as in 7f , which is the special case where ( S i , j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J}} is ( L i ∖ ∖ R j ) ( j , i ) ∈ ∈ J × × I {\displaystyle \left(L_{i}\setminus R_{j}\right)_{(j,i)\in J\times I}} (that is, S ^ ^ j , i : : = L i ∖ ∖ R j {\displaystyle {\hat {S}}_{j,i}\colon =L_{i}\setminus R_{j}} with the indexing sets I {\displaystyle I} and J {\displaystyle J} swapped).
For a correct formula that extends the distributive laws, an approach other than just switching ∪ ∪ {\displaystyle \cup } and ∩ ∩ {\displaystyle \cap } is needed.

Correct distributive laws [ edit ] Suppose that for each i ∈ ∈ I , {\displaystyle i\in I,} J i {\displaystyle J_{i}} is a non-empty index set and for each j ∈ ∈ J i , {\displaystyle j\in J_{i},} let T i , j {\displaystyle T_{i,j}} be any set (for example, to apply this law to ( S i , j ) ( i , j ) ∈ ∈ I × × J , {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J},} use J i : : = J {\displaystyle J_{i}\colon =J} for all i ∈ ∈ I {\displaystyle i\in I} and use T i , j : : = S i , j {\displaystyle T_{i,j}\colon =S_{i,j}} for all i ∈ ∈ I {\displaystyle i\in I} and all j ∈ ∈ J i = J {\displaystyle j\in J_{i}=J} ). Let ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i {\displaystyle {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\prod _{i\in I}J_{i}} denote the Cartesian product , which can be interpreted as the set of all functions f : I → → ⋃ ⋃ i ∈ ∈ I J i {\displaystyle f~:~I~\to ~{\textstyle \bigcup \limits _{i\in I}}J_{i}} such that f ( i ) ∈ ∈ J i {\displaystyle f(i)\in J_{i}} for every i ∈ ∈ I .

{\displaystyle i\in I.} Such a function may also be denoted using the tuple notation ( f i ) i ∈ ∈ I {\displaystyle \left(f_{i}\right)_{i\in I}} where f i = def f ( i ) {\displaystyle f_{i}~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~f(i)} for every i ∈ ∈ I {\displaystyle i\in I} and conversely, a tuple ( f i ) i ∈ ∈ I {\displaystyle \left(f_{i}\right)_{i\in I}} is just notation for the function with domain I {\displaystyle I} whose value at i ∈ ∈ I {\displaystyle i\in I} is f i ; {\displaystyle f_{i};} both notations can be used to denote the elements of ∏ ∏ J ∙ ∙ .

{\displaystyle {\textstyle \prod }J_{\bullet }.} Then ⋂ ⋂ i ∈ ∈ I [ ⋃ ⋃ j ∈ ∈ J i T i , j ] = ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ [ ⋂ ⋂ i ∈ ∈ I T i , f ( i ) ] {\displaystyle \bigcap _{i\in I}\left[\;\bigcup _{j\in J_{i}}T_{i,j}\right]=\bigcup _{f\in \prod J_{\bullet }}\left[\;\bigcap _{i\in I}T_{i,f(i)}\right]} Eq. 5 ∩∪ to ∪∩ ⋃ ⋃ i ∈ ∈ I [ ⋂ ⋂ j ∈ ∈ J i T i , j ] = ⋂ ⋂ f ∈ ∈ ∏ ∏ J ∙ ∙ [ ⋃ ⋃ i ∈ ∈ I T i , f ( i ) ] {\displaystyle \bigcup _{i\in I}\left[\;\bigcap _{j\in J_{i}}T_{i,j}\right]=\bigcap _{f\in \prod J_{\bullet }}\left[\;\bigcup _{i\in I}T_{i,f(i)}\right]} Eq. 6 ∪∩ to ∩∪ where ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i .

{\displaystyle {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~{\textstyle \prod \limits _{i\in I}}J_{i}.} Applying the distributive laws [ edit ] Example application : In the particular case where all J i {\displaystyle J_{i}} are equal (that is, J i = J i 2 {\displaystyle J_{i}=J_{i_{2}}} for all i , i 2 ∈ ∈ I , {\displaystyle i,i_{2}\in I,} which is the case with the family ( S i , j ) ( i , j ) ∈ ∈ I × × J , {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J},} for example), then letting J {\displaystyle J} denote this common set, the Cartesian product will be ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i = ∏ ∏ i ∈ ∈ I J = J I , {\displaystyle {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~{\textstyle \prod \limits _{i\in I}}J_{i}={\textstyle \prod \limits _{i\in I}}J=J^{I},} which is the set of all functions of the form f : I → → J .

{\displaystyle f~:~I~\to ~J.} The above set equalities Eq. 5 ∩∪ to ∪∩ and Eq. 6 ∪∩ to ∩∪ , respectively become: [ 3 ] ⋂ ⋂ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J S i , j = ⋃ ⋃ f ∈ ∈ J I ⋂ ⋂ i ∈ ∈ I S i , f ( i ) {\displaystyle \bigcap _{i\in I}\;\bigcup _{j\in J}S_{i,j}=\bigcup _{f\in J^{I}}\;\bigcap _{i\in I}S_{i,f(i)}} ⋃ ⋃ i ∈ ∈ I ⋂ ⋂ j ∈ ∈ J S i , j = ⋂ ⋂ f ∈ ∈ J I ⋃ ⋃ i ∈ ∈ I S i , f ( i ) {\displaystyle \bigcup _{i\in I}\;\bigcap _{j\in J}S_{i,j}=\bigcap _{f\in J^{I}}\;\bigcup _{i\in I}S_{i,f(i)}} which when combined with Inclusion 1 ∪∩ is a subset of ∩∪ implies: ⋃ ⋃ i ∈ ∈ I ⋂ ⋂ j ∈ ∈ J S i , j = ⋂ ⋂ f ∈ ∈ J I ⋃ ⋃ i ∈ ∈ I S i , f ( i ) ⊆ ⊆ ⋃ ⋃ g ∈ ∈ I J ⋂ ⋂ j ∈ ∈ J S g ( j ) , j = ⋂ ⋂ j ∈ ∈ J ⋃ ⋃ i ∈ ∈ I S i , j {\displaystyle \bigcup _{i\in I}\;\bigcap _{j\in J}S_{i,j}~=~\bigcap _{f\in J^{I}}\;\bigcup _{i\in I}S_{i,f(i)}~~\color {Red}{\subseteq }\color {Black}{}~~\bigcup _{g\in I^{J}}\;\bigcap _{j\in J}S_{g(j),j}~=~\bigcap _{j\in J}\;\bigcup _{i\in I}S_{i,j}} where on the left hand side, the indices f and i {\displaystyle f{\text{ and }}i} range over f ∈ ∈ J I and i ∈ ∈ I {\displaystyle f\in J^{I}{\text{ and }}i\in I} (so the subscripts of S i , f ( i ) {\displaystyle S_{i,f(i)}} range over i ∈ ∈ I and f ( i ) ∈ ∈ f ( I ) ⊆ ⊆ J {\displaystyle i\in I{\text{ and }}f(i)\in f(I)\subseteq J} ) on the right hand side, the indices g and j {\displaystyle g{\text{ and }}j} range over g ∈ ∈ I J and j ∈ ∈ J {\displaystyle g\in I^{J}{\text{ and }}j\in J} (so the subscripts of S g ( j ) , j {\displaystyle S_{g(j),j}} range over j ∈ ∈ J and g ( j ) ∈ ∈ g ( J ) ⊆ ⊆ I {\displaystyle j\in J{\text{ and }}g(j)\in g(J)\subseteq I} ).

Example application : To apply the general formula to the case of ( C k ) k ∈ ∈ K {\displaystyle \left(C_{k}\right)_{k\in K}} and ( D l ) l ∈ ∈ L , {\displaystyle \left(D_{l}\right)_{l\in L},} use I : : = { 1 , 2 } , {\displaystyle I\colon =\{1,2\},} J 1 : : = K , {\displaystyle J_{1}\colon =K,} J 2 : : = L , {\displaystyle J_{2}\colon =L,} and let T 1 , k : : = C k {\displaystyle T_{1,k}\colon =C_{k}} for all k ∈ ∈ J 1 {\displaystyle k\in J_{1}} and let T 2 , l : : = D l {\displaystyle T_{2,l}\colon =D_{l}} for all l ∈ ∈ J 2 .

{\displaystyle l\in J_{2}.} Every map f ∈ ∈ ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i = J 1 × × J 2 = K × × L {\displaystyle f\in {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~{\textstyle \prod \limits _{i\in I}}J_{i}=J_{1}\times J_{2}=K\times L} can be bijectively identified with the pair ( f ( 1 ) , f ( 2 ) ) ∈ ∈ K × × L {\displaystyle \left(f(1),f(2)\right)\in K\times L} (the inverse sends ( k , l ) ∈ ∈ K × × L {\displaystyle (k,l)\in K\times L} to the map f ( k , l ) ∈ ∈ ∏ ∏ J ∙ ∙ {\displaystyle f_{(k,l)}\in {\textstyle \prod }J_{\bullet }} defined by 1 ↦ ↦ k {\displaystyle 1\mapsto k} and 2 ↦ ↦ l ; {\displaystyle 2\mapsto l;} this is technically just a change of notation). Recall that Eq. 5 ∩∪ to ∪∩ was ⋂ ⋂ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J i T i , j = ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ ⋂ ⋂ i ∈ ∈ I T i , f ( i ) .

{\displaystyle ~\bigcap _{i\in I}\;\bigcup _{j\in J_{i}}T_{i,j}=\bigcup _{f\in {\textstyle \prod }J_{\bullet }}\;\bigcap _{i\in I}T_{i,f(i)}.~} Expanding and simplifying the left hand side gives ⋂ ⋂ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J i T i , j = ( ⋃ ⋃ j ∈ ∈ J 1 T 1 , j ) ∩ ∩ ( ⋃ ⋃ j ∈ ∈ J 2 T 2 , j ) = ( ⋃ ⋃ k ∈ ∈ K T 1 , k ) ∩ ∩ ( ⋃ ⋃ l ∈ ∈ L T 2 , l ) = ( ⋃ ⋃ k ∈ ∈ K C k ) ∩ ∩ ( ⋃ ⋃ l ∈ ∈ L D l ) {\displaystyle \bigcap _{i\in I}\;\bigcup _{j\in J_{i}}T_{i,j}=\left(\bigcup _{j\in J_{1}}T_{1,j}\right)\cap \left(\;\bigcup _{j\in J_{2}}T_{2,j}\right)=\left(\bigcup _{k\in K}T_{1,k}\right)\cap \left(\;\bigcup _{l\in L}T_{2,l}\right)=\left(\bigcup _{k\in K}C_{k}\right)\cap \left(\;\bigcup _{l\in L}D_{l}\right)} and doing the same to the right hand side gives: ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ ⋂ ⋂ i ∈ ∈ I T i , f ( i ) = ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ ( T 1 , f ( 1 ) ∩ ∩ T 2 , f ( 2 ) ) = ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ ( C f ( 1 ) ∩ ∩ D f ( 2 ) ) = ⋃ ⋃ ( k , l ) ∈ ∈ K × × L ( C k ∩ ∩ D l ) = ⋃ ⋃ l ∈ ∈ L k ∈ ∈ K , ( C k ∩ ∩ D l ) .

{\displaystyle \bigcup _{f\in \prod J_{\bullet }}\;\bigcap _{i\in I}T_{i,f(i)}=\bigcup _{f\in \prod J_{\bullet }}\left(T_{1,f(1)}\cap T_{2,f(2)}\right)=\bigcup _{f\in \prod J_{\bullet }}\left(C_{f(1)}\cap D_{f(2)}\right)=\bigcup _{(k,l)\in K\times L}\left(C_{k}\cap D_{l}\right)=\bigcup _{\stackrel {k\in K,}{l\in L}}\left(C_{k}\cap D_{l}\right).} Thus the general identity Eq. 5 ∩∪ to ∪∩ reduces down to the previously given set equality Eq. 3b : ( ⋃ ⋃ k ∈ ∈ K C k ) ∩ ∩ ⋃ ⋃ l ∈ ∈ L D l = ⋃ ⋃ l ∈ ∈ L k ∈ ∈ K , ( C k ∩ ∩ D l ) .

{\displaystyle \left(\bigcup _{k\in K}C_{k}\right)\cap \;\bigcup _{l\in L}D_{l}=\bigcup _{\stackrel {k\in K,}{l\in L}}\left(C_{k}\cap D_{l}\right).} Distributing subtraction over ⋃ and ⋂ [ edit ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∖ ∖ R = ⋃ ⋃ i ∈ ∈ I ( L i ∖ ∖ R ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\;\setminus \;R~=~\bigcup _{i\in I}\left(L_{i}\;\setminus \;R\right)} Eq. 7a ( ⋂ ⋂ i ∈ ∈ I L i ) ∖ ∖ R = ⋂ ⋂ i ∈ ∈ I ( L i ∖ ∖ R ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\;\setminus \;R~=~\bigcap _{i\in I}\left(L_{i}\;\setminus \;R\right)} Eq. 7b The next identities are known as De Morgan's laws .

[ 4 ] L ∖ ∖ ⋃ ⋃ j ∈ ∈ J R j = ⋂ ⋂ j ∈ ∈ J ( L ∖ ∖ R j ) De Morgan's law {\displaystyle L\;\setminus \;\bigcup _{j\in J}R_{j}~=~\bigcap _{j\in J}\left(L\;\setminus \;R_{j}\right)~~\;~~{\text{ De Morgan's law }}} Eq. 7c L ∖ ∖ ⋂ ⋂ j ∈ ∈ J R j = ⋃ ⋃ j ∈ ∈ J ( L ∖ ∖ R j ) De Morgan's law {\displaystyle L\;\setminus \;\bigcap _{j\in J}R_{j}~=~\bigcup _{j\in J}\left(L\;\setminus \;R_{j}\right)~~\;~~{\text{ De Morgan's law }}} Eq. 7d The following four set equalities can be deduced from the equalities 7a - 7d above.

( ⋃ ⋃ i ∈ ∈ I L i ) ∖ ∖ ⋃ ⋃ j ∈ ∈ J R j = ⋃ ⋃ i ∈ ∈ I ( ⋂ ⋂ j ∈ ∈ J ( L i ∖ ∖ R j ) ) = ⋂ ⋂ j ∈ ∈ J ( ⋃ ⋃ i ∈ ∈ I ( L i ∖ ∖ R j ) ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\;\setminus \;\bigcup _{j\in J}R_{j}~=~\bigcup _{i\in I}\left(\bigcap _{j\in J}\left(L_{i}\;\setminus \;R_{j}\right)\right)~=~\bigcap _{j\in J}\left(\bigcup _{i\in I}\left(L_{i}\;\setminus \;R_{j}\right)\right)} Eq. 7e ( ⋂ ⋂ i ∈ ∈ I L i ) ∖ ∖ ⋂ ⋂ j ∈ ∈ J R j = ⋃ ⋃ j ∈ ∈ J ( ⋂ ⋂ i ∈ ∈ I ( L i ∖ ∖ R j ) ) = ⋂ ⋂ i ∈ ∈ I ( ⋃ ⋃ j ∈ ∈ J ( L i ∖ ∖ R j ) ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\;\setminus \;\bigcap _{j\in J}R_{j}~=~\bigcup _{j\in J}\left(\bigcap _{i\in I}\left(L_{i}\;\setminus \;R_{j}\right)\right)~=~\bigcap _{i\in I}\left(\bigcup _{j\in J}\left(L_{i}\;\setminus \;R_{j}\right)\right)} Eq. 7f ( ⋃ ⋃ i ∈ ∈ I L i ) ∖ ∖ ⋂ ⋂ j ∈ ∈ J R j = ⋃ ⋃ j ∈ ∈ J i ∈ ∈ I , ( L i ∖ ∖ R j ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\;\setminus \;\bigcap _{j\in J}R_{j}~=~\bigcup _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\;\setminus \;R_{j}\right)} Eq. 7g ( ⋂ ⋂ i ∈ ∈ I L i ) ∖ ∖ ⋃ ⋃ j ∈ ∈ J R j = ⋂ ⋂ j ∈ ∈ J i ∈ ∈ I , ( L i ∖ ∖ R j ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\;\setminus \;\bigcup _{j\in J}R_{j}~=~\bigcap _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\;\setminus \;R_{j}\right)} Eq. 7h In general, naively swapping ∪ ∪ {\displaystyle \;\cup \;} and ∩ ∩ {\displaystyle \;\cap \;} may produce a different set (see this note for more details). 
The equalities ⋃ ⋃ i ∈ ∈ I ⋂ ⋂ j ∈ ∈ J ( L i ∖ ∖ R j ) = ⋂ ⋂ j ∈ ∈ J ⋃ ⋃ i ∈ ∈ I ( L i ∖ ∖ R j ) and ⋃ ⋃ j ∈ ∈ J ⋂ ⋂ i ∈ ∈ I ( L i ∖ ∖ R j ) = ⋂ ⋂ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J ( L i ∖ ∖ R j ) {\displaystyle \bigcup _{i\in I}\;\bigcap _{j\in J}\left(L_{i}\setminus R_{j}\right)~=~\bigcap _{j\in J}\;\bigcup _{i\in I}\left(L_{i}\setminus R_{j}\right)\quad {\text{ and }}\quad \bigcup _{j\in J}\;\bigcap _{i\in I}\left(L_{i}\setminus R_{j}\right)~=~\bigcap _{i\in I}\;\bigcup _{j\in J}\left(L_{i}\setminus R_{j}\right)} found in Eq. 7e and Eq. 7f are thus unusual in that they state exactly that swapping ∪ ∪ {\displaystyle \;\cup \;} and ∩ ∩ {\displaystyle \;\cap \;} will not change the resulting set.

Commutativity and associativity of ⋃ and ⋂ [ edit ] Commutativity : [ 3 ] ⋃ ⋃ j ∈ ∈ J i ∈ ∈ I , S i , j = def ⋃ ⋃ ( i , j ) ∈ ∈ I × × J S i , j = ⋃ ⋃ i ∈ ∈ I ( ⋃ ⋃ j ∈ ∈ J S i , j ) = ⋃ ⋃ j ∈ ∈ J ( ⋃ ⋃ i ∈ ∈ I S i , j ) {\displaystyle \bigcup _{\stackrel {i\in I,}{j\in J}}S_{i,j}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcup _{(i,j)\in I\times J}S_{i,j}~=~\bigcup _{i\in I}\left(\bigcup _{j\in J}S_{i,j}\right)~=~\bigcup _{j\in J}\left(\bigcup _{i\in I}S_{i,j}\right)} ⋂ ⋂ j ∈ ∈ J i ∈ ∈ I , S i , j = def ⋂ ⋂ ( i , j ) ∈ ∈ I × × J S i , j = ⋂ ⋂ i ∈ ∈ I ( ⋂ ⋂ j ∈ ∈ J S i , j ) = ⋂ ⋂ j ∈ ∈ J ( ⋂ ⋂ i ∈ ∈ I S i , j ) {\displaystyle \bigcap _{\stackrel {i\in I,}{j\in J}}S_{i,j}~~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\bigcap _{(i,j)\in I\times J}S_{i,j}~=~\bigcap _{i\in I}\left(\bigcap _{j\in J}S_{i,j}\right)~=~\bigcap _{j\in J}\left(\bigcap _{i\in I}S_{i,j}\right)} Unions of unions and intersections of intersections : [ 3 ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∪ ∪ R = ⋃ ⋃ i ∈ ∈ I ( L i ∪ ∪ R ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\cup R~=~\bigcup _{i\in I}\left(L_{i}\cup R\right)} ( ⋂ ⋂ i ∈ ∈ I L i ) ∩ ∩ R = ⋂ ⋂ i ∈ ∈ I ( L i ∩ ∩ R ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\cap R~=~\bigcap _{i\in I}\left(L_{i}\cap R\right)} and [ 3 ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∪ ∪ ( ⋃ ⋃ j ∈ ∈ J R j ) = ⋃ ⋃ j ∈ ∈ J i ∈ ∈ I , ( L i ∪ ∪ R j ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\cup \left(\bigcup _{j\in J}R_{j}\right)~=~\bigcup _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\cup R_{j}\right)} Eq. 2a ( ⋂ ⋂ i ∈ ∈ I L i ) ∩ ∩ ( ⋂ ⋂ j ∈ ∈ J R j ) = ⋂ ⋂ j ∈ ∈ J i ∈ ∈ I , ( L i ∩ ∩ R j ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\cap \left(\bigcap _{j\in J}R_{j}\right)~=~\bigcap _{\stackrel {i\in I,}{j\in J}}\left(L_{i}\cap R_{j}\right)} Eq. 2b and if I = J {\displaystyle I=J} then also: [ note 2 ] [ 3 ] ( ⋃ ⋃ i ∈ ∈ I L i ) ∪ ∪ ( ⋃ ⋃ i ∈ ∈ I R i ) = ⋃ ⋃ i ∈ ∈ I ( L i ∪ ∪ R i ) {\displaystyle \left(\bigcup _{i\in I}L_{i}\right)\cup \left(\bigcup _{i\in I}R_{i}\right)~=~\bigcup _{i\in I}\left(L_{i}\cup R_{i}\right)} Eq. 2c ( ⋂ ⋂ i ∈ ∈ I L i ) ∩ ∩ ( ⋂ ⋂ i ∈ ∈ I R i ) = ⋂ ⋂ i ∈ ∈ I ( L i ∩ ∩ R i ) {\displaystyle \left(\bigcap _{i\in I}L_{i}\right)\cap \left(\bigcap _{i\in I}R_{i}\right)~=~\bigcap _{i\in I}\left(L_{i}\cap R_{i}\right)} Eq. 2d Cartesian products Π of arbitrarily many sets [ edit ] Intersections ⋂ of Π [ edit ] If ( S i , j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J}} is a family of sets then ⋂ ⋂ j ∈ ∈ J ∏ ∏ i ∈ ∈ I S i , j = ∏ ∏ i ∈ ∈ I ⋂ ⋂ j ∈ ∈ J S i , j {\displaystyle \bigcap _{j\in J}\;\prod _{i\in I}S_{i,j}~~=~~\prod _{i\in I}\;\bigcap _{j\in J}S_{i,j}} Eq. 8 Moreover, a tuple ( x i ) i ∈ ∈ I {\displaystyle \left(x_{i}\right)_{i\in I}} belongs to the set in Eq. 8 above if and only if x i ∈ ∈ S i , j {\displaystyle x_{i}\in S_{i,j}} for all i ∈ ∈ I {\displaystyle i\in I} and all j ∈ ∈ J .

{\displaystyle j\in J.} In particular, if ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} and ( R i ) i ∈ ∈ I {\displaystyle \left(R_{i}\right)_{i\in I}} are two families indexed by the same set then ( ∏ ∏ i ∈ ∈ I L i ) ∩ ∩ ∏ ∏ i ∈ ∈ I R i = ∏ ∏ i ∈ ∈ I ( L i ∩ ∩ R i ) {\displaystyle \left(\prod _{i\in I}L_{i}\right)\cap \prod _{i\in I}R_{i}~=~\prod _{i\in I}\left(L_{i}\cap R_{i}\right)} So for instance, ( L × × R ) ∩ ∩ ( L 2 × × R 2 ) = ( L ∩ ∩ L 2 ) × × ( R ∩ ∩ R 2 ) {\displaystyle (L\times R)\cap \left(L_{2}\times R_{2}\right)~=~\left(L\cap L_{2}\right)\times \left(R\cap R_{2}\right)} ( L × × R ) ∩ ∩ ( L 2 × × R 2 ) ∩ ∩ ( L 3 × × R 3 ) = ( L ∩ ∩ L 2 ∩ ∩ L 3 ) × × ( R ∩ ∩ R 2 ∩ ∩ R 3 ) {\displaystyle (L\times R)\cap \left(L_{2}\times R_{2}\right)\cap \left(L_{3}\times R_{3}\right)~=~\left(L\cap L_{2}\cap L_{3}\right)\times \left(R\cap R_{2}\cap R_{3}\right)} and ( L × × M × × R ) ∩ ∩ ( L 2 × × M 2 × × R 2 ) = ( L ∩ ∩ L 2 ) × × ( M ∩ ∩ M 2 ) × × ( R ∩ ∩ R 2 ) {\displaystyle (L\times M\times R)\cap \left(L_{2}\times M_{2}\times R_{2}\right)~=~\left(L\cap L_{2}\right)\times \left(M\cap M_{2}\right)\times \left(R\cap R_{2}\right)} Intersections of products indexed by different sets Let ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} and ( R j ) j ∈ ∈ J {\displaystyle \left(R_{j}\right)_{j\in J}} be two families indexed by different sets.

Technically, I ≠ ≠ J {\displaystyle I\neq J} implies ( ∏ ∏ i ∈ ∈ I L i ) ∩ ∩ ∏ ∏ j ∈ ∈ J R j = ∅ ∅ .

{\displaystyle \left({\textstyle \prod \limits _{i\in I}}L_{i}\right)\cap {\textstyle \prod \limits _{j\in J}}R_{j}=\varnothing .} However, sometimes these products are somehow identified as the same set through some bijection or one of these products is identified as a subset of the other via some injective map , in which case (by abuse of notation ) this intersection may be equal to some other (possibly non-empty) set.

For example, if I := { 1 , 2 } {\displaystyle I:=\{1,2\}} and J := { 1 , 2 , 3 } {\displaystyle J:=\{1,2,3\}} with all sets equal to R {\displaystyle \mathbb {R} } then ∏ ∏ i ∈ ∈ I L i = ∏ ∏ i ∈ ∈ { 1 , 2 } R = R 2 {\displaystyle {\textstyle \prod \limits _{i\in I}}L_{i}={\textstyle \prod \limits _{i\in \{1,2\}}}\mathbb {R} =\mathbb {R} ^{2}} and ∏ ∏ j ∈ ∈ J R j = ∏ ∏ j ∈ ∈ { 1 , 2 , 3 } R = R 3 {\displaystyle {\textstyle \prod \limits _{j\in J}}R_{j}={\textstyle \prod \limits _{j\in \{1,2,3\}}}\mathbb {R} =\mathbb {R} ^{3}} where R 2 ∩ ∩ R 3 = ∅ ∅ {\displaystyle \mathbb {R} ^{2}\cap \mathbb {R} ^{3}=\varnothing } unless , for example, ∏ ∏ i ∈ ∈ { 1 , 2 } R = R 2 {\displaystyle {\textstyle \prod \limits _{i\in \{1,2\}}}\mathbb {R} =\mathbb {R} ^{2}} is identified as a subset of ∏ ∏ j ∈ ∈ { 1 , 2 , 3 } R = R 3 {\displaystyle {\textstyle \prod \limits _{j\in \{1,2,3\}}}\mathbb {R} =\mathbb {R} ^{3}} through some injection , such as maybe ( x , y ) ↦ ↦ ( x , y , 0 ) {\displaystyle (x,y)\mapsto (x,y,0)} for instance; however, in this particular case the product ∏ ∏ i ∈ ∈ I = { 1 , 2 } L i {\displaystyle {\textstyle \prod \limits _{i\in I=\{1,2\}}}L_{i}} actually represents the J {\displaystyle J} -indexed product ∏ ∏ j ∈ ∈ J = { 1 , 2 , 3 } L i {\displaystyle {\textstyle \prod \limits _{j\in J=\{1,2,3\}}}L_{i}} where L 3 := { 0 } .

{\displaystyle L_{3}:=\{0\}.} For another example, take I := { 1 , 2 } {\displaystyle I:=\{1,2\}} and J := { 1 , 2 , 3 } {\displaystyle J:=\{1,2,3\}} with L 1 := R 2 {\displaystyle L_{1}:=\mathbb {R} ^{2}} and L 2 , R 1 , R 2 , and R 3 {\displaystyle L_{2},R_{1},R_{2},{\text{ and }}R_{3}} all equal to R .

{\displaystyle \mathbb {R} .} Then ∏ ∏ i ∈ ∈ I L i = R 2 × × R {\displaystyle {\textstyle \prod \limits _{i\in I}}L_{i}=\mathbb {R} ^{2}\times \mathbb {R} } and ∏ ∏ j ∈ ∈ J R j = R × × R × × R , {\displaystyle {\textstyle \prod \limits _{j\in J}}R_{j}=\mathbb {R} \times \mathbb {R} \times \mathbb {R} ,} which can both be identified as the same set via the bijection that sends ( ( x , y ) , z ) ∈ ∈ R 2 × × R {\displaystyle ((x,y),z)\in \mathbb {R} ^{2}\times \mathbb {R} } to ( x , y , z ) ∈ ∈ R × × R × × R .

{\displaystyle (x,y,z)\in \mathbb {R} \times \mathbb {R} \times \mathbb {R} .} Under this identification, ( ∏ ∏ i ∈ ∈ I L i ) ∩ ∩ ∏ ∏ j ∈ ∈ J R j = R 3 .

{\displaystyle \left({\textstyle \prod \limits _{i\in I}}L_{i}\right)\cap \,{\textstyle \prod \limits _{j\in J}}R_{j}~=~\mathbb {R} ^{3}.} Binary ⨯ distributes over arbitrary ⋃ and ⋂ [ edit ] The binary Cartesian product ⨯ distributes over arbitrary intersections (when the indexing set is not empty) and over arbitrary unions: L × × ( ⋃ ⋃ i ∈ ∈ I R i ) = ⋃ ⋃ i ∈ ∈ I ( L × × R i ) (Left-distributivity of × × over ∪ ∪ ) L × × ( ⋂ ⋂ i ∈ ∈ I R i ) = ⋂ ⋂ i ∈ ∈ I ( L × × R i ) (Left-distributivity of × × over ⋂ ⋂ i ∈ ∈ I when I ≠ ≠ ∅ ∅ ) ( ⋃ ⋃ i ∈ ∈ I L i ) × × R = ⋃ ⋃ i ∈ ∈ I ( L i × × R ) (Right-distributivity of × × over ∪ ∪ ) ( ⋂ ⋂ i ∈ ∈ I L i ) × × R = ⋂ ⋂ i ∈ ∈ I ( L i × × R ) (Right-distributivity of × × over ⋂ ⋂ i ∈ ∈ I when I ≠ ≠ ∅ ∅ ) {\displaystyle {\begin{alignedat}{5}L\times \left(\bigcup _{i\in I}R_{i}\right)&\;=\;\;&&\bigcup _{i\in I}(L\times R_{i})\qquad &&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]L\times \left(\bigcap _{i\in I}R_{i}\right)&\;=\;\;&&\bigcap _{i\in I}(L\times R_{i})\qquad &&{\text{ (Left-distributivity of }}\,\times \,{\text{ over }}\,\bigcap _{i\in I}\,{\text{ when }}I\neq \varnothing \,{\text{)}}\\[1.4ex]\left(\bigcup _{i\in I}L_{i}\right)\times R&\;=\;\;&&\bigcup _{i\in I}(L_{i}\times R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\cup \,{\text{)}}\\[1.4ex]\left(\bigcap _{i\in I}L_{i}\right)\times R&\;=\;\;&&\bigcap _{i\in I}(L_{i}\times R)\qquad &&{\text{ (Right-distributivity of }}\,\times \,{\text{ over }}\,\bigcap _{i\in I}\,{\text{ when }}I\neq \varnothing \,{\text{)}}\\[1.4ex]\end{alignedat}}} Distributing arbitrary Π over arbitrary ⋃ [ edit ] Suppose that for each i ∈ ∈ I , {\displaystyle i\in I,} J i {\displaystyle J_{i}} is a non-empty index set and for each j ∈ ∈ J i , {\displaystyle j\in J_{i},} let T i , j {\displaystyle T_{i,j}} be any set (for example, to apply this law to ( S i , j ) ( i , j ) ∈ ∈ I × × J , {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J},} use J i : : = J {\displaystyle J_{i}\colon =J} for all i ∈ ∈ I {\displaystyle i\in I} and use T i , j : : = S i , j {\displaystyle T_{i,j}\colon =S_{i,j}} for all i ∈ ∈ I {\displaystyle i\in I} and all j ∈ ∈ J i = J {\displaystyle j\in J_{i}=J} ). Let ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i {\displaystyle {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\prod _{i\in I}J_{i}} denote the Cartesian product , which (as mentioned above ) can be interpreted as the set of all functions f : I → → ⋃ ⋃ i ∈ ∈ I J i {\displaystyle f~:~I~\to ~{\textstyle \bigcup \limits _{i\in I}}J_{i}} such that f ( i ) ∈ ∈ J i {\displaystyle f(i)\in J_{i}} for every i ∈ ∈ I {\displaystyle i\in I} .
Then ∏ ∏ i ∈ ∈ I [ ⋃ ⋃ j ∈ ∈ J i T i , j ] = ⋃ ⋃ f ∈ ∈ ∏ ∏ J ∙ ∙ [ ∏ ∏ i ∈ ∈ I T i , f ( i ) ] {\displaystyle \prod _{i\in I}\left[\;\bigcup _{j\in J_{i}}T_{i,j}\right]=\bigcup _{f\in \prod J_{\bullet }}\left[\;\prod _{i\in I}T_{i,f(i)}\right]} Eq. 11 Π∪ to ∪Π where ∏ ∏ J ∙ ∙ = def ∏ ∏ i ∈ ∈ I J i .

{\displaystyle {\textstyle \prod }J_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~{\textstyle \prod \limits _{i\in I}}J_{i}.} Unions ⋃ of Π [ edit ] For unions, only the following is guaranteed in general: ⋃ ⋃ j ∈ ∈ J ∏ ∏ i ∈ ∈ I S i , j ⊆ ⊆ ∏ ∏ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J S i , j and ⋃ ⋃ i ∈ ∈ I ∏ ∏ j ∈ ∈ J S i , j ⊆ ⊆ ∏ ∏ j ∈ ∈ J ⋃ ⋃ i ∈ ∈ I S i , j {\displaystyle \bigcup _{j\in J}\;\prod _{i\in I}S_{i,j}~~\color {Red}{\subseteq }\color {Black}{}~~\prod _{i\in I}\;\bigcup _{j\in J}S_{i,j}\qquad {\text{ and }}\qquad \bigcup _{i\in I}\;\prod _{j\in J}S_{i,j}~~\color {Red}{\subseteq }\color {Black}{}~~\prod _{j\in J}\;\bigcup _{i\in I}S_{i,j}} where ( S i , j ) ( i , j ) ∈ ∈ I × × J {\displaystyle \left(S_{i,j}\right)_{(i,j)\in I\times J}} is a family of sets.

Example where equality fails : Let I = J = { 1 , 2 } , {\displaystyle I=J=\{1,2\},} let S 1 , 1 = S 2 , 2 = ∅ ∅ , {\displaystyle S_{1,1}=S_{2,2}=\varnothing ,} let X ≠ ≠ ∅ ∅ , {\displaystyle X\neq \varnothing ,} and let S 1 , 2 = S 2 , 1 = X .

{\displaystyle S_{1,2}=S_{2,1}=X.} Then ∅ ∅ = ∅ ∅ ∪ ∪ ∅ ∅ = ( ∏ ∏ i ∈ ∈ I S i , 1 ) ∪ ∪ ( ∏ ∏ i ∈ ∈ I S i , 2 ) = ⋃ ⋃ j ∈ ∈ J ∏ ∏ i ∈ ∈ I S i , j ≠ ≠ ∏ ∏ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J S i , j = ( ⋃ ⋃ j ∈ ∈ J S 1 , j ) × × ( ⋃ ⋃ j ∈ ∈ J S 2 , j ) = X × × X .

{\displaystyle \varnothing =\varnothing \cup \varnothing =\left(\prod _{i\in I}S_{i,1}\right)\cup \left(\prod _{i\in I}S_{i,2}\right)=\bigcup _{j\in J}\;\prod _{i\in I}S_{i,j}~~\color {Red}{\neq }\color {Black}{}~~\prod _{i\in I}\;\bigcup _{j\in J}S_{i,j}=\left(\bigcup _{j\in J}S_{1,j}\right)\times \left(\bigcup _{j\in J}S_{2,j}\right)=X\times X.} More generally, ∅ ∅ = ⋃ ⋃ j ∈ ∈ J ∏ ∏ i ∈ ∈ I S i , j {\textstyle \varnothing =\bigcup _{j\in J}\;\prod _{i\in I}S_{i,j}} if and only if for each j ∈ ∈ J , {\displaystyle j\in J,} at least one of the sets in the I {\displaystyle I} -indexed collections of sets S ∙ ∙ , j = ( S i , j ) i ∈ ∈ I {\displaystyle S_{\bullet ,j}=\left(S_{i,j}\right)_{i\in I}} is empty, while ∏ ∏ i ∈ ∈ I ⋃ ⋃ j ∈ ∈ J S i , j ≠ ≠ ∅ ∅ {\textstyle \prod _{i\in I}\;\bigcup _{j\in J}S_{i,j}\neq \varnothing } if and only if for each i ∈ ∈ I , {\displaystyle i\in I,} at least one of the sets in the J {\displaystyle J} -indexed collections of sets S i , ∙ ∙ = ( S i , j ) j ∈ ∈ J {\displaystyle S_{i,\bullet }=\left(S_{i,j}\right)_{j\in J}} is not empty.

However, ( L × × R ) ∪ ∪ ( L 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × R ] ∪ ∪ [ ( L 2 ∖ ∖ L ) × × R 2 ] ∪ ∪ [ ( L ∩ ∩ L 2 ) × × ( R ∪ ∪ R 2 ) ] = [ L × × ( R ∖ ∖ R 2 ) ] ∪ ∪ [ L 2 × × ( R 2 ∖ ∖ R ) ] ∪ ∪ [ ( L ∪ ∪ L 2 ) × × ( R ∩ ∩ R 2 ) ] {\displaystyle {\begin{alignedat}{9}\left(L\times R\right)~\cup ~\left(L_{2}\times R_{2}\right)~&=~\left[\left(L\setminus L_{2}\right)\times R\right]~\cup ~\left[\left(L_{2}\setminus L\right)\times R_{2}\right]~\cup ~\left[\left(L\cap L_{2}\right)\times \left(R\cup R_{2}\right)\right]\\[0.5ex]~&=~\left[L\times \left(R\setminus R_{2}\right)\right]~\cup ~\left[L_{2}\times \left(R_{2}\setminus R\right)\right]~\cup ~\left[\left(L\cup L_{2}\right)\times \left(R\cap R_{2}\right)\right]\\\end{alignedat}}} Difference \ of Π [ edit ] If ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} and ( R i ) i ∈ ∈ I {\displaystyle \left(R_{i}\right)_{i\in I}} are two families of sets then: ( ∏ ∏ i ∈ ∈ I L i ) ∖ ∖ ∏ ∏ i ∈ ∈ I R i = ⋃ ⋃ j ∈ ∈ I ∏ ∏ i ∈ ∈ I { L j ∖ ∖ R j if i = j L i if i ≠ ≠ j = ⋃ ⋃ j ∈ ∈ I [ ( L j ∖ ∖ R j ) × × ∏ ∏ j ≠ ≠ i i ∈ ∈ I , L i ] = ⋃ ⋃ L j ⊈ R j j ∈ ∈ I , [ ( L j ∖ ∖ R j ) × × ∏ ∏ j ≠ ≠ i i ∈ ∈ I , L i ] {\displaystyle {\begin{alignedat}{9}\left(\prod _{i\in I}L_{i}\right)~\setminus ~\prod _{i\in I}R_{i}~&=~\;~\bigcup _{j\in I}\;~\prod _{i\in I}{\begin{cases}L_{j}\,\setminus \,R_{j}&{\text{ if }}i=j\\L_{i}&{\text{ if }}i\neq j\\\end{cases}}\\[0.5ex]~&=~\;~\bigcup _{j\in I}\;~{\Big [}\left(L_{j}\,\setminus \,R_{j}\right)~\times ~\prod _{\stackrel {i\in I,}{j\neq i}}L_{i}{\Big ]}\\[0.5ex]~&=~\bigcup _{\stackrel {j\in I,}{L_{j}\not \subseteq R_{j}}}{\Big [}\left(L_{j}\,\setminus \,R_{j}\right)~\times ~\prod _{\stackrel {i\in I,}{j\neq i}}L_{i}{\Big ]}\\[0.3ex]\end{alignedat}}} so for instance, ( L × × R ) ∖ ∖ ( L 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × R ] ∪ ∪ [ L × × ( R ∖ ∖ R 2 ) ] {\displaystyle {\begin{alignedat}{9}\left(L\times R\right)~\setminus ~\left(L_{2}\times R_{2}\right)~&=~\left[\left(L\,\setminus \,L_{2}\right)\times R\right]~\cup ~\left[L\times \left(R\,\setminus \,R_{2}\right)\right]\\\end{alignedat}}} and ( L × × M × × R ) ∖ ∖ ( L 2 × × M 2 × × R 2 ) = [ ( L ∖ ∖ L 2 ) × × M × × R ] ∪ ∪ [ L × × ( M ∖ ∖ M 2 ) × × R ] ∪ ∪ [ L × × M × × ( R ∖ ∖ R 2 ) ] {\displaystyle (L\times M\times R)~\setminus ~\left(L_{2}\times M_{2}\times R_{2}\right)~=~\left[\left(L\,\setminus \,L_{2}\right)\times M\times R\right]~\cup ~\left[L\times \left(M\,\setminus \,M_{2}\right)\times R\right]~\cup ~\left[L\times M\times \left(R\,\setminus \,R_{2}\right)\right]} Symmetric difference ∆ of Π [ edit ] ( ∏ ∏ i ∈ ∈ I L i ) △ △ ( ∏ ∏ i ∈ ∈ I R i ) = ( ∏ ∏ i ∈ ∈ I L i ) ∪ ∪ ( ∏ ∏ i ∈ ∈ I R i ) ∖ ∖ ∏ ∏ i ∈ ∈ I L i ∩ ∩ R i {\displaystyle {\begin{alignedat}{9}\left(\prod _{i\in I}L_{i}\right)~\triangle ~\left(\prod _{i\in I}R_{i}\right)~&=~\;~\left(\prod _{i\in I}L_{i}\right)~\cup ~\left(\prod _{i\in I}R_{i}\right)\;\setminus \;\prod _{i\in I}L_{i}\cap R_{i}\\[0.5ex]\end{alignedat}}} Functions and sets [ edit ] See also: Image (mathematics) § Properties Let f : X → → Y {\displaystyle f:X\to Y} be any function.

Let L and R {\displaystyle L{\text{ and }}R} be completely arbitrary sets. Assume A ⊆ ⊆ X and C ⊆ ⊆ Y .

{\displaystyle A\subseteq X{\text{ and }}C\subseteq Y.} Definitions [ edit ] Let f : X → → Y {\displaystyle f:X\to Y} be any function, where we denote its domain X {\displaystyle X} by domain ⁡ ⁡ f {\displaystyle \operatorname {domain} f} and denote its codomain Y {\displaystyle Y} by codomain ⁡ ⁡ f .

{\displaystyle \operatorname {codomain} f.} Many of the identities below do not actually require that the sets be somehow related to f {\displaystyle f} 's domain or codomain (that is, to X {\displaystyle X} or Y {\displaystyle Y} ) so when some kind of relationship is necessary then it will be clearly indicated. 
Because of this, in this article, if L {\displaystyle L} is declared to be " any set ," and it is not indicated that L {\displaystyle L} must be somehow related to X {\displaystyle X} or Y {\displaystyle Y} (say for instance, that it be a subset X {\displaystyle X} or Y {\displaystyle Y} ) then it is meant that L {\displaystyle L} is truly arbitrary.

[ note 3 ] This generality is useful in situations where f : X → → Y {\displaystyle f:X\to Y} is a map between two subsets X ⊆ ⊆ U {\displaystyle X\subseteq U} and Y ⊆ ⊆ V {\displaystyle Y\subseteq V} of some larger sets U {\displaystyle U} and V , {\displaystyle V,} and where the set L {\displaystyle L} might not be entirely contained in X = domain ⁡ ⁡ f {\displaystyle X=\operatorname {domain} f} and/or Y = codomain ⁡ ⁡ f {\displaystyle Y=\operatorname {codomain} f} (e.g. if all that is known about L {\displaystyle L} is that L ⊆ ⊆ U {\displaystyle L\subseteq U} ); in such a situation it may be useful to know what can and cannot be said about f ( L ) {\displaystyle f(L)} and/or f − − 1 ( L ) {\displaystyle f^{-1}(L)} without having to introduce a (potentially unnecessary) intersection such as: f ( L ∩ ∩ X ) {\displaystyle f(L\cap X)} and/or f − − 1 ( L ∩ ∩ Y ) .

{\displaystyle f^{-1}(L\cap Y).} Images and preimages of sets If L {\displaystyle L} is any set then the image of L {\displaystyle L} under f {\displaystyle f} is defined to be the set: f ( L ) = def { f ( l ) : l ∈ ∈ L ∩ ∩ domain ⁡ ⁡ f } {\displaystyle f(L)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{\,f(l)~:~l\in L\cap \operatorname {domain} f\,\}} while the preimage of L {\displaystyle L} under f {\displaystyle f} is: f − − 1 ( L ) = def { x ∈ ∈ domain ⁡ ⁡ f : f ( x ) ∈ ∈ L } {\displaystyle f^{-1}(L)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\{\,x\in \operatorname {domain} f~:~f(x)\in L\,\}} where if L = { s } {\displaystyle L=\{s\}} is a singleton set then the fiber or preimage of s {\displaystyle s} under f {\displaystyle f} is f − − 1 ( s ) = def f − − 1 ( { s } ) = { x ∈ ∈ domain ⁡ ⁡ f : f ( x ) = s } .

{\displaystyle f^{-1}(s)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~f^{-1}(\{s\})~=~\{\,x\in \operatorname {domain} f~:~f(x)=s\,\}.} Denote by Im ⁡ ⁡ f {\displaystyle \operatorname {Im} f} or image ⁡ ⁡ f {\displaystyle \operatorname {image} f} the image or range of f : X → → Y , {\displaystyle f:X\to Y,} which is the set: Im ⁡ ⁡ f = def f ( X ) = def f ( domain ⁡ ⁡ f ) = { f ( x ) : x ∈ ∈ domain ⁡ ⁡ f } .

{\displaystyle \operatorname {Im} f~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~f(X)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~f(\operatorname {domain} f)~=~\{f(x)~:~x\in \operatorname {domain} f\}.} Saturated sets Main article: Saturated set A set A {\displaystyle A} is said to be f {\displaystyle f} - saturated or a saturated set if any of the following equivalent conditions are satisfied: [ 3 ] There exists a set R {\displaystyle R} such that A = f − − 1 ( R ) .

{\displaystyle A=f^{-1}(R).} Any such set R {\displaystyle R} necessarily contains f ( A ) {\displaystyle f(A)} as a subset.

Any set not entirely contained in the domain of f {\displaystyle f} cannot be f {\displaystyle f} -saturated.

A = f − − 1 ( f ( A ) ) .

{\displaystyle A=f^{-1}(f(A)).} A ⊇ ⊇ f − − 1 ( f ( A ) ) {\displaystyle A\supseteq f^{-1}(f(A))} and A ⊆ ⊆ domain ⁡ ⁡ f .

{\displaystyle A\subseteq \operatorname {domain} f.} The inclusion L ∩ ∩ domain ⁡ ⁡ f ⊆ ⊆ f − − 1 ( f ( L ) ) {\displaystyle L\cap \operatorname {domain} f\subseteq f^{-1}(f(L))} always holds, where if A ⊆ ⊆ domain ⁡ ⁡ f {\displaystyle A\subseteq \operatorname {domain} f} then this becomes A ⊆ ⊆ f − − 1 ( f ( A ) ) .

{\displaystyle A\subseteq f^{-1}(f(A)).} A ⊆ ⊆ domain ⁡ ⁡ f {\displaystyle A\subseteq \operatorname {domain} f} and if a ∈ ∈ A {\displaystyle a\in A} and x ∈ ∈ domain ⁡ ⁡ f {\displaystyle x\in \operatorname {domain} f} satisfy f ( x ) = f ( a ) , {\displaystyle f(x)=f(a),} then x ∈ ∈ A .

{\displaystyle x\in A.} Whenever a fiber of f {\displaystyle f} intersects A , {\displaystyle A,} then A {\displaystyle A} contains the entire fiber. In other words, A {\displaystyle A} contains every f {\displaystyle f} -fiber that intersects it.

Explicitly: whenever y ∈ ∈ Im ⁡ ⁡ f {\displaystyle y\in \operatorname {Im} f} is such that A ∩ ∩ f − − 1 ( y ) ≠ ≠ ∅ ∅ , {\displaystyle A\cap f^{-1}(y)\neq \varnothing ,} then f − − 1 ( y ) ⊆ ⊆ A .

{\displaystyle f^{-1}(y)\subseteq A.} In both this statement and the next, the set Im ⁡ ⁡ f {\displaystyle \operatorname {Im} f} may be replaced with any superset of Im ⁡ ⁡ f {\displaystyle \operatorname {Im} f} (such as codomain ⁡ ⁡ f {\displaystyle \operatorname {codomain} f} ) and the resulting statement will still be equivalent to the rest.

The intersection of A {\displaystyle A} with a fiber of f {\displaystyle f} is equal to the empty set or to the fiber itself.

Explicitly: for every y ∈ ∈ Im ⁡ ⁡ f , {\displaystyle y\in \operatorname {Im} f,} the intersection A ∩ ∩ f − − 1 ( y ) {\displaystyle A\cap f^{-1}(y)} is equal to the empty set ∅ ∅ {\displaystyle \varnothing } or to f − − 1 ( y ) {\displaystyle f^{-1}(y)} (that is, A ∩ ∩ f − − 1 ( y ) = ∅ ∅ {\displaystyle A\cap f^{-1}(y)=\varnothing } or A ∩ ∩ f − − 1 ( y ) = f − − 1 ( y ) {\displaystyle A\cap f^{-1}(y)=f^{-1}(y)} ).

For a set A {\displaystyle A} to be f {\displaystyle f} -saturated, it is necessary that A ⊆ ⊆ domain ⁡ ⁡ f .

{\displaystyle A\subseteq \operatorname {domain} f.} Compositions and restrictions of functions If f {\displaystyle f} and g {\displaystyle g} are maps then g ∘ ∘ f {\displaystyle g\circ f} denotes the composition map g ∘ ∘ f : { x ∈ ∈ domain ⁡ ⁡ f : f ( x ) ∈ ∈ domain ⁡ ⁡ g } → → codomain ⁡ ⁡ g {\displaystyle g\circ f~:~\{\,x\in \operatorname {domain} f~:~f(x)\in \operatorname {domain} g\,\}~\to ~\operatorname {codomain} g} with domain and codomain domain ⁡ ⁡ ( g ∘ ∘ f ) = { x ∈ ∈ domain ⁡ ⁡ f : f ( x ) ∈ ∈ domain ⁡ ⁡ g } codomain ⁡ ⁡ ( g ∘ ∘ f ) = codomain ⁡ ⁡ g {\displaystyle {\begin{alignedat}{4}\operatorname {domain} (g\circ f)&=\{\,x\in \operatorname {domain} f~:~f(x)\in \operatorname {domain} g\,\}\\[0.4ex]\operatorname {codomain} (g\circ f)&=\operatorname {codomain} g\\[0.7ex]\end{alignedat}}} defined by ( g ∘ ∘ f ) ( x ) = def g ( f ( x ) ) .

{\displaystyle (g\circ f)(x)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~g(f(x)).} The restriction of f : X → → Y {\displaystyle f:X\to Y} to L , {\displaystyle L,} denoted by f | L , {\displaystyle f{\big \vert }_{L},} is the map f | L : L ∩ ∩ domain ⁡ ⁡ f → → Y {\displaystyle f{\big \vert }_{L}~:~L\cap \operatorname {domain} f~\to ~Y} with domain ⁡ ⁡ f | L = L ∩ ∩ domain ⁡ ⁡ f {\displaystyle \operatorname {domain} f{\big \vert }_{L}~=~L\cap \operatorname {domain} f} defined by sending x ∈ ∈ L ∩ ∩ domain ⁡ ⁡ f {\displaystyle x\in L\cap \operatorname {domain} f} to f ( x ) ; {\displaystyle f(x);} that is, f | L ( x ) = def f ( x ) .

{\displaystyle f{\big \vert }_{L}(x)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~f(x).} Alternatively, f | L = f ∘ ∘ In ⁡ ⁡ {\displaystyle ~f{\big \vert }_{L}~=~f\circ \operatorname {In} ~} where In ⁡ ⁡ : L ∩ ∩ X → → X {\displaystyle ~\operatorname {In} ~:~L\cap X\to X~} denotes the inclusion map , which is defined by In ⁡ ⁡ ( s ) = def s .

{\displaystyle \operatorname {In} (s)~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~s.} (Pre)Images of arbitrary unions ⋃'s and intersections ⋂'s [ edit ] If ( L i ) i ∈ ∈ I {\displaystyle \left(L_{i}\right)_{i\in I}} is a family of arbitrary sets indexed by I ≠ ≠ ∅ ∅ {\displaystyle I\neq \varnothing } then: [ 5 ] f ( ⋂ ⋂ i ∈ ∈ I L i ) ⊆ ⊆ ⋂ ⋂ i ∈ ∈ I f ( L i ) f ( ⋃ ⋃ i ∈ ∈ I L i ) = ⋃ ⋃ i ∈ ∈ I f ( L i ) f − − 1 ( ⋃ ⋃ i ∈ ∈ I L i ) = ⋃ ⋃ i ∈ ∈ I f − − 1 ( L i ) f − − 1 ( ⋂ ⋂ i ∈ ∈ I L i ) = ⋂ ⋂ i ∈ ∈ I f − − 1 ( L i ) {\displaystyle {\begin{alignedat}{4}f\left(\bigcap _{i\in I}L_{i}\right)\;&~\;\color {Red}{\subseteq }\color {Black}{}~\;\;\;\bigcap _{i\in I}f\left(L_{i}\right)\\f\left(\bigcup _{i\in I}L_{i}\right)\;&~=~\;\bigcup _{i\in I}f\left(L_{i}\right)\\f^{-1}\left(\bigcup _{i\in I}L_{i}\right)\;&~=~\;\bigcup _{i\in I}f^{-1}\left(L_{i}\right)\\f^{-1}\left(\bigcap _{i\in I}L_{i}\right)\;&~=~\;\bigcap _{i\in I}f^{-1}\left(L_{i}\right)\\\end{alignedat}}} So of these four identities, it is only images of intersections that are not always preserved. Preimages preserve all basic set operations. Unions are preserved by both images and preimages.

If all L i {\displaystyle L_{i}} are f {\displaystyle f} -saturated then ⋂ ⋂ i ∈ ∈ I L i {\displaystyle \bigcap _{i\in I}L_{i}} be will be f {\displaystyle f} -saturated and equality will hold in the first relation above; explicitly, this means: f ( ⋂ ⋂ i ∈ ∈ I L i ) = ⋂ ⋂ i ∈ ∈ I f ( L i ) IF X ∩ ∩ L i = f − − 1 ( f ( L i ) ) for all i ∈ ∈ I .

{\displaystyle f\left(\bigcap _{i\in I}L_{i}\right)~=~\bigcap _{i\in I}f\left(L_{i}\right)\qquad {\textit {IF}}\qquad X\cap L_{i}=f^{-1}\left(f\left(L_{i}\right)\right)\quad {\text{ for all }}\quad i\in I.} Conditional Equality 10a If ( A i ) i ∈ ∈ I {\displaystyle \left(A_{i}\right)_{i\in I}} is a family of arbitrary subsets of X = domain ⁡ ⁡ f , {\displaystyle X=\operatorname {domain} f,} which means that A i ⊆ ⊆ X {\displaystyle A_{i}\subseteq X} for all i , {\displaystyle i,} then Conditional Equality 10a becomes: f ( ⋂ ⋂ i ∈ ∈ I A i ) = ⋂ ⋂ i ∈ ∈ I f ( A i ) IF A i = f − − 1 ( f ( A i ) ) for all i ∈ ∈ I .

{\displaystyle f\left(\bigcap _{i\in I}A_{i}\right)~=~\bigcap _{i\in I}f\left(A_{i}\right)\qquad {\textit {IF}}\qquad A_{i}=f^{-1}\left(f\left(A_{i}\right)\right)\quad {\text{ for all }}\quad i\in I.} Conditional Equality 10b (Pre)Images of binary set operations [ edit ] Throughout, let L {\displaystyle L} and R {\displaystyle R} be any sets and let f : X → → Y {\displaystyle f:X\to Y} be any function.

Summary As the table below shows, set equality is not guaranteed only for images of: intersections, set subtractions, and symmetric differences.

Image Preimage Additional assumptions on sets f ( L ∪ ∪ R ) = f ( L ) ∪ ∪ f ( R ) {\displaystyle \,~~~~f(L\cup R)~=~f(L)\cup f(R)} [ 6 ] f − − 1 ( L ∪ ∪ R ) = f − − 1 ( L ) ∪ ∪ f − − 1 ( R ) {\displaystyle f^{-1}(L\cup R)~=~f^{-1}(L)\cup f^{-1}(R)} [ 3 ] None f ( L ∩ ∩ R ) ⊆ ⊆ f ( L ) ∩ ∩ f ( R ) {\displaystyle f(L\cap R)~\subseteq ~f(L)\cap f(R)} f − − 1 ( L ∩ ∩ R ) = f − − 1 ( L ) ∩ ∩ f − − 1 ( R ) {\displaystyle f^{-1}(L\cap R)~=~f^{-1}(L)\cap f^{-1}(R)} [ 3 ] None f ( L ∖ ∖ R ) ⊇ ⊇ f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\setminus R)~\supseteq ~f(L)\setminus f(R)} f − − 1 ( L ) ∖ ∖ f − − 1 ( R ) = f − − 1 ( L ∖ ∖ R ) = f − − 1 ( L ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) = f − − 1 ( [ L ∩ ∩ Im ⁡ ⁡ f ] ∖ ∖ R ) = f − − 1 ( [ L ∩ ∩ Im ⁡ ⁡ f ] ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) {\displaystyle {\begin{alignedat}{4}f^{-1}(L)\setminus f^{-1}(R)&=f^{-1}&&(&&L&&\setminus &&R)\\&=f^{-1}&&(&&L&&\setminus [&&R\cap \operatorname {Im} f])\\&=f^{-1}&&([&&L\cap \operatorname {Im} f]&&\setminus &&R)\\&=f^{-1}&&([&&L\cap \operatorname {Im} f]&&\setminus [&&R\cap \operatorname {Im} f])\end{alignedat}}} [ 5 ] [ 3 ] None f ( X ∖ ∖ R ) ⊇ ⊇ f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)~\supseteq ~f(X)\setminus f(R)} X ∖ ∖ f − − 1 ( R ) = f − − 1 ( Y ∖ ∖ R ) = f − − 1 ( Y ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) = f − − 1 ( Im ⁡ ⁡ f ∖ ∖ R ) = f − − 1 ( Im ⁡ ⁡ f ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) {\displaystyle {\begin{alignedat}{4}X\setminus f^{-1}(R)&=f^{-1}(&&Y&&\setminus &&R)\\&=f^{-1}(&&Y&&\setminus [&&R\cap \operatorname {Im} f])\\&=f^{-1}(&&\operatorname {Im} f&&\setminus &&R)\\&=f^{-1}(&&\operatorname {Im} f&&\setminus [&&R\cap \operatorname {Im} f])\end{alignedat}}} [ note 4 ] None f ( L △ △ R ) ⊇ ⊇ f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)~\supseteq ~f(L)~\triangle ~f(R)} f − − 1 ( L △ △ R ) = f − − 1 ( L ) △ △ f − − 1 ( R ) {\displaystyle f^{-1}\left(L~\triangle ~R\right)~=~f^{-1}(L)~\triangle ~f^{-1}(R)} None Preimages preserve set operations Preimages of sets are well-behaved with respect to all basic set operations: f − − 1 ( L ∪ ∪ R ) = f − − 1 ( L ) ∪ ∪ f − − 1 ( R ) f − − 1 ( L ∩ ∩ R ) = f − − 1 ( L ) ∩ ∩ f − − 1 ( R ) f − − 1 ( L ∖ ∖ R ) = f − − 1 ( L ) ∖ ∖ f − − 1 ( R ) f − − 1 ( L △ △ R ) = f − − 1 ( L ) △ △ f − − 1 ( R ) {\displaystyle {\begin{alignedat}{4}f^{-1}(L\cup R)~&=~f^{-1}(L)\cup f^{-1}(R)\\f^{-1}(L\cap R)~&=~f^{-1}(L)\cap f^{-1}(R)\\f^{-1}(L\setminus \,R)~&=~f^{-1}(L)\setminus \,f^{-1}(R)\\f^{-1}(L\,\triangle \,R)~&=~f^{-1}(L)\,\triangle \,f^{-1}(R)\\\end{alignedat}}} In words, preimages distribute over unions, intersections, set subtraction, and symmetric difference.

Images only preserve unions Images of unions are well-behaved: f ( L ∪ ∪ R ) = f ( L ) ∪ ∪ f ( R ) {\displaystyle {\begin{alignedat}{4}f(L\cup R)~&=~f(L)\cup f(R)\\\end{alignedat}}} but images of the other basic set operations are not since only the following are guaranteed in general: f ( L ∩ ∩ R ) ⊆ ⊆ f ( L ) ∩ ∩ f ( R ) f ( L ∖ ∖ R ) ⊇ ⊇ f ( L ) ∖ ∖ f ( R ) f ( L △ △ R ) ⊇ ⊇ f ( L ) △ △ f ( R ) {\displaystyle {\begin{alignedat}{4}f(L\cap R)~&\subseteq ~f(L)\cap f(R)\\f(L\setminus R)~&\supseteq ~f(L)\setminus f(R)\\f(L\triangle R)~&\supseteq ~f(L)\,\triangle \,f(R)\\\end{alignedat}}} In words, images distribute over unions but not necessarily over intersections, set subtraction, or symmetric difference. What these latter three operations have in common is set subtraction: they either are set subtraction L ∖ ∖ R {\displaystyle L\setminus R} or else they can naturally be defined as the set subtraction of two sets: L ∩ ∩ R = L ∖ ∖ ( L ∖ ∖ R ) and L △ △ R = ( L ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ R ) .

{\displaystyle L\cap R=L\setminus (L\setminus R)\quad {\text{ and }}\quad L\triangle R=(L\cup R)\setminus (L\cap R).} If L = X {\displaystyle L=X} then f ( X ∖ ∖ R ) ⊇ ⊇ f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)\supseteq f(X)\setminus f(R)} where as in the more general case, equality is not guaranteed. If f {\displaystyle f} is surjective then f ( X ∖ ∖ R ) ⊇ ⊇ Y ∖ ∖ f ( R ) , {\displaystyle f(X\setminus R)~\supseteq ~Y\setminus f(R),} which can be rewritten as: f ( R ∁ ∁ ) ⊇ ⊇ f ( R ) ∁ ∁ {\displaystyle f\left(R^{\complement }\right)~\supseteq ~f(R)^{\complement }} if R ∁ ∁ = def X ∖ ∖ R {\displaystyle R^{\complement }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~X\setminus R} and f ( R ) ∁ ∁ = def Y ∖ ∖ f ( R ) .

{\displaystyle f(R)^{\complement }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~Y\setminus f(R).} Counter-examples: images of operations not distributing [ edit ] Picture showing f {\displaystyle f} failing to distribute over set intersection : f ( A 1 ∩ ∩ A 2 ) ⊊ ⊊ f ( A 1 ) ∩ ∩ f ( A 2 ) .

{\displaystyle f\left(A_{1}\cap A_{2}\right)\subsetneq f\left(A_{1}\right)\cap f\left(A_{2}\right).} The map f : R → → R {\displaystyle f:\mathbb {R} \to \mathbb {R} } is defined by x ↦ ↦ x 2 , {\displaystyle x\mapsto x^{2},} where R {\displaystyle \mathbb {R} } denotes the real numbers . The sets A 1 = [ − − 4 , 2 ] {\displaystyle A_{1}=[-4,2]} and A 2 = [ − − 2 , 4 ] {\displaystyle A_{2}=[-2,4]} are shown in blue immediately below the x {\displaystyle x} -axis while their intersection A 3 = [ − − 2 , 2 ] {\displaystyle A_{3}=[-2,2]} is shown in green .

If f : { 1 , 2 } → → Y {\displaystyle f:\{1,2\}\to Y} is constant, L = { 1 } , {\displaystyle L=\{1\},} and R = { 2 } {\displaystyle R=\{2\}} then all four of the set containments f ( L ∩ ∩ R ) ⊊ ⊊ f ( L ) ∩ ∩ f ( R ) f ( L ∖ ∖ R ) ⊋ ⊋ f ( L ) ∖ ∖ f ( R ) f ( X ∖ ∖ R ) ⊋ ⊋ f ( X ) ∖ ∖ f ( R ) f ( L △ △ R ) ⊋ ⊋ f ( L ) △ △ f ( R ) {\displaystyle {\begin{alignedat}{4}f(L\cap R)~&\subsetneq ~f(L)\cap f(R)\\f(L\setminus R)~&\supsetneq ~f(L)\setminus f(R)\\f(X\setminus R)~&\supsetneq ~f(X)\setminus f(R)\\f(L\triangle R)~&\supsetneq ~f(L)\triangle f(R)\\\end{alignedat}}} are strict/proper (that is, the sets are not equal) since one side is the empty set while the other is non-empty. Thus equality is not guaranteed for even the simplest of functions. 
The example above is now generalized to show that these four set equalities can fail for any constant function whose domain contains at least two (distinct) points.

Example : Let f : X → → Y {\displaystyle f:X\to Y} be any constant function with image f ( X ) = { y } {\displaystyle f(X)=\{y\}} and suppose that L , R ⊆ ⊆ X {\displaystyle L,R\subseteq X} are non-empty disjoint subsets; that is, L ≠ ≠ ∅ ∅ , R ≠ ≠ ∅ ∅ , {\displaystyle L\neq \varnothing ,R\neq \varnothing ,} and L ∩ ∩ R = ∅ ∅ , {\displaystyle L\cap R=\varnothing ,} which implies that all of the sets L △ △ R = L ∪ ∪ R , {\displaystyle L~\triangle ~R=L\cup R,} L ∖ ∖ R = L , {\displaystyle \,L\setminus R=L,} and X ∖ ∖ R ⊇ ⊇ L ∖ ∖ R {\displaystyle X\setminus R\supseteq L\setminus R} are not empty and so consequently, their images under f {\displaystyle f} are all equal to { y } .

{\displaystyle \{y\}.} The containment f ( L ∖ ∖ R ) ⊋ ⊋ f ( L ) ∖ ∖ f ( R ) {\displaystyle ~f(L\setminus R)~\supsetneq ~f(L)\setminus f(R)~} is strict: { y } = f ( L ∖ ∖ R ) ≠ ≠ f ( L ) ∖ ∖ f ( R ) = { y } ∖ ∖ { y } = ∅ ∅ {\displaystyle \{y\}~=~f(L\setminus R)~\neq ~f(L)\setminus f(R)~=~\{y\}\setminus \{y\}~=~\varnothing } In words: functions might not distribute over set subtraction ∖ ∖ {\displaystyle \,\setminus \,} The containment f ( X ∖ ∖ R ) ⊋ ⊋ f ( X ) ∖ ∖ f ( R ) {\displaystyle ~f(X\setminus R)~\supsetneq ~f(X)\setminus f(R)~} is strict: { y } = f ( X ∖ ∖ R ) ≠ ≠ f ( X ) ∖ ∖ f ( R ) = { y } ∖ ∖ { y } = ∅ ∅ .

{\displaystyle \{y\}~=~f(X\setminus R)~\neq ~f(X)\setminus f(R)~=~\{y\}\setminus \{y\}~=~\varnothing .} The containment f ( L △ △ R ) ⊋ ⊋ f ( L ) △ △ f ( R ) {\displaystyle ~f(L~\triangle ~R)~\supsetneq ~f(L)~\triangle ~f(R)~} is strict: { y } = f ( L △ △ R ) ≠ ≠ f ( L ) △ △ f ( R ) = { y } △ △ { y } = ∅ ∅ {\displaystyle \{y\}~=~f\left(L~\triangle ~R\right)~\neq ~f(L)~\triangle ~f(R)~=~\{y\}\triangle \{y\}~=~\varnothing } In words: functions might not distribute over symmetric difference △ △ {\displaystyle \,\triangle \,} (which can be defined as the set subtraction of two sets: L △ △ R = ( L ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ R ) {\displaystyle L\triangle R=(L\cup R)\setminus (L\cap R)} ).

The containment f ( L ∩ ∩ R ) ⊊ ⊊ f ( L ) ∩ ∩ f ( R ) {\displaystyle ~f(L\cap R)~\subsetneq ~f(L)\cap f(R)~} is strict: ∅ ∅ = f ( ∅ ∅ ) = f ( L ∩ ∩ R ) ≠ ≠ f ( L ) ∩ ∩ f ( R ) = { y } ∩ ∩ { y } = { y } {\displaystyle \varnothing ~=~f(\varnothing )~=~f(L\cap R)~\neq ~f(L)\cap f(R)~=~\{y\}\cap \{y\}~=~\{y\}} In words: functions might not distribute over set intersection ∩ ∩ {\displaystyle \,\cap \,} (which can be defined as the set subtraction of two sets: L ∩ ∩ R = L ∖ ∖ ( L ∖ ∖ R ) {\displaystyle L\cap R=L\setminus (L\setminus R)} ).

What the set operations in these four examples have in common is that they either are set subtraction ∖ ∖ {\displaystyle \setminus } (examples (1) and (2)) or else they can naturally be defined as the set subtraction of two sets (examples (3) and (4)).

Mnemonic : In fact, for each of the above four set formulas for which equality is not guaranteed, the direction of the containment (that is, whether to use ⊆ ⊆ or ⊇ ⊇ {\displaystyle \,\subseteq {\text{ or }}\supseteq \,} ) can always be deduced by imagining the function f {\displaystyle f} as being constant and the two sets ( L {\displaystyle L} and R {\displaystyle R} ) as being non-empty disjoint subsets of its domain. This is because every equality fails for such a function and sets: one side will be always be ∅ ∅ {\displaystyle \varnothing } and the other non-empty − from this fact, the correct choice of ⊆ ⊆ or ⊇ ⊇ {\displaystyle \,\subseteq {\text{ or }}\supseteq \,} can be deduced by answering: "which side is empty?" For example, to decide if the ?

{\displaystyle ?} in f ( L △ △ R ) ∖ ∖ f ( R ) ?

f ( ( L △ △ R ) ∖ ∖ R ) {\displaystyle f(L\triangle R)\setminus f(R)~\;~?~\;~f((L\triangle R)\setminus R)} should be ⊆ ⊆ or ⊇ ⊇ , {\displaystyle \,\subseteq {\text{ or }}\supseteq ,\,} pretend [ note 5 ] that f {\displaystyle f} is constant and that L △ △ R {\displaystyle L\triangle R} and R {\displaystyle R} are non-empty disjoint subsets of f {\displaystyle f} 's domain; then the left hand side would be empty (since f ( L △ △ R ) ∖ ∖ f ( R ) = { f 's single value } ∖ ∖ { f 's single value } = ∅ ∅ {\displaystyle f(L\triangle R)\setminus f(R)=\{f{\text{'s single value}}\}\setminus \{f{\text{'s single value}}\}=\varnothing } ), which indicates that ?

{\displaystyle \,?\,} should be ⊆ ⊆ {\displaystyle \,\subseteq \,} (the resulting statement is always guaranteed to be true) because this is the choice that will make ∅ ∅ = left hand side ?

right hand side {\displaystyle \varnothing ={\text{left hand side}}~\;~?~\;~{\text{right hand side}}} true. 
Alternatively, the correct direction of containment can also be deduced by consideration of any constant f : { 1 , 2 } → → Y {\displaystyle f:\{1,2\}\to Y} with L = { 1 } {\displaystyle L=\{1\}} and R = { 2 } .

{\displaystyle R=\{2\}.} Furthermore, this mnemonic can also be used to correctly deduce whether or not a set operation always distribute over images or preimages; for example, to determine whether or not f ( L ∩ ∩ R ) {\displaystyle f(L\cap R)} always equals f ( L ) ∩ ∩ f ( R ) , {\displaystyle f(L)\cap f(R),} or alternatively, whether or not f − − 1 ( L ∩ ∩ R ) {\displaystyle f^{-1}(L\cap R)} always equals f − − 1 ( L ) ∩ ∩ f − − 1 ( R ) {\displaystyle f^{-1}(L)\cap f^{-1}(R)} (although ∩ ∩ {\displaystyle \,\cap \,} was used here, it can replaced by ∪ ∪ , ∖ ∖ , or △ △ {\displaystyle \,\cup ,\,\setminus ,{\text{ or }}\,\triangle } ). The answer to such a question can, as before, be deduced by consideration of this constant function: the answer for the general case (that is, for arbitrary f , L , {\displaystyle f,L,} and R {\displaystyle R} ) is always the same as the answer for this choice of (constant) function and disjoint non-empty sets.

Conditions guaranteeing that images distribute over set operations [ edit ] Characterizations of when equality holds for all sets : For any function f : X → → Y , {\displaystyle f:X\to Y,} the following statements are equivalent: f : X → → Y {\displaystyle f:X\to Y} is injective .

This means: f ( x ) ≠ ≠ f ( y ) {\displaystyle f(x)\neq f(y)} for all distinct x , y ∈ ∈ X .

{\displaystyle x,y\in X.} f ( L ∩ ∩ R ) = f ( L ) ∩ ∩ f ( R ) for all L , R ⊆ ⊆ X .

{\displaystyle f(L\cap R)=f(L)\,\cap \,f(R)\,{\text{ for all }}\,L,R\subseteq X.} (The equals sign = {\displaystyle \,=\,} can be replaced with ⊇ ⊇ {\displaystyle \,\supseteq \,} ).

f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ f ( R ) for all L , R ⊆ ⊆ X .

{\displaystyle f(L\,\setminus R)=f(L)\,\setminus \,f(R)\;{\text{ for all }}\,L,R\subseteq X.} (The equals sign = {\displaystyle \,=\,} can be replaced with ⊆ ⊆ {\displaystyle \,\subseteq \,} ).

f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ f ( R ) for all R ⊆ ⊆ X .

{\displaystyle f(X\setminus R)=f(X)\setminus \,f(R)\;{\text{ for all }}\,~~~~~R\subseteq X.} (The equals sign = {\displaystyle \,=\,} can be replaced with ⊆ ⊆ {\displaystyle \,\subseteq \,} ).

f ( L △ △ R ) = f ( L ) △ △ f ( R ) for all L , R ⊆ ⊆ X .

{\displaystyle f(L\,\triangle \,R)=f(L)\,\triangle \,f(R)\;{\text{ for all }}\,L,R\subseteq X.} (The equals sign = {\displaystyle \,=\,} can be replaced with ⊆ ⊆ {\displaystyle \,\subseteq \,} ).

Any one of the four statements (b) - (e) but with the words "for all" replaced with any one of the following: "for all singleton subsets " In particular, the statement that results from (d) gives a characterization of injectivity that explicitly involves only one point (rather than two): f {\displaystyle f} is injective if and only if f ( x ) ∉ f ( X ∖ ∖ { x } ) for every x ∈ ∈ X .

{\displaystyle f(x)\not \in f(X\setminus \{x\})\;{\text{ for every }}\,x\in X.} "for all disjoint singleton subsets" For statement (d), this is the same as: "for all singleton subsets" (because the definition of " pairwise disjoint " is satisfies vacuously by any family that consists of exactly 1 set).

"for all disjoint subsets" In particular, if a map is not known to be injective then barring additional information, there is no guarantee that any of the equalities in statements (b) - (e) hold.

An example above can be used to help prove this characterization. Indeed, comparison of that example with such a proof suggests that the example is representative of the fundamental reason why one of these four equalities in statements (b) - (e) might not hold (that is, representative of "what goes wrong" when a set equality does not hold).

Conditions for f(L⋂R) = f(L)⋂f(R) [ edit ] f ( L ∩ ∩ R ) ⊆ ⊆ f ( L ) ∩ ∩ f ( R ) always holds {\displaystyle f(L\cap R)~\subseteq ~f(L)\cap f(R)\qquad \qquad {\text{ always holds}}} Characterizations of equality : The following statements are equivalent: f ( L ∩ ∩ R ) = f ( L ) ∩ ∩ f ( R ) {\displaystyle f(L\cap R)~=~f(L)\cap f(R)} f ( L ∩ ∩ R ) ⊇ ⊇ f ( L ) ∩ ∩ f ( R ) {\displaystyle f(L\cap R)~\supseteq ~f(L)\cap f(R)} L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~f^{-1}(f(L\cap R))} The left hand side L ∩ ∩ f − − 1 ( f ( R ) ) {\displaystyle L\cap f^{-1}(f(R))} is always equal to L ∩ ∩ f − − 1 ( f ( L ) ∩ ∩ f ( R ) ) {\displaystyle L\cap f^{-1}(f(L)\cap f(R))} (because L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ f − − 1 ( f ( L ) ) {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~f^{-1}(f(L))} always holds).

R ∩ ∩ f − − 1 ( f ( L ) ) ⊆ ⊆ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle R\cap f^{-1}(f(L))~\subseteq ~f^{-1}(f(L\cap R))} L ∩ ∩ f − − 1 ( f ( R ) ) = f − − 1 ( f ( L ∩ ∩ R ) ) ∩ ∩ L {\displaystyle L\cap f^{-1}(f(R))~=~f^{-1}(f(L\cap R))\cap L} R ∩ ∩ f − − 1 ( f ( L ) ) = f − − 1 ( f ( L ∩ ∩ R ) ) ∩ ∩ R {\displaystyle R\cap f^{-1}(f(L))~=~f^{-1}(f(L\cap R))\cap R} If l ∈ ∈ L {\displaystyle l\in L} satisfies f ( l ) ∈ ∈ f ( R ) {\displaystyle f(l)\in f(R)} then f ( l ) ∈ ∈ f ( L ∩ ∩ R ) .

{\displaystyle f(l)\in f(L\cap R).} If y ∈ ∈ f ( L ) {\displaystyle y\in f(L)} but y ∉ ∉ f ( L ∩ ∩ R ) {\displaystyle y\notin f(L\cap R)} then y ∉ ∉ f ( R ) .

{\displaystyle y\notin f(R).} f ( L ) ∖ ∖ f ( L ∩ ∩ R ) ⊆ ⊆ f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L)\,\setminus \,f(L\cap R)~\subseteq ~f(L)\,\setminus \,f(R)} f ( R ) ∖ ∖ f ( L ∩ ∩ R ) ⊆ ⊆ f ( R ) ∖ ∖ f ( L ) {\displaystyle f(R)\,\setminus \,f(L\cap R)~\subseteq ~f(R)\,\setminus \,f(L)} f ( L ∪ ∪ R ) ∖ ∖ f ( L ∩ ∩ R ) ⊆ ⊆ f ( L ) △ △ f ( R ) {\displaystyle f(L\cup R)\setminus f(L\cap R)~\subseteq ~f(L)\,\triangle \,f(R)} Any of the above three conditions (i) - (k) but with the subset symbol ⊆ ⊆ {\displaystyle \,\subseteq \,} replaced with an equals sign = .

{\displaystyle \,=.\,} Sufficient conditions for equality : Equality holds if any of the following are true: f {\displaystyle f} is injective.

[ 7 ] The restriction f | L ∪ ∪ R {\displaystyle f{\big \vert }_{L\cup R}} is injective.

f − − 1 ( f ( R ) ) ⊆ ⊆ R {\displaystyle f^{-1}(f(R))~\subseteq ~R} [ note 6 ] f − − 1 ( f ( L ) ) ⊆ ⊆ L {\displaystyle f^{-1}(f(L))~\subseteq ~L} R {\displaystyle R} is f {\displaystyle f} -saturated; that is, f − − 1 ( f ( R ) ) = R {\displaystyle f^{-1}(f(R))=R} [ note 6 ] L {\displaystyle L} is f {\displaystyle f} -saturated; that is, f − − 1 ( f ( L ) ) = L {\displaystyle f^{-1}(f(L))=L} f ( L ) ⊆ ⊆ f ( L ∩ ∩ R ) {\displaystyle f(L)~\subseteq ~f(L\cap R)} f ( R ) ⊆ ⊆ f ( L ∩ ∩ R ) {\displaystyle f(R)~\subseteq ~f(L\cap R)} f ( L ∖ ∖ R ) ⊆ ⊆ f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\,\setminus \,R)~\subseteq ~f(L)\setminus \,f(R)} or equivalently, f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\,\setminus \,R)~=~f(L)\setminus f(R)} f ( R ∖ ∖ L ) ⊆ ⊆ f ( R ) ∖ ∖ f ( L ) {\displaystyle f(R\,\setminus \,L)~\subseteq ~f(R)\setminus \,f(L)} or equivalently, f ( R ∖ ∖ L ) = f ( R ) ∖ ∖ f ( L ) {\displaystyle f(R\,\setminus \,L)~=~f(R)\setminus f(L)} f ( L △ △ R ) ⊆ ⊆ f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)\subseteq f(L)~\triangle ~f(R)} or equivalently, f ( L △ △ R ) = f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)=f(L)~\triangle ~f(R)} R ∩ ∩ domain ⁡ ⁡ f ⊆ ⊆ L {\displaystyle R\cap \operatorname {domain} f\,\subseteq L} L ∩ ∩ domain ⁡ ⁡ f ⊆ ⊆ R {\displaystyle L\cap \operatorname {domain} f\,\subseteq R} R ⊆ ⊆ L {\displaystyle R\subseteq L} L ⊆ ⊆ R {\displaystyle L\subseteq R} In addition, the following always hold: f ( f − − 1 ( L ) ∩ ∩ R ) = L ∩ ∩ f ( R ) {\displaystyle f\left(f^{-1}(L)\cap R\right)~=~L\cap f(R)} f ( f − − 1 ( L ) ∪ ∪ R ) = ( L ∩ ∩ Im ⁡ ⁡ f ) ∪ ∪ f ( R ) {\displaystyle f\left(f^{-1}(L)\cup R\right)~=~(L\cap \operatorname {Im} f)\cup f(R)} Conditions for f(L\R) = f(L)\f(R) [ edit ] f ( L ∖ ∖ R ) ⊇ ⊇ f ( L ) ∖ ∖ f ( R ) always holds {\displaystyle f(L\setminus R)~\supseteq ~f(L)\setminus f(R)\qquad \qquad {\text{ always holds}}} Characterizations of equality : The following statements are equivalent: [ proof 1 ] f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\setminus R)~=~f(L)\setminus f(R)} f ( L ∖ ∖ R ) ⊆ ⊆ f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\setminus R)~\subseteq ~f(L)\setminus f(R)} L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ R {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~R} L ∩ ∩ f − − 1 ( f ( R ) ) = L ∩ ∩ R ∩ ∩ domain ⁡ ⁡ f {\displaystyle L\cap f^{-1}(f(R))~=~L\cap R\cap \operatorname {domain} f} Whenever y ∈ ∈ f ( L ) ∩ ∩ f ( R ) {\displaystyle y\in f(L)\cap f(R)} then L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R .

{\displaystyle L\cap f^{-1}(y)\subseteq R.} f ( L ) ∩ ∩ f ( R ) ⊆ ⊆ { y ∈ ∈ f ( L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } {\textstyle f(L)\cap f(R)~\subseteq ~\left\{y\in f(L):L\cap f^{-1}(y)\subseteq R\right\}} The set on the right hand side is always equal to { y ∈ ∈ f ( L ∩ ∩ R ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } .

{\displaystyle \left\{y\in f(L\cap R):L\cap f^{-1}(y)\,\subseteq R\right\}.} f ( L ) ∩ ∩ f ( R ) = { y ∈ ∈ f ( L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } {\textstyle f(L)\cap f(R)~=~\left\{y\in f(L):L\cap f^{-1}(y)\subseteq R\right\}} This is the above condition (f) but with the subset symbol ⊆ ⊆ {\displaystyle \,\subseteq \,} replaced with an equals sign = .

{\displaystyle \,=.\,} Necessary conditions for equality (excluding characterizations):  If equality holds then the following are necessarily true: f ( L ∩ ∩ R ) = f ( L ) ∩ ∩ f ( R ) , {\displaystyle f(L\cap R)=f(L)\cap f(R),} or equivalently f ( L ∩ ∩ R ) ⊇ ⊇ f ( L ) ∩ ∩ f ( R ) .

{\displaystyle f(L\cap R)\supseteq f(L)\cap f(R).} L ∩ ∩ f − − 1 ( f ( R ) ) = L ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle L\cap f^{-1}(f(R))~=~L\cap f^{-1}(f(L\cap R))} or equivalently, L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~f^{-1}(f(L\cap R))} R ∩ ∩ f − − 1 ( f ( L ) ) = R ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle R\cap f^{-1}(f(L))~=~R\cap f^{-1}(f(L\cap R))} Sufficient conditions for equality : Equality holds if any of the following are true: f {\displaystyle f} is injective.

The restriction f | L ∪ ∪ R {\displaystyle f{\big \vert }_{L\cup R}} is injective.

f − − 1 ( f ( R ) ) ⊆ ⊆ R {\displaystyle f^{-1}(f(R))~\subseteq ~R} [ note 6 ] or equivalently, R ∩ ∩ domain ⁡ ⁡ f = f − − 1 ( f ( R ) ) {\displaystyle R\cap \operatorname {domain} f~=~f^{-1}(f(R))} R {\displaystyle R} is f {\displaystyle f} -saturated; that is, R = f − − 1 ( f ( R ) ) .

{\displaystyle R=f^{-1}(f(R)).} [ note 6 ] f ( L △ △ R ) ⊆ ⊆ f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)\subseteq f(L)~\triangle ~f(R)} or equivalently, f ( L △ △ R ) = f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)=f(L)~\triangle ~f(R)} Conditions for f(X\R) = f(X)\f(R) [ edit ] f ( X ∖ ∖ R ) ⊇ ⊇ f ( X ) ∖ ∖ f ( R ) always holds, where f : X → → Y {\displaystyle f(X\setminus R)~\supseteq ~f(X)\setminus f(R)\qquad \qquad {\text{ always holds, where }}f:X\to Y} Characterizations of equality : The following statements are equivalent: [ proof 1 ] f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)~=~f(X)\setminus f(R)} f ( X ∖ ∖ R ) ⊆ ⊆ f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)~\subseteq ~f(X)\setminus f(R)} f − − 1 ( f ( R ) ) ⊆ ⊆ R {\displaystyle f^{-1}(f(R))\,\subseteq \,R} f − − 1 ( f ( R ) ) = R ∩ ∩ domain ⁡ ⁡ f {\displaystyle f^{-1}(f(R))\,=\,R\cap \operatorname {domain} f} R ∩ ∩ domain ⁡ ⁡ f {\displaystyle R\cap \operatorname {domain} f} is f {\displaystyle f} -saturated.

Whenever y ∈ ∈ f ( R ) {\displaystyle y\in f(R)} then f − − 1 ( y ) ⊆ ⊆ R .

{\displaystyle f^{-1}(y)\subseteq R.} f ( R ) ⊆ ⊆ { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } {\textstyle f(R)~\subseteq ~\left\{y\in f(R):f^{-1}(y)\subseteq R\right\}} f ( R ) = { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } {\textstyle f(R)~=~\left\{y\in f(R):f^{-1}(y)\subseteq R\right\}} where if R ⊆ ⊆ domain ⁡ ⁡ f {\displaystyle R\subseteq \operatorname {domain} f} then this list can be extended to include: R {\displaystyle R} is f {\displaystyle f} -saturated; that is, R = f − − 1 ( f ( R ) ) .

{\displaystyle R=f^{-1}(f(R)).} Sufficient conditions for equality :  Equality holds if any of the following are true: f {\displaystyle f} is injective.

R {\displaystyle R} is f {\displaystyle f} -saturated; that is, R = f − − 1 ( f ( R ) ) .

{\displaystyle R=f^{-1}(f(R)).} Conditions for f(L∆R) = f(L)∆f(R) [ edit ] f ( L △ △ R ) ⊇ ⊇ f ( L ) △ △ f ( R ) always holds {\displaystyle f\left(L~\triangle ~R\right)~\supseteq ~f(L)~\triangle ~f(R)\qquad \qquad {\text{ always holds}}} Characterizations of equality : The following statements are equivalent: f ( L △ △ R ) = f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)=f(L)~\triangle ~f(R)} f ( L △ △ R ) ⊆ ⊆ f ( L ) △ △ f ( R ) {\displaystyle f\left(L~\triangle ~R\right)\subseteq f(L)~\triangle ~f(R)} f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\,\setminus \,R)=f(L)\,\setminus \,f(R)} and f ( R ∖ ∖ L ) = f ( R ) ∖ ∖ f ( L ) {\displaystyle f(R\,\setminus \,L)=f(R)\,\setminus \,f(L)} f ( L ∖ ∖ R ) ⊆ ⊆ f ( L ) ∖ ∖ f ( R ) {\displaystyle f(L\,\setminus \,R)\subseteq f(L)\,\setminus \,f(R)} and f ( R ∖ ∖ L ) ⊆ ⊆ f ( R ) ∖ ∖ f ( L ) {\displaystyle f(R\,\setminus \,L)\subseteq f(R)\,\setminus \,f(L)} L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ R {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~R} and R ∩ ∩ f − − 1 ( f ( L ) ) ⊆ ⊆ L {\displaystyle R\cap f^{-1}(f(L))~\subseteq ~L} The inclusions L ∩ ∩ f − − 1 ( f ( R ) ) ⊆ ⊆ f − − 1 ( f ( L ) ) {\displaystyle L\cap f^{-1}(f(R))~\subseteq ~f^{-1}(f(L))} and R ∩ ∩ f − − 1 ( f ( L ) ) ⊆ ⊆ f − − 1 ( f ( R ) ) {\displaystyle R\cap f^{-1}(f(L))~\subseteq ~f^{-1}(f(R))} always hold.

L ∩ ∩ f − − 1 ( f ( R ) ) = R ∩ ∩ f − − 1 ( f ( L ) ) {\displaystyle L\cap f^{-1}(f(R))~=~R\cap f^{-1}(f(L))} If this above set equality holds, then this set will also be equal to both L ∩ ∩ R ∩ ∩ domain ⁡ ⁡ f {\displaystyle L\cap R\cap \operatorname {domain} f} and L ∩ ∩ R ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) .

{\displaystyle L\cap R\cap f^{-1}(f(L\cap R)).} L ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) = R ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle L\cap f^{-1}(f(L\cap R))~=~R\cap f^{-1}(f(L\cap R))} and f ( L ∩ ∩ R ) ⊇ ⊇ f ( L ) ∩ ∩ f ( R ) .

{\displaystyle f(L\cap R)~\supseteq ~f(L)\cap f(R).} Necessary conditions for equality (excluding characterizations): If equality holds then the following are necessarily true: f ( L ∩ ∩ R ) = f ( L ) ∩ ∩ f ( R ) , {\displaystyle f(L\cap R)=f(L)\cap f(R),} or equivalently f ( L ∩ ∩ R ) ⊇ ⊇ f ( L ) ∩ ∩ f ( R ) .

{\displaystyle f(L\cap R)\supseteq f(L)\cap f(R).} L ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) = R ∩ ∩ f − − 1 ( f ( L ∩ ∩ R ) ) {\displaystyle L\cap f^{-1}(f(L\cap R))~=~R\cap f^{-1}(f(L\cap R))} Sufficient conditions for equality : Equality holds if any of the following are true: f {\displaystyle f} is injective.

The restriction f | L ∪ ∪ R {\displaystyle f{\big \vert }_{L\cup R}} is injective.

Exact formulas/equalities for images of set operations [ edit ] Formulas for f(L\R) = [ edit ] For any function f : X → → Y {\displaystyle f:X\to Y} and any sets L {\displaystyle L} and R , {\displaystyle R,} [ proof 2 ] f ( L ∖ ∖ R ) = Y ∖ ∖ { y ∈ ∈ Y : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } = f ( L ) ∖ ∖ { y ∈ ∈ f ( L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } = f ( L ) ∖ ∖ { y ∈ ∈ f ( L ∩ ∩ R ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } = f ( L ) ∖ ∖ { y ∈ ∈ V : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } for any superset V ⊇ ⊇ f ( L ∩ ∩ R ) = f ( S ) ∖ ∖ { y ∈ ∈ f ( S ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } for any superset S ⊇ ⊇ L ∩ ∩ X .

{\displaystyle {\begin{alignedat}{4}f(L\setminus R)&=Y~~~\;\,\,\setminus \left\{y\in Y~~~~~~~~~~\;\,~:~L\cap f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(L)\setminus \left\{y\in f(L)~~~~~~~\,~:~L\cap f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(L)\setminus \left\{y\in f(L\cap R)~:~L\cap f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(L)\setminus \left\{y\in V~~~~~~~~~~~~\,~:~L\cap f^{-1}(y)\subseteq R\right\}\qquad &&{\text{ for any superset }}\quad V\supseteq f(L\cap R)\\[0.4ex]&=f(S)\setminus \left\{y\in f(S)~~~~~~~\,~:~L\cap f^{-1}(y)\subseteq R\right\}\qquad &&{\text{ for any superset }}\quad S\supseteq L\cap X.\\[0.7ex]\end{alignedat}}} Formulas for f(X\R) = [ edit ] Taking L := X = domain ⁡ ⁡ f {\displaystyle L:=X=\operatorname {domain} f} in the above formulas gives: f ( X ∖ ∖ R ) = Y ∖ ∖ { y ∈ ∈ Y : f − − 1 ( y ) ⊆ ⊆ R } = f ( X ) ∖ ∖ { y ∈ ∈ f ( X ) : f − − 1 ( y ) ⊆ ⊆ R } = f ( X ) ∖ ∖ { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } = f ( X ) ∖ ∖ { y ∈ ∈ W : f − − 1 ( y ) ⊆ ⊆ R } for any superset W ⊇ ⊇ f ( R ) {\displaystyle {\begin{alignedat}{4}f(X\setminus R)&=Y~~~\;\,\,\setminus \left\{y\in Y~~~~\;\,\,:~f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(X)\setminus \left\{y\in f(X)~:~f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(X)\setminus \left\{y\in f(R)~:~f^{-1}(y)\subseteq R\right\}\\[0.4ex]&=f(X)\setminus \left\{y\in W~~~\;\,\,:~f^{-1}(y)\subseteq R\right\}\qquad {\text{ for any superset }}\quad W\supseteq f(R)\\[0.4ex]\end{alignedat}}} where the set { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle \left\{y\in f(R):f^{-1}(y)\subseteq R\right\}} is equal to the image under f {\displaystyle f} of the largest f {\displaystyle f} -saturated subset of R .

{\displaystyle R.} In general, only f ( X ∖ ∖ R ) ⊇ ⊇ f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)\,\supseteq \,f(X)\setminus f(R)} always holds and equality is not guaranteed; but replacing " f ( R ) {\displaystyle f(R)} " with its subset " { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle \left\{y\in f(R):f^{-1}(y)\subseteq R\right\}} " results in a formula in which equality is always guaranteed: f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } .

{\displaystyle f(X\setminus R)\,=\,f(X)\setminus \left\{y\in f(R):f^{-1}(y)\subseteq R\right\}.} From this it follows that: [ proof 1 ] f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ f ( R ) if and only if f ( R ) = { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } if and only if f − − 1 ( f ( R ) ) ⊆ ⊆ R .

{\displaystyle f(X\setminus R)=f(X)\setminus f(R)\quad {\text{ if and only if }}\quad f(R)=\left\{y\in f(R):f^{-1}(y)\subseteq R\right\}\quad {\text{ if and only if }}\quad f^{-1}(f(R))\subseteq R.} If f R := { y ∈ ∈ f ( X ) : f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle f_{R}:=\left\{y\in f(X):f^{-1}(y)\subseteq R\right\}} then f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ f R , {\displaystyle f(X\setminus R)=f(X)\setminus f_{R},} which can be written more symmetrically as f ( X ∖ ∖ R ) = f X ∖ ∖ f R {\displaystyle f(X\setminus R)=f_{X}\setminus f_{R}} (since f X = f ( X ) {\displaystyle f_{X}=f(X)} ).

Formulas for f(L∆R) = [ edit ] It follows from L △ △ R = ( L ∪ ∪ R ) ∖ ∖ ( L ∩ ∩ R ) {\displaystyle L\,\triangle \,R=(L\cup R)\setminus (L\cap R)} and the above formulas for the image of a set subtraction that for any function f : X → → Y {\displaystyle f:X\to Y} and any sets L {\displaystyle L} and R , {\displaystyle R,} f ( L △ △ R ) = Y ∖ ∖ { y ∈ ∈ Y : L ∩ ∩ f − − 1 ( y ) = R ∩ ∩ f − − 1 ( y ) } = f ( L ∪ ∪ R ) ∖ ∖ { y ∈ ∈ f ( L ∪ ∪ R ) : L ∩ ∩ f − − 1 ( y ) = R ∩ ∩ f − − 1 ( y ) } = f ( L ∪ ∪ R ) ∖ ∖ { y ∈ ∈ f ( L ∩ ∩ R ) : L ∩ ∩ f − − 1 ( y ) = R ∩ ∩ f − − 1 ( y ) } = f ( L ∪ ∪ R ) ∖ ∖ { y ∈ ∈ V : L ∩ ∩ f − − 1 ( y ) = R ∩ ∩ f − − 1 ( y ) } for any superset V ⊇ ⊇ f ( L ∩ ∩ R ) = f ( S ) ∖ ∖ { y ∈ ∈ f ( S ) : L ∩ ∩ f − − 1 ( y ) = R ∩ ∩ f − − 1 ( y ) } for any superset S ⊇ ⊇ ( L ∪ ∪ R ) ∩ ∩ X .

{\displaystyle {\begin{alignedat}{4}f(L\,\triangle \,R)&=Y~~~\;~~~\;~~~\;\setminus \left\{y\in Y~~~\,~~~\;~~~\,~~:~L\cap f^{-1}(y)=R\cap f^{-1}(y)\right\}\\[0.4ex]&=f(L\cup R)\setminus \left\{y\in f(L\cup R)~:~L\cap f^{-1}(y)=R\cap f^{-1}(y)\right\}\\[0.4ex]&=f(L\cup R)\setminus \left\{y\in f(L\cap R)~:~L\cap f^{-1}(y)=R\cap f^{-1}(y)\right\}\\[0.4ex]&=f(L\cup R)\setminus \left\{y\in V~~~\,~~~~~~~~~~:~L\cap f^{-1}(y)=R\cap f^{-1}(y)\right\}\qquad &&{\text{ for any superset }}\quad V\supseteq f(L\cap R)\\[0.4ex]&=f(S)~~\,~~~\,~\,\setminus \left\{y\in f(S)~~~\,~~~\;~:~L\cap f^{-1}(y)=R\cap f^{-1}(y)\right\}\qquad &&{\text{ for any superset }}\quad S\supseteq (L\cup R)\cap X.\\[0.7ex]\end{alignedat}}} Formulas for f(L) = [ edit ] It follows from the above formulas for the image of a set subtraction that for any function f : X → → Y {\displaystyle f:X\to Y} and any set L , {\displaystyle L,} f ( L ) = Y ∖ ∖ { y ∈ ∈ Y : f − − 1 ( y ) ∩ ∩ L = ∅ ∅ } = Im ⁡ ⁡ f ∖ ∖ { y ∈ ∈ Im ⁡ ⁡ f : f − − 1 ( y ) ∩ ∩ L = ∅ ∅ } = W ∖ ∖ { y ∈ ∈ W : f − − 1 ( y ) ∩ ∩ L = ∅ ∅ } for any superset W ⊇ ⊇ f ( L ) {\displaystyle {\begin{alignedat}{4}f(L)&=Y~~~\;\,\setminus \left\{y\in Y~~~\;\,~:~f^{-1}(y)\cap L=\varnothing \right\}\\[0.4ex]&=\operatorname {Im} f\setminus \left\{y\in \operatorname {Im} f~:~f^{-1}(y)\cap L=\varnothing \right\}\\[0.4ex]&=W~~~\,\setminus \left\{y\in W~~\;\,~:~f^{-1}(y)\cap L=\varnothing \right\}\qquad {\text{ for any superset }}\quad W\supseteq f(L)\\[0.7ex]\end{alignedat}}} This is more easily seen as being a consequence of the fact that for any y ∈ ∈ Y , {\displaystyle y\in Y,} f − − 1 ( y ) ∩ ∩ L = ∅ ∅ {\displaystyle f^{-1}(y)\cap L=\varnothing } if and only if y ∉ f ( L ) .

{\displaystyle y\not \in f(L).} Formulas for f(L⋂R) = [ edit ] It follows from the above formulas for the image of a set that for any function f : X → → Y {\displaystyle f:X\to Y} and any sets L {\displaystyle L} and R , {\displaystyle R,} f ( L ∩ ∩ R ) = Y ∖ ∖ { y ∈ ∈ Y : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } = f ( L ) ∖ ∖ { y ∈ ∈ f ( L ) : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } = f ( L ) ∖ ∖ { y ∈ ∈ U : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } for any superset U ⊇ ⊇ f ( L ) = f ( R ) ∖ ∖ { y ∈ ∈ f ( R ) : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } = f ( R ) ∖ ∖ { y ∈ ∈ V : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } for any superset V ⊇ ⊇ f ( R ) = f ( L ) ∩ ∩ f ( R ) ∖ ∖ { y ∈ ∈ f ( L ) ∩ ∩ f ( R ) : L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ } {\displaystyle {\begin{alignedat}{4}f(L\cap R)&=Y~~~~~\setminus \left\{y\in Y~~~~~~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}&&\\[0.4ex]&=f(L)\setminus \left\{y\in f(L)~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}&&\\[0.4ex]&=f(L)\setminus \left\{y\in U~~~~~~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}\qquad &&{\text{ for any superset }}\quad U\supseteq f(L)\\[0.4ex]&=f(R)\setminus \left\{y\in f(R)~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}&&\\[0.4ex]&=f(R)\setminus \left\{y\in V~~~~~~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}\qquad &&{\text{ for any superset }}\quad V\supseteq f(R)\\[0.4ex]&=f(L)\cap f(R)\setminus \left\{y\in f(L)\cap f(R)~:~L\cap R\cap f^{-1}(y)=\varnothing \right\}&&\\[0.7ex]\end{alignedat}}} where moreover, for any y ∈ ∈ Y , {\displaystyle y\in Y,} L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ L ∖ ∖ R {\displaystyle L\cap f^{-1}(y)\subseteq L\setminus R~} if and only if L ∩ ∩ R ∩ ∩ f − − 1 ( y ) = ∅ ∅ {\displaystyle ~L\cap R\cap f^{-1}(y)=\varnothing ~} if and only if R ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R ∖ ∖ L {\displaystyle ~R\cap f^{-1}(y)\subseteq R\setminus L~} if and only if y ∉ f ( L ∩ ∩ R ) .

{\displaystyle ~y\not \in f(L\cap R).} The sets U {\displaystyle U} and V {\displaystyle V} mentioned above could, in particular, be any of the sets f ( L ∪ ∪ R ) , Im ⁡ ⁡ f , {\displaystyle f(L\cup R),\;\operatorname {Im} f,} or Y , {\displaystyle Y,} for example.

(Pre)Images of set operations on (pre)images [ edit ] Let L {\displaystyle L} and R {\displaystyle R} be arbitrary sets, f : X → → Y {\displaystyle f:X\to Y} be any map, and let A ⊆ ⊆ X {\displaystyle A\subseteq X} and C ⊆ ⊆ Y .

{\displaystyle C\subseteq Y.} Image of preimage Preimage of image Additional assumptions on sets f ( f − − 1 ( L ) ∩ ∩ R ) = L ∩ ∩ f ( R ) {\displaystyle f\left(f^{-1}(L)\cap R\right)=L\cap f(R)} [ 5 ] f − − 1 ( f ( L ) ∩ ∩ R ) ⊇ ⊇ L ∩ ∩ f − − 1 ( R ) {\displaystyle f^{-1}(f(L)\cap R)~\supseteq ~L\cap f^{-1}(R)} None f ( f − − 1 ( L ) ∪ ∪ R ) = ( L ∩ ∩ Im ⁡ ⁡ f ) ∪ ∪ f ( R ) ⊆ ⊆ L ∪ ∪ f ( R ) {\displaystyle f\left(f^{-1}(L)\cup R\right)~=~(L\cap \operatorname {Im} f)\cup f(R)~\subseteq ~L\cup f(R)} f − − 1 ( f ( A ) ∪ ∪ R ) ⊇ ⊇ A ∪ ∪ f − − 1 ( R ) {\displaystyle f^{-1}(f(A)\cup R)~\supseteq ~A\cup f^{-1}(R)} [ 8 ] Equality holds if any of the following are true: f ( A ) ⊆ ⊆ R .

{\displaystyle f(A)\subseteq R.} A ⊆ ⊆ f − − 1 ( R ) .

{\displaystyle A\subseteq f^{-1}(R).} A ⊆ ⊆ X {\displaystyle A\subseteq X} (Pre)Images of operations on images Since f ( L ) ∖ ∖ f ( L ∖ ∖ R ) = { y ∈ ∈ f ( L ∩ ∩ R ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } , {\displaystyle f(L)\setminus f(L\setminus R)~=~\left\{y\in f(L\cap R)~:~L\cap f^{-1}(y)\subseteq R\right\},} f − − 1 ( f ( L ) ∖ ∖ f ( L ∖ ∖ R ) ) = f − − 1 ( { y ∈ ∈ f ( L ∩ ∩ R ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } ) = { x ∈ ∈ f − − 1 ( f ( L ∩ ∩ R ) ) : L ∩ ∩ f − − 1 ( f ( x ) ) ⊆ ⊆ R } {\displaystyle {\begin{alignedat}{4}f^{-1}(f(L)\setminus f(L\setminus R))&=&&f^{-1}\left(\left\{y\in f(L\cap R)~:~L\cap f^{-1}(y)\subseteq R\right\}\right)\\&=&&\left\{x\in f^{-1}(f(L\cap R))~:~L\cap f^{-1}(f(x))\subseteq R\right\}\\\end{alignedat}}} Since f ( X ) ∖ ∖ f ( L ∖ ∖ R ) = { y ∈ ∈ f ( X ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } , {\displaystyle f(X)\setminus f(L\setminus R)~=~\left\{y\in f(X)~:~L\cap f^{-1}(y)\subseteq R\right\},} f − − 1 ( Y ∖ ∖ f ( L ∖ ∖ R ) ) = f − − 1 ( f ( X ) ∖ ∖ f ( L ∖ ∖ R ) ) = f − − 1 ( { y ∈ ∈ f ( X ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } ) = { x ∈ ∈ X : L ∩ ∩ f − − 1 ( f ( x ) ) ⊆ ⊆ R } = X ∖ ∖ f − − 1 ( f ( L ∖ ∖ R ) ) {\displaystyle {\begin{alignedat}{4}f^{-1}(Y\setminus f(L\setminus R))&~=~&&f^{-1}(f(X)\setminus f(L\setminus R))\\&=&&f^{-1}\left(\left\{y\in f(X)~:~L\cap f^{-1}(y)\subseteq R\right\}\right)\\&=&&\left\{x\in X~:~L\cap f^{-1}(f(x))\subseteq R\right\}\\&~=~&&X\setminus f^{-1}(f(L\setminus R))\\\end{alignedat}}} Using L := X , {\displaystyle L:=X,} this becomes f ( X ) ∖ ∖ f ( X ∖ ∖ R ) = { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle ~f(X)\setminus f(X\setminus R)~=~\left\{y\in f(R)~:~f^{-1}(y)\subseteq R\right\}~} and f − − 1 ( Y ∖ ∖ f ( X ∖ ∖ R ) ) = f − − 1 ( f ( X ) ∖ ∖ f ( X ∖ ∖ R ) ) = f − − 1 ( { y ∈ ∈ f ( R ) : f − − 1 ( y ) ⊆ ⊆ R } ) = { r ∈ ∈ R ∩ ∩ X : f − − 1 ( f ( r ) ) ⊆ ⊆ R } ⊆ ⊆ R {\displaystyle {\begin{alignedat}{4}f^{-1}(Y\setminus f(X\setminus R))&~=~&&f^{-1}(f(X)\setminus f(X\setminus R))\\&=&&f^{-1}\left(\left\{y\in f(R)~:~f^{-1}(y)\subseteq R\right\}\right)\\&=&&\left\{r\in R\cap X~:~f^{-1}(f(r))\subseteq R\right\}\\&\subseteq &&R\\\end{alignedat}}} and so f − − 1 ( Y ∖ ∖ f ( L ) ) = f − − 1 ( f ( X ) ∖ ∖ f ( L ) ) = f − − 1 ( { y ∈ ∈ f ( X ∖ ∖ L ) : f − − 1 ( y ) ∩ ∩ L = ∅ ∅ } ) = { x ∈ ∈ X ∖ ∖ L : f ( x ) ∉ f ( L ) } = X ∖ ∖ f − − 1 ( f ( L ) ) ⊆ ⊆ X ∖ ∖ L {\displaystyle {\begin{alignedat}{4}f^{-1}(Y\setminus f(L))&~=~&&f^{-1}(f(X)\setminus f(L))\\&=&&f^{-1}\left(\left\{y\in f(X\setminus L)~:~f^{-1}(y)\cap L=\varnothing \right\}\right)\\&=&&\{x\in X\setminus L~:~f(x)\not \in f(L)\}\\&=&&X\setminus f^{-1}(f(L))\\&\subseteq &&X\setminus L\\\end{alignedat}}} (Pre)Images and Cartesian products Π [ edit ] Let ∏ ∏ Y ∙ ∙ = def ∏ ∏ j ∈ ∈ J Y j {\displaystyle \prod Y_{\bullet }~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\prod _{j\in J}Y_{j}} and for every k ∈ ∈ J , {\displaystyle k\in J,} let π π k : ∏ ∏ j ∈ ∈ J Y j → → Y k {\displaystyle \pi _{k}~:~\prod _{j\in J}Y_{j}~\to ~Y_{k}} denote the canonical projection onto Y k .

{\displaystyle Y_{k}.} Definitions Given a collection of maps F j : X → → Y j {\displaystyle F_{j}:X\to Y_{j}} indexed by j ∈ ∈ J , {\displaystyle j\in J,} define the map ( F j ) j ∈ ∈ J : X → → ∏ ∏ j ∈ ∈ J Y j x ↦ ↦ ( F j ( x j ) ) j ∈ ∈ J , {\displaystyle {\begin{alignedat}{4}\left(F_{j}\right)_{j\in J}:\;&&X&&\;\to \;&\prod _{j\in J}Y_{j}\\[0.3ex]&&x&&\;\mapsto \;&\left(F_{j}\left(x_{j}\right)\right)_{j\in J},\\\end{alignedat}}} which is also denoted by F ∙ ∙ = ( F j ) j ∈ ∈ J .

{\displaystyle F_{\bullet }=\left(F_{j}\right)_{j\in J}.} This is the unique map satisfying π π j ∘ ∘ F ∙ ∙ = F j for all j ∈ ∈ J .

{\displaystyle \pi _{j}\circ F_{\bullet }=F_{j}\quad {\text{ for all }}j\in J.} Conversely, if given a map F : X → → ∏ ∏ j ∈ ∈ J Y j {\displaystyle F~:~X~\to ~\prod _{j\in J}Y_{j}} then F = ( π π j ∘ ∘ F ) j ∈ ∈ J .

{\displaystyle F=\left(\pi _{j}\circ F\right)_{j\in J}.} Explicitly, what this means is that if F k = def π π k ∘ ∘ F : X → → Y k {\displaystyle F_{k}~{\stackrel {\scriptscriptstyle {\text{def}}}{=}}~\pi _{k}\circ F~:~X~\to ~Y_{k}} is defined for every k ∈ ∈ J , {\displaystyle k\in J,} then F {\displaystyle F} the unique map satisfying: π π j ∘ ∘ F = F j {\displaystyle \pi _{j}\circ F=F_{j}} for all j ∈ ∈ J ; {\displaystyle j\in J;} or said more briefly, F = ( F j ) j ∈ ∈ J .

{\displaystyle F=\left(F_{j}\right)_{j\in J}.} The map F ∙ ∙ = ( F j ) j ∈ ∈ J : X → → ∏ ∏ j ∈ ∈ J Y j {\displaystyle F_{\bullet }=\left(F_{j}\right)_{j\in J}~:~X~\to ~\prod _{j\in J}Y_{j}} should not be confused with the Cartesian product ∏ ∏ j ∈ ∈ J F j {\displaystyle \prod _{j\in J}F_{j}} of these maps, which is by definition is the map ∏ ∏ j ∈ ∈ J F j : ∏ ∏ j ∈ ∈ J X → → ∏ ∏ j ∈ ∈ J Y j ( x j ) j ∈ ∈ J ↦ ↦ ( F j ( x j ) ) j ∈ ∈ J {\displaystyle {\begin{alignedat}{4}\prod _{j\in J}F_{j}:\;&&\prod _{j\in J}X&&~\;\to \;~&\prod _{j\in J}Y_{j}\\[0.3ex]&&\left(x_{j}\right)_{j\in J}&&~\;\mapsto \;~&\left(F_{j}\left(x_{j}\right)\right)_{j\in J}\\\end{alignedat}}} with domain ∏ ∏ j ∈ ∈ J X = X J {\displaystyle \prod _{j\in J}X=X^{J}} rather than X .

{\displaystyle X.} Preimage and images of a Cartesian product Suppose F ∙ ∙ = ( F j ) j ∈ ∈ J : X → → ∏ ∏ j ∈ ∈ J Y j .

{\displaystyle F_{\bullet }=\left(F_{j}\right)_{j\in J}~:~X~\to ~\prod _{j\in J}Y_{j}.} If A ⊆ ⊆ X {\displaystyle A~\subseteq ~X} then F ∙ ∙ ( A ) ⊆ ⊆ ∏ ∏ j ∈ ∈ J F j ( A ) .

{\displaystyle F_{\bullet }(A)~~\;\color {Red}{\subseteq }\color {Black}{}\;~~\prod _{j\in J}F_{j}(A).} If B ⊆ ⊆ ∏ ∏ j ∈ ∈ J Y j {\displaystyle B~\subseteq ~\prod _{j\in J}Y_{j}} then F ∙ ∙ − − 1 ( B ) ⊆ ⊆ ⋂ ⋂ j ∈ ∈ J F j − − 1 ( π π j ( B ) ) {\displaystyle F_{\bullet }^{-1}(B)~~\;\color {Red}{\subseteq }\color {Black}{}\;~~\bigcap _{j\in J}F_{j}^{-1}\left(\pi _{j}(B)\right)} where equality will hold if B = ∏ ∏ j ∈ ∈ J π π j ( B ) , {\displaystyle B=\prod _{j\in J}\pi _{j}(B),} in which case F ∙ ∙ − − 1 ( B ) = ⋂ ⋂ j ∈ ∈ J F j − − 1 ( π π j ( B ) ) {\textstyle F_{\bullet }^{-1}(B)=\displaystyle \bigcap _{j\in J}F_{j}^{-1}\left(\pi _{j}(B)\right)} and F ∙ ∙ − − 1 ( ∏ ∏ j ∈ ∈ J π π j ( B ) ) = ⋂ ⋂ j ∈ ∈ J F j − − 1 ( π π j ( B ) ) .

{\displaystyle F_{\bullet }^{-1}\left(\prod _{j\in J}\pi _{j}(B)\right)~=~\bigcap _{j\in J}F_{j}^{-1}\left(\pi _{j}(B)\right).} Eq. 11a For equality to hold, it suffices for there to exist a family ( B j ) j ∈ ∈ J {\displaystyle \left(B_{j}\right)_{j\in J}} of subsets B j ⊆ ⊆ Y j {\displaystyle B_{j}\subseteq Y_{j}} such that B = ∏ ∏ j ∈ ∈ J B j , {\displaystyle B=\prod _{j\in J}B_{j},} in which case: F ∙ ∙ − − 1 ( ∏ ∏ j ∈ ∈ J B j ) = ⋂ ⋂ j ∈ ∈ J F j − − 1 ( B j ) {\displaystyle F_{\bullet }^{-1}\left(\prod _{j\in J}B_{j}\right)~=~\bigcap _{j\in J}F_{j}^{-1}\left(B_{j}\right)} Eq. 11b and π π j ( B ) = B j {\displaystyle \pi _{j}(B)=B_{j}} for all j ∈ ∈ J .

{\displaystyle j\in J.} (Pre)Image of a single set [ edit ] Image Preimage Additional assumptions f ( L ) = f ( L ∩ ∩ domain ⁡ ⁡ f ) = f ( L ∩ ∩ X ) = Y ∖ ∖ { y ∈ ∈ Y : f − − 1 ( y ) ⊆ ⊆ X ∖ ∖ L } = Im ⁡ ⁡ f ∖ ∖ { y ∈ ∈ Im ⁡ ⁡ f : f − − 1 ( y ) ⊆ ⊆ X ∖ ∖ L } {\displaystyle {\begin{alignedat}{4}f(L)&=f(L\cap \operatorname {domain} f)\\&=f(L\cap X)\\&=Y~~~~\,\setminus \left\{y\in Y~~~~\,:f^{-1}(y)\subseteq X\setminus L\right\}\\&=\operatorname {Im} f\setminus \left\{y\in \operatorname {Im} f:f^{-1}(y)\subseteq X\setminus L\right\}\\\end{alignedat}}} f − − 1 ( L ) = f − − 1 ( L ∩ ∩ Im ⁡ ⁡ f ) = f − − 1 ( L ∩ ∩ Y ) {\displaystyle {\begin{alignedat}{4}f^{-1}(L)&=f^{-1}(L\cap \operatorname {Im} f)\\&=f^{-1}(L\cap Y)\end{alignedat}}} None f ( X ) = Im ⁡ ⁡ f ⊆ ⊆ Y {\displaystyle f(X)=\operatorname {Im} f\subseteq Y} f − − 1 ( Y ) = X f − − 1 ( Im ⁡ ⁡ f ) = X {\displaystyle {\begin{alignedat}{4}f^{-1}(Y)&=X\\f^{-1}(\operatorname {Im} f)&=X\end{alignedat}}} None f ( L ) = f ( L ∩ ∩ R ∪ ∪ ( L ∖ ∖ R ) ) = f ( L ∩ ∩ R ) ∪ ∪ f ( L ∖ ∖ R ) {\displaystyle {\begin{alignedat}{4}f(L)&=f(L\cap R~&&\cup ~&&(&&L\setminus R))\\&=f(L\cap R)~&&\cup ~f&&(&&L\setminus R)\end{alignedat}}} f − − 1 ( L ) = f − − 1 ( L ∩ ∩ R ∪ ∪ ( L ∖ ∖ R ) ) = f − − 1 ( L ∩ ∩ R ) ∪ ∪ f − − 1 ( L ∖ ∖ R ) = f − − 1 ( L ∩ ∩ R ) ∪ ∪ f − − 1 ( L ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) = f − − 1 ( L ∩ ∩ R ) ∪ ∪ f − − 1 ( [ L ∩ ∩ Im ⁡ ⁡ f ] ∖ ∖ R ) = f − − 1 ( L ∩ ∩ R ) ∪ ∪ f − − 1 ( [ L ∩ ∩ Im ⁡ ⁡ f ] ∖ ∖ [ R ∩ ∩ Im ⁡ ⁡ f ] ) {\displaystyle {\begin{alignedat}{4}f^{-1}(L)&=f^{-1}(L\cap R&&\cup &&(&&L&&\setminus &&R))\\&=f^{-1}(L\cap R)&&\cup f^{-1}&&(&&L&&\setminus &&R)\\&=f^{-1}(L\cap R)&&\cup f^{-1}&&(&&L&&\setminus [&&R\cap \operatorname {Im} f])\\&=f^{-1}(L\cap R)&&\cup f^{-1}&&([&&L\cap \operatorname {Im} f]&&\setminus &&R)\\&=f^{-1}(L\cap R)&&\cup f^{-1}&&([&&L\cap \operatorname {Im} f]&&\setminus [&&R\cap \operatorname {Im} f])\end{alignedat}}} None Im ⁡ ⁡ f = f ( X ) = f ( L ) ∪ ∪ f ( X ∖ ∖ L ) {\displaystyle \operatorname {Im} f=f(X)~=~f(L)\cup f(X\setminus L)} X = f − − 1 ( L ) ∪ ∪ f − − 1 ( Y ∖ ∖ L ) = f − − 1 ( L ) ∪ ∪ f − − 1 ( Im ⁡ ⁡ f ∖ ∖ L ) {\displaystyle {\begin{alignedat}{4}X&=f^{-1}(L)\cup f^{-1}(Y&&\setminus L)\\&=f^{-1}(L)\cup f^{-1}(\operatorname {Im} f&&\setminus L)\end{alignedat}}} None f | L ( R ) = f ( L ∩ ∩ R ) {\displaystyle f{\big \vert }_{L}(R)=f(L\cap R)} ( f | L ) − − 1 ( R ) = L ∩ ∩ f − − 1 ( R ) {\displaystyle \left(f{\big \vert }_{L}\right)^{-1}(R)=L\cap f^{-1}(R)} None ( g ∘ ∘ f ) ( L ) = g ( f ( L ) ) {\displaystyle (g\circ f)(L)~=~g(f(L))} ( g ∘ ∘ f ) − − 1 ( L ) = f − − 1 ( g − − 1 ( L ) ) {\displaystyle (g\circ f)^{-1}(L)~=~f^{-1}\left(g^{-1}(L)\right)} None ( f {\displaystyle f} and g {\displaystyle g} are arbitrary functions).

f ( f − − 1 ( L ) ) = L ∩ ∩ Im ⁡ ⁡ f {\displaystyle f\left(f^{-1}(L)\right)=L\cap \operatorname {Im} f} f − − 1 ( f ( L ) ) ⊇ ⊇ L ∩ ∩ f − − 1 ( Im ⁡ ⁡ f ) = L ∩ ∩ f − − 1 ( Y ) {\displaystyle f^{-1}(f(L))~\supseteq ~L\cap f^{-1}(\operatorname {Im} f)=L\cap f^{-1}(Y)} [ 5 ] None f ( f − − 1 ( Y ) ) = f ( f − − 1 ( Im ⁡ ⁡ f ) ) = f ( X ) {\displaystyle f\left(f^{-1}(Y)\right)=f\left(f^{-1}(\operatorname {Im} f)\right)=f(X)} f − − 1 ( f ( X ) ) = f − − 1 ( Im ⁡ ⁡ f ) = X {\displaystyle f^{-1}(f(X))=f^{-1}(\operatorname {Im} f)=X} None f ( f − − 1 ( f ( L ) ) ) = f ( L ) {\displaystyle f\left(f^{-1}(f(L))\right)=f(L)} f − − 1 ( f ( f − − 1 ( L ) ) ) = f − − 1 ( L ) {\displaystyle f^{-1}\left(f\left(f^{-1}(L)\right)\right)=f^{-1}(L)} None Containments ⊆ and intersections ⋂ of images and preimages [ edit ] Equivalences and implications of images and preimages Image Preimage Additional assumptions on sets f ( L ) ⊆ ⊆ Im ⁡ ⁡ f ⊆ ⊆ Y {\displaystyle f(L)\subseteq \operatorname {Im} f\subseteq Y} f − − 1 ( L ) = X {\displaystyle f^{-1}(L)=X} if and only if Im ⁡ ⁡ f ⊆ ⊆ L {\displaystyle \operatorname {Im} f\subseteq L} None f ( L ) = ∅ ∅ {\displaystyle f(L)=\varnothing } if and only if L ∩ ∩ domain ⁡ ⁡ f = ∅ ∅ {\displaystyle L\cap \operatorname {domain} f=\varnothing } f − − 1 ( L ) = ∅ ∅ {\displaystyle f^{-1}(L)=\varnothing } if and only if L ∩ ∩ Im ⁡ ⁡ f = ∅ ∅ {\displaystyle L\cap \operatorname {Im} f=\varnothing } None f ( A ) = ∅ ∅ {\displaystyle f(A)=\varnothing } if and only if A = ∅ ∅ {\displaystyle A=\varnothing } f − − 1 ( C ) = ∅ ∅ {\displaystyle f^{-1}(C)=\varnothing } if and only if C ⊆ ⊆ Y ∖ ∖ Im ⁡ ⁡ f {\displaystyle C\subseteq Y\setminus \operatorname {Im} f} A ⊆ ⊆ X {\displaystyle A\subseteq X} and C ⊆ ⊆ Y {\displaystyle C\subseteq Y} L ⊆ ⊆ R {\displaystyle L\subseteq R} implies f ( L ) ⊆ ⊆ f ( R ) {\displaystyle f(L)\subseteq f(R)} [ 5 ] L ⊆ ⊆ R {\displaystyle L\subseteq R} implies f − − 1 ( L ) ⊆ ⊆ f − − 1 ( R ) {\displaystyle f^{-1}(L)\subseteq f^{-1}(R)} [ 5 ] None The following are equivalent: f ( L ) ⊆ ⊆ f ( R ) {\displaystyle f(L)\subseteq f(R)} f ( L ∪ ∪ R ) = f ( R ) {\displaystyle f(L\cup R)=f(R)} L ∩ ∩ domain ⁡ ⁡ f ⊆ ⊆ f − − 1 ( f ( R ) ) {\displaystyle L\cap \operatorname {domain} f~\subseteq ~f^{-1}(f(R))} The following are equivalent: f − − 1 ( L ) ⊆ ⊆ f − − 1 ( R ) {\displaystyle f^{-1}(L)\subseteq f^{-1}(R)} f − − 1 ( L ∪ ∪ R ) = f − − 1 ( R ) {\displaystyle f^{-1}(L\cup R)=f^{-1}(R)} L ∩ ∩ Im ⁡ ⁡ f ⊆ ⊆ R {\displaystyle L\cap \operatorname {Im} f\subseteq R} If C ⊆ ⊆ Im ⁡ ⁡ f {\displaystyle C~\subseteq ~\operatorname {Im} f} then f − − 1 ( C ) ⊆ ⊆ f − − 1 ( R ) {\displaystyle f^{-1}(C)~\subseteq ~f^{-1}(R)} if and only if C ⊆ ⊆ R .

{\displaystyle C~\subseteq ~R.} C ⊆ ⊆ Im ⁡ ⁡ f {\displaystyle C\subseteq \operatorname {Im} f} The following are equivalent when C ⊆ ⊆ Y : {\displaystyle C\subseteq Y:} C ⊆ ⊆ f ( R ) {\displaystyle C\subseteq f(R)} f ( B ) = C {\displaystyle f(B)=C} for some B ⊆ ⊆ R {\displaystyle B\subseteq R} f ( B ) = C {\displaystyle f(B)=C} for some B ⊆ ⊆ R ∩ ∩ domain ⁡ ⁡ f {\displaystyle B\subseteq R\cap \operatorname {domain} f} The following are equivalent: L ⊆ ⊆ f − − 1 ( R ) {\displaystyle L\subseteq f^{-1}(R)} f ( L ) ⊆ ⊆ R {\displaystyle f(L)\subseteq R} and L ⊆ ⊆ domain ⁡ ⁡ f {\displaystyle L\subseteq \operatorname {domain} f} The following are equivalent when A ⊆ ⊆ X : {\displaystyle A\subseteq X:} A ⊆ ⊆ f − − 1 ( R ) {\displaystyle A\subseteq f^{-1}(R)} f ( A ) ⊆ ⊆ R {\displaystyle f(A)\subseteq R} A ⊆ ⊆ X {\displaystyle A\subseteq X} and C ⊆ ⊆ Y {\displaystyle C\subseteq Y} The following are equivalent: f ( A ) ⊇ ⊇ f ( X ∖ ∖ A ) {\displaystyle f(A)~\supseteq ~f(X\setminus A)} f ( A ) = Im ⁡ ⁡ f {\displaystyle f(A)=\operatorname {Im} f} The following are equivalent: f − − 1 ( C ) ⊇ ⊇ f − − 1 ( Y ∖ ∖ C ) {\displaystyle f^{-1}(C)~\supseteq ~f^{-1}(Y\setminus C)} f − − 1 ( C ) = X {\displaystyle f^{-1}(C)=X} A ⊆ ⊆ X {\displaystyle A\subseteq X} and C ⊆ ⊆ Y {\displaystyle C\subseteq Y} f ( f − − 1 ( L ) ) ⊆ ⊆ L {\displaystyle f\left(f^{-1}(L)\right)\subseteq L} [ 5 ] Equality holds if and only if the following is true: L ⊆ ⊆ Im ⁡ ⁡ f .

{\displaystyle L\subseteq \operatorname {Im} f.} [ 9 ] [ 10 ] Equality holds if any of the following are true: L ⊆ ⊆ Y {\displaystyle L\subseteq Y} and f : X → → Y {\displaystyle f:X\to Y} is surjective.

f − − 1 ( f ( A ) ) ⊇ ⊇ A {\displaystyle f^{-1}(f(A))\supseteq A} Equality holds if and only if the following is true: A {\displaystyle A} is f {\displaystyle f} -saturated.

Equality holds if any of the following are true: f {\displaystyle f} is injective.

[ 9 ] [ 10 ] A ⊆ ⊆ X {\displaystyle A\subseteq X} Intersection of a set and a (pre)image The following statements are equivalent: ∅ ∅ = f ( L ) ∩ ∩ R {\displaystyle \varnothing =f(L)\cap R} ∅ ∅ = L ∩ ∩ f − − 1 ( R ) {\displaystyle \varnothing =L\cap f^{-1}(R)} [ 5 ] ∅ ∅ = f − − 1 ( f ( L ) ) ∩ ∩ f − − 1 ( R ) {\displaystyle \varnothing =f^{-1}(f(L))\cap f^{-1}(R)} ∅ ∅ = f − − 1 ( f ( L ) ∩ ∩ R ) {\displaystyle \varnothing =f^{-1}(f(L)\cap R)} Thus for any t , {\displaystyle t,} [ 5 ] t ∉ f ( L ) if and only if L ∩ ∩ f − − 1 ( t ) = ∅ ∅ .

{\displaystyle t\not \in f(L)\quad {\text{ if and only if }}\quad L\cap f^{-1}(t)=\varnothing .} Sequences and collections of families of sets [ edit ] Definitions [ edit ] A family of sets or simply a family is a set whose elements are sets.  
A family over X {\displaystyle X} is a family of subsets of X .

{\displaystyle X.} The power set of a set X {\displaystyle X} is the set of all subsets of X {\displaystyle X} : ℘ ℘ ( X ) : : = { S : S ⊆ ⊆ X } .

{\displaystyle \wp (X)~\colon =~\{\;S~:~S\subseteq X\;\}.} Notation for sequences of sets Throughout, S and T {\displaystyle S{\text{ and }}T} will be arbitrary sets and S ∙ ∙ {\displaystyle S_{\bullet }} and will denote a net or a sequence of sets where if it is a sequence then this will be indicated by either of the notations S ∙ ∙ = ( S i ) i = 1 ∞ ∞ or S ∙ ∙ = ( S i ) i ∈ ∈ N {\displaystyle S_{\bullet }=\left(S_{i}\right)_{i=1}^{\infty }\qquad {\text{ or }}\qquad S_{\bullet }=\left(S_{i}\right)_{i\in \mathbb {N} }} where N {\displaystyle \mathbb {N} } denotes the natural numbers . 
A notation S ∙ ∙ = ( S i ) i ∈ ∈ I {\displaystyle S_{\bullet }=\left(S_{i}\right)_{i\in I}} indicates that S ∙ ∙ {\displaystyle S_{\bullet }} is a net directed by ( I , ≤ ≤ ) , {\displaystyle (I,\leq ),} which (by definition) is a sequence if the set I , {\displaystyle I,} which is called the net's indexing set , is the natural numbers (that is, if I = N {\displaystyle I=\mathbb {N} } ) and ≤ ≤ {\displaystyle \,\leq \,} is the natural order on N .

{\displaystyle \mathbb {N} .} Disjoint and monotone sequences of sets If S i ∩ ∩ S j = ∅ ∅ {\displaystyle S_{i}\cap S_{j}=\varnothing } for all distinct indices i ≠ ≠ j {\displaystyle i\neq j} then S ∙ ∙ {\displaystyle S_{\bullet }} is called a pairwise disjoint or simply a disjoint .  
A sequence or net S ∙ ∙ {\displaystyle S_{\bullet }} of set is called increasing or non-decreasing if (resp.

decreasing or non-increasing ) if for all indices i ≤ ≤ j , {\displaystyle i\leq j,} S i ⊆ ⊆ S j {\displaystyle S_{i}\subseteq S_{j}} (resp.

S i ⊇ ⊇ S j {\displaystyle S_{i}\supseteq S_{j}} ). 
A sequence or net S ∙ ∙ {\displaystyle S_{\bullet }} of set is called strictly increasing (resp.

strictly decreasing ) if it is non-decreasing (resp. is non-increasing) and also S i ≠ ≠ S j {\displaystyle S_{i}\neq S_{j}} for all distinct indices i and j .

{\displaystyle i{\text{ and }}j.} It is called monotone if it is non-decreasing or non-increasing and it is called strictly monotone if it is strictly increasing or strictly decreasing.

A sequences or net S ∙ ∙ {\displaystyle S_{\bullet }} is said to increase to S , {\displaystyle S,} denoted by S ∙ ∙ ↑ ↑ S {\displaystyle S_{\bullet }\uparrow S} [ 11 ] or S ∙ ∙ ↗ ↗ S , {\displaystyle S_{\bullet }\nearrow S,} if S ∙ ∙ {\displaystyle S_{\bullet }} is increasing and the union of all S i {\displaystyle S_{i}} is S ; {\displaystyle S;} that is, if ⋃ ⋃ n S n = S and S i ⊆ ⊆ S j whenever i ≤ ≤ j .

{\displaystyle \bigcup _{n}S_{n}=S\qquad {\text{ and }}\qquad S_{i}\subseteq S_{j}\quad {\text{ whenever }}i\leq j.} It is said to decrease to S , {\displaystyle S,} denoted by S ∙ ∙ ↓ ↓ S {\displaystyle S_{\bullet }\downarrow S} [ 11 ] or S ∙ ∙ ↘ ↘ S , {\displaystyle S_{\bullet }\searrow S,} if S ∙ ∙ {\displaystyle S_{\bullet }} is increasing and the intersection of all S i {\displaystyle S_{i}} is S {\displaystyle S} that is, if ⋂ ⋂ n S n = S and S i ⊇ ⊇ S j whenever i ≤ ≤ j .

{\displaystyle \bigcap _{n}S_{n}=S\qquad {\text{ and }}\qquad S_{i}\supseteq S_{j}\quad {\text{ whenever }}i\leq j.} Definitions of elementwise operations on families If L and R {\displaystyle {\mathcal {L}}{\text{ and }}{\mathcal {R}}} are families of sets and if S {\displaystyle S} is any set then define: [ 12 ] L ( ∪ ∪ ) R : : = { L ∪ ∪ R : L ∈ ∈ L and R ∈ ∈ R } {\displaystyle {\mathcal {L}}\;(\cup )\;{\mathcal {R}}~\colon =~\{~L\cup R~:~L\in {\mathcal {L}}~{\text{ and }}~R\in {\mathcal {R}}~\}} L ( ∩ ∩ ) R : : = { L ∩ ∩ R : L ∈ ∈ L and R ∈ ∈ R } {\displaystyle {\mathcal {L}}\;(\cap )\;{\mathcal {R}}~\colon =~\{~L\cap R~:~L\in {\mathcal {L}}~{\text{ and }}~R\in {\mathcal {R}}~\}} L ( ∖ ∖ ) R : : = { L ∖ ∖ R : L ∈ ∈ L and R ∈ ∈ R } {\displaystyle {\mathcal {L}}\;(\setminus )\;{\mathcal {R}}~\colon =~\{~L\setminus R~:~L\in {\mathcal {L}}~{\text{ and }}~R\in {\mathcal {R}}~\}} L ( △ △ ) R : : = { L △ △ R : L ∈ ∈ L and R ∈ ∈ R } {\displaystyle {\mathcal {L}}\;(\triangle )\;{\mathcal {R}}~\colon =~\{~L\;\triangle \;R~:~L\in {\mathcal {L}}~{\text{ and }}~R\in {\mathcal {R}}~\}} L | S : : = { L ∩ ∩ S : L ∈ ∈ L } = L ( ∩ ∩ ) { S } {\displaystyle {\mathcal {L}}{\big \vert }_{S}~\colon =~\{L\cap S~:~L\in {\mathcal {L}}\}={\mathcal {L}}\;(\cap )\;\{S\}} which are respectively called elementwise union , elementwise intersection , elementwise ( set ) difference , elementwise symmetric difference , and the trace / restriction of L {\displaystyle {\mathcal {L}}} to S .

{\displaystyle S.} The regular union, intersection, and set difference are all defined as usual and are denoted with their usual notation: L ∪ ∪ R , L ∩ ∩ R , L △ △ R , {\displaystyle {\mathcal {L}}\cup {\mathcal {R}},{\mathcal {L}}\cap {\mathcal {R}},{\mathcal {L}}\;\triangle \;{\mathcal {R}},} and L ∖ ∖ R , {\displaystyle {\mathcal {L}}\setminus {\mathcal {R}},} respectively.  
These elementwise operations on families of sets play an important role in, among other subjects, the theory of filters and prefilters on sets.

The upward closure in X {\displaystyle X} of a family L ⊆ ⊆ ℘ ℘ ( X ) {\displaystyle {\mathcal {L}}\subseteq \wp (X)} is the family: L ↑ ↑ X : : = ⋃ ⋃ L ∈ ∈ L { S : L ⊆ ⊆ S ⊆ ⊆ X } = { S ⊆ ⊆ X : there exists L ∈ ∈ L such that L ⊆ ⊆ S } {\displaystyle {\mathcal {L}}^{\uparrow X}~\colon =~\bigcup _{L\in {\mathcal {L}}}\{\;S~:~L\subseteq S\subseteq X\;\}~=~\{\;S\subseteq X~:~{\text{ there exists }}L\in {\mathcal {L}}{\text{ such that }}L\subseteq S\;\}} and the downward closure of L {\displaystyle {\mathcal {L}}} is the family: L ↓ ↓ : : = ⋃ ⋃ L ∈ ∈ L ℘ ℘ ( L ) = { S : there exists L ∈ ∈ L such that S ⊆ ⊆ L } .

{\displaystyle {\mathcal {L}}^{\downarrow }~\colon =~\bigcup _{L\in {\mathcal {L}}}\wp (L)~=~\{\;S~:~{\text{ there exists }}L\in {\mathcal {L}}{\text{ such that }}S\subseteq L\;\}.} Definitions of categories of families of sets [ edit ] The following table lists some well-known categories of families of sets having applications in general topology and measure theory .

Families F {\displaystyle {\mathcal {F}}} of sets over Ω Ω {\displaystyle \Omega } v t e Is necessarily true of F : : {\displaystyle {\mathcal {F}}\colon } or, is F {\displaystyle {\mathcal {F}}} closed under: Directed by ⊇ ⊇ {\displaystyle \,\supseteq } A ∩ ∩ B {\displaystyle A\cap B} A ∪ ∪ B {\displaystyle A\cup B} B ∖ ∖ A {\displaystyle B\setminus A} Ω Ω ∖ ∖ A {\displaystyle \Omega \setminus A} A 1 ∩ ∩ A 2 ∩ ∩ ⋯ ⋯ {\displaystyle A_{1}\cap A_{2}\cap \cdots } A 1 ∪ ∪ A 2 ∪ ∪ ⋯ ⋯ {\displaystyle A_{1}\cup A_{2}\cup \cdots } Ω Ω ∈ ∈ F {\displaystyle \Omega \in {\mathcal {F}}} ∅ ∅ ∈ ∈ F {\displaystyle \varnothing \in {\mathcal {F}}} F.I.P.

π -system Semiring Never Semialgebra (Semifield) Never Monotone class only if A i ↘ ↘ {\displaystyle A_{i}\searrow } only if A i ↗ ↗ {\displaystyle A_{i}\nearrow } 𝜆-system (Dynkin System) only if A ⊆ ⊆ B {\displaystyle A\subseteq B} only if A i ↗ ↗ {\displaystyle A_{i}\nearrow } or they are disjoint Never Ring (Order theory) Ring (Measure theory) Never δ-Ring Never 𝜎-Ring Never Algebra (Field) Never 𝜎-Algebra (𝜎-Field) Never Dual ideal Filter Never Never ∅ ∅ ∉ F {\displaystyle \varnothing \not \in {\mathcal {F}}} Prefilter (Filter base) Never Never ∅ ∅ ∉ F {\displaystyle \varnothing \not \in {\mathcal {F}}} Filter subbase Never Never ∅ ∅ ∉ F {\displaystyle \varnothing \not \in {\mathcal {F}}} Open Topology (even arbitrary ∪ ∪ {\displaystyle \cup } ) Never Closed Topology (even arbitrary ∩ ∩ {\displaystyle \cap } ) Never Is necessarily true of F : : {\displaystyle {\mathcal {F}}\colon } or, is F {\displaystyle {\mathcal {F}}} closed under: directed downward finite intersections finite unions relative complements complements in Ω Ω {\displaystyle \Omega } countable intersections countable unions contains Ω Ω {\displaystyle \Omega } contains ∅ ∅ {\displaystyle \varnothing } Finite Intersection Property Additionally, a semiring is a π -system where every complement B ∖ ∖ A {\displaystyle B\setminus A} is equal to a finite disjoint union of sets in F .

{\displaystyle {\mathcal {F}}.} A semialgebra is a semiring where every complement Ω Ω ∖ ∖ A {\displaystyle \Omega \setminus A} is equal to a finite disjoint union of sets in F .

{\displaystyle {\mathcal {F}}.} A , B , A 1 , A 2 , … … {\displaystyle A,B,A_{1},A_{2},\ldots } are arbitrary elements of F {\displaystyle {\mathcal {F}}} and it is assumed that F ≠ ≠ ∅ ∅ .

{\displaystyle {\mathcal {F}}\neq \varnothing .} A family L {\displaystyle {\mathcal {L}}} is called isotone , ascending , or upward closed in X {\displaystyle X} if L ⊆ ⊆ ℘ ℘ ( X ) {\displaystyle {\mathcal {L}}\subseteq \wp (X)} and L = L ↑ ↑ X .

{\displaystyle {\mathcal {L}}={\mathcal {L}}^{\uparrow X}.} [ 12 ] A family L {\displaystyle {\mathcal {L}}} is called downward closed if L = L ↓ ↓ .

{\displaystyle {\mathcal {L}}={\mathcal {L}}^{\downarrow }.} A family L {\displaystyle {\mathcal {L}}} is said to be: closed under finite intersections (resp.

closed under finite unions ) if whenever L , R ∈ ∈ L {\displaystyle L,R\in {\mathcal {L}}} then L ∩ ∩ R ∈ ∈ L {\displaystyle L\cap R\in {\mathcal {L}}} (respectively, L ∪ ∪ R ∈ ∈ L {\displaystyle L\cup R\in {\mathcal {L}}} ).

closed under countable intersections (resp.

closed under countable unions ) if whenever L 1 , L 2 , L 3 , … … {\displaystyle L_{1},L_{2},L_{3},\ldots } are elements of L {\displaystyle {\mathcal {L}}} then so is their intersections ⋂ ⋂ i = 1 ∞ ∞ L i := L 1 ∩ ∩ L 2 ∩ ∩ L 3 ∩ ∩ ⋯ ⋯ {\displaystyle \bigcap _{i=1}^{\infty }L_{i}:=L_{1}\cap L_{2}\cap L_{3}\cap \cdots } (resp. so is their union ⋃ ⋃ i = 1 ∞ ∞ L i := L 1 ∪ ∪ L 2 ∪ ∪ L 3 ∪ ∪ ⋯ ⋯ {\displaystyle \bigcup _{i=1}^{\infty }L_{i}:=L_{1}\cup L_{2}\cup L_{3}\cup \cdots } ).

closed under complementation in (or with respect to ) X {\displaystyle X} if whenever L ∈ ∈ L {\displaystyle L\in {\mathcal {L}}} then X ∖ ∖ L ∈ ∈ L .

{\displaystyle X\setminus L\in {\mathcal {L}}.} A family L {\displaystyle {\mathcal {L}}} of sets is called a/an: π −system if L ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {L}}\neq \varnothing } and L {\displaystyle {\mathcal {L}}} is closed under finite-intersections.

Every non-empty family L {\displaystyle {\mathcal {L}}} is contained in a unique smallest (with respect to ⊆ ⊆ {\displaystyle \subseteq } ) π −system that is denoted by π π ( L ) {\displaystyle \pi ({\mathcal {L}})} and called the π −system generated by L .

{\displaystyle {\mathcal {L}}.} filter subbase and is said to have the finite intersection property if L ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {L}}\neq \varnothing } and ∅ ∅ ∉ π π ( L ) .

{\displaystyle \varnothing \not \in \pi ({\mathcal {L}}).} filter on X {\displaystyle X} if L ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {L}}\neq \varnothing } is a family of subsets of X {\displaystyle X} that is a π −system, is upward closed in X , {\displaystyle X,} and is also proper , which by definition means that it does not contain the empty set as an element.

prefilter or filter base if it is a non-empty family of subsets of some set X {\displaystyle X} whose upward closure in X {\displaystyle X} is a filter on X .

{\displaystyle X.} algebra on X {\displaystyle X} is a non-empty family of subsets of X {\displaystyle X} that contains the empty set, forms a π −system, and is also closed under complementation with respect to X .

{\displaystyle X.} σ-algebra on X {\displaystyle X} is an algebra on X {\displaystyle X} that is closed under countable unions (or equivalently, closed under countable intersections).

Sequences of sets often arise in measure theory .

Algebra of sets See also: Algebra of sets and Category:Properties of binary operations A family Φ Φ {\displaystyle \Phi } of subsets of a set X {\displaystyle X} is said to be an algebra of sets if ∅ ∅ ∈ ∈ Φ Φ {\displaystyle \varnothing \in \Phi } and for all L , R ∈ ∈ Φ Φ , {\displaystyle L,R\in \Phi ,} all three of the sets X ∖ ∖ R , L ∩ ∩ R , {\displaystyle X\setminus R,\,L\cap R,} and L ∪ ∪ R {\displaystyle L\cup R} are elements of Φ Φ .

{\displaystyle \Phi .} [ 13 ] The article on this topic lists set identities and other relationships these three operations.

Every algebra of sets is also a ring of sets [ 13 ] and a π-system .

Algebra generated by a family of sets Given any family S {\displaystyle {\mathcal {S}}} of subsets of X , {\displaystyle X,} there is a unique smallest [ note 7 ] algebra of sets in X {\displaystyle X} containing S .

{\displaystyle {\mathcal {S}}.} [ 13 ] It is called the algebra generated by S {\displaystyle {\mathcal {S}}} and it will be denote it by Φ Φ S .

{\displaystyle \Phi _{\mathcal {S}}.} This algebra can be constructed as follows: [ 13 ] If S = ∅ ∅ {\displaystyle {\mathcal {S}}=\varnothing } then Φ Φ S = { ∅ ∅ , X } {\displaystyle \Phi _{\mathcal {S}}=\{\varnothing ,X\}} and we are done. Alternatively, if S {\displaystyle {\mathcal {S}}} is empty then S {\displaystyle {\mathcal {S}}} may be replaced with { ∅ ∅ } , { X } , or { ∅ ∅ , X } {\displaystyle \{\varnothing \},\{X\},{\text{ or }}\{\varnothing ,X\}} and continue with the construction.

Let S 0 {\displaystyle {\mathcal {S}}_{0}} be the family of all sets in S {\displaystyle {\mathcal {S}}} together with their complements (taken in X {\displaystyle X} ).

Let S 1 {\displaystyle {\mathcal {S}}_{1}} be the family of all possible finite intersections of sets in S 0 .

{\displaystyle {\mathcal {S}}_{0}.} [ note 8 ] Then the algebra generated by S {\displaystyle {\mathcal {S}}} is the set Φ Φ S {\displaystyle \Phi _{\mathcal {S}}} consisting of all possible finite unions of sets in S 1 .

{\displaystyle {\mathcal {S}}_{1}.} Elementwise operations on families [ edit ] Let L , M , {\displaystyle {\mathcal {L}},{\mathcal {M}},} and R {\displaystyle {\mathcal {R}}} be families of sets over X .

{\displaystyle X.} On the left hand sides of the following identities, L {\displaystyle {\mathcal {L}}} is the L eft most family, M {\displaystyle {\mathcal {M}}} is in the M iddle, and R {\displaystyle {\mathcal {R}}} is the R ight most set.

Commutativity : [ 12 ] L ( ∪ ∪ ) R = R ( ∪ ∪ ) L {\displaystyle {\mathcal {L}}\;(\cup )\;{\mathcal {R}}={\mathcal {R}}\;(\cup )\;{\mathcal {L}}} L ( ∩ ∩ ) R = R ( ∩ ∩ ) L {\displaystyle {\mathcal {L}}\;(\cap )\;{\mathcal {R}}={\mathcal {R}}\;(\cap )\;{\mathcal {L}}} Associativity : [ 12 ] [ L ( ∪ ∪ ) M ] ( ∪ ∪ ) R = L ( ∪ ∪ ) [ M ( ∪ ∪ ) R ] {\displaystyle [{\mathcal {L}}\;(\cup )\;{\mathcal {M}}]\;(\cup )\;{\mathcal {R}}={\mathcal {L}}\;(\cup )\;[{\mathcal {M}}\;(\cup )\;{\mathcal {R}}]} [ L ( ∩ ∩ ) M ] ( ∩ ∩ ) R = L ( ∩ ∩ ) [ M ( ∩ ∩ ) R ] {\displaystyle [{\mathcal {L}}\;(\cap )\;{\mathcal {M}}]\;(\cap )\;{\mathcal {R}}={\mathcal {L}}\;(\cap )\;[{\mathcal {M}}\;(\cap )\;{\mathcal {R}}]} Identity : L ( ∪ ∪ ) { ∅ ∅ } = L {\displaystyle {\mathcal {L}}\;(\cup )\;\{\varnothing \}={\mathcal {L}}} L ( ∩ ∩ ) { X } = L {\displaystyle {\mathcal {L}}\;(\cap )\;\{X\}={\mathcal {L}}} L ( ∖ ∖ ) { ∅ ∅ } = L {\displaystyle {\mathcal {L}}\;(\setminus )\;\{\varnothing \}={\mathcal {L}}} Domination : L ( ∪ ∪ ) { X } = { X } if L ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {L}}\;(\cup )\;\{X\}=\{X\}~~~~{\text{ if }}{\mathcal {L}}\neq \varnothing } L ( ∩ ∩ ) { ∅ ∅ } = { ∅ ∅ } if L ≠ ≠ ∅ ∅ {\displaystyle {\mathcal {L}}\;(\cap )\;\{\varnothing \}=\{\varnothing \}~~~~{\text{ if }}{\mathcal {L}}\neq \varnothing } L ( ∪ ∪ ) ∅ ∅ = ∅ ∅ {\displaystyle {\mathcal {L}}\;(\cup )\;\varnothing =\varnothing } L ( ∩ ∩ ) ∅ ∅ = ∅ ∅ {\displaystyle {\mathcal {L}}\;(\cap )\;\varnothing =\varnothing } L ( ∖ ∖ ) ∅ ∅ = ∅ ∅ {\displaystyle {\mathcal {L}}\;(\setminus )\;\varnothing =\varnothing } ∅ ∅ ( ∖ ∖ ) R = ∅ ∅ {\displaystyle \varnothing \;(\setminus )\;{\mathcal {R}}=\varnothing } Power set [ edit ] ℘ ℘ ( L ∩ ∩ R ) = ℘ ℘ ( L ) ∩ ∩ ℘ ℘ ( R ) {\displaystyle \wp (L\cap R)~=~\wp (L)\cap \wp (R)} ℘ ℘ ( L ∪ ∪ R ) = ℘ ℘ ( L ) ( ∪ ∪ ) ℘ ℘ ( R ) ⊇ ⊇ ℘ ℘ ( L ) ∪ ∪ ℘ ℘ ( R ) .

{\displaystyle \wp (L\cup R)~=~\wp (L)\ (\cup )\ \wp (R)~\supseteq ~\wp (L)\cup \wp (R).} If L {\displaystyle L} and R {\displaystyle R} are subsets of a vector space X {\displaystyle X} and if s {\displaystyle s} is a scalar then ℘ ℘ ( s L ) = s ℘ ℘ ( L ) {\displaystyle \wp (sL)~=~s\wp (L)} ℘ ℘ ( L + R ) ⊇ ⊇ ℘ ℘ ( L ) + ℘ ℘ ( R ) .

{\displaystyle \wp (L+R)~\supseteq ~\wp (L)+\wp (R).} Sequences of sets [ edit ] Suppose that L {\displaystyle L} is any set such that L ⊇ ⊇ R i {\displaystyle L\supseteq R_{i}} for every index i .

{\displaystyle i.} If R ∙ ∙ {\displaystyle R_{\bullet }} decreases to R {\displaystyle R} then L ∖ ∖ R ∙ ∙ := ( L ∖ ∖ R i ) i {\displaystyle L\setminus R_{\bullet }:=\left(L\setminus R_{i}\right)_{i}} increases to L ∖ ∖ R {\displaystyle L\setminus R} [ 11 ] whereas if instead R ∙ ∙ {\displaystyle R_{\bullet }} increases to R {\displaystyle R} then L ∖ ∖ R ∙ ∙ {\displaystyle L\setminus R_{\bullet }} decreases to L ∖ ∖ R .

{\displaystyle L\setminus R.} If L and R {\displaystyle L{\text{ and }}R} are arbitrary sets and if L ∙ ∙ = ( L i ) i {\displaystyle L_{\bullet }=\left(L_{i}\right)_{i}} increases (resp. decreases) to L {\displaystyle L} then ( L i ∖ ∖ R ) i {\displaystyle \left(L_{i}\setminus R\right)_{i}} increase (resp. decreases) to L ∖ ∖ R .

{\displaystyle L\setminus R.} Partitions [ edit ] Suppose that S ∙ ∙ = ( S i ) i = 1 ∞ ∞ {\displaystyle S_{\bullet }=\left(S_{i}\right)_{i=1}^{\infty }} is any sequence of sets, that S ⊆ ⊆ ⋃ ⋃ i S i {\displaystyle S\subseteq \bigcup _{i}S_{i}} is any subset, and for every index i , {\displaystyle i,} let D i = ( S i ∩ ∩ S ) ∖ ∖ ⋃ ⋃ m = 1 i ( S m ∩ ∩ S ) .

{\displaystyle D_{i}=\left(S_{i}\cap S\right)\setminus \bigcup _{m=1}^{i}\left(S_{m}\cap S\right).} Then S = ⋃ ⋃ i D i {\displaystyle S=\bigcup _{i}D_{i}} and D ∙ ∙ := ( D i ) i = 1 ∞ ∞ {\displaystyle D_{\bullet }:=\left(D_{i}\right)_{i=1}^{\infty }} is a sequence of pairwise disjoint sets.

[ 11 ] Suppose that S ∙ ∙ = ( S i ) i = 1 ∞ ∞ {\displaystyle S_{\bullet }=\left(S_{i}\right)_{i=1}^{\infty }} is non-decreasing, let S 0 = ∅ ∅ , {\displaystyle S_{0}=\varnothing ,} and let D i = S i ∖ ∖ S i − − 1 {\displaystyle D_{i}=S_{i}\setminus S_{i-1}} for every i = 1 , 2 , … … .

{\displaystyle i=1,2,\ldots .} Then ⋃ ⋃ i S i = ⋃ ⋃ i D i {\displaystyle \bigcup _{i}S_{i}=\bigcup _{i}D_{i}} and D ∙ ∙ = ( D i ) i = 1 ∞ ∞ {\displaystyle D_{\bullet }=\left(D_{i}\right)_{i=1}^{\infty }} is a sequence of pairwise disjoint sets.

[ 11 ] See also [ edit ] Algebra of sets – Identities and relationships involving sets Complement (set theory) – Set of the elements not in a given subset Image (mathematics)#Properties – Set of the values of a function Inclusion–exclusion principle – Counting technique in combinatorics Intersection (set theory) – Set of elements common to all of some sets List of mathematical identities Naive set theory – Informal set theories Pigeonhole principle – If there are more items than boxes holding them, one box must contain at least two items Set (mathematics) – Collection of mathematical objects Simple theorems in the algebra of sets Symmetric difference (set theory) – Elements in exactly one of two sets Pages displaying short descriptions of redirect targets Union (set theory) – Set of elements in any of some sets Notes [ edit ] Notes ^ For example, the expression ( M ∖ ∖ R ) ∖ ∖ A {\displaystyle (M\setminus R)\setminus A} uses two of the same symbols ( M {\displaystyle M} and R {\displaystyle R} ) that appear in the identity ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ ( M ∖ ∖ R ) {\displaystyle (L\,\setminus \,M)\,\setminus \,R~=~(L\,\setminus \,R)\,\setminus \,(M\,\setminus \,R)} but they refer to different sets in each expression. 
To apply this identity to ( M ∖ ∖ R ) ∖ ∖ A , {\displaystyle (M\setminus R)\setminus A,} substitute Left set := M , {\displaystyle {\text{Left set}}:=M,\;} Middle set := R , {\displaystyle {\text{Middle set}}:=R,\;} and Right set := A {\displaystyle {\text{Right set}}:=A} (since these are the left, middle, and right sets in ( M ∖ ∖ R ) ∖ ∖ A {\displaystyle (M\setminus R)\setminus A} ) to obtain: ( M ∖ ∖ R ) ∖ ∖ A = ( Left set ∖ ∖ Right set ) ∖ ∖ ( Middle set ∖ ∖ Right set ) = ( M ∖ ∖ A ) ∖ ∖ ( R ∖ ∖ A ) .

{\displaystyle {\begin{alignedat}{4}(M\setminus R)\setminus A&=({\text{Left set }}&&\setminus {\text{Right set}}&&)&&\setminus ({\text{Middle set }}&&\setminus {\text{Right set}})\\&=(M&&\setminus A&&)&&\setminus (R&&\setminus A).\\\end{alignedat}}} For a second example, this time applying the identity to ( ( M ∩ ∩ R ∖ ∖ L ) ∖ ∖ ( A △ △ L ) ) ∖ ∖ L , {\displaystyle ((M\cap R\setminus L)\setminus (A\triangle L))\setminus L,} is now given. The identity ( L ∖ ∖ M ) ∖ ∖ R = ( L ∖ ∖ R ) ∖ ∖ ( M ∖ ∖ R ) {\textstyle (L\setminus M)\setminus R=(L\setminus R)\setminus (M\setminus R)} can be applied to ( ( M ∩ ∩ R ∖ ∖ L ) ∖ ∖ ( A △ △ L ) ) ∖ ∖ L {\displaystyle ((M\cap R\setminus L)\setminus (A\triangle L))\setminus L} by reading L , M , {\displaystyle L,M,} and R {\displaystyle R} as Left , Middle , {\displaystyle {\text{Left}},{\text{Middle}},} and Right {\displaystyle {\text{Right}}} and then substituting Left = ( M ∩ ∩ R ∖ ∖ L ) , {\displaystyle {\text{Left}}=(M\cap R\setminus L),} Middle = ( A △ △ L ) , {\displaystyle {\text{Middle}}=(A\triangle L),} and Right = L {\displaystyle {\text{Right}}=L} to obtain: ( ( M ∩ ∩ R ∖ ∖ L ) ∖ ∖ ( A △ △ L ) ) ∖ ∖ L = ( Left ∖ ∖ Right ) ∖ ∖ ( Middle ∖ ∖ Right ) = ( ( M ∩ ∩ R ∖ ∖ L ) ∖ ∖ L ) ∖ ∖ ( ( A △ △ L ) ∖ ∖ L ) .

{\displaystyle {\begin{alignedat}{4}((M\cap R\setminus L)\setminus (A\triangle L))\setminus L&=({\text{Left }}&&\setminus {\text{Right}}&&)&&\setminus ({\text{Middle }}&&\setminus {\text{Right}})\\&=((M\cap R\setminus L)&&\setminus L&&)&&\setminus ((A\triangle L)&&\setminus L).\\\end{alignedat}}} ^ a b To deduce Eq. 2c from Eq. 2a , it must still be shown that ⋃ ⋃ j ∈ ∈ I i ∈ ∈ I , ( L i ∪ ∪ R j ) = ⋃ ⋃ i ∈ ∈ I ( L i ∪ ∪ R i ) {\displaystyle {\textstyle \bigcup \limits _{\stackrel {i\in I,}{j\in I}}}\left(L_{i}\cup R_{j}\right)~=~{\textstyle \bigcup \limits _{i\in I}}\left(L_{i}\cup R_{i}\right)} so Eq. 2c is not a completely immediate consequence of Eq. 2a . (Compare this to the commentary about Eq. 3b ).

^ So for instance, it's even possible that L ∩ ∩ ( X ∪ ∪ Y ) = ∅ ∅ , {\displaystyle L\cap (X\cup Y)=\varnothing ,} or that L ∩ ∩ X ≠ ≠ ∅ ∅ {\displaystyle L\cap X\neq \varnothing } and L ∩ ∩ Y ≠ ≠ ∅ ∅ {\displaystyle L\cap Y\neq \varnothing } (which happens, for instance, if X = Y {\displaystyle X=Y} ), etc.

^ The conclusion X ∖ ∖ f − − 1 ( R ) = f − − 1 ( Y ∖ ∖ R ) {\displaystyle X\setminus f^{-1}(R)=f^{-1}(Y\setminus R)} can also be written as: f − − 1 ( R ) ∁ ∁ = f − − 1 ( R ∁ ∁ ) .

{\displaystyle f^{-1}(R)^{\complement }~=~f^{-1}\left(R^{\complement }\right).} ^ Whether or not it is even feasible for the function f {\displaystyle f} to be constant and the sets L △ △ R {\displaystyle L\triangle R} and R {\displaystyle R} to be non-empty and disjoint is irrelevant for reaching the correct conclusion about whether to use ⊆ ⊆ or ⊇ ⊇ .

{\displaystyle \,\subseteq {\text{ or }}\supseteq .\,} ^ a b c d Note that this condition depends entirely on R {\displaystyle R} and not on L .

{\displaystyle L.} ^ Here "smallest" means relative to subset containment. So if Φ Φ {\displaystyle \Phi } is any algebra of sets containing S , {\displaystyle {\mathcal {S}},} then Φ Φ S ⊆ ⊆ Φ Φ .

{\displaystyle \Phi _{\mathcal {S}}\subseteq \Phi .} ^ Since S ≠ ≠ ∅ ∅ , {\displaystyle {\mathcal {S}}\neq \varnothing ,} there is some S ∈ ∈ S 0 {\displaystyle S\in {\mathcal {S}}_{0}} such that its complement also belongs to S 0 .

{\displaystyle {\mathcal {S}}_{0}.} The intersection of these two sets implies that ∅ ∅ ∈ ∈ S 1 .

{\displaystyle \varnothing \in {\mathcal {S}}_{1}.} The union of these two sets is equal to X , {\displaystyle X,} which implies that X ∈ ∈ Φ Φ S .

{\displaystyle X\in \Phi _{\mathcal {S}}.} Proofs ^ a b c Let f R := { y ∈ ∈ f ( L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle f_{R}:=\left\{y\in f(L):L\cap f^{-1}(y)\subseteq R\right\}} where because f R ⊆ ⊆ f ( R ∩ ∩ L ) , {\displaystyle f_{R}\subseteq f(R\cap L),} f R {\displaystyle f_{R}} is also equal to f R = { y ∈ ∈ f ( R ∩ ∩ L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } .

{\displaystyle f_{R}=\left\{y\in f(R\cap L):L\cap f^{-1}(y)\subseteq R\right\}.} As proved above, f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ f R {\displaystyle f(L\setminus R)=f(L)\setminus f_{R}} so that f ( L ) ∖ ∖ f ( R ) = f ( L ∖ ∖ R ) {\displaystyle f(L)\setminus f(R)=f(L\setminus R)} if and only if f ( L ) ∖ ∖ f ( R ) = f ( L ) ∖ ∖ f R .

{\displaystyle f(L)\setminus f(R)=f(L)\setminus f_{R}.} Since f ( L ) ∖ ∖ f ( R ) = f ( L ) ∖ ∖ ( f ( L ) ∩ ∩ f ( R ) ) , {\displaystyle f(L)\setminus f(R)=f(L)\setminus (f(L)\cap f(R)),} this happens if and only if f ( L ) ∖ ∖ ( f ( L ) ∩ ∩ f ( R ) ) = f ( L ) ∖ ∖ f R .

{\displaystyle f(L)\setminus (f(L)\cap f(R))=f(L)\setminus f_{R}.} Because f ( L ) ∩ ∩ f ( R ) and f R {\displaystyle f(L)\cap f(R){\text{ and }}f_{R}} are both subsets of f ( L ) , {\displaystyle f(L),} the condition on the right hand side happens if and only if f ( L ) ∩ ∩ f ( R ) = f R .

{\displaystyle f(L)\cap f(R)=f_{R}.} Because f R ⊆ ⊆ f ( R ∩ ∩ L ) ⊆ ⊆ f ( L ) ∩ ∩ f ( R ) , {\displaystyle f_{R}\subseteq f(R\cap L)\subseteq f(L)\cap f(R),} the equality f ( L ) ∩ ∩ f ( R ) = f R {\displaystyle f(L)\cap f(R)=f_{R}} holds if and only if f ( L ) ∩ ∩ f ( R ) ⊆ ⊆ f R .

{\displaystyle f(L)\cap f(R)\subseteq f_{R}.} ◼ ◼ {\displaystyle \blacksquare } If f ( R ) ⊆ ⊆ f ( L ) {\displaystyle f(R)\subseteq f(L)} (such as when L = X {\displaystyle L=X} or R ⊆ ⊆ L {\displaystyle R\subseteq L} ) then f ( L ) ∩ ∩ f ( R ) ⊆ ⊆ f R {\displaystyle f(L)\cap f(R)\subseteq f_{R}} if and only if f ( R ) ⊆ ⊆ f R .

{\displaystyle f(R)\subseteq f_{R}.} In particular, taking L = X {\displaystyle L=X} proves: f ( X ∖ ∖ R ) = f ( X ) ∖ ∖ f ( R ) {\displaystyle f(X\setminus R)=f(X)\setminus f(R)} if and only if f ( R ) ⊆ ⊆ { y ∈ ∈ f ( R ∩ ∩ X ) : f − − 1 ( y ) ⊆ ⊆ R } , {\displaystyle f(R)\subseteq \left\{y\in f(R\cap X):f^{-1}(y)\subseteq R\right\},} where f ( R ∩ ∩ X ) = f ( R ) .

{\displaystyle f(R\cap X)=f(R).} ◼ ◼ {\displaystyle \blacksquare } ^ Let P := { y ∈ ∈ Y : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } {\displaystyle P:=\left\{y\in Y:L\cap f^{-1}(y)\subseteq R\right\}} and let ( ⋆ ⋆ ) {\displaystyle (\star )} denote the set equality f ( L ∖ ∖ R ) = Y ∖ ∖ P , {\displaystyle f(L\setminus R)=Y\setminus P,} which will now be proven. If y ∈ ∈ Y ∖ ∖ P {\displaystyle y\in Y\setminus P} then L ∩ ∩ f − − 1 ( y ) ⊈ R {\displaystyle L\cap f^{-1}(y)\not \subseteq R} so there exists some x ∈ ∈ L ∩ ∩ f − − 1 ( y ) ∖ ∖ R ; {\displaystyle x\in L\cap f^{-1}(y)\setminus R;} now f − − 1 ( y ) ⊆ ⊆ X {\displaystyle f^{-1}(y)\subseteq X} implies x ∈ ∈ L ∩ ∩ X ∖ ∖ R {\displaystyle x\in L\cap X\setminus R} so that y = f ( x ) ∈ ∈ f ( L ∩ ∩ X ∖ ∖ R ) = f ( L ∖ ∖ R ) .

{\displaystyle y=f(x)\in f(L\cap X\setminus R)=f(L\setminus R).} To prove the reverse inclusion f ( L ∖ ∖ R ) ⊆ ⊆ Y ∖ ∖ P , {\displaystyle f(L\setminus R)\subseteq Y\setminus P,} let y ∈ ∈ f ( L ∖ ∖ R ) {\displaystyle y\in f(L\setminus R)} so that there exists some x ∈ ∈ X ∩ ∩ L ∖ ∖ R {\displaystyle x\in X\cap L\setminus R} such that y = f ( x ) .

{\displaystyle y=f(x).} Then x ∈ ∈ L ∩ ∩ f − − 1 ( y ) ∖ ∖ R {\displaystyle x\in L\cap f^{-1}(y)\setminus R} so that L ∩ ∩ f − − 1 ( y ) ⊈ R {\displaystyle L\cap f^{-1}(y)\not \subseteq R} and thus y ∉ P , {\displaystyle y\not \in P,} which proves that y ∈ ∈ Y ∖ ∖ P , {\displaystyle y\in Y\setminus P,} as desired.

◼ ◼ {\displaystyle \blacksquare } Defining Q := f ( L ) ∩ ∩ P = { y ∈ ∈ f ( L ) : L ∩ ∩ f − − 1 ( y ) ⊆ ⊆ R } , {\displaystyle Q:=f(L)\cap P=\left\{y\in f(L):L\cap f^{-1}(y)\subseteq R\right\},} the identity f ( L ∖ ∖ R ) = f ( L ) ∖ ∖ Q {\displaystyle f(L\setminus R)=f(L)\setminus Q} follows from ( ⋆ ⋆ ) {\displaystyle (\star )} and the inclusions f ( L ∖ ∖ R ) ⊆ ⊆ f ( L ) ⊆ ⊆ Y .

{\displaystyle f(L\setminus R)\subseteq f(L)\subseteq Y.} ◼ ◼ {\displaystyle \blacksquare } Citations [ edit ] ^ Taylor, Courtney (March 31, 2019).

"What Is Symmetric Difference in Math?" .

ThoughtCo . Retrieved 2020-09-05 .

^ Weisstein, Eric W.

"Symmetric Difference" .

mathworld.wolfram.com . Retrieved 2020-09-05 .

^ a b c d e f g h i j k l m n o p q r s t u v w x y Monk 1969 , pp. 24–54.

^ a b c d e f g Császár 1978 , pp. 15–26.

^ a b c d e f g h i Császár 1978 , pp. 102–120.

^ Kelley 1985 , p.

85 ^ See Munkres 2000 , p. 21 ^ Lee p.388 of Lee, John M. (2010). Introduction to Topological Manifolds, 2nd Ed.

^ a b Lee Halmos 1960 , p. 39 ^ a b Lee Munkres 2000 , p. 19 ^ a b c d e Durrett 2019 , pp. 1–8.

^ a b c d Császár 1978 , pp. 53–65.

^ a b c d "Algebra of sets" .

Encyclopediaofmath.org . 16 August 2013 . Retrieved 8 November 2020 .

References [ edit ] Artin, Michael (1991).

Algebra . Prentice Hall.

ISBN 81-203-0871-9 .

Blyth, T.S. (2005).

Lattices and Ordered Algebraic Structures . Springer.

ISBN 1-85233-905-5 .

.

Bylinski, Czeslaw (2004).

"Some Basic Properties of Sets" .

Journal of Formalized Mathematics .

1 . Retrieved 5 October 2021 .

Courant, Richard, Herbert Robbins, Ian Stewart, What is mathematics?: An Elementary Approach to Ideas and Methods , Oxford University Press US, 1996.

ISBN 978-0-19-510519-3 .

"SUPPLEMENT TO CHAPTER II THE ALGEBRA OF SETS" .

Császár, Ákos (1978).

General topology . Translated by Császár, Klára. Bristol England: Adam Hilger Ltd.

ISBN 0-85274-275-4 .

OCLC 4146011 .

Dixmier, Jacques (1984).

General Topology . Undergraduate Texts in Mathematics. Translated by Berberian, S. K. New York: Springer-Verlag .

ISBN 978-0-387-90972-1 .

OCLC 10277303 .

Dolecki, Szymon ; Mynard, Frédéric (2016).

Convergence Foundations Of Topology . New Jersey: World Scientific Publishing Company.

ISBN 978-981-4571-52-4 .

OCLC 945169917 .

Dugundji, James (1966).

Topology . Boston: Allyn and Bacon.

ISBN 978-0-697-06889-7 .

OCLC 395340485 .

Durrett, Richard (2019).

Probability: Theory and Examples (PDF) . Cambridge Series in Statistical and Probabilistic Mathematics. Vol. 49 (5th ed.). Cambridge New York, NY: Cambridge University Press .

ISBN 978-1-108-47368-2 .

OCLC 1100115281 . Retrieved November 5, 2020 .

Halmos, Paul R.

(1960).

Naive set theory . The University Series in Undergraduate Mathematics. van Nostrand Company.

ISBN 9780442030643 .

Zbl 0087.04403 .

{{ cite book }} : ISBN / Date incompatibility ( help ) Joshi, K. D.

(1983).

Introduction to General Topology . New York: John Wiley and Sons Ltd.

ISBN 978-0-85226-444-7 .

OCLC 9218750 .

Kelley, John L. (1985).

General Topology .

Graduate Texts in Mathematics . Vol. 27 (2 ed.). Birkhäuser.

ISBN 978-0-387-90125-1 .

Köthe, Gottfried (1983) [1969].

Topological Vector Spaces I . Grundlehren der mathematischen Wissenschaften. Vol. 159. Translated by Garling, D.J.H. New York: Springer Science & Business Media.

ISBN 978-3-642-64988-2 .

MR 0248498 .

OCLC 840293704 .

Monk, James Donald (1969).

Introduction to Set Theory (PDF) . International series in pure and applied mathematics. New York: McGraw-Hill.

ISBN 978-0-07-042715-0 .

OCLC 1102 .

Munkres, James R.

(2000).

Topology (2nd ed.).

Upper Saddle River, NJ : Prentice Hall, Inc .

ISBN 978-0-13-181629-9 .

OCLC 42683260 .

( accessible to patrons with print disabilities ) Narici, Lawrence; Beckenstein, Edward (2011).

Topological Vector Spaces . Pure and applied mathematics (Second ed.). Boca Raton, FL: CRC Press.

ISBN 978-1584888666 .

OCLC 144216834 .

Padlewska, Beata (1990).

"Families of Sets" .

Journal of Formalized Mathematics .

1 : 1 . Retrieved 5 October 2021 .

Schechter, Eric (1996).

Handbook of Analysis and Its Foundations . San Diego, CA: Academic Press.

ISBN 978-0-12-622760-4 .

OCLC 175294365 .

Schubert, Horst (1968).

Topology . London: Macdonald & Co.

ISBN 978-0-356-02077-8 .

OCLC 463753 .

Stoll, Robert R.; Set Theory and Logic , Mineola, N.Y.: Dover Publications (1979) ISBN 0-486-63829-4 .

"The Algebra of Sets", pp 16—23 .

Trybulec, Zinaida (2002).

"Properties of subsets" (PDF) .

Journal of Formalized Mathematics .

1 : 1 . Retrieved 5 October 2021 .

Wilansky, Albert (2013).

Modern Methods in Topological Vector Spaces . Mineola, New York: Dover Publications, Inc.

ISBN 978-0-486-49353-4 .

OCLC 849801114 .

Willard, Stephen (2004) [1970].

General Topology .

Mineola, N.Y.

: Dover Publications .

ISBN 978-0-486-43479-7 .

OCLC 115240 .

External links [ edit ] Operations on Sets at ProvenMath v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal v t e Set theory Overview Set (mathematics) Axioms Adjunction Choice countable dependent global Constructibility (V=L) Determinacy projective Extensionality Infinity Limitation of size Pairing Power set Regularity Union Martin's axiom Axiom schema replacement specification Operations Cartesian product Complement (i.e. set difference) De Morgan's laws Disjoint union Identities Intersection Power set Symmetric difference Union Concepts Methods Almost Cardinality Cardinal number ( large ) Class Constructible universe Continuum hypothesis Diagonal argument Element ordered pair tuple Family Forcing One-to-one correspondence Ordinal number Set-builder notation Transfinite induction Venn diagram Set types Amorphous Countable Empty Finite ( hereditarily ) Filter base subbase Ultrafilter Fuzzy Infinite ( Dedekind-infinite ) Recursive Singleton Subset · Superset Transitive Uncountable Universal Theories Alternative Axiomatic Naive Cantor's theorem Zermelo General Principia Mathematica New Foundations Zermelo–Fraenkel von Neumann–Bernays–Gödel Morse–Kelley Kripke–Platek Tarski–Grothendieck Paradoxes Problems Russell's paradox Suslin's problem Burali-Forti paradox Set theorists Paul Bernays Georg Cantor Paul Cohen Richard Dedekind Abraham Fraenkel Kurt Gödel Thomas Jech John von Neumann Willard Quine Bertrand Russell Thoralf Skolem Ernst Zermelo NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐btxcv
Cached time: 20250817014903
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 3.355 seconds
Real time usage: 3.849 seconds
Preprocessor visited node count: 22763/1000000
Revision size: 174893/2097152 bytes
Post‐expand include size: 287529/2097152 bytes
Template argument size: 28087/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 7/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 241271/5000000 bytes
Lua time usage: 0.716/10.000 seconds
Lua memory usage: 21071226/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00% 1172.230      1 -total
 20.63%  241.876      1 Template:Short_description
 18.49%  216.740      2 Template:Pagetype
 11.94%  139.939     50 Template:Sfn
 11.92%  139.745     12 Template:Annotated_link
 10.24%  120.044      3 Template:Reflist
  9.35%  109.607     18 Template:Cite_book
  7.57%   88.704      3 Template:Cite_web
  7.40%   86.713      1 Template:Families_of_sets
  4.82%   56.530     27 Template:NumBlk Saved in parser cache with key enwiki:pcache:65740015:|#|:idhash:canonical and timestamp 20250817014903 and revision id 1280416512. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=List_of_set_identities_and_relations&oldid=1280416512 " Categories : Basic concepts in infinite set theory Basic concepts in set theory Families of sets Functions and mappings Isomorphism theorems Mathematical identities Mathematics-related lists Mathematical relations Operations on sets Set theory Theorems in the foundations of mathematics Hidden categories: Articles with short description Short description is different from Wikidata Pages displaying short descriptions of redirect targets via Module:Annotated link CS1 errors: ISBN date Pages with references accessible to Internet Archive patrons with print disabilities Articles containing proofs This page was last edited on 14 March 2025, at 14:27 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents List of set identities and relations Add languages Add topic

