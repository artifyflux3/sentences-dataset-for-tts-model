Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Features of ASIS Toggle Features of ASIS subsection 1.1 Main abstractions 2 Structure of ASIS Toggle Structure of ASIS subsection 2.1 Setup ASIS analysis 2.2 Process compilation units 2.3 Complete ASIS analysis 2.4 Design criteria 2.4.1 1. Wide acceptance 2.4.2 2. Transportability 2.4.3 3. Uniformity and cohesiveness 2.4.4 4. Implementability 2.4.5 5. State of technology 2.4.6 6. Extensibility 2.4.7 7. Ada terminology and style 2.4.8 8. Performance 2.4.9 9. Minimal set of interfaces 3 Uses of ASIS Toggle Uses of ASIS subsection 3.1 ASIS for GNAT 3.2 ASIS as insulator 3.3 AdaControl 4 References Toggle References subsection 4.1 Additional 5 External links Toggle the table of contents Ada Semantic Interface Specification 2 languages Español Yorùbá Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Interface This article relies excessively on references to primary sources .

Please improve this article by adding secondary or tertiary sources .

Find sources: "Ada Semantic Interface Specification" – news · newspapers · books · scholar · JSTOR ( October 2011 ) ( Learn how and when to remove this message ) Look up ASIS in Wiktionary, the free dictionary.

Ada Semantic Interface Specification (ASIS) Developer(s) Language Lawyers, Ada Lovelace Target platform(s) Ada Programming Language Applications and Static Analysis Status Active License Proprietary The Ada Semantic Interface Specification ( ASIS ) is a layered, open architecture providing vendor-independent access to the Ada Library Environment. It allows for the static analysis of Ada programs and libraries. It is an open, published interface library that consists of the Ada environment and their tools and applications.

As explained by the ASIS Working Group : “ASIS is an interface between an Ada environment as defined by ISO/IEC 8652:1995 (the Ada Reference Manual) and any tool requiring information from this environment” (SIGAda, 2020) It is exclusively used for programming language applications and static analysis on Ada programs, therefore giving the relevant information and access to Computer-aided software engineering (CASE) and applicable developers. ASIS also has the ability in utilizing the relevant software engineering tools whilst also embodying an easy understanding of the complexities of an Ada environment display. In addition, it provides procedures, functions and relevant information that can be significantly used to access exclusive information found in reference manuals and the Abstract Syntax Tree (AST). Which in return will advance ASIS to the capability of being portable to transport and retain information and terminology of Ada tools.

[ 1 ] “ASIS consists of 21 packages, 2 are optional and within these packages define 349 queries”.

[ 2 ] ASIS will also consist of a package which within it includes child packages that include “Errors Compilation units, Ada environments, implementation, exceptions, elements, iterator, declarations, expressions, clauses, definitions, statements, text and Ids”.

[ 3 ] Overall ASIS is simply a straightforward way to collect data from an ADA program and increases any of the Ada tools portability.

Ada Programming/All Chapters. Vol.1 of 3 volume set. The basis of ASIS Features of ASIS [ edit ] Ada Semantic Interphase Specification under the ISO/IEC 8652 Ada 95 Reference Manual (Ada Language Referencing Manual, 1994) is defined as an interface amidst an Aria environment and other tools requiring information from the Aria environment.

Features of ASIS based tools could include: [ 4 ] high quality code analysis automated code monitors browsers call tree tools code reformators coding standards compliance tools correctness verifiers debuggers dependency tree analysis tools design tools document generators metrics tools reverse engineering tools re-engineering tools style checkers test tools timing estimators translators ASIS also provides limited approaches to the structural and semantic information that are found in the Ada library, it aims to provide and produce information that is similar if not exactly the same semantic level as the definition of Ada. This will greatly assist in providing the exact same definitions and information of the Reference Manual for the Ada Programming Language (LRM) to interested individuals and clients (Ehrenfried).

Main abstractions [ edit ] In ASIS, there are 3 main abstractions that exist in the Ada 'private' types. This consists of Context, Compilation_Unit and Element.

[ 5 ] While there are additional types of abstractions also involved but the 3 mentioned are the fundamentals.

Context The Context abstraction of ASIS consists of the definitions, terms and conditions that are available in ASIS enquiries. It is also used as a way and logical handle for the Ada environment.

[ 4 ] Compilation_Unit The Compilation Unit is also a logical handle for the Ada environment. This abstraction also defines the properties and characteristics which are further seen in the Ada Reference Manual . It uses Ada's programming language implementation to convey compilation units through ASIS. As said by Adacore; "An ASIS Compilation_Unit provides the ‘black-box’ view of a compilation unit, considering the unit as a whole. It may be decomposed into ASIS Element and then analyzed in ‘white-box’ fashion." [ 4 ] Examplies of these properties given can include: Time of last update Name of object containing unit's source text Element Comparably the Element abstraction is also a logical handle to the Compilation Unit discussed above, this can either be explicit or implicit.

Structure of ASIS [ edit ] The ASIS application structure can be categorized into 3 categories; Setup ASIS Analysis, Process Compilation Units and Complete ASIS Analysis. This structure is to help in supporting various code analysis programs that appear in the Ada programming language.

[ 3 ] Setup ASIS analysis [ edit ] The first step to the structure of ASIS analysis is to set it up efficiently. During this step, various tasks and programs are initialised and established. For example, as identified by William Colket (1999), this step is when the ASIS program initializes ASIS, establishes ASIS context and state object, associates the ASIS Context with the analysis, opens the ASIS context, and performs any pre-processing needed to support the ASIS analysis. The first step is generally to get the ASIS analysis up and running and be ready to use efficiently and effectively.

Process compilation units [ edit ] The setup is then followed by "processing compilation units ", during this time is when elements are sampled and analysed to fit into the ASIS Context that had been opened and associated with at the beginning of the ASIS structure. During this step, it mainly processes most of the ASIS application elements in correlation with the ASIS context, it also has the added capability to perform compilation units before and after processing has been done.

Complete ASIS analysis [ edit ] The last and final stage of the ASIS structure is the completion of ASIS analysis. This is where everything is finalised and reviewed to perform any post processing to the ASIS analysis. The ASIS context is also closed and disassociated and ASIS is eventually finalised.

Design criteria [ edit ] As ASIS continues to evolve similarly so does the evolution of its design criteria. The criteria for how ASIS can be designed can be sorted into 9 different categories; wide acceptance, transportability, uniformity and cohesiveness, implementability, state of technology, extensibility, ada terminology and style, performance and minimal set of interfaces.

[ 6 ] 1. Wide acceptance [ edit ] It must be designed according to this criterion so that a wide variety of tools can be used for ASIS. Designing it with this allows the interface library to be more flexible and available for tools across other platforms, Ada vendor implementations. It also allows for it to reduce training time for tool users and developers.

2. Transportability [ edit ] ASIS must also be designed so it has the capability to be transferred from one computer to another computer or another environment to another.

3. Uniformity and cohesiveness [ edit ] It should also be consistent in properties, concepts, types and operations but also be kept as a simple and coherent operation.

4.

Implementability [ edit ] ASIS is also criticised so that it is "implementable by any Ada Compiler Vendor with a reasonable effort".

[ 4 ] As well as maintaining consistency throughout the whole program.

5. State of technology [ edit ] The state of technology must always be updated and advanced to ensure no issues take place. Additionally, it should be ensured that all possible variations and versions of ASIS will be coherent and efficient.

6.

Extensibility [ edit ] "It should not preclude extensions that will make use of the ASIS design model and abstractions." [ 4 ] 7. Ada terminology and style [ edit ] ASIS should also adapt to the terms and conditions of style and definitions to the Ada Reference Manual.

8. Performance [ edit ] "ASIS design must allow for efficiency from both the client view and implementation view" [ 4 ] 9. Minimal set of interfaces [ edit ] "It should allow clients to implement additional layered interfaces using the primitive operations provided." Uses of ASIS [ edit ] ASIS for GNAT [ edit ] ASIS has been used by Adacore to implement an ASIS standard in the utilisation of ASIS-for-GNAT applications. ASIS can be used for GNAT through typical applications such as: “Static Analysis (property verification), Code instrumentation, Design and document generation tools, Metric testing or timing tools, Dependency Tree Analysis Tools, Type Dictionary Generators, Coding standards Enforcement Tools, Language Translators, Quality Assessment Tools, Source Browsers and Formatters and Syntax Directed Editors” (ASIS for GNAT).

This methodology has also been used to develop numerous tools with the assistance of ASIS including; gnatelim gnatstub gnatcheck gnatpp gnatmetric.

ASIS as insulator [ edit ] Pace Drury (1999) utilises ASIS to create a code for his project named ‘SIDPERS-3’ where the code is used to identify intimate details and variations seen in Commercial Off the Shelf (COTS) generated from data base interaction Drury used ASIS for his project where ASIS created a new layer of Ada code which successfully insulated the software developer from the same generated Ada code specifics.

[ 7 ] Having written such a difficult code called ‘generate_db_support_code’ which majorly consisted of Ada code, the aim of it were to open 2 files, examine contents and create two new files based on the prior 2 files. ASIS had been used to examine the structure of the code efficiently, making it easier to store and link to a list containing Ada language. ASIS coherently completes what is asked to do and successfully gains constant and secure access to the data base information which meets the project’s needs.

AdaControl [ edit ] AdaControl is a free (GMGPL) tool that detects the use of various kinds of constructs in Ada programs. Its uses include checking of coding standards, exploring the use of Ada features, making statistics, and more. It exploits all the power of ASIS, and can be considered as the most typical ASIS application.

References [ edit ] ^ Sward, Ricky E.; Chamillard, A. T. (2004).

"Re-engineering global variables in Ada" .

Proceedings of the 2004 annual ACM SIGAda international conference on Ada: The engineering of correct and reliable software for real-time & distributed systems using Ada and related technologies . Vol. XXIV. Atlanta, Georgia, USA: ACM Press. pp.

29– 34.

doi : 10.1145/1032297.1032303 .

ISBN 978-1-58113-906-8 .

S2CID 31415676 .

^ Strohmeier, Alfred; Fofanov, Vasiliy; Rybin, Sergey; Barbey, Stéphane (1998).

"Quality-for-ASIS: A portable testing facility for ASIS" . In Asplund, Lars (ed.).

Reliable Software Technologies — Ada-Europe . Lecture Notes in Computer Science. Vol. 1411. Berlin, Heidelberg: Springer. pp.

163– 175.

doi : 10.1007/BFb0055003 .

ISBN 978-3-540-69802-9 .

^ a b Colket, William Currie (September 1999).

"Code analysis of saftey-critical [sic] and real-time software using ASIS" .

ACM SIGAda Ada Letters .

XIX (3): 67– 76.

doi : 10.1145/319295.319306 .

ISSN 1094-3641 .

^ a b c d e f et.al ^ "4. ASIS Overview — ASIS-for-GNAT User's Guide 22.0w documentation" .

docs.adacore.com . Retrieved 2020-11-20 .

^ Bladen, James B.; Spenhoff, David; Blake, Steven J. (1991).

"Ada semantic interface specification (ASIS)" .

Proceedings of the conference on TRI-Ada '91 today's accomplishments; tomorrow's expectations - TRI-Ada '91 . New York, New York, USA: ACM Press. pp.

6– 15.

doi : 10.1145/126551.126552 .

ISBN 0-89791-445-7 .

S2CID 19422485 .

^ Drury, Pace (March 1999).

"Using ASIS for data base insulation" .

ACM SIGAda Ada Letters .

XIX (1): 64– 65.

doi : 10.1145/311457.311486 .

ISSN 1094-3641 .

S2CID 37063586 .

Additional [ edit ] ISO/IEC 15291: Information technology — Programming languages — Ada Semantic Interface Specification (ASIS) Ada Language Reference Manual. Version 6.0 21 December 1994. Copyright (C) 1992, 1993, 1994, 1995 Intermetrics, Inc.

ASIS 2.0 specification External links [ edit ] ASIS Working Group Ada Reference Manual v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category v t e IEC standards IEC 60027 60034 60038 60062 60063 60068 60112 60228 60269 60297 60309 60320 60364 60446 60559 60601 60870 60870-5 60870-6 60906-1 60908 60929 60958 60980-344 61030 61131 61131-3 61131-9 61158 61162 61334 61355 61360 61400 61499 61508 61511 61784 61850 61851 61883 61960 61968 61970 62014-4 62026 62056 62061 62196 62262 62264 62304 62325 62351 62365 62366 62379 62386 62455 62680 62682 62700 63110 63119 63382 ISO/IEC 646 1989 2022 4909 5218 6429 6523 7810 7811 7812 7813 7816 7942 8613 8632 8652 8859 9126 9293 9496 9529 9592 9593 9899 9945 9995 10021 10116 10165 10179 10279 10646 10967 11172 11179 11404 11544 11801 12207 13250 13346 13522-5 13568 13816 13818 14443 14496 14651 14882 15288 15291 15408 15444 15445 15504 15511 15693 15897 15938 16262 16485 17024 17025 18004 18014 18181 19752 19757 19770 19788 20000 20802 21000 21827 22275 22537 23000 23003 23008 23270 23360 24707 24727 24744 24752 26300 27000 27000 family 27002 27040 29110 29119 33001 38500 39075 42010 80000 81346 Related International Electrotechnical Commission Retrieved from " https://en.wikipedia.org/w/index.php?title=Ada_Semantic_Interface_Specification&oldid=1292619555 " Category : Programming language standards Hidden categories: Articles with short description Short description matches Wikidata Articles lacking reliable references from October 2011 All articles lacking reliable references This page was last edited on 27 May 2025, at 23:28 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Ada Semantic Interface Specification 2 languages Add topic

