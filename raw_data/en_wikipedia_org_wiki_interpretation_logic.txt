Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Formal languages Toggle Formal languages subsection 1.1 Example 1.2 Logical constants 2 General properties of truth-functional interpretations Toggle General properties of truth-functional interpretations subsection 2.1 Logical connectives 3 Interpretation of a theory 4 Interpretations for propositional logic 5 First-order logic Toggle First-order logic subsection 5.1 Formal languages for first-order logic 5.2 Interpretations of a first-order language 5.3 Example of a first-order interpretation 5.4 Non-empty domain requirement 5.5 Interpreting equality 5.6 Many-sorted first-order logic 6 Higher-order predicate logics 7 Non-classical interpretations 8 Intended interpretations Toggle Intended interpretations subsection 8.1 Example 9 Other concepts of interpretation 10 See also 11 Notes 12 References 13 External links Toggle the table of contents Interpretation (logic) 16 languages العربية Català Deutsch Español Français हिन्दी IsiZulu Italiano Magyar Nederlands Português کوردی Suomi Українська 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Assignment of meaning to the symbols of a formal language For other uses, see Interpretation (disambiguation) .

An interpretation is an assignment of meaning to the symbols of a formal language . Many formal languages used in mathematics , logic , and theoretical computer science are defined in solely syntactic terms, and as such do not have any meaning until they are given some interpretation. The general study of interpretations of formal languages is called formal semantics .

The most commonly studied formal logics are propositional logic , predicate logic and their modal analogs, and for these there are standard ways of presenting an interpretation. In these contexts an interpretation is a function that provides the extension of symbols and strings of an object language. For example, an interpretation function could take the predicate symbol T {\displaystyle T} and assign it the extension { ( a ) } {\displaystyle \{(\mathrm {a} )\}} . All our interpretation does is assign the extension { ( a ) } {\displaystyle \{(\mathrm {a} )\}} to the non-logical symbol T {\displaystyle T} , and does not make a claim about whether T {\displaystyle T} is to stand for tall and a {\displaystyle \mathrm {a} } for Abraham Lincoln. On the other hand, an interpretation does not have anything to say about logical symbols, e.g. logical connectives " a n d {\displaystyle \mathrm {and} } ", " o r {\displaystyle \mathrm {or} } " and " n o t {\displaystyle \mathrm {not} } ". Though we may take these symbols to stand for certain things or concepts, this is not determined by the interpretation function.

An interpretation often (but not always) provides a way to determine the truth values of sentences in a language. If a given interpretation assigns the value True to a sentence or theory , the interpretation is called a model of that sentence or theory.

Formal languages [ edit ] Main article: Formal language A formal language consists of a possibly infinite set of sentences (variously called words or formulas ) built from a fixed set of letters or symbols . The inventory from which these letters are taken is called the alphabet over which the language is defined. To distinguish the strings of symbols that are in a formal language from arbitrary strings of symbols, the former are sometimes called well-formed formulæ (wff). The essential feature of a formal language is that its syntax can be defined without reference to interpretation. For example, we can determine that ( P or Q ) is a well-formed formula even without knowing whether it is true or false.

Example [ edit ] A formal language W {\displaystyle {\mathcal {W}}} can be defined with the
alphabet α α = { △ △ , ◻ ◻ } {\displaystyle \alpha =\{\triangle ,\square \}} , and with a word being in W {\displaystyle {\mathcal {W}}} if it begins with △ △ {\displaystyle \triangle } and is composed solely of the symbols △ △ {\displaystyle \triangle } and ◻ ◻ {\displaystyle \square } .

A possible interpretation of W {\displaystyle {\mathcal {W}}} could assign the decimal digit '1' to △ △ {\displaystyle \triangle } and '0' to ◻ ◻ {\displaystyle \square } . Then △ △ ◻ ◻ △ △ {\displaystyle \triangle \square \triangle } would denote 101 under this interpretation of W {\displaystyle {\mathcal {W}}} .

Logical constants [ edit ] In the specific cases of propositional logic and predicate logic, the formal languages considered have alphabets that are divided into two sets: the logical symbols ( logical constants ) and the non-logical symbols. The idea behind this terminology is that logical symbols have the same meaning regardless of the subject matter being studied, while non-logical symbols change in meaning depending on the area of investigation.

Logical constants are always given the same meaning by every interpretation of the standard kind, so that only the meanings of the non-logical symbols are changed. Logical constants include quantifier symbols ∀ ("all") and ∃ ("some"), symbols for logical connectives ∧ ("and"), ∨ ("or"), ¬ ("not"), parentheses and other grouping symbols, and (in many treatments) the equality symbol =.

General properties of truth-functional interpretations [ edit ] Many of the commonly studied interpretations associate each sentence in a formal language with a single truth value, either True or False. These interpretations are called truth functional ; [ dubious – discuss ] they include the usual interpretations of propositional and first-order logic. The sentences that are made true by a particular assignment are said to be satisfied by that assignment.

In classical logic , no sentence can be made both true and false by the same interpretation, although this is not true of glut logics such as LP.

[ 1 ] Even in classical logic, however, it is possible that the truth value of the same sentence can be different under different interpretations. A sentence is consistent if it is true under at least one interpretation; otherwise it is inconsistent . A sentence φ is said to be logically valid if it is satisfied by every interpretation (if φ is satisfied by every interpretation that satisfies ψ then φ is said to be a logical consequence of ψ).

Logical connectives [ edit ] Some of the logical symbols of a language (other than quantifiers) are truth-functional connectives that represent truth functions — functions that take truth values as arguments and return truth values as outputs (in other words, these are operations on truth values of sentences).

The truth-functional connectives enable compound sentences to be built up from simpler sentences. In this way, the truth value of the compound sentence is defined as a certain truth function of the truth values of the simpler sentences. The connectives are usually taken to be logical constants , meaning that the meaning of the connectives is always the same, independent of what interpretations are given to the other symbols in a formula.

This is how we define logical connectives in propositional logic: ¬Φ is True iff Φ is False.

(Φ ∧ Ψ) is True iff Φ is True and Ψ is True.

(Φ ∨ Ψ) is True iff Φ is True or Ψ is True (or both are True).

(Φ → Ψ) is True iff ¬Φ is True or Ψ is True (or both are True).

(Φ ↔ Ψ) is True iff (Φ → Ψ) is True and (Ψ → Φ) is True.

So under a given interpretation of all the sentence letters Φ and Ψ (i.e., after assigning a truth-value to each sentence letter), we can determine the truth-values of all formulas that have them as constituents, as a function of the logical connectives. The following table shows how this kind of thing looks. The first two columns show the truth-values of the sentence letters as determined by the four possible interpretations. The other columns show the truth-values of formulas built from these sentence letters, with truth-values determined recursively.

Logical connectives Interpretation Φ Ψ ¬Φ (Φ ∧ Ψ) (Φ ∨ Ψ) (Φ → Ψ) (Φ ↔ Ψ) #1 T T F T T T T #2 T F F F T F F #3 F T T F T T F #4 F F T F F T T Now it is easier to see what makes a formula logically valid. Take the formula F : (Φ ∨ ¬Φ). If our interpretation function makes Φ True, then ¬Φ is made False by the negation connective. Since the disjunct Φ of F is True under that interpretation, F is True. Now the only other possible interpretation of Φ makes it False, and if so, ¬Φ is made True by the negation function. That would make F True again, since one of F s disjuncts, ¬Φ, would be true under this interpretation. Since these two interpretations for F are the only possible logical interpretations, and since F comes out True for both, we say that it is logically valid or tautologous.

Interpretation of a theory [ edit ] Main article: Theory (mathematical logic) An interpretation of a theory is the relationship between a theory and some subject matter when there is a many-to-one correspondence between certain elementary statements of the theory, and certain statements related to the subject matter. If every elementary statement in the theory has a correspondent it is called a full interpretation , otherwise it is called a partial interpretation .

[ 2 ] Interpretations for propositional logic [ edit ] The formal language for propositional logic consists of formulas built up from propositional symbols (also called sentential symbols, sentential variables, propositional variables ) and logical connectives. The only non-logical symbols in a formal language for propositional logic are the propositional symbols, which are often denoted by capital letters. To make the formal language precise, a specific set of propositional symbols must be fixed.

The standard kind of interpretation in this setting is a function that maps each propositional symbol to one of the truth values true and false. This function is known as a truth assignment or valuation function. In many presentations, it is literally a truth value that is assigned, but some presentations assign truthbearers instead.

For a language with n distinct propositional variables there are 2 n distinct possible interpretations. For any particular variable a , for example, there are 2 1 =2 possible interpretations: 1) a is assigned T , or 2) a is assigned F . For the pair a , b there are 2 2 =4 possible interpretations: 1) both are assigned T , 2) both are assigned F , 3) a is assigned T and b is assigned F , or 4) a is assigned F and b is assigned T .

Given any truth assignment for a set of propositional symbols, there is a unique extension to an interpretation for all the propositional formulas built up from those variables. This extended interpretation is defined inductively, using the truth-table definitions of the logical connectives discussed above.

First-order logic [ edit ] Unlike propositional logic, where every language is the same apart from a choice of a different set of propositional variables, there are many different first-order languages. Each first-order language is defined by a signature . The signature consists of a set of non-logical symbols and an identification of each of these symbols as either a constant symbol, a function symbol, or a predicate symbol . In the case of function and predicate symbols, a natural number arity is also assigned. The alphabet for the formal language consists of logical constants, the equality relation symbol =, all the symbols from the signature, and an additional infinite set of symbols known as variables.

For example, in the language of rings , there are constant symbols 0 and 1, two binary function symbols + and ·, and no binary relation symbols. (Here the equality relation is taken as a logical constant.) Again, we might define a first-order language L , as consisting of individual symbols a, b, and c; predicate symbols F, G, H, I and J; variables x, y, z; no function letters; no sentential symbols.

Formal languages for first-order logic [ edit ] Given a signature σ, the corresponding formal language is known as the set of σ-formulas. Each σ-formula is built up out of atomic formulas by means of logical connectives; atomic formulas are built from terms using predicate symbols. The formal definition of the set of σ-formulas proceeds in the other direction: first, terms are assembled from the constant and function symbols together with the variables. Then, terms can be combined into an atomic formula using a predicate symbol (relation symbol) from the signature or the special predicate symbol "=" for equality (see the section " Interpreting equality" below). Finally, the formulas of the language are assembled from atomic formulas using the logical connectives and quantifiers.

Interpretations of a first-order language [ edit ] See also: Interpretation function To ascribe meaning to all sentences of a first-order language, the following information is needed.

A domain of discourse [ a ] D , usually required to be non-empty (see below).

For every constant symbol, an element of D as its interpretation.

For every n -ary function symbol, an n -ary function from D to D as its interpretation (that is, a function D n → D ).

For every n -ary predicate symbol, an n -ary relation on D as its interpretation (that is, a subset of D n ).

An object carrying this information is known as a structure (of signature σ), or σ-structure, or L -structure (of language L), or as a "model".

The information specified in the interpretation provides enough information to give a truth value to any atomic formula, after each of its free variables , if any, has been replaced by an element of the domain. The truth value of an arbitrary sentence is then defined inductively using the T-schema , which is a definition of first-order semantics developed by Alfred Tarski. The T-schema interprets the logical connectives using truth tables, as discussed above. Thus, for example, φ ∧ ψ is satisfied if and only if both φ and ψ are satisfied.

This leaves the issue of how to interpret formulas of the form ∀ x φ( x ) and ∃ x φ( x ) . The domain of discourse forms the range for these quantifiers. The idea is that the sentence ∀ x φ( x ) is true under an interpretation exactly when every substitution instance of φ( x ), where x is replaced by some element of the domain, is satisfied. The formula ∃ x φ( x ) is satisfied if there is at least one element d of the domain such that φ( d ) is satisfied.

Strictly speaking, a substitution instance such as the formula φ( d ) mentioned above is not a formula in the original formal language of φ, because d is an element of the domain. There are two ways of handling this technical issue. The first is to pass to a larger language in which each element of the domain is named by a constant symbol. The second is to add to the interpretation a function that assigns each variable to an element of the domain. Then the T-schema can quantify over variations of the original interpretation in which this variable assignment function is changed, instead of quantifying over substitution instances.

Some authors also admit propositional variables in first-order logic, which must then also be interpreted. A propositional variable can stand on its own as an atomic formula. The interpretation of a propositional variable is one of the two truth values true and false.

[ 3 ] Because the first-order interpretations described here are defined in set theory , they do not associate each predicate symbol with a property [ b ] (or relation), but rather with the extension of that property (or relation). In other words, these first-order interpretations are extensional [ c ] not intensional .

Example of a first-order interpretation [ edit ] An example of interpretation I {\displaystyle {\mathcal {I}}} of the language L described above is as follows.

Domain: A chess set Individual constants: a: The white King, b: The black Queen, c: The white King's pawn F(x): x is a piece G(x): x is a pawn H(x): x is black I(x): x is white J(x, y): x can capture y In the interpretation I {\displaystyle {\mathcal {I}}} of L: the following are true sentences: F(a), G(c), H(b), I(a), J(b, c), the following are false sentences: J(a, c), G(a).

Non-empty domain requirement [ edit ] As stated above, a first-order interpretation is usually required to specify a nonempty set as the domain of discourse. The reason for this requirement is to guarantee that equivalences such as ( ϕ ϕ ∨ ∨ ∃ ∃ x ψ ψ ) ↔ ↔ ∃ ∃ x ( ϕ ϕ ∨ ∨ ψ ψ ) , {\displaystyle (\phi \lor \exists x\psi )\leftrightarrow \exists x(\phi \lor \psi ),} where x is not a free variable of φ, are logically valid. This equivalence holds in every interpretation with a nonempty domain, but does not always hold when empty domains are permitted. For example, the equivalence [ ∀ ∀ y ( y = y ) ∨ ∨ ∃ ∃ x ( x = x ) ] ≡ ≡ ∃ ∃ x [ ∀ ∀ y ( y = y ) ∨ ∨ x = x ] {\displaystyle [\forall y(y=y)\lor \exists x(x=x)]\equiv \exists x[\forall y(y=y)\lor x=x]} fails in any structure with an empty domain. Thus the proof theory of first-order logic becomes more complicated when empty structures are permitted. However, the gain in allowing them is negligible, as both the intended interpretations and the interesting interpretations of the theories people study have non-empty domains.

[ 4 ] [ 5 ] Empty relations do not cause any problem for first-order interpretations, because there is no similar notion of passing a relation symbol across a logical connective, enlarging its scope in the process. Thus it is acceptable for relation symbols to be interpreted as being identically false. However, the interpretation of a function symbol must always assign a well-defined and total function to the symbol.

Interpreting equality [ edit ] The equality relation is often treated specially in first order logic and other predicate logics. There are two general approaches.

The first approach is to treat equality as no different than any other binary relation. In this case, if an equality symbol is included in the signature, it is usually necessary to add various axioms about equality to axiom systems (for example, the substitution axiom saying that if a = b and R ( a ) holds then R ( b ) holds as well). This approach to equality is most useful when studying signatures that do not include the equality relation, such as the signature for set theory or the signature for second-order arithmetic in which there is only an equality relation for numbers, but not an equality relation for set of numbers.

The second approach is to treat the equality relation symbol as a logical constant that must be interpreted by the real equality relation in any interpretation. An interpretation that interprets equality this way is known as a normal model , so this second approach is the same as only studying interpretations that happen to be normal models. The advantage of this approach is that the axioms related to equality are automatically satisfied by every normal model, and so they do not need to be explicitly included in first-order theories when equality is treated this way. This second approach is sometimes called first order logic with equality , but many authors adopt it for the general study of first-order logic without comment.

There are a few other reasons to restrict study of first-order logic to normal models. First, it is known that any first-order interpretation in which equality is interpreted by an equivalence relation and satisfies the substitution axioms for equality can be cut down to an elementarily equivalent interpretation on a subset of the original domain. Thus there is little additional generality in studying non-normal models. Second, if non-normal models are considered, then every consistent theory has an infinite model; this affects the statements of results such as the Löwenheim–Skolem theorem , which are usually stated under the assumption that only normal models are considered.

Many-sorted first-order logic [ edit ] A generalization of first order logic considers languages with more than one sort of variables. The idea is different sorts of variables represent different types of objects. Every sort of variable can be quantified; thus an interpretation for a many-sorted language has a separate domain for each of the sorts of variables to range over (there is an infinite collection of variables of each of the different sorts). Function and relation symbols, in addition to having arities, are specified so that each of their arguments must come from a certain sort.

One example of many-sorted logic is for planar Euclidean geometry [ clarification needed ] . There are two sorts; points and lines. There is an equality relation symbol for points, an equality relation symbol for lines, and a binary incidence relation E which takes one point variable and one line variable. The intended interpretation of this language has the point variables range over all points on the Euclidean plane , the line variable range over all lines on the plane, and the incidence relation E ( p , l ) holds if and only if point p is on line l .

Higher-order predicate logics [ edit ] A formal language for higher-order predicate logic looks much the same as a formal language for first-order logic. The difference is that there are now many different types of variables. Some variables correspond to elements of the domain, as in first-order logic. Other variables correspond to objects of higher type: subsets of the domain, functions from the domain, functions that take a subset of the domain and return a function from the domain to subsets of the domain, etc. All of these types of variables can be quantified.

There are two kinds of interpretations commonly employed for higher-order logic.

Full semantics require that, once the domain of discourse is satisfied, the higher-order variables range over all possible elements of the correct type (all subsets of the domain, all functions from the domain to itself, etc.). Thus the specification of a full interpretation is the same as the specification of a first-order interpretation.

Henkin semantics , which are essentially multi-sorted first-order semantics, require the interpretation to specify a separate domain for each type of higher-order variable to range over. Thus an interpretation in Henkin semantics includes a domain D , a collection of subsets of D , a collection of functions from D to D , etc. The relationship between these two semantics is an important topic in higher order logic.

Non-classical interpretations [ edit ] The interpretations of propositional logic and predicate logic described above are not the only possible interpretations. In particular, there are other types of interpretations that are used in the study of non-classical logic (such as intuitionistic logic ), and in the study of modal logic.

Interpretations used to study non-classical logic include topological models , Boolean-valued models , and Kripke models .

Modal logic is also studied using Kripke models.

Intended interpretations [ edit ] Many formal languages are associated with a particular interpretation that is used to motivate them. For example, the first-order signature for set theory includes only one binary relation, ∈, which is intended to represent set membership, and the domain of discourse in a first-order theory of the natural numbers is intended to be the set of natural numbers.

The intended interpretation is called the standard model (a term introduced by Abraham Robinson in 1960).

[ 6 ] In the context of Peano arithmetic , it consists of the natural numbers with their ordinary arithmetical operations. All models that are isomorphic to the one just given are also called standard; these models all satisfy the Peano axioms . There are also non-standard models of the (first-order version of the) Peano axioms , which contain elements not correlated with any natural number.

While the intended interpretation can have no explicit indication in the strictly formal syntactical rules , it naturally affects the choice of the formation and transformation rules of the syntactical system. For example, primitive signs must permit expression of the concepts to be modeled; sentential formulas are chosen so that their counterparts in the intended interpretation are meaningful declarative sentences ; primitive sentences need to come out as true sentences in the interpretation; rules of inference must be such that, if the sentence I j {\displaystyle {\mathcal {I}}_{j}} is directly derivable from a sentence I i {\displaystyle {\mathcal {I}}_{i}} , then I i → → I j {\displaystyle {\mathcal {I}}_{i}\to {\mathcal {I}}_{j}} turns out to be a true sentence, with → → {\displaystyle \to } meaning implication , as usual. These requirements ensure that all provable sentences also come out to be true.

[ 7 ] Most formal systems have many more models than they were intended to have (the existence of non-standard models is an example). When we speak about 'models' in empirical sciences , we mean, if we want reality to be a model of our science, to speak about an intended model . A model in the empirical sciences is an intended factually-true descriptive interpretation (or in other contexts: a non-intended arbitrary interpretation used to clarify such an intended factually-true descriptive interpretation.) All models are interpretations that have the same domain of discourse as the intended one, but other assignments for non-logical constants .

[ 8 ] [ page needed ] Example [ edit ] Given a simple formal system (we shall call this one F S ′ {\displaystyle {\mathcal {FS'}}} ) whose alphabet α consists only of three symbols { ◼ ◼ , ★ ★ , ⧫ ⧫ } {\displaystyle \{\blacksquare ,\bigstar ,\blacklozenge \}} and whose formation rule for formulas is: 'Any string of symbols of F S ′ {\displaystyle {\mathcal {FS'}}} which is at least 6 symbols long, and which is not infinitely long, is a formula of F S ′ {\displaystyle {\mathcal {FS'}}} . Nothing else is a formula of F S ′ {\displaystyle {\mathcal {FS'}}} .' The single axiom schema of F S ′ {\displaystyle {\mathcal {FS'}}} is: " ◼ ◼ ★ ★ ∗ ∗ ⧫ ⧫ ◼ ◼ ∗ ∗ {\displaystyle \blacksquare \ \bigstar \ast \blacklozenge \ \blacksquare \ast } " (where " ∗ ∗ {\displaystyle \ast } " is a metasyntactic variable standing for a finite string of " ◼ ◼ {\displaystyle \blacksquare } "s ) A formal proof can be constructed as follows: ◼ ◼ ★ ★ ◼ ◼ ⧫ ⧫ ◼ ◼ ◼ ◼ {\displaystyle \blacksquare \ \bigstar \ \blacksquare \ \blacklozenge \ \blacksquare \ \blacksquare } ◼ ◼ ★ ★ ◼ ◼ ◼ ◼ ⧫ ⧫ ◼ ◼ ◼ ◼ ◼ ◼ {\displaystyle \blacksquare \ \bigstar \ \blacksquare \ \blacksquare \ \blacklozenge \ \blacksquare \ \blacksquare \ \blacksquare } ◼ ◼ ★ ★ ◼ ◼ ◼ ◼ ◼ ◼ ⧫ ⧫ ◼ ◼ ◼ ◼ ◼ ◼ ◼ ◼ {\displaystyle \blacksquare \ \bigstar \ \blacksquare \ \blacksquare \ \blacksquare \ \blacklozenge \ \blacksquare \ \blacksquare \ \blacksquare \ \blacksquare } In this example the theorem produced " ◼ ◼ ★ ★ ◼ ◼ ◼ ◼ ◼ ◼ ⧫ ⧫ ◼ ◼ ◼ ◼ ◼ ◼ ◼ ◼ {\displaystyle \blacksquare \ \bigstar \ \blacksquare \ \blacksquare \ \blacksquare \ \blacklozenge \ \blacksquare \ \blacksquare \ \blacksquare \ \blacksquare } " can be interpreted as meaning "One plus three equals four." A different interpretation would be to read it backwards as "Four minus three equals one." [ 9 ] [ failed verification ] Other concepts of interpretation [ edit ] There are other uses of the term "interpretation" that are commonly used, which do not refer to the assignment of meanings to formal languages.

In model theory , a structure A is said to interpret a structure B if there is a definable subset D of A , and definable relations and functions on D , such that B is isomorphic to the structure with domain D and these functions and relations. In some settings, it is not the domain D that is used, but rather D modulo an equivalence relation definable in A . For additional information, see Interpretation (model theory) .

A theory T is said to interpret another theory S if there is a finite extension by definitions T ′ of T such that S is contained in T ′.

See also [ edit ] Conceptual model Free variables and Name binding Formal semantics (natural language) Herbrand interpretation Interpretation (model theory) Logical system Löwenheim–Skolem theorem Modal logic Model theory Satisfiable Truth Notes [ edit ] ^ Sometimes called the "universe of discourse" ^ The extension of a property (also called an attribute) is a set of individuals, so a property is a unary relation. E.g. The properties "yellow" and "prime" are unary relations.

^ See also Extension (predicate logic) References [ edit ] ^ Priest, Graham , 2008.

An Introduction to Non-Classical Logic: from If to Is , 2nd ed. Cambridge University Press.

^ Haskell Curry (1963).

Foundations of Mathematical Logic . Mcgraw Hill. p. 48.

^ Mates, Benson (1972), Elementary Logic, Second Edition , New York: Oxford University Press , pp.

56 , ISBN 0-19-501491-X ^ Hailperin, Theodore (1953), "Quantification theory and empty individual-domains", The Journal of Symbolic Logic , 18 (3), Association for Symbolic Logic : 197– 200, doi : 10.2307/2267402 , JSTOR 2267402 , MR 0057820 , S2CID 40988137 ^ Quine, W. V.

(1954), "Quantification and the empty domain", The Journal of Symbolic Logic , 19 (3), Association for Symbolic Logic: 177– 179, doi : 10.2307/2268615 , JSTOR 2268615 , MR 0064715 , S2CID 27053902 ^ Roland Müller (2009). "The Notion of a Model". In Anthonie Meijers (ed.).

Philosophy of technology and engineering sciences . Handbook of the Philosophy of Science. Vol. 9. Elsevier.

ISBN 978-0-444-51667-1 .

^ Rudolf Carnap (1958).

Introduction to Symbolic Logic and its Applications . New York: Dover publications.

ISBN 9780486604534 .

{{ cite book }} : ISBN / Date incompatibility ( help ) ^ Hans Freudenthal , ed. (Jan 1960).

The Concept and the Role of the Model in Mathematics and Natural and Social Sciences (Colloquium proceedings) . Springer.

ISBN 978-94-010-3669-6 .

{{ cite book }} : ISBN / Date incompatibility ( help ) ^ Hunter, Geoffrey (1996) [1971].

Metalogic: An Introduction to the Metatheory of Standard First-Order Logic . University of California Press (published 1973).

ISBN 9780520023567 .

OCLC 36312727 .

( accessible to patrons with print disabilities ) External links [ edit ] Stanford Enc. Phil: Classical Logic, 4. Semantics Sakharov, Alex.

"Formal Language" .

MathWorld .

Weisstein, Eric W.

"Connective" .

MathWorld .

Sakharov, Alex.

"Interpretation" .

MathWorld .

Sakharov, Alex.

"Propositional Calculus" .

MathWorld .

Sakharov, Alex.

"First Order Logic" .

MathWorld .

v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal v t e Metalogic and metamathematics Cantor's theorem Entscheidungsproblem Church–Turing thesis Consistency Effective method Foundations of mathematics of geometry Gödel's completeness theorem Gödel's incompleteness theorems Soundness Completeness Decidability Interpretation Löwenheim–Skolem theorem Metatheorem Satisfiability Independence Type–token distinction Use–mention distinction NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐6kr5s
Cached time: 20250812022002
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.530 seconds
Real time usage: 0.754 seconds
Preprocessor visited node count: 2706/1000000
Revision size: 32413/2097152 bytes
Post‐expand include size: 107332/2097152 bytes
Template argument size: 4691/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 10/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 63377/5000000 bytes
Lua time usage: 0.287/10.000 seconds
Lua memory usage: 6484134/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  502.827      1 -total
 29.62%  148.930      2 Template:Reflist
 21.66%  108.911      5 Template:Cite_book
 21.48%  107.994      5 Template:Navbox
 19.10%   96.054      1 Template:Mathematical_logic
 15.19%   76.404      1 Template:Short_description
  9.98%   50.170      3 Template:Fix
  9.16%   46.046      2 Template:Pagetype
  7.84%   39.407      5 Template:Mathworld
  7.68%   38.604      1 Template:Dubious Saved in parser cache with key enwiki:pcache:14511671:|#|:idhash:canonical and timestamp 20250812022002 and revision id 1289828711. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Interpretation_(logic)&oldid=1289828711 " Categories : Formal languages Interpretation (philosophy) Model theory Philosophy of language Semantics Hidden categories: CS1 errors: ISBN date Articles with short description Short description matches Wikidata All accuracy disputes Articles with disputed statements from September 2015 Wikipedia articles needing clarification from June 2022 Wikipedia articles needing page number citations from September 2015 All articles with failed verification Articles with failed verification from December 2024 This page was last edited on 11 May 2025, at 03:26 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Interpretation (logic) 16 languages Add topic

