Title: Computational physics

URL Source: https://en.wikipedia.org/wiki/Computational_physics

Published Time: 2002-10-18T03:28:35Z

Markdown Content:
From Wikipedia, the free encyclopedia

This article is about computational science applied in physics. For theories comparing the universe to a computer, see [Digital physics](https://en.wikipedia.org/wiki/Digital_physics "Digital physics"). For the study of the fundamental physical limits of computers, see [Physics of computation](https://en.wikipedia.org/wiki/Physics_of_computation "Physics of computation").

**Computational physics** is the study and implementation of [numerical analysis](https://en.wikipedia.org/wiki/Numerical_analysis "Numerical analysis") to solve problems in [physics](https://en.wikipedia.org/wiki/Physics "Physics").[[1]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-ThijssenBook-1) Historically, computational physics was the first application of modern computers in science, and is now a subset of [computational science](https://en.wikipedia.org/wiki/Computational_science "Computational science"). It is sometimes regarded as a subdiscipline (or offshoot) of [theoretical physics](https://en.wikipedia.org/wiki/Theoretical_physics "Theoretical physics"), but others consider it an intermediate branch between theoretical and [experimental physics](https://en.wikipedia.org/wiki/Experimental_physics "Experimental physics") — an area of study which supplements both theory and experiment.[[2]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-ComPhysPy-2)

[![Image 1](https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Computational_physics_diagram.svg/250px-Computational_physics_diagram.svg.png)](https://en.wikipedia.org/wiki/File:Computational_physics_diagram.svg)

A representation of the multidisciplinary nature of computational physics both as an overlap of physics, applied mathematics, and computer science and as a bridge among them[[3]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-SurveyCompSci-3)

In physics, different [theories](https://en.wikipedia.org/wiki/Theory "Theory") based on mathematical models provide very precise predictions on how systems behave. Unfortunately, it is often the case that solving the mathematical model for a particular system in order to produce a useful prediction is not feasible. This can occur, for instance, when the solution does not have a [closed-form expression](https://en.wikipedia.org/wiki/Closed-form_expression "Closed-form expression"), or is too complicated. In such cases, numerical approximations are required. Computational physics is the subject that deals with these numerical approximations: the approximation of the solution is written as a finite (and typically large) number of simple mathematical operations ([algorithm](https://en.wikipedia.org/wiki/Algorithm "Algorithm")), and a computer is used to perform these operations and compute an approximated solution and respective [error](https://en.wikipedia.org/wiki/Approximation_error "Approximation error").[[1]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-ThijssenBook-1)

There is a debate about the status of computation within the scientific method.[[4]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-ercolessi-4) Sometimes it is regarded as more akin to theoretical physics; some others regard computer simulation as "[computer experiments](https://en.wikipedia.org/wiki/Computer_experiment "Computer experiment")",[[4]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-ercolessi-4) yet still others consider it an intermediate or different branch between theoretical and [experimental physics](https://en.wikipedia.org/wiki/Experimental_physics "Experimental physics"), a third way that supplements theory and experiment. While computers can be used in experiments for the measurement and recording (and storage) of data, this clearly does not constitute a computational approach.

Challenges in computational physics
-----------------------------------

[[edit](https://en.wikipedia.org/w/index.php?title=Computational_physics&action=edit&section=3 "Edit section: Challenges in computational physics")]

Computational physics problems are in general very difficult to solve exactly. This is due to several (mathematical) reasons: lack of algebraic and/or analytic solvability, [complexity](https://en.wikipedia.org/wiki/Complexity "Complexity"), and chaos. For example, even apparently simple problems, such as calculating the [wavefunction](https://en.wikipedia.org/wiki/Wavefunction "Wavefunction") of an electron orbiting an atom in a strong [electric field](https://en.wikipedia.org/wiki/Electric_field "Electric field") ([Stark effect](https://en.wikipedia.org/wiki/Stark_effect "Stark effect")), may require great effort to formulate a practical algorithm (if one can be found); other cruder or brute-force techniques, such as [graphical methods](https://en.wikipedia.org/wiki/Graphical_method "Graphical method") or [root finding](https://en.wikipedia.org/wiki/Root_finding "Root finding"), may be required. On the more advanced side, mathematical [perturbation theory](https://en.wikipedia.org/wiki/Perturbation_theory "Perturbation theory") is also sometimes used (a working is shown for this particular example [here](https://en.wikipedia.org/wiki/Perturbation_theory#Example_of_degenerate_perturbation_theory_%E2%80%93_Stark_effect_in_resonant_rotating_wave "Perturbation theory")). In addition, the [computational cost](https://en.wikipedia.org/wiki/Computational_cost "Computational cost") and [computational complexity](https://en.wikipedia.org/wiki/Computational_complexity_theory "Computational complexity theory") for [many-body problems](https://en.wikipedia.org/wiki/Many-body_problem "Many-body problem") (and their [classical counterparts](https://en.wikipedia.org/wiki/N-body_problem "N-body problem")) tend to grow quickly. A macroscopic system typically has a size of the order of ![Image 2: {\displaystyle 10^{23}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/48d016cc8b369146c9bdca3ef8551b0c18acd6fc) constituent particles, so it is somewhat of a problem. Solving quantum mechanical problems is generally of [exponential order](https://en.wikipedia.org/wiki/EXP "EXP") in the size of the system[[5]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-5) and for classical N-body it is of order N-squared. Finally, many physical systems are inherently nonlinear at best, and at worst [chaotic](https://en.wikipedia.org/wiki/Chaos_theory "Chaos theory"): this means it can be difficult to ensure any [numerical errors](https://en.wikipedia.org/wiki/Numerical_error "Numerical error") do not grow to the point of rendering the 'solution' useless.[[6]](https://en.wikipedia.org/wiki/Computational_physics#cite_note-Sauer1997-6)

Methods and algorithms
----------------------

[[edit](https://en.wikipedia.org/w/index.php?title=Computational_physics&action=edit&section=4 "Edit section: Methods and algorithms")]

Because computational physics uses a broad class of problems, it is generally divided amongst the different mathematical problems it numerically solves, or the methods it applies. Between them, one can consider:

*   [root finding](https://en.wikipedia.org/wiki/Root-finding_algorithm "Root-finding algorithm") (using e.g. [Newton-Raphson method](https://en.wikipedia.org/wiki/Newton%27s_method "Newton's method"))
*   [system of linear equations](https://en.wikipedia.org/wiki/System_of_linear_equations "System of linear equations") (using e.g. [LU decomposition](https://en.wikipedia.org/wiki/LU_decomposition "LU decomposition"))
*   [ordinary differential equations](https://en.wikipedia.org/wiki/Ordinary_differential_equation "Ordinary differential equation") (using e.g. [Runge–Kutta methods](https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods "Runge–Kutta methods"))
*   [integration](https://en.wikipedia.org/wiki/Integral "Integral") (using e.g. [Romberg method](https://en.wikipedia.org/wiki/Romberg%27s_method "Romberg's method") and [Monte Carlo integration](https://en.wikipedia.org/wiki/Monte_Carlo_integration "Monte Carlo integration"))
*   [partial differential equations](https://en.wikipedia.org/wiki/Partial_differential_equation "Partial differential equation") (using e.g. [finite difference](https://en.wikipedia.org/wiki/Finite_difference "Finite difference") method and [relaxation](https://en.wikipedia.org/wiki/Relaxation_(iterative_method) "Relaxation (iterative method)") method)
*   [matrix eigenvalue problem](https://en.wikipedia.org/wiki/Matrix_eigenvalue_problem "Matrix eigenvalue problem") (using e.g. [Jacobi eigenvalue algorithm](https://en.wikipedia.org/wiki/Jacobi_eigenvalue_algorithm "Jacobi eigenvalue algorithm") and [power iteration](https://en.wikipedia.org/wiki/Power_iteration "Power iteration"))

All these methods (and several others) are used to calculate physical properties of the modeled systems.

Computational physics also borrows a number of ideas from [computational chemistry](https://en.wikipedia.org/wiki/Computational_chemistry "Computational chemistry") - for example, the [density functional theory](https://en.wikipedia.org/wiki/Density_functional_theory "Density functional theory") used by computational solid state physicists to calculate properties of solids is basically the same as that used by chemists to calculate the properties of molecules.

Furthermore, computational physics encompasses the [tuning](https://en.wikipedia.org/wiki/Performance_tuning "Performance tuning") of the [software](https://en.wikipedia.org/wiki/Self-tuning#Examples "Self-tuning")/[hardware structure](https://en.wikipedia.org/wiki/Category:Computer_hardware_tuning "Category:Computer hardware tuning") to solve the problems (as the problems usually can be very large, in [processing power need](https://en.wikipedia.org/wiki/High_performance_computing "High performance computing") or in [memory requests](https://en.wikipedia.org/wiki/High-throughput_computing "High-throughput computing")).

It is possible to find a corresponding computational branch for every major field in physics:

*   [Computational mechanics](https://en.wikipedia.org/wiki/Computational_mechanics "Computational mechanics") consists of [computational fluid dynamics](https://en.wikipedia.org/wiki/Computational_fluid_dynamics "Computational fluid dynamics") (CFD), computational [solid mechanics](https://en.wikipedia.org/wiki/Solid_mechanics "Solid mechanics") and computational [contact mechanics](https://en.wikipedia.org/wiki/Contact_mechanics "Contact mechanics").

*   [Computational electrodynamics](https://en.wikipedia.org/wiki/Computational_electrodynamics "Computational electrodynamics") is the process of modeling the interaction of [electromagnetic fields](https://en.wikipedia.org/wiki/Electromagnetic_fields "Electromagnetic fields") with physical objects and the environment. One subfield at the confluence between CFD and electromagnetic modelling is [computational magnetohydrodynamics](https://en.wikipedia.org/wiki/Computational_magnetohydrodynamics "Computational magnetohydrodynamics").

*   [Computational chemistry](https://en.wikipedia.org/wiki/Computational_chemistry "Computational chemistry") is a rapidly growing field that was developed due to the [quantum many-body problem](https://en.wikipedia.org/wiki/Quantum_many-body_problem "Quantum many-body problem").

*   Computational [solid state physics](https://en.wikipedia.org/wiki/Solid_state_physics "Solid state physics") is a very important division of computational physics dealing directly with [material science](https://en.wikipedia.org/wiki/Material_science "Material science").

*   Computational [statistical mechanics](https://en.wikipedia.org/wiki/Statistical_mechanics "Statistical mechanics") is a field related to computational [condensed matter](https://en.wikipedia.org/wiki/Condensed_matter "Condensed matter") which deals with the simulation of models and theories (such as [percolation](https://en.wikipedia.org/wiki/Percolation "Percolation") and [spin models](https://en.wikipedia.org/wiki/Spin_model "Spin model")) that are difficult to solve otherwise.

*   Computational [statistical physics](https://en.wikipedia.org/wiki/Statistical_physics "Statistical physics") makes heavy use of Monte Carlo-like methods. More broadly, (particularly through the use of [agent based modeling](https://en.wikipedia.org/wiki/Agent_based_modeling "Agent based modeling") and [cellular automata](https://en.wikipedia.org/wiki/Cellular_automata "Cellular automata")) it also concerns itself with (and finds application in, through the use of its techniques) in the [social sciences](https://en.wikipedia.org/wiki/Social_sciences "Social sciences"), [network theory](https://en.wikipedia.org/wiki/Network_theory "Network theory"), and mathematical models for the propagation of disease (most notably, the [SIR Model](https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology#SIR_Model_on_Networks "Compartmental models in epidemiology")) and the [spread of forest fires](https://en.wikipedia.org/wiki/Wildfire_modeling "Wildfire modeling").

*   [Numerical relativity](https://en.wikipedia.org/wiki/Numerical_relativity "Numerical relativity") is a (relatively) new field interested in finding numerical solutions to the field equations of both [special relativity](https://en.wikipedia.org/wiki/Special_relativity "Special relativity") and [general relativity](https://en.wikipedia.org/wiki/General_relativity "General relativity").

*   [Computational particle physics](https://en.wikipedia.org/wiki/Computational_particle_physics "Computational particle physics") deals with problems motivated by particle physics.

*   [Computational astrophysics](https://en.wikipedia.org/wiki/Computational_astrophysics "Computational astrophysics") is the application of these techniques and methods to astrophysical problems and phenomena.

*   [Computational biophysics](https://en.wikipedia.org/wiki/Computational_biophysics "Computational biophysics") is a branch of biophysics and [computational biology](https://en.wikipedia.org/wiki/Computational_biology "Computational biology") itself, applying methods of computer science and physics to large complex biological problems.

Due to the broad class of problems computational physics deals, it is an essential component of modern research in different areas of physics, namely: [accelerator physics](https://en.wikipedia.org/wiki/Accelerator_physics "Accelerator physics"), [astrophysics](https://en.wikipedia.org/wiki/Astrophysics "Astrophysics"), [general theory of relativity](https://en.wikipedia.org/wiki/General_theory_of_relativity "General theory of relativity") (through [numerical relativity](https://en.wikipedia.org/wiki/Numerical_relativity "Numerical relativity")), [fluid mechanics](https://en.wikipedia.org/wiki/Fluid_mechanics "Fluid mechanics") ([computational fluid dynamics](https://en.wikipedia.org/wiki/Computational_fluid_dynamics "Computational fluid dynamics")), [lattice field theory](https://en.wikipedia.org/wiki/Lattice_field_theory "Lattice field theory")/[lattice gauge theory](https://en.wikipedia.org/wiki/Lattice_gauge_theory "Lattice gauge theory") (especially [lattice quantum chromodynamics](https://en.wikipedia.org/wiki/Lattice_QCD "Lattice QCD")), [plasma physics](https://en.wikipedia.org/wiki/Plasma_physics "Plasma physics") (see [plasma modeling](https://en.wikipedia.org/wiki/Plasma_modeling "Plasma modeling")), simulating physical systems (using e.g. [molecular dynamics](https://en.wikipedia.org/wiki/Molecular_dynamics "Molecular dynamics")), [nuclear engineering computer codes](https://en.wikipedia.org/wiki/Nuclear_engineering_computer_codes "Nuclear engineering computer codes"), [protein structure prediction](https://en.wikipedia.org/wiki/Protein_structure_prediction "Protein structure prediction"), [weather prediction](https://en.wikipedia.org/wiki/Weather_prediction "Weather prediction"), [solid state physics](https://en.wikipedia.org/wiki/Solid_state_physics "Solid state physics"), [soft condensed matter](https://en.wikipedia.org/wiki/Soft_condensed_matter "Soft condensed matter") physics, hypervelocity impact physics etc.

Computational solid state physics, for example, uses [density functional theory](https://en.wikipedia.org/wiki/Density_functional_theory "Density functional theory") to calculate properties of solids, a method similar to that used by chemists to study molecules. Other quantities of interest in solid state physics, such as the electronic band structure, magnetic properties and charge densities can be calculated by this and several methods, including the [Luttinger-Kohn](https://en.wikipedia.org/wiki/Luttinger-Kohn_model "Luttinger-Kohn model")/[k.p method](https://en.wikipedia.org/wiki/K.p_method "K.p method") and [ab-initio](https://en.wikipedia.org/wiki/Ab-initio "Ab-initio") methods.

On top of advanced physics software, there are also a myriad of tools of analytics available for beginning students of physics such as the PASCO Capstone software.

*   [Abaqus](https://en.wikipedia.org/wiki/Abaqus "Abaqus")
*   [COMSOL Multiphysics](https://en.wikipedia.org/wiki/COMSOL_Multiphysics "COMSOL Multiphysics")
*   [FreeFlyer](https://en.wikipedia.org/wiki/FreeFlyer "FreeFlyer")
*   [GADGET](https://en.wikipedia.org/wiki/GADGET "GADGET")
*   [Geant4](https://en.wikipedia.org/wiki/Geant4 "Geant4")
*   [MOOSE (software)](https://en.wikipedia.org/wiki/MOOSE_(software) "MOOSE (software)")
*   [List of open-source physics software](https://en.wikipedia.org/wiki/List_of_free_and_open-source_software_packages#Physics "List of free and open-source software packages")
*   [Orbiter (simulator)](https://en.wikipedia.org/wiki/Orbiter_(simulator) "Orbiter (simulator)")
*   [SPEDAS](https://en.wikipedia.org/wiki/SPEDAS "SPEDAS")

*   [Advanced Simulation Library](https://en.wikipedia.org/wiki/Advanced_Simulation_Library "Advanced Simulation Library")
*   [CECAM - Centre européen de calcul atomique et moléculaire](https://en.wikipedia.org/wiki/CECAM "CECAM")
*   [Division of Computational Physics (DCOMP)](https://en.wikipedia.org/wiki/DCOMP#DCOMP "DCOMP") of the [American Physical Society](https://en.wikipedia.org/wiki/American_Physical_Society "American Physical Society")
*   [Important publications in computational physics](https://en.wikipedia.org/wiki/List_of_publications_in_physics#Computational_physics "List of publications in physics")
*   [List of quantum chemistry and solid-state physics software](https://en.wikipedia.org/wiki/List_of_quantum_chemistry_and_solid-state_physics_software "List of quantum chemistry and solid-state physics software")
*   [Mathematical](https://en.wikipedia.org/wiki/Mathematical_physics "Mathematical physics") and [theoretical physics](https://en.wikipedia.org/wiki/Theoretical_physics "Theoretical physics")
*   [Open Source Physics](https://en.wikipedia.org/wiki/Open_Source_Physics "Open Source Physics"), computational physics libraries and pedagogical tools
*   [Timeline of computational physics](https://en.wikipedia.org/wiki/Timeline_of_computational_physics "Timeline of computational physics")
*   [Car–Parrinello molecular dynamics](https://en.wikipedia.org/wiki/Car%E2%80%93Parrinello_molecular_dynamics "Car–Parrinello molecular dynamics")

1.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-ThijssenBook_1-0)[_**b**_](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-ThijssenBook_1-1)Thijssen, Jos (2007). _Computational Physics_. [Cambridge University Press](https://en.wikipedia.org/wiki/Cambridge_University_Press "Cambridge University Press"). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0521833462](https://en.wikipedia.org/wiki/Special:BookSources/978-0521833462 "Special:BookSources/978-0521833462").
2.   **[^](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-ComPhysPy_2-0)**Landau, Rubin H.; Páez, Manuel J.; Bordeianu, Cristian C. (2015). [_Computational Physics: Problem Solving with Python_](http://www.wiley.com/WileyCDA/WileyTitle/productCd-3527413154.html). [John Wiley & Sons](https://en.wikipedia.org/wiki/John_Wiley_%26_Sons "John Wiley & Sons").
3.   **[^](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-SurveyCompSci_3-0)**Landau, Rubin H.; Paez, Jose; Bordeianu, Cristian C. (2011). [_A survey of computational physics: introductory computational science_](http://press.princeton.edu/titles/8704.html). [Princeton University Press](https://en.wikipedia.org/wiki/Princeton_University_Press "Princeton University Press"). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9780691131375](https://en.wikipedia.org/wiki/Special:BookSources/9780691131375 "Special:BookSources/9780691131375").
4.   ^ [_**a**_](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-ercolessi_4-0)[_**b**_](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-ercolessi_4-1)[A molecular dynamics primer](http://www.fisica.uniud.it/~ercolessi/md/md/)[Archived](https://web.archive.org/web/20150111014856/http://www.fisica.uniud.it/~ercolessi/md/md/) 2015-01-11 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), Furio Ercolessi, [University of Udine](https://en.wikipedia.org/wiki/University_of_Udine "University of Udine"), Italy. [Article PDF](http://www.fisica.uniud.it/~ercolessi/md/md.pdf)[Archived](https://web.archive.org/web/20150924013419/http://www.fisica.uniud.it/~ercolessi/md/md.pdf) 2015-09-24 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine").
5.   **[^](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-5)**[Feynman, Richard P.](https://en.wikipedia.org/wiki/Richard_Feynman "Richard Feynman") (1982). "Simulating physics with computers". _International Journal of Theoretical Physics_. **21** (6–7): 467–488. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1982IJTP...21..467F](https://ui.adsabs.harvard.edu/abs/1982IJTP...21..467F). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1007/bf02650179](https://doi.org/10.1007%2Fbf02650179). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier) "ISSN (identifier)")[0020-7748](https://search.worldcat.org/issn/0020-7748). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[124545445](https://api.semanticscholar.org/CorpusID:124545445).[Article PDF](https://web.archive.org/web/20170812065758/http://www.mrtc.mdh.se/~gdc/work/ARTICLES/2014/3-CiE-journal/Background/SimulatingPhysicsWithComputers.pdf)
6.   **[^](https://en.wikipedia.org/wiki/Computational_physics#cite_ref-Sauer1997_6-0)**Sauer, Tim; Grebogi, Celso; Yorke, James A (1997). "How Long Do Numerical Chaotic Solutions Remain Valid?". _Physical Review Letters_. **79** (1): 59–62. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1997PhRvL..79...59S](https://ui.adsabs.harvard.edu/abs/1997PhRvL..79...59S). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRevLett.79.59](https://doi.org/10.1103%2FPhysRevLett.79.59). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[102493915](https://api.semanticscholar.org/CorpusID:102493915).

*   A.K. Hartmann, [Practical Guide to Computer Simulations](https://web.archive.org/web/20090211113048/http://worldscibooks.com/physics/6988.html), [World Scientific](https://en.wikipedia.org/wiki/World_Scientific "World Scientific") (2009)
*   [International Journal of Modern Physics C (IJMPC): Physics and Computers](http://www.worldscinet.com/ijmpc/ijmpc.shtml)[Archived](https://web.archive.org/web/20041103090645/http://www.worldscinet.com/ijmpc/ijmpc.shtml) 2004-11-03 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"), [World Scientific](https://en.wikipedia.org/wiki/World_Scientific "World Scientific")
*   [Steven E. Koonin](https://en.wikipedia.org/wiki/Steven_E._Koonin "Steven E. Koonin"), Computational Physics, [Addison-Wesley](https://en.wikipedia.org/wiki/Addison-Wesley "Addison-Wesley") (1986)
*   T. Pang, An Introduction to Computational Physics, [Cambridge University Press](https://en.wikipedia.org/wiki/Cambridge_University_Press "Cambridge University Press") (2010)
*   B. Stickler, E. Schachinger, Basic concepts in computational physics, [Springer Verlag](https://en.wikipedia.org/wiki/Springer_Verlag "Springer Verlag") (2013). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9783319024349](https://en.wikipedia.org/wiki/Special:BookSources/9783319024349 "Special:BookSources/9783319024349").
*   E. Winsberg, _Science in the Age of Computer Simulation_. Chicago: [University of Chicago Press](https://en.wikipedia.org/wiki/University_of_Chicago_Press "University of Chicago Press"), 2010.

*   [C20 IUPAP Commission on Computational Physics](http://phycomp.technion.ac.il/~C20)[Archived](https://web.archive.org/web/20151115112756/http://phycomp.technion.ac.il/~C20) 2015-11-15 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine")
*   [American Physical Society: Division of Computational Physics](http://www.aps.org/units/dcomp/index.cfm)
*   [Institute of Physics: Computational Physics Group](http://www.iop.org/activity/groups/subject/comp/index.html)[Archived](https://web.archive.org/web/20150213081724/http://www.iop.org/activity/groups/subject/comp/index.html) 2015-02-13 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine")
*   [SciDAC: Scientific Discovery through Advanced Computing](https://web.archive.org/web/20150418013304/http://www.scidac.gov/physics/physics.html)
*   [Open Source Physics](http://www.compadre.org/OSP/)
*   [SCINET Scientific Software Framework](http://www.obacs.com/)
*   [Computational Physics Course with youtube videos](http://www.physics.rutgers.edu/~haule/509/)
