Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview Toggle Overview subsection 1.1 Status in physics 2 Challenges in computational physics 3 Methods and algorithms 4 Divisions 5 Applications 6 Software 7 See also 8 References 9 Further reading 10 External links Toggle the table of contents Computational physics 36 languages العربية Azərbaycanca বাংলা Català Чӑвашла Dansk Deutsch Ελληνικά Español فارسی Français 한국어 Հայերեն हिन्दी Bahasa Indonesia Italiano עברית മലയാളം Монгол Nederlands 日本語 Oʻzbekcha / ўзбекча پښتو Polski Português Русский Slovenčina Suomi Svenska Tagalog Türkçe Українська Tiếng Việt Winaray 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Numerical simulations of physical problems via computers This article is about computational science applied in physics. For theories comparing the universe to a computer, see Digital physics . For the study of the fundamental physical limits of computers, see Physics of computation .

Computational physics Mechanics Electromagnetics Multiphysics Particle physics Thermodynamics Simulation Potentials Morse/Long-range potential Lennard-Jones potential Yukawa potential Morse potential Fluid dynamics Finite difference Finite volume Finite element Boundary element Lattice Boltzmann Riemann solver Dissipative particle dynamics Smoothed particle hydrodynamics Turbulence models Monte Carlo methods Integration Gibbs sampling Metropolis algorithm Particle N-body Particle-in-cell Molecular dynamics Scientists Godunov Ulam von Neumann Galerkin Lorenz Wilson Alder Richtmyer v t e Computational physics is the study and implementation of numerical analysis to solve problems in physics .

[ 1 ] Historically, computational physics was the first application of modern computers in science, and is now a subset of computational science . It is sometimes regarded as a subdiscipline (or offshoot) of theoretical physics , but others consider it an intermediate branch between theoretical and experimental physics — an area of study which supplements both theory and experiment.

[ 2 ] Overview [ edit ] A representation of the multidisciplinary nature of computational physics both as an overlap of physics, applied mathematics, and computer science and as a bridge among them [ 3 ] In physics, different theories based on mathematical models provide very precise predictions on how systems behave. Unfortunately, it is often the case that solving the mathematical model for a particular system in order to produce a useful prediction is not feasible. This can occur, for instance, when the solution does not have a closed-form expression , or is too complicated. In such cases, numerical approximations are required. Computational physics is the subject that deals with these numerical approximations: the approximation of the solution is written as a finite (and typically large) number of simple mathematical operations ( algorithm ), and a computer is used to perform these operations and compute an approximated solution and respective error .

[ 1 ] Status in physics [ edit ] There is a debate about the status of computation within the scientific method.

[ 4 ] Sometimes it is regarded as more akin to theoretical physics; some others regard computer simulation as " computer experiments ", [ 4 ] yet still others consider it an intermediate or different branch between theoretical and experimental physics , a third way that supplements theory and experiment. While computers can be used in experiments for the measurement and recording (and storage) of data, this clearly does not constitute a computational approach.

Challenges in computational physics [ edit ] Computational physics problems are in general very difficult to solve exactly. This is due to several (mathematical) reasons: lack of algebraic and/or analytic solvability, complexity , and chaos. For example, even apparently simple problems, such as calculating the wavefunction of an electron orbiting an atom in a strong electric field ( Stark effect ), may require great effort to formulate a practical algorithm (if one can be found); other cruder or brute-force techniques, such as graphical methods or root finding , may be required. On the more advanced side, mathematical perturbation theory is also sometimes used (a working is shown for this particular example here ). In addition, the computational cost and computational complexity for many-body problems (and their classical counterparts ) tend to grow quickly. A macroscopic system typically has a size of the order of 10 23 {\displaystyle 10^{23}} constituent particles, so it is somewhat of a problem. Solving quantum mechanical problems is generally of exponential order in the size of the system [ 5 ] and for classical N-body it is of order N-squared. Finally, many physical systems are inherently nonlinear at best, and at worst chaotic : this means it can be difficult to ensure any numerical errors do not grow to the point of rendering the 'solution' useless.

[ 6 ] Methods and algorithms [ edit ] Because computational physics uses a broad class of problems, it is generally divided amongst the different mathematical problems it numerically solves, or the methods it applies. Between them, one can consider: root finding (using e.g.

Newton-Raphson method ) system of linear equations (using e.g.

LU decomposition ) ordinary differential equations (using e.g.

Runge–Kutta methods ) integration (using e.g.

Romberg method and Monte Carlo integration ) partial differential equations (using e.g.

finite difference method and relaxation method) matrix eigenvalue problem (using e.g.

Jacobi eigenvalue algorithm and power iteration ) All these methods (and several others) are used to calculate physical properties of the modeled systems.

Computational physics also borrows a number of ideas from computational chemistry - for example, the density functional theory used by computational solid state physicists to calculate properties of solids is basically the same as that used by chemists to calculate the properties of molecules.

Furthermore, computational physics encompasses the tuning of the software / hardware structure to solve the problems (as the problems usually can be very large, in processing power need or in memory requests ).

Divisions [ edit ] It is possible to find a corresponding computational branch for every major field in physics: Computational mechanics consists of computational fluid dynamics (CFD), computational solid mechanics and computational contact mechanics .

Computational electrodynamics is the process of modeling the interaction of electromagnetic fields with physical objects and the environment. One subfield at the confluence between CFD and electromagnetic modelling is computational magnetohydrodynamics .

Computational chemistry is a rapidly growing field that was developed due to the quantum many-body problem .

Computational solid state physics is a very important division of computational physics dealing directly with material science .

Computational statistical mechanics is a field related to computational condensed matter which deals with the simulation of models and theories (such as percolation and spin models ) that are difficult to solve otherwise.

Computational statistical physics makes heavy use of Monte Carlo-like methods. More broadly, (particularly through the use of agent based modeling and cellular automata ) it also concerns itself with  (and finds application in, through the use of its techniques) in the social sciences , network theory , and mathematical models for the propagation of disease (most notably, the SIR Model ) and the spread of forest fires .

Numerical relativity is a (relatively) new field interested in finding numerical solutions to the field equations of both special relativity and general relativity .

Computational particle physics deals with problems motivated by particle physics.

Computational astrophysics is the application of these techniques and methods to astrophysical problems and phenomena.

Computational biophysics is a branch of biophysics and computational biology itself, applying methods of computer science and physics to large complex biological problems.

Applications [ edit ] Due to the broad class of problems computational physics deals, it is an essential component of modern research in different areas of physics, namely: accelerator physics , astrophysics , general theory of relativity (through numerical relativity ), fluid mechanics ( computational fluid dynamics ), lattice field theory / lattice gauge theory (especially lattice quantum chromodynamics ), plasma physics (see plasma modeling ), simulating physical systems (using e.g.

molecular dynamics ), nuclear engineering computer codes , protein structure prediction , weather prediction , solid state physics , soft condensed matter physics, hypervelocity impact physics etc.

Computational solid state physics, for example, uses density functional theory to calculate properties of solids, a method similar to that used by chemists to study molecules.  Other quantities of interest in solid state physics, such as the electronic band structure, magnetic properties and charge densities can be calculated by this and several methods, including the Luttinger-Kohn / k.p method and ab-initio methods.

On top of advanced physics software, there are also a myriad of tools of analytics available for beginning students of physics such as the PASCO Capstone software.

Software [ edit ] See also: List of physics engines , List of physics software , List of computer physics engines , and List of open-source physics engines Abaqus COMSOL Multiphysics FreeFlyer GADGET Geant4 MOOSE (software) List of open-source physics software Orbiter (simulator) SPEDAS See also [ edit ] Advanced Simulation Library CECAM - Centre européen de calcul atomique et moléculaire Division of Computational Physics (DCOMP) of the American Physical Society Important publications in computational physics List of quantum chemistry and solid-state physics software Mathematical and theoretical physics Open Source Physics , computational physics libraries and pedagogical tools Timeline of computational physics Car–Parrinello molecular dynamics References [ edit ] ^ a b Thijssen, Jos (2007).

Computational Physics .

Cambridge University Press .

ISBN 978-0521833462 .

^ Landau, Rubin H.; Páez, Manuel J.; Bordeianu, Cristian C. (2015).

Computational Physics: Problem Solving with Python .

John Wiley & Sons .

^ Landau, Rubin H.; Paez, Jose; Bordeianu, Cristian C. (2011).

A survey of computational physics: introductory computational science .

Princeton University Press .

ISBN 9780691131375 .

^ a b A molecular dynamics primer Archived 2015-01-11 at the Wayback Machine , Furio Ercolessi, University of Udine , Italy.

Article PDF Archived 2015-09-24 at the Wayback Machine .

^ Feynman, Richard P.

(1982). "Simulating physics with computers".

International Journal of Theoretical Physics .

21 ( 6– 7): 467– 488.

Bibcode : 1982IJTP...21..467F .

doi : 10.1007/bf02650179 .

ISSN 0020-7748 .

S2CID 124545445 .

Article PDF ^ Sauer, Tim; Grebogi, Celso; Yorke, James A (1997). "How Long Do Numerical Chaotic Solutions Remain Valid?".

Physical Review Letters .

79 (1): 59– 62.

Bibcode : 1997PhRvL..79...59S .

doi : 10.1103/PhysRevLett.79.59 .

S2CID 102493915 .

Further reading [ edit ] A.K. Hartmann, Practical Guide to Computer Simulations , World Scientific (2009) International Journal of Modern Physics C (IJMPC): Physics and Computers Archived 2004-11-03 at the Wayback Machine , World Scientific Steven E. Koonin , Computational Physics, Addison-Wesley (1986) T. Pang, An Introduction to Computational Physics, Cambridge University Press (2010) B. Stickler, E. Schachinger, Basic concepts in computational physics, Springer Verlag (2013).

ISBN 9783319024349 .

E. Winsberg, Science in the Age of Computer Simulation . Chicago: University of Chicago Press , 2010.

External links [ edit ] Wikimedia Commons has media related to Computational physics .

C20 IUPAP Commission on Computational Physics Archived 2015-11-15 at the Wayback Machine American Physical Society: Division of Computational Physics Institute of Physics: Computational Physics Group Archived 2015-02-13 at the Wayback Machine SciDAC: Scientific Discovery through Advanced Computing Open Source Physics SCINET Scientific Software Framework Computational Physics Course with youtube videos v t e Major branches of physics Divisions Pure Applied Engineering Approaches Experimental Theoretical Computational Classical Classical mechanics Newtonian Analytical Celestial Continuum Acoustics Classical electromagnetism Classical optics Ray Wave Thermodynamics Statistical Non-equilibrium Modern Relativistic mechanics Special General Nuclear physics Particle physics Quantum mechanics Atomic, molecular, and optical physics Atomic Molecular Modern optics Condensed matter physics Solid-state physics Crystallography Interdisciplinary Astrophysics Atmospheric physics Biophysics Chemical physics Geophysics Materials science Mathematical physics Medical physics Ocean physics Quantum information science Related History of physics Nobel Prize in Physics Philosophy of physics Physics education research Timeline of physics discoveries v t e Computational science Biology Anatomy Biological systems Cognition Genomics Neuroscience Phylogenetics Chemistry Electronic structure Molecular mechanics Quantum mechanics Physics Astrophysics Electromagnetics Fluid dynamics Geophysics Mechanics Particle physics Thermodynamics Linguistics Semantics Lexicology Social science Politics Sociology Economics Other Finance Materials science Mathematics Statistics Engineering Semiotics Transportation science v t e Computer science Note: This template roughly follows the 2012 ACM Computing Classification System .

Hardware Printed circuit board Peripheral Integrated circuit Very-large-scale integration System on a chip (SoC) Energy consumption (green computing) Electronic design automation Hardware acceleration Processor Size / Form Computer systems organization Computer architecture Computational complexity Dependability Embedded system Real-time computing Cyber-physical system Fault tolerance Wireless sensor network Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Control variable Software development process Requirements analysis Software design Software construction Software deployment Software engineering Software maintenance Programming team Open-source model Theory of computation Model of computation Stochastic Formal language Automata theory Computability theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Theoretical computer science Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security hacker Security services Intrusion detection system Hardware security Network security Information security Application security Human–centered computing Interaction design Augmented reality Virtual reality Social computing Ubiquitous computing Visualization Accessibility Human–computer interaction Mobile computing Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Photograph manipulation Graphics processing unit Image compression Solid modeling Applied computing Quantum computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Differentiable computing Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Category Outline Glossaries Authority control databases : National Germany Czech Republic NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐2lxsq
Cached time: 20250811235640
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.396 seconds
Real time usage: 0.544 seconds
Preprocessor visited node count: 1563/1000000
Revision size: 14649/2097152 bytes
Post‐expand include size: 84998/2097152 bytes
Template argument size: 1666/2097152 bytes
Highest expansion depth: 14/100
Expensive parser function count: 8/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 64675/5000000 bytes
Lua time usage: 0.241/10.000 seconds
Lua memory usage: 6405877/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  403.445      1 -total
 27.01%  108.990      1 Template:Reflist
 18.56%   74.893      3 Template:Cite_book
 17.36%   70.042      1 Template:Computational_physics
 17.01%   68.637      1 Template:Sidebar_with_collapsible_lists
 13.38%   53.963      1 Template:Short_description
 12.78%   51.549      1 Template:Commonscat
 12.32%   49.712      1 Template:Sister_project
 12.06%   48.645      1 Template:Side_box
 10.11%   40.790      3 Template:Navbox Saved in parser cache with key enwiki:pcache:106418:|#|:idhash:canonical and timestamp 20250811235640 and revision id 1297105746. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Computational_physics&oldid=1297105746 " Categories : Computational physics Computational fields of study Hidden categories: Webarchive template wayback links Articles with short description Short description matches Wikidata Use American English from January 2019 All Wikipedia articles written in American English Commons category link from Wikidata This page was last edited on 24 June 2025, at 05:13 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Computational physics 36 languages Add topic

