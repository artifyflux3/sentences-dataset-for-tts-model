Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Setting up the problem 2 VRP variants 3 Exact solution methods Toggle Exact solution methods subsection 3.1 Vehicle flow formulations 3.2 Manual versus automatic optimum routing 4 Approximate solutions Toggle Approximate solutions subsection 4.1 Metaheuristic 5 See also 6 References 7 Further reading Toggle the table of contents Vehicle routing problem 14 languages Deutsch Español فارسی Français Italiano עברית Magyar 日本語 Polski Português Română Српски / srpski Türkçe 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Optimization problem This article is written like a personal reflection, personal essay, or argumentative essay that states a Wikipedia editor's personal feelings or presents an original argument about a topic.

Please help improve it by rewriting it in an encyclopedic style .

( December 2021 ) ( Learn how and when to remove this message ) An illustration of an instance of the vehicle routing problem in a road network, containing routes for three vehicles to deliver goods from a central depot (D) to 11 locations.

The vehicle routing problem ( VRP ) is a combinatorial optimization and integer programming problem which asks "What is the optimal set of routes for a fleet of vehicles to traverse in order to deliver to a given set of customers?" The problem first appeared, as the truck dispatching problem , in a paper by George Dantzig and John Ramser in 1959, [ 1 ] in which it was applied to petrol deliveries. Often, the context is that of delivering goods located at a central depot to customers who have placed orders for such goods.

[ 2 ] However, variants of the problem consider, e.g, collection of solid waste [ 3 ] and the transport of the elderly and the sick to and from health-care facilities.

[ 4 ] [ 5 ] The standard objective of the VRP is to minimise the total route cost.

[ 6 ] : 5 Other objectives, such as minimising the number of vehicles used or travelled distance are also considered.

[ 7 ] The VRP generalises the travelling salesman problem (TSP), which is equivalent to requiring a single route to visit all locations. As the TSP is NP-hard , the VRP is also NP-hard.

[ 6 ] : 5 VRP has many direct applications in industry. Vendors of VRP routing tools often claim that they can offer cost savings of 5%–30%.

[ 8 ] Commercial solvers tend to use heuristics due to the size and frequency of real world VRPs they need to solve.

[ citation needed ] Setting up the problem [ edit ] The VRP concerns the service of a delivery company. How things are delivered from one or more depots which has a given set of home vehicles and operated by a set of drivers who can move on a given road network to a set of customers . It asks for a determination of a set of routes , S , (one route for each vehicle that must start and finish at its own depot) such that all customers' requirements and operational constraints are satisfied and the global transportation cost is minimized. This cost may be monetary, distance or otherwise.

[ 6 ] The road network can be described using a graph where the arcs are roads and vertices are junctions between them. The arcs may be directed or undirected due to the possible presence of one way streets or different costs in each direction. Each arc has an associated cost which is generally its length or travel time which may be dependent on vehicle type.

[ 6 ] To know the global cost of each route, the travel cost and the travel time between each customer and the depot must be known. To do this our original graph is transformed into one where the vertices are the customers and depot, and the arcs are the roads between them. The cost on each arc is the lowest cost between the two points on the original road network. This is easy to do as shortest path problems are relatively easy to solve. This transforms the sparse original graph into a complete graph . For each pair of vertices i and j , there exists an arc (i,j) of the complete graph whose cost is written as C i j {\displaystyle C_{ij}} and is defined to be the cost of shortest path from i to j . The travel time t i j {\displaystyle t_{ij}} is the sum of the travel times of the arcs on the shortest path from i to j on the original road graph.

Sometimes it is impossible to satisfy all of a customer's demands and in such cases solvers may reduce some customers' demands or leave some customers unserved. To deal with these situations a priority variable for each customer can be introduced or associated penalties for the partial or lack of service for each customer given [ 6 ] The objective function of a VRP can be very different depending on the particular application of the result but a few of the more common objectives are: [ 6 ] Minimize the global transportation cost based on the global distance travelled as well as the fixed costs associated with the used vehicles and drivers Minimize the number of vehicles needed to serve all customers Least variation in travel time and vehicle load Minimize penalties for low quality service Maximize a collected profit/score.

VRP variants [ edit ] A map showing the relationship between common VRP subproblems.

Several variations and specializations of the vehicle routing problem exist: Vehicle Routing Problem with Profits (VRPP): A maximization problem where it is not mandatory to visit all customers. The aim is to visit once customers maximizing the sum of collected profits while respecting a vehicle time limit. Vehicles are required to start and end at the depot. Among the most known and studied VRPP are: The Team Orienteering Problem (TOP) which is the most studied variant of the VRPP, [ 9 ] [ 10 ] [ 11 ] The Capacitated Team Orienteering Problem (CTOP), The TOP with Time Windows (TOPTW).

Vehicle Routing Problem with Backhauling (VRPB): Disjoint sets of delivery and pickup customers are given. Goods have to be delivered from the depot to the delivery customer and from the pickup customers to the depot.

[ 12 ] Vehicles may be forbidden from picking up goods from customers until all carried goods have been delivered to delivery customers or allowed interchanging pickups with deliveries at a potential cost.

[ 12 ] [ 13 ] Vehicle Routing Problem with Pickup and Delivery (VRPPD): A number of goods need to be moved from certain pickup locations to other delivery locations.  The goal is to find optimal routes for a fleet of vehicles to visit the pickup and drop-off locations.

Vehicle Routing Problem with LIFO : Similar to the VRPPD, except an additional restriction is placed on the loading of the vehicles: at any delivery location, the item being delivered must be the item most recently picked up. This scheme reduces the loading and unloading times at delivery locations because there is no need to temporarily unload items other than the ones that should be dropped off.

Vehicle Routing Problem with Time Windows (VRPTW): The delivery locations have time windows within which the deliveries (or visits) must be made.

Capacitated Vehicle Routing Problem: CVRP or CVRPTW. The vehicles have a limited carrying capacity of the goods that must be delivered.

Vehicle Routing Problem with Multiple Trips (VRPMT): The vehicles can do more than one route.

Open Vehicle Routing Problem (OVRP): Vehicles are not required to return to the depot.

Inventory Routing Problem (IRP): Vehicles are responsible for satisfying the demands in each delivery point [ 14 ] Multi-Depot Vehicle Routing Problem (MDVRP): Multiple depots exist from which vehicles can start and end.

[ 15 ] Vehicle Routing Problem with Transfers (VRPWT): Goods can be transferred between vehicles at specially designated transfer hubs.

Electric Vehicle Routing Problem (EVRP): These are special VRP that take as an extra constraint the battery capacity of electric vehicles into account.

Several software vendors have built software products to solve various VRP problems. Numerous articles are available for more detail on their research and results.

Although VRP is related to the Job Shop Scheduling Problem, the two problems are typically solved using different techniques.

[ 16 ] Exact solution methods [ edit ] There are three main approaches to modelling the VRP using mixed-integer linear programming (MILP): [ 6 ] Vehicle flow formulations —this uses integer variables associated with each arc that count the number of times that the edge is traversed by a vehicle. It is generally used for basic VRPs. This is good for cases where the solution cost can be expressed as the sum of any costs associated with the arcs. However it can't be used to handle many practical applications.

[ 6 ] Commodity flow formulations —additional integer variables are associated with the arcs or edges which represent the flow of commodities along the paths travelled by the vehicles. This has only recently been used to find an exact solution.

[ 6 ] Set-partitioning —This approach models the VRP as a set cover problem , in which the locations make up the universe and the set of all feasible routes ( cycles ) make up the collection of sets to choose from.

[ 17 ] The problem can then be modelled using a linear programming model for the weighted set cover problem , with the weight of a route set to its cost. Modelling the VRP in this way will possibly result in an exponential number of binary variables in the linear program, as one is associated with each of a potentially exponential number of feasible routes.

[ 6 ] Vehicle flow formulations [ edit ] The formulation of the TSP by Dantzig, Fulkerson and Johnson was extended to create the two index vehicle flow formulations for the VRP min ∑ ∑ i ∈ ∈ V ∑ ∑ j ∈ ∈ V c i j x i j {\displaystyle {\text{min}}\sum _{i\in V}\sum _{j\in V}c_{ij}x_{ij}} subject to ∑ ∑ i ∈ ∈ V x i j = 1 ∀ ∀ j ∈ ∈ V ∖ ∖ { 0 } {\displaystyle \sum _{i\in V}x_{ij}=1\quad \forall j\in V\backslash \left\{0\right\}} 1 ∑ ∑ j ∈ ∈ V x i j = 1 ∀ ∀ i ∈ ∈ V ∖ ∖ { 0 } {\displaystyle \sum _{j\in V}x_{ij}=1\quad \forall i\in V\backslash \left\{0\right\}} 2 ∑ ∑ i ∈ ∈ V ∖ ∖ { 0 } x i 0 = K {\displaystyle \sum _{i\in {V\backslash \left\{0\right\}}}x_{i0}=K} 3 ∑ ∑ j ∈ ∈ V ∖ ∖ { 0 } x 0 j = K {\displaystyle \sum _{j\in {V\backslash \left\{0\right\}}}x_{0j}=K} 4 ∑ ∑ i ∉ ∉ S ∑ ∑ j ∈ ∈ S x i j ≥ ≥ r ( S ) , ∀ ∀ S ⊆ ⊆ V ∖ ∖ { 0 } , S ≠ ≠ ∅ ∅ {\displaystyle \sum _{i\notin S}\sum _{j\in S}x_{ij}\geq r(S),~~\forall S\subseteq V\setminus \{0\},S\neq \emptyset } 5 x i j ∈ ∈ { 0 , 1 } ∀ ∀ i , j ∈ ∈ V {\displaystyle x_{ij}\in \{0,1\}\quad \forall i,j\in V} 6 In this formulation c i j {\displaystyle c_{ij}} represents the cost of going from node i {\displaystyle i} to node j {\displaystyle j} , x i j {\displaystyle x_{ij}} is a binary variable that has value 1 {\displaystyle 1} if the arc going from i {\displaystyle i} to j {\displaystyle j} is considered as part of the solution and 0 {\displaystyle 0} otherwise, K {\displaystyle K} is the number of available vehicles and r ( S ) {\displaystyle r(S)} corresponds to the minimum number of vehicles needed to serve set S {\displaystyle S} . We are also assuming that 0 {\displaystyle 0} is the depot node.

Constraints 1 and 2 state that exactly one arc enters and exactly one leaves each vertex associated with a customer, respectively. Constraints 3 and 4 say that the number of vehicles leaving the depot is the same as the number entering. Constraints 5 are the capacity cut constraints, which impose that the routes must be connected and that the demand on each route must not exceed the vehicle capacity. Finally, constraints 6 are the integrality constraints.

[ 6 ] One arbitrary constraint among the 2 | V | {\displaystyle 2|V|} constraints is actually implied by the remaining 2 | V | − − 1 {\displaystyle 2|V|-1} ones so it can be removed. Each cut defined by a customer set S {\displaystyle S} is crossed by a number of arcs not smaller than ⁠ r ( S ) {\displaystyle r(S)} ⁠ (minimum number of vehicles needed to serve set S {\displaystyle S} ).

[ 6 ] An alternative formulation may be obtained by transforming the capacity cut constraints into generalised subtour elimination constraints (GSECs).

∑ ∑ i ∈ ∈ S ∑ ∑ j ∈ ∈ S x i j ≤ ≤ | S | − − r ( S ) {\displaystyle \sum _{i\in S}\sum _{j\in S}x_{ij}\leq |S|-r(S)} which imposes that at least ⁠ r ( S ) {\displaystyle r(S)} ⁠ arcs leave each customer set S {\displaystyle S} .

[ 6 ] GCECs and CCCs have an exponential number of constraints so it is practically impossible to solve the linear relaxation. A possible way to solve this is to consider a limited subset of these constraints and add the rest if needed. Identification of the needed constraints is done via a separation procedure. Efficient exact separation methods for such constraints (based on mixed integer programming) have been developed.

[ 18 ] A different method again is to use a family of constraints which have a polynomial cardinality which are known as the MTZ constraints, they were first proposed for the TSP [ 19 ] and subsequently extended by Christofides, Mingozzi and Toth.

[ 20 ] u j − − u i ≥ ≥ d j − − C ( 1 − − x i j ) ∀ ∀ i , j ∈ ∈ V ∖ ∖ { 0 } , i ≠ ≠ j s.t.

d i + d j ≤ ≤ C {\displaystyle u_{j}-u_{i}\geq d_{j}-C(1-x_{ij})~~~~~~\forall i,j\in V\backslash \{0\},i\neq j~~~~{\text{s.t. }}d_{i}+d_{j}\leq C} 0 ≤ ≤ u i ≤ ≤ C − − d i ∀ ∀ i ∈ ∈ V ∖ ∖ { 0 } {\displaystyle 0\leq u_{i}\leq C-d_{i}~~~~~~\forall i\in V\backslash \{0\}} where u i , i ∈ ∈ V ∖ ∖ { 0 } {\displaystyle u_{i},~i\in V\backslash \{0\}} is an additional continuous variable which represents the load left in the vehicle after visiting customer i {\displaystyle i} and d i {\displaystyle d_{i}} is the demand of customer i {\displaystyle i} . These impose both the connectivity and the capacity requirements. When x i j = 0 {\displaystyle x_{ij}=0} constraint then i {\displaystyle i} is not binding' since u i ≤ ≤ C {\displaystyle u_{i}\leq C} and u j ≥ ≥ d j {\displaystyle u_{j}\geq d_{j}} whereas x i j = 1 {\displaystyle x_{ij}=1} they impose that u j ≥ ≥ u i + d j {\displaystyle u_{j}\geq u_{i}+d_{j}} .

These have been used extensively to model the basic VRP (CVRP) and the VRPB. However, their power is limited to these simple problems. They can only be used when the cost of the solution can be expressed as the sum of the costs of the arc costs. We cannot also know which vehicle traverses each arc. Hence we cannot use this for more complex models where the cost and or feasibility is dependent on the order of the customers or the vehicles used.

[ 6 ] Manual versus automatic optimum routing [ edit ] There are many methods to solve vehicle routing problems manually. For example, optimum routing is a big efficiency issue for forklifts in large warehouses. Some of the manual methods to decide upon the most efficient route are: Largest gap, S-shape, Aisle-by-aisle, Combined and Combined +. While Combined + method is the most complex, thus the hardest to be used by lift truck operators, it is the most efficient routing method. Still the percentage difference between the manual optimum routing method and the real optimum route was on average 13%.

[ 21 ] [ 22 ] Approximate solutions [ edit ] Many real-world applications use computational methods that produce approximate solutions, due to the computational complexity of the VRP. These methods are typically heuristic -based and belong to one of two classes: [ 6 ] : 109 Classical heuristics –perform a set of relatively simple operations to quickly construct a relatively good solution.

Metaheuristics –classify and explore the most promising parts of the solution space.

Metaheuristic [ edit ] Due to the difficulty of solving to optimality large-scale instances of vehicle routing problems, a significant research effort has been dedicated to metaheuristics such as Genetic algorithms , Tabu search , Simulated annealing and Adaptive Large Neighborhood Search (ALNS). Some of the most recent and efficient metaheuristics for vehicle routing problems reach solutions within 0.5% or 1% of the optimum for problem instances counting hundreds or thousands of delivery points.

[ 23 ] These methods are also more robust in the sense that they can be more easily adapted to deal with a variety of side constraints. As such, the application of metaheuristic techniques is often preferred for large-scale applications with complicating constraints and decision sets.

See also [ edit ] Chinese postman problem Vehicle rescheduling problem Arc routing List of graph theory topics Journey planner References [ edit ] ^ Dantzig, George Bernard; Ramser, John Hubert (October 1959).

"The Truck Dispatching Problem" (PDF) .

Management Science .

6 (1): 80– 91.

doi : 10.1287/mnsc.6.1.80 .

^ Fisher, Marshall L.; Jaikumar, Ramchandran (June 1981). "A generalized assignment heuristic for vehicle routing".

Networks .

11 (2): 109– 124.

doi : 10.1002/net.3230110205 .

^ Shuster, Kenneth A.; Schur, Dennis A. (1974).

Heuristic Routing for Solid Waste Collection Vehicles . U.S. Environmental Protection Agency.

^ Cordeau, Jean-François; Laporte, Gilbert (July 2007). "The dial-a-ride problem: models and algorithms".

Annals of Operations Research .

153 (1): 29– 46.

doi : 10.1007/s10479-007-0170-8 .

^ Cappart, Quentin; Thomas, Charles; Schaus, Pierre; Rousseau, Louis-Martin (2018). "A Constraint Programming Approach for Solving Patient Transportation Problems".

Principles and Practice of Constraint Programming .

11008 : 490– 506.

doi : 10.1007/978-3-319-98334-9_32 .

hdl : 2078.1/202079 .

^ a b c d e f g h i j k l m n o Toth, P.; Vigo, D., eds. (2002).

The Vehicle Routing Problem . Monographs on Discrete Mathematics and Applications. Vol. 9. Philadelphia: Society for Industrial and Applied Mathematics.

ISBN 0-89871-579-2 .

^ Gaskell, T. J. (September 1967). "Bases for Vehicle Fleet Scheduling".

Journal of the Operational Research Society .

18 (3): 281– 295.

doi : 10.1057/jors.1967.44 .

^ Geir Hasle; Knut-Andreas Lie; Ewald Quak, eds. (2007).

Geometric Modelling, Numerical Simulation, and Optimization:: Applied Mathematics at SINTEF . Berlin: Springer Verlag. pp.

397– 398.

ISBN 978-3-540-68783-2 .

^ Chao, I-Ming; Golden, Bruce L; Wasil, Edward A (1996). "The Team Orienteering Problem".

European Journal of Operational Research .

88 (3): 464– 474.

doi : 10.1016/0377-2217(94)00289-4 .

^ Archetti, C.; Sperenza, G.; Vigo, D. (2014). "Vehicle routing problems with profits". In Toth, P.; Vigo, D. (eds.).

Vehicle Routing: Problems, Methods, and Applications (Second ed.). pp.

273– 297.

doi : 10.1137/1.9781611973594.ch10 .

^ Hammami, Farouk; Rekik, Monia; Coelho, Leandro C. (2020). "A hybrid adaptive large neighborhood search heuristic for the team orienteering problem".

Computers & Operations Research .

123 : 105034.

doi : 10.1016/j.cor.2020.105034 .

S2CID 221134904 .

^ a b Deif, I.; Bodin, L. A. (1984). Kidder, A. (ed.). "Extension of the Clarke and Wright Algorithm for Solving the Vehicle Routing Problem with Backhauling".

Proceedings of the Babson College conference on software uses in transportation and logistic management . Babson Park, MA, US: 75– 96.

^ Golden, B. L.; Baker, E.; Alfaro, J.; Schaffer, J. (1985). Hammesfahr, R. (ed.). "The Vehicle Routing Problem with Backhauling: Two approaches".

Proceedings of the Twenty-First Annual Meeting of S.E. TIMS . Myrtle Beach, SC, US: 90– 92.

^ Ekici, Ali; Özener, Okan Örsan; Kuyzu, Gültekin (November 2015). "Cyclic Delivery Schedules for an Inventory Routing Problem".

Transportation Science .

49 (4): 817– 829.

doi : 10.1287/trsc.2014.0538 .

^ Mahmud, Nafix; Haque, Md. Mokammel (February 2019).

Solving Multiple Depot Vehicle Routing Problem (MDVRP) using Genetic Algorithm . 2019 International Conference on Electrical, Computer and Communication Engineering (ECCE).

doi : 10.1109/ECACE.2019.8679429 .

^ Beck, J.C.; Prosser, P.; Selensky, E. (2003).

"Vehicle routing and job shop scheduling: What's the difference?" (PDF) .

Proceedings of the 13th International Conference on Artificial Intelligence Planning and Scheduling .

^ Balinski, M. L.; Quandt, R. E. (April 1964). "On an Integer Program for a Delivery Problem".

Operations Research .

12 (2): 300– 304.

doi : 10.1287/opre.12.2.300 .

^ Pavlikov, K.; Petersen, N. C.; Sørensen, J. L. (2023).

"Exact Separation of the Rounded Capacity Inequalities for the CapacitatedVehicle Routing Problem" .

Networks .

83 . Networks: 197– 209.

doi : 10.1002/net.22183 .

S2CID 263321558 .

^ Miller, C. E.; Tucker, E. W.; Zemlin, R. A. (1960).

"Integer Programming Formulations and Travelling Salesman Problems" .

J. ACM .

7 : 326– 329.

doi : 10.1145/321043.321046 .

S2CID 2984845 .

^ Christofides, N.; Mingozzi, A.; Toth, P. (1979).

The Vehicle Routing Problem . Chichester, UK: Wiley. pp.

315– 338.

^ "Why Is Manual Warehouse Optimum Routing So Inefficient?" .

Locatible.com . 2016-09-26 . Retrieved 2016-09-26 .

^ Roodbergen, Kees Jan (2001).

"Routing methods for warehouses with multiple cross aisles" (PDF) .

roodbergen.com . Retrieved 2016-09-26 .

^ Vidal T, Crainic TG, Gendreau M, Prins C (2014).

"A unified solution framework for multi-attribute vehicle routing problems" (PDF) .

European Journal of Operational Research .

234 (3): 658– 673.

doi : 10.1016/j.ejor.2013.09.045 .

S2CID 21037953 .

Further reading [ edit ] Oliveira, H.C.B.de; Vasconcelos, G.C. (2008). "A hybrid search method for the vehicle routing problem with time windows".

Annals of Operations Research .

180 : 125– 144.

doi : 10.1007/s10479-008-0487-y .

S2CID 32406011 .

Frazzoli, E.; Bullo, F. (2004). "Decentralized algorithms for vehicle routing in a stochastic time-varying environment".

2004 43rd IEEE Conference on Decision and Control (CDC) (IEEE Cat. No.04CH37601) . Vol. 4. IEEE. pp.

3357– 3363.

doi : 10.1109/CDC.2004.1429220 .

ISBN 0-7803-8682-5 .

ISSN 0191-2216 .

Psaraftis, H.N. (1988).

"Dynamic vehicle routing problems" (PDF) .

Vehicle Routing: Methods and Studies .

16 : 223– 248.

Bertsimas, D.J.; Van Ryzin, G. (1991). "A Stochastic and Dynamic Vehicle Routing Problem in the Euclidean Plane".

Operations Research .

39 (4): 601– 615.

doi : 10.1287/opre.39.4.601 .

hdl : 1721.1/2353 .

JSTOR 171167 .

Vidal T, Crainic TG, Gendreau M, Prins C (2013).

"Heuristics for multi-attribute vehicle routing problems: A survey and synthesis" (PDF) .

European Journal of Operational Research .

231 (1): 1– 21.

doi : 10.1016/j.ejor.2013.02.053 .

S2CID 15983279 .

Hirotaka, Irie; Wongpaisarnsin, Goragot; Terabe, Masayoshi; Miki, Akira; Taguchi, Shinichirou (2019). "Quantum Annealing of Vehicle Routing Problem with Time, State and Capacity".

arXiv : 1903.06322 [ quant-ph ].

NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐v5dst
Cached time: 20250812024325
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.532 seconds
Real time usage: 0.674 seconds
Preprocessor visited node count: 3345/1000000
Revision size: 24741/2097152 bytes
Post‐expand include size: 72731/2097152 bytes
Template argument size: 2796/2097152 bytes
Highest expansion depth: 16/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 117034/5000000 bytes
Lua time usage: 0.290/10.000 seconds
Lua memory usage: 7064563/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  533.525      1 -total
 44.76%  238.793      1 Template:Reflist
 33.90%  180.879     18 Template:Cite_journal
 13.27%   70.800      1 Template:Short_description
  8.95%   47.733      1 Template:Like_essay
  8.55%   45.615      6 Template:NumBlk
  8.09%   43.185      2 Template:Pagetype
  7.52%   40.136      6 Template:Cite_book
  7.21%   38.465      1 Template:Citation_needed
  6.65%   35.493      1 Template:Fix Saved in parser cache with key enwiki:pcache:7799668:|#|:idhash:canonical and timestamp 20250812024325 and revision id 1304480803. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Vehicle_routing_problem&oldid=1304480803 " Categories : Travelling salesman problem NP-complete problems Combinatorial optimization Hidden categories: Articles with short description Short description is different from Wikidata Wikipedia articles with style issues from December 2021 All articles with style issues All articles with unsourced statements Articles with unsourced statements from July 2025 This page was last edited on 6 August 2025, at 08:10 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Vehicle routing problem 14 languages Add topic

