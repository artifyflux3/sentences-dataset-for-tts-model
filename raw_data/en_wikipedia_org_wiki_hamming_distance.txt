Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Definition 2 Examples 3 Properties 4 Error detection and error correction 5 History and applications 6 Algorithm example 7 See also 8 References 9 Further reading Toggle the table of contents Hamming distance 32 languages Afrikaans العربية Български Català Čeština Deutsch Ελληνικά Español فارسی Français 한국어 Hrvatski Bahasa Indonesia Italiano עברית Lombard Magyar Nederlands 日本語 Norsk bokmål Polski Português Română Русский Српски / srpski Suomi Svenska ไทย Türkçe Українська Tiếng Việt 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Number of bits that differ between two strings This article includes a list of general references , but it lacks sufficient corresponding inline citations .

Please help to improve this article by introducing more precise citations.

( May 2015 ) ( Learn how and when to remove this message ) Hamming distance 4-bit binary tesseract for finding Hamming distance.

Two example distances: 0100→1001 has distance 3; 0110→1110 has distance 1 Class String similarity Data structure string Worst-case performance O ( n ) {\displaystyle O(n)} Best-case performance O ( n ) {\displaystyle O(n)} Average performance O ( n ) {\displaystyle O(n)} Worst-case space complexity O ( n ) {\displaystyle O(n)} 3-bit binary cube for finding Hamming distance Two example distances: 100→011 has distance 3; 010→111 has distance 2 The minimum distance between any two vertices is the Hamming distance between the two binary strings.

In information theory , the Hamming distance between two strings or vectors of equal length is the number of positions at which the corresponding symbols are different. In other words, it measures the minimum number of substitutions required to change one string into the other, or equivalently, the minimum number of errors that could have transformed one string into the other. In a more general context, the Hamming distance is one of several string metrics for measuring the edit distance between two sequences. It is named after the American mathematician Richard Hamming .

A major application is in coding theory , more specifically to block codes , in which the equal-length strings are vectors over a finite field .

Definition [ edit ] The Hamming distance between two equal-length strings of symbols is the number of positions at which the corresponding symbols are different.

[ 1 ] Examples [ edit ] The symbols may be letters, bits, or decimal digits, among other possibilities.  For example, the Hamming distance between: " ka rol in "  and  " ka thr in "  is 3.

" k a r ol in "  and  " k e r st in "  is 3.

" k athr in "  and  " k erst in "  is 4.

0000 and 1111 is 4.

2 17 3 8 96 and 2 23 3 7 96 is 3.

Properties [ edit ] For a fixed length n , the Hamming distance is a metric on the set of the words of length n (also known as a Hamming space ), as it fulfills the conditions of non-negativity, symmetry, the Hamming distance of two words is 0 if and only if the two words are identical, and it satisfies the triangle inequality as well: [ 2 ] Indeed, if we fix three words a , b and c , then whenever there is a difference between the i th letter of a and the i th letter of c , then there must be a difference between the i th letter of a and i th letter of b , or between the i th letter of b and the i th letter of c . Hence the Hamming distance between a and c is not larger than the sum of the Hamming distances between a and b and between b and c . The Hamming distance between two words a and b can also be seen as the Hamming weight of a − b for an appropriate choice of the − operator, much as the difference between two integers can be seen as a distance from zero on the number line.

[ clarification needed ] For binary strings a and b the Hamming distance is equal to the number of ones ( population count ) in a XOR b .

[ 3 ] The metric space of length- n binary strings, with the Hamming distance, is known as the Hamming cube ; it is equivalent as a metric space to the set of distances between vertices in a hypercube graph . One can also view a binary string of length n as a vector in R n {\displaystyle \mathbb {R} ^{n}} by treating each symbol in the string as a real coordinate; with this embedding, the strings form the vertices of an n -dimensional hypercube , and the Hamming distance of the strings is equivalent to the Manhattan distance between the vertices.

Error detection and error correction [ edit ] The minimum Hamming distance or minimum distance (usually denoted by d min ) is used to define some essential notions in coding theory , such as error detecting and error correcting codes . In particular, a code C is said to be k error detecting if, and only if, the minimum Hamming distance between any two of its codewords is at least k +1.

[ 2 ] For example, consider a code consisting of two codewords "000" and "111". The Hamming distance between these two words is 3, and therefore it is k =2 error detecting. This means that if one bit is flipped or two bits are flipped, the error can be detected. If three bits are flipped, then "000" becomes "111" and the error cannot be detected.

A code C is said to be k-error correcting if, for every word w in the underlying Hamming space H , there exists at most one codeword c (from C ) such that the Hamming distance between w and c is at most k . In other words, a code is k -errors correcting if the minimum Hamming distance between any two of its codewords is at least 2 k +1. This is also understood geometrically as any closed balls of radius k centered on distinct codewords being disjoint.

[ 2 ] These balls are also called Hamming spheres in this context.

[ 4 ] For example, consider the same 3-bit code consisting of the two codewords "000" and "111". The Hamming space consists of 8 words 000, 001, 010, 011, 100, 101, 110 and 111. The codeword "000" and the single bit error words "001","010","100" are all less than or equal to the Hamming distance of 1 to "000". Likewise, codeword "111" and its single bit error words "110","101" and "011" are all within 1 Hamming distance of the original "111". In this code, a single bit error is always within 1 Hamming distance of the original codes, and the code can be 1-error correcting , that is k=1 . Since the Hamming distance between "000" and "111" is 3, and those comprise the entire set of codewords in the code, the minimum Hamming distance is 3, which satisfies 2k+1 = 3 .

Thus a code with minimum Hamming distance d between its codewords can detect at most d -1 errors and can correct ⌊( d -1)/2⌋ errors.

[ 2 ] The latter number is also called the packing radius or the error-correcting capability of the code.

[ 4 ] History and applications [ edit ] The Hamming distance is named after Richard Hamming , who introduced the concept in his fundamental paper on Hamming codes , Error detecting and error correcting codes , in 1950.

[ 5 ] Hamming weight analysis of bits is used in several disciplines including information theory , coding theory , and cryptography .

[ 6 ] It is used in telecommunication to count the number of flipped bits in a fixed-length binary word as an estimate of error, and therefore is sometimes called the signal distance .

[ 7 ] For q -ary strings over an alphabet of size q ≥ 2 the Hamming distance is applied in case of the q-ary symmetric channel , while the Lee distance is used for phase-shift keying or more generally channels susceptible to synchronization errors because the Lee distance accounts for errors of ±1.

[ 8 ] If q = 2 {\displaystyle q=2} or q = 3 {\displaystyle q=3} both distances coincide because any pair of elements from Z / 2 Z {\textstyle \mathbb {Z} /2\mathbb {Z} } or Z / 3 Z {\textstyle \mathbb {Z} /3\mathbb {Z} } differ by 1, but the distances are different for larger q {\displaystyle q} .

The Hamming distance is also used in systematics as a measure of genetic distance.

[ 9 ] However, for comparing strings of different lengths, or strings where not just substitutions but also insertions or deletions have to be expected, a more sophisticated metric like the Levenshtein distance is more appropriate.

Algorithm example [ edit ] The following function, written in Python 3, returns the Hamming distance between two strings: def hamming_distance ( string1 : str , string2 : str ) -> int : """Return the Hamming distance between two strings.""" if len ( string1 ) != len ( string2 ): raise ValueError ( "Strings must be of equal length." ) dist_counter = 0 for n in range ( len ( string1 )): if string1 [ n ] != string2 [ n ]: dist_counter += 1 return dist_counter Or, in a shorter expression: sum ( char1 != char2 for char1 , char2 in zip ( string1 , string2 , strict = True )) The function hamming_distance() , implemented in Python 3 , computes the Hamming distance between two strings (or other iterable objects) of equal length by creating a sequence of Boolean values indicating mismatches and matches between corresponding positions in the two inputs, then summing the sequence with True and False values, interpreted as one and zero, respectively.

def hamming_distance ( s1 : str , s2 : str ) -> int : """Return the Hamming distance between equal-length sequences.""" if len ( s1 ) != len ( s2 ): raise ValueError ( "Undefined for sequences of unequal length." ) return sum ( char1 != char2 for char1 , char2 in zip ( s1 , s2 )) where the zip() function merges two equal-length collections in pairs.

The following C function will compute the Hamming distance of two integers (considered as binary values, that is, as sequences of bits). The running time of this procedure is proportional to the Hamming distance rather than to the number of bits in the inputs. It computes the bitwise exclusive or of the two inputs, and then finds the Hamming weight of the result (the number of nonzero bits) using an algorithm of Wegner (1960) that repeatedly finds and clears the lowest-order nonzero bit.  Some compilers support the __builtin_popcount function which can calculate this using specialized processor hardware where available.

int hamming_distance ( unsigned x , unsigned y ) { int dist = 0 ; // The ^ operators sets to 1 only the bits that are different for ( unsigned val = x ^ y ; val > 0 ; ++ dist ) { // We then count the bit set to 1 using the Peter Wegner way val = val & ( val - 1 ); // Set to zero val's lowest-order 1 } // Return the number of differing bits return dist ; } A faster alternative is to use the population count ( popcount ) assembly instruction. Certain compilers such as GCC and Clang make it available via an intrinsic function: // Hamming distance for 32-bit integers int hamming_distance32 ( unsigned int x , unsigned int y ) { return __builtin_popcount ( x ^ y ); } // Hamming distance for 64-bit integers int hamming_distance64 ( unsigned long long x , unsigned long long y ) { return __builtin_popcountll ( x ^ y ); } See also [ edit ] Mathematics portal Closest string Damerau–Levenshtein distance Euclidean distance Gap-Hamming problem Gray code Jaccard index Jaro–Winkler distance Levenshtein distance Mahalanobis distance Mannheim distance Sørensen similarity index Sparse distributed memory Word ladder References [ edit ] ^ Waggener, Bill (1995).

Pulse Code Modulation Techniques . Springer. p. 206.

ISBN 978-0-442-01436-0 . Retrieved 13 June 2020 .

^ a b c d Robinson, Derek J. S. (2003).

An Introduction to Abstract Algebra .

Walter de Gruyter . pp.

255– 257.

ISBN 978-3-11-019816-4 .

^ Warren Jr., Henry S. (2013) [2002].

Hacker's Delight (2 ed.).

Addison Wesley – Pearson Education, Inc.

pp.

81– 96.

ISBN 978-0-321-84268-8 . 0-321-84268-5.

^ a b Cohen, G.

; Honkala, I.; Litsyn, S.; Lobstein, A. (1997), Covering Codes , North-Holland Mathematical Library, vol. 54, Elsevier , pp.

16– 17, ISBN 978-0-08-053007-9 ^ Hamming, R. W. (April 1950).

"Error detecting and error correcting codes" (PDF) .

The Bell System Technical Journal .

29 (2): 147– 160.

doi : 10.1002/j.1538-7305.1950.tb00463.x .

hdl : 10945/46756 .

ISSN 0005-8580 .

S2CID 61141773 .

Archived (PDF) from the original on 2022-10-09.

^ Jarrous, Ayman; Pinkas, Benny (2009). "Secure Hamming Distance Based Computation and Its Applications". In Abdalla, Michel; Pointcheval, David; Fouque, Pierre-Alain; Vergnaud, Damien (eds.).

Applied Cryptography and Network Security . Lecture Notes in Computer Science. Vol. 5536. Berlin, Heidelberg: Springer. pp.

107– 124.

doi : 10.1007/978-3-642-01957-9_7 .

ISBN 978-3-642-01957-9 .

^ Ayala, Jose (2012).

Integrated Circuit and System Design .

Springer . p. 62.

ISBN 978-3-642-36156-2 .

^ Roth, Ron (2006).

Introduction to Coding Theory .

Cambridge University Press . p. 298.

ISBN 978-0-521-84504-5 .

^ Pilcher, Christopher D.; Wong, Joseph K.; Pillai, Satish K. (2008-03-18).

"Inferring HIV Transmission Dynamics from Phylogenetic Sequence Relationships" .

PLOS Medicine .

5 (3): e69.

doi : 10.1371/journal.pmed.0050069 .

ISSN 1549-1676 .

PMC 2267810 .

PMID 18351799 .

Further reading [ edit ] This article incorporates public domain material from Federal Standard 1037C .

General Services Administration . Archived from the original on 2022-01-22.

Wegner, Peter (1960).

"A technique for counting ones in a binary computer" .

Communications of the ACM .

3 (5): 322.

doi : 10.1145/367236.367286 .

S2CID 31683715 .

MacKay, David J. C.

(2003).

Information Theory, Inference, and Learning Algorithms . Cambridge: Cambridge University Press .

ISBN 0-521-64298-1 .

v t e Strings String metric Approximate string matching Bitap algorithm Damerau–Levenshtein distance Edit distance Gestalt pattern matching Hamming distance Jaro–Winkler distance Lee distance Levenshtein automaton Levenshtein distance Wagner–Fischer algorithm String-searching algorithm Apostolico–Giancarlo algorithm Boyer–Moore string-search algorithm Boyer–Moore–Horspool algorithm Knuth–Morris–Pratt algorithm Rabin–Karp algorithm Raita algorithm Trigram search Two-way string-matching algorithm Zhu–Takaoka string matching algorithm Multiple string searching Aho–Corasick Commentz-Walter algorithm Regular expression Comparison of regular-expression engines Regular grammar Thompson's construction Nondeterministic finite automaton Sequence alignment BLAST Hirschberg's algorithm Needleman–Wunsch algorithm Smith–Waterman algorithm Data structure DAFSA Substring index Suffix array Suffix automaton Suffix tree Compressed suffix array LCP array FM-index Generalized suffix tree Rope Ternary search tree Trie Other Parsing Pattern matching Compressed pattern matching Longest common subsequence Longest common substring Sequential pattern mining Sorting String rewriting systems String operations Authority control databases : National Germany Retrieved from " https://en.wikipedia.org/w/index.php?title=Hamming_distance&oldid=1275773583 " Categories : String metrics Coding theory Metric geometry Cubes Computational linguistics Information theory Hidden categories: Articles with short description Short description matches Wikidata Use American English from March 2019 All Wikipedia articles written in American English Articles lacking in-text citations from May 2015 All articles lacking in-text citations Wikipedia articles needing clarification from June 2020 Wikipedia articles incorporating text from the Federal Standard 1037C Articles with example Python (programming language) code Articles with example C++ code This page was last edited on 15 February 2025, at 00:33 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Hamming distance 32 languages Add topic

