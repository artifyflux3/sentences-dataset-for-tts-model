Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview 2 Use 3 Simple example 4 Simple correlation-based example 5 See also 6 References 7 External links Toggle the table of contents Correspondence problem 4 languages Deutsch فارسی 日本語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Computer vision problem This article needs additional citations for verification .

Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed.

Find sources: "Correspondence problem" – news · newspapers · books · scholar · JSTOR ( May 2015 ) ( Learn how and when to remove this message ) For the problem in theory of computation, see Post correspondence problem .

The correspondence problem refers to the fundamental problem in computer vision of ascertaining which parts of one image correspond to which parts of another image, [ 1 ] where differences are due to movement of the camera, the elapse of time, and/or movement of objects in the photos. It is related to image registration , which is about finding a geometric transformation that aligns corresponding points on top of each other.

Correspondence is arguably the key building block in many related applications: optical flow (in which the two images are subsequent in time), dense stereo vision (in which two images are from a stereo camera pair), structure from motion (SfM) and visual SLAM (in which images are from different but partially overlapping views of a scene), and cross-scene correspondence (in which images are from different scenes entirely).

A simple method to find correspondences is PatchMatch . Modern correspondence algorithms use neural networks to find correspondences quickly and with high accuracy. The influential computer vision researcher Takeo Kanade famously once said that the three fundamental problems of computer vision are: “Correspondence, correspondence, and correspondence!”.

[ 2 ] However, the problem is now considered solved.

Overview [ edit ] Given two or more images of the same 3D scene, taken from different points of view, the correspondence problem refers to the task of finding a set of points in one image which can be identified as the same points in another image. To do this, points or features in one image are matched with the points or features in another image, thus establishing corresponding points or corresponding features , also known as homologous points or homologous features . The images can be taken from a different point of view, at different times, or with objects in the scene in general motion relative to the camera(s).

The correspondence problem can occur in a stereo situation when two images of the same scene are used, or can be generalised to the N-view correspondence problem. In the latter case, the images may come from either N different cameras photographing at the same time or from one camera which is moving relative to the scene. The problem is made more difficult when the objects in the scene are in motion relative to the camera(s).

A typical application of the correspondence problem occurs in panorama creation or image stitching — when two or more images which only have a small overlap are to be stitched into a larger composite image. In this case it is necessary to be able to identify a set of corresponding points in a pair of images in order to calculate the transformation of one image to stitch it onto the other image.

Use [ edit ] In computer vision the correspondence problem is studied for the case when a computer should solve it automatically with only images as input. Once the correspondence problem has been solved, resulting in a set of image points which are in correspondence, other methods can be applied to this set to reconstruct the position, motion and/or rotation of the corresponding 3D points in the scene.

The correspondence problem is also the basis of the particle image velocimetry measurement technique, which is nowadays widely used in the fluid mechanics field to quantitatively measure fluid motion.

Simple example [ edit ] To find the correspondence between set A [1,2,3,4,5] and set B [3,4,5,6,7] find where they overlap and how far off one set is from the other. Here we see that the last three numbers in set A correspond with the first three numbers in set B. This shows that B is offset 2 to the left of A.

Simple correlation-based example [ edit ] A simple method is to compare small patches between rectified images. This works best with images taken with roughly the same point of view and either at the same time or with little to no movement of the scene between image captures, such as stereo images.

A small window is passed over a number of positions in one image. Each position is checked to see how well it compares with the same location in the other image. Several nearby locations are compared for objects in one image which may not be at exactly the same image-location in the other image. It is possible that there is no fit that is good enough. This may mean that the feature is not present in both images, it has moved farther than your search accounted for, it has changed too much, or is being hidden by other parts of the image.

See also [ edit ] Stereoscopy Parallax Photogrammetry Depth perception Stereopsis Computer vision Fundamental matrix Joint compatibility branch and bound algorithm Epipolar geometry Image registration Birchfield–Tomasi dissimilarity Scale-invariant feature transform (SIFT) References [ edit ] D. Scharstein and R. Szeliski. A Taxonomy and Evaluation of Dense Two-Frame Stereo Correspondence Algorithms.

(PDF) ^ W. Bach; J.K. Aggarwal (29 February 1988).

Motion Understanding: Robot and Human Vision . Springer Science & Business Media.

ISBN 978-0-89838-258-7 .

^ X. Wang (September 2019).

Learning and Reasoning with Visual Correspondence in Time .

v t e Computer vision Categories Datasets Digital geometry Commercial systems Feature detection Geometry Image sensor technology Learning Morphology Motion analysis Noise reduction techniques Recognition and categorization Research infrastructure Researchers Segmentation Software Technologies Computer stereo vision Motion capture Object recognition 3D object recognition Applications 3D reconstruction 3D reconstruction from multiple images 2D to 3D conversion Gaussian splatting Neural radiance field Shape from focus Simultaneous localization and mapping Structure from motion View synthesis Visual hull 4D reconstruction Free viewpoint television Volumetric capture 3D pose estimation Activity recognition Audio-visual speech recognition Automatic image annotation Automatic number-plate recognition Automated species identification Augmented reality Bioimage informatics Blob detection Computer-aided diagnosis Content-based image retrieval Reverse image search Eye tracking Face recognition Foreground detection Gesture recognition Image denoising Image restoration Landmark detection Medical image computing Object detection Moving object detection Small object detection Optical character recognition Pose tracking Remote sensing Robotic mapping Autonomous vehicles Video content analysis Video motion analysis Video surveillance Video tracking Main category v t e Stereoscopy and 3D display Perception 3D stereo view Binocular rivalry Binocular vision Chromostereopsis Convergence insufficiency Correspondence problem Peripheral vision Depth perception Epipolar geometry Kinetic depth effect Stereoblindness Stereopsis Stereopsis recovery Stereoscopic acuity Vergence-accommodation conflict Display technologies Active shutter 3D system Anaglyph 3D Autostereogram Autostereoscopy Bubblegram Head-mounted display Holography Integral imaging Lenticular lens Multiscopy Parallax barrier Parallax scrolling Polarized 3D system Specular holography Stereo display Stereoscope Vectograph Virtual retinal display Volumetric display Wiggle stereoscopy Other technologies 2D to 3D conversion 2D plus Delta 2D-plus-depth Computer stereo vision Multiview Video Coding Parallax scanning Pseudoscope Stereo photography techniques Stereoautograph Stereoscopic depth rendition Stereoscopic rangefinder Stereoscopic spectroscopy Stereoscopic video coding Product types 3D camcorder 3D film 3D television 3D-enabled mobile phones 4D film Blu-ray 3D Digital 3D Stereo camera Stereo microscope Stereoscopic video game Virtual reality headset Notable products AMD HD3D Dolby 3D Fujifilm FinePix Real 3D Infitec MasterImage 3D Nintendo 3DS New 3DS Nvidia 3D Vision Panavision 3D RealD 3D Sharp Actius RD3D View-Master XpanD 3D Miscellany Stereographer Stereoscopic Displays and Applications External links [ edit ] Middlebury Stereo Vision page Retrieved from " https://en.wikipedia.org/w/index.php?title=Correspondence_problem&oldid=1305646878 " Categories : Geometry in computer vision Stereoscopy Hidden categories: Articles with short description Short description is different from Wikidata Articles needing additional references from May 2015 All articles needing additional references This page was last edited on 13 August 2025, at 08:15 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Correspondence problem 4 languages Add topic

