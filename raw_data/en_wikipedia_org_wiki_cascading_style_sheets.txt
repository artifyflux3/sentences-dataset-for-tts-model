Title: CSS

URL Source: https://en.wikipedia.org/wiki/Cascading_Style_Sheets

Published Time: 2001-11-14T19:07:31Z

Markdown Content:
This article is about the markup styling language. For other uses, see [CSS (disambiguation)](https://en.wikipedia.org/wiki/CSS_(disambiguation) "CSS (disambiguation)").

![Image 1](https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Ambox_current_red_Americas.svg/60px-Ambox_current_red_Americas.svg.png)This article needs to be **updated**. Please help update this article to reflect recent events or newly available information._(November 2024)_

| Cascading Style Sheets (CSS) |
| --- |
| [![Image 2](https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Official_CSS_Logo.svg/120px-Official_CSS_Logo.svg.png)](https://en.wikipedia.org/wiki/File:Official_CSS_Logo.svg) Official logo since December 2024[[1]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-1) |
| [![Image 3](https://upload.wikimedia.org/wikipedia/commons/thumb/9/9d/%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D0%BA%D0%BE%D0%B4%D0%B0_%D0%BD%D0%B0_CSS.jpg/250px-%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D0%BA%D0%BE%D0%B4%D0%B0_%D0%BD%D0%B0_CSS.jpg)](https://en.wikipedia.org/wiki/File:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D0%BA%D0%BE%D0%B4%D0%B0_%D0%BD%D0%B0_CSS.jpg) Example of CSS [source code](https://en.wikipedia.org/wiki/Source_code "Source code") |
| [Filename extension](https://en.wikipedia.org/wiki/Filename_extension "Filename extension") | .css |
| [Internet media type](https://en.wikipedia.org/wiki/Media_type "Media type") | text/css |
| [Uniform Type Identifier(UTI)](https://en.wikipedia.org/wiki/Uniform_Type_Identifier "Uniform Type Identifier") | public.css |
| Developed by | [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium") (W3C) |
| Initial release | 17 December 1996; 28 years ago |
| [Latest release](https://en.wikipedia.org/wiki/Software_release_life_cycle "Software release life cycle") | CSS 3 is being developed as multiple separate modules. [Regular snapshots](https://www.w3.org/TR/CSS/) summarize their status. 7 December 2023; 20 months ago |
| Type of format | [Style sheet language](https://en.wikipedia.org/wiki/Style_sheet_language "Style sheet language") |
| [Container for](https://en.wikipedia.org/wiki/Container_format "Container format") | Style rules for [HTML elements](https://en.wikipedia.org/wiki/HTML_element "HTML element") |
| Contained by | [HTML](https://en.wikipedia.org/wiki/HTML "HTML") Documents |
| [Open format](https://en.wikipedia.org/wiki/Open_file_format "Open file format")? | Yes |
| Website | [w3.org/TR/CSS/#css](https://w3.org/TR/CSS/#css) |

**Cascading Style Sheets** (**CSS**) is a [style sheet language](https://en.wikipedia.org/wiki/Style_sheet_language "Style sheet language") used for specifying the [presentation](https://en.wikipedia.org/wiki/Presentation_semantics "Presentation semantics") and styling of a document written in a [markup language](https://en.wikipedia.org/wiki/Markup_language "Markup language") such as [HTML](https://en.wikipedia.org/wiki/HTML "HTML") or [XML](https://en.wikipedia.org/wiki/XML "XML") (including XML dialects such as [SVG](https://en.wikipedia.org/wiki/SVG "SVG"), [MathML](https://en.wikipedia.org/wiki/MathML "MathML") or [XHTML](https://en.wikipedia.org/wiki/XHTML "XHTML")).[[2]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-2) CSS is a cornerstone technology of the [World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web "World Wide Web"), alongside HTML and [JavaScript](https://en.wikipedia.org/wiki/JavaScript "JavaScript").[[3]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-3)

CSS is designed to enable the [separation of content and presentation](https://en.wikipedia.org/wiki/Separation_of_content_and_presentation "Separation of content and presentation"), including [layout](https://en.wikipedia.org/wiki/Page_layout "Page layout"), [colors](https://en.wikipedia.org/wiki/Color "Color"), and [fonts](https://en.wikipedia.org/wiki/Typeface "Typeface").[[4]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-4) This separation can improve content [accessibility](https://en.wikipedia.org/wiki/Accessibility "Accessibility"), since the content can be written without concern for its presentation; provide more flexibility and control in the specification of presentation characteristics; enable multiple [web pages](https://en.wikipedia.org/wiki/Web_page "Web page") to share formatting by specifying the relevant CSS in a separate .css file, which reduces complexity and repetition in the structural content; and enable the .css file to be [cached](https://en.wikipedia.org/wiki/Cache_(computing) "Cache (computing)") to improve the page load speed between the pages that share the file and its formatting.

Separation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or [screen reader](https://en.wikipedia.org/wiki/Screen_reader "Screen reader")), and on [Braille-based](https://en.wikipedia.org/wiki/Braille_display "Braille display") tactile devices. CSS also has rules for alternative formatting if the content is accessed on a [mobile device](https://en.wikipedia.org/wiki/Mobile_device "Mobile device").[[5]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-5)

The name _cascading_ comes from the specified priority scheme to determine which declaration applies if more than one declaration of a property match a particular element. This cascading priority scheme is predictable.

The CSS specifications are maintained by the [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium") (W3C). Internet media type ([MIME type](https://en.wikipedia.org/wiki/MIME_media_type "MIME media type")) `text/css` is registered for use with CSS by RFC 2318 (March 1998). The W3C operates a free [CSS validation service](https://en.wikipedia.org/wiki/W3C_Markup_Validation_Service#CSS_validation "W3C Markup Validation Service") for CSS documents.[[6]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-6)

In addition to HTML, other markup languages support the use of CSS including [XHTML](https://en.wikipedia.org/wiki/XHTML "XHTML"), [plain XML](https://en.wikipedia.org/wiki/Plain_Old_XML "Plain Old XML"), [SVG](https://en.wikipedia.org/wiki/SVG "SVG"), and [XUL](https://en.wikipedia.org/wiki/XUL "XUL"). CSS is also used in the [GTK](https://en.wikipedia.org/wiki/GTK "GTK")[widget toolkit](https://en.wikipedia.org/wiki/Widget_toolkit "Widget toolkit").

CSS has a simple [syntax](https://en.wikipedia.org/wiki/Syntax "Syntax") and uses a number of English keywords to specify the names of various style properties.

A style sheet consists of a list of _rules_. Each rule or rule-set consists of one or more _[selectors](https://en.wikipedia.org/wiki/Cascading\_Style\_Sheets#Selector)_, and a _[declaration block](https://en.wikipedia.org/wiki/Cascading\_Style\_Sheets#Declaration\_block)_.

"CSS class" redirects here. For non-CSS use of element classes in HTML, see [class attribute (HTML)](https://en.wikipedia.org/wiki/Class_attribute_(HTML) "Class attribute (HTML)").

In CSS, _selectors_ declare which part of the markup a style applies to by matching tags and attributes in the markup itself.

Selectors may apply to the following:

*   all [elements](https://en.wikipedia.org/wiki/HTML_element "HTML element") of a specific type, e.g. the second-level headers [h2](https://en.wikipedia.org/wiki/HTML_element#Basic_text "HTML element")
*   elements specified by [attribute](https://en.wikipedia.org/wiki/HTML_attribute "HTML attribute"), in particular: 
    *   _id_: an identifier unique within the document, denoted in the selector language by a [hash](https://en.wikipedia.org/wiki/Number_sign "Number sign") prefix e.g. `#id`
    *   _class_: an identifier that can annotate multiple elements in a document, denoted by a [dot](https://en.wikipedia.org/wiki/Period_(punctuation) "Period (punctuation)") prefix e.g. `.classname` (the phrase "CSS class", although sometimes used, is a misnomer, as element classes—specified with the [HTML class attribute](https://en.wikipedia.org/wiki/Class_attribute_(HTML) "Class attribute (HTML)")—is a markup feature that is distinct from browsers' CSS subsystems, and the related W3C/WHATWG standards work on document styles; see [RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework "Resource Description Framework") and [microformats](https://en.wikipedia.org/wiki/Microformat "Microformat") for the origins of the "class" system of the Web content model)

*   elements depending on how they are placed relative to others in the [document tree](https://en.wikipedia.org/wiki/Document_Object_Model "Document Object Model").

Classes and IDs are case-sensitive, start with letters, and can include alphanumeric characters, hyphens, and underscores. A class may apply to any number of instances of any element. An ID may only be applied to a single element.

_Pseudo-classes_ are used in CSS selectors to permit formatting based on information that is not contained in the document tree.

One example of a widely used pseudo-class is `:hover`, which identifies content only when the user "points to" the visible element, usually by holding the mouse cursor over it. It is appended to a selector as in `a:hover` or `#elementid:hover`.

A pseudo-class classifies document elements, such as `:link` or `:visited`, whereas a _pseudo-element_ makes a selection that may consist of partial elements, such as `::first-line` or `::first-letter`.[[7]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-7) Note the distinction between the double-colon notation used for pseudo-elements and the single-colon notation used for pseudo-classes.

Multiple simple selectors may be joined using combinators to specify elements by location, element type, id, class, or any combination thereof.[[8]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-8) The order of the selectors is important. For example, `div .myClass {color: red;}` applies to all elements of class myClass that are inside div elements, whereas `.myClass div {color: red;}` applies to all div elements that are inside elements of class myClass. This is not to be confused with concatenated identifiers such as `div.myClass {color: red;}` which applies to div elements of class myClass.

#### Summary of selector syntax

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=7 "Edit section: Summary of selector syntax")]

The following table provides a summary of selector syntax indicating usage and the version of CSS that introduced it.[[9]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-9)

| Pattern | Matches | First defined in CSS level |
| --- | --- | --- |
| `E` | an element of type E | 1 |
| `E:link` | an E element that is the source anchor of a hyperlink whose target is either not yet visited (:link) or already visited (:visited) | 1 |
| `E:visited` |
| `E:active` | an E element during certain user actions | 1 |
| `E:hover` | 2 |
| `E:focus` |
| `E::first-line` | the first formatted line of an E element | 1 |
| `E::first-letter` | the first formatted letter of an E element | 1 |
| `.c` | all elements with class="c" | 1 |
| `#myid` | the element with id="myid" | 1 |
| `E.warning` | an E element whose class is "warning" (the document language specifies how class is determined) | 1 |
| `E#myid` | an E element with ID equal to "myid" | 1 |
| `.c#myid` | the element with class="c" and ID equal to "myid" | 1 |
| `E F` | an F element descendant of an E element | 1 |
| `*` | any element | 2 |
| `E[foo]` | an E element with a "foo" attribute | 2 |
| `E[foo="bar"]` | an E element whose "foo" attribute value is exactly equal to "bar" | 2 |
| `E[foo~="bar"]` | an E element whose "foo" attribute value is a list of whitespace-separated values, one of which is exactly equal to "bar" | 2 |
| `E[foo|="en"]` | an E element whose "foo" attribute has a hyphen-separated list of values beginning (from the left) with "en" | 2 |
| `E:first-child` | an E element, first child of its parent | 2 |
| `E:lang(fr)` | an element of type E in language "fr" (the document language specifies how language is determined) | 2 |
| `E::before` | generated content before an E element's content | 2 |
| `E::after` | generated content after an E element's content | 2 |
| `E > F` | an F element child of an E element | 2 |
| `E + F` | an F element immediately preceded by an E element | 2 |
| `E[foo^="bar"]` | an E element whose "foo" attribute value begins exactly with the string "bar" | 3 |
| `E[foo$="bar"]` | an E element whose "foo" attribute value ends exactly with the string "bar" | 3 |
| `E[foo*="bar"]` | an E element whose "foo" attribute value contains the substring "bar" | 3 |
| `E:root` | an E element, root of the document | 3 |
| `E:nth-child(n)` | an E element, the n-th child of its parent | 3 |
| `E:nth-last-child(n)` | an E element, the n-th child of its parent, counting from the last one | 3 |
| `E:nth-of-type(n)` | an E element, the n-th sibling of its type | 3 |
| `E:nth-last-of-type(n)` | an E element, the n-th sibling of its type, counting from the last one | 3 |
| `E:last-child` | an E element, last child of its parent | 3 |
| `E:first-of-type` | an E element, first sibling of its type | 3 |
| `E:last-of-type` | an E element, last sibling of its type | 3 |
| `E:only-child` | an E element, only child of its parent | 3 |
| `E:only-of-type` | an E element, only sibling of its type | 3 |
| `E:empty` | an E element that has no children (including text nodes) | 3 |
| `E:target` | an E element being the target of the referring URI | 3 |
| `E:enabled` | a user interface element E that is enabled | 3 |
| `E:disabled` | a user interface element E that is disabled | 3 |
| `E:checked` | a user interface element E that is checked (for instance a radio button or checkbox) | 3 |
| `E:not(s)` | an E element that does not match simple selector s | 3 |
| `E ~ F` | an F element preceded by an E element | 3 |
| `E:has(s)` | an E element that contains an element matching simple selector s | 4 |

A declaration block consists of a pair of braces (`{}`) enclosing a semicolon-separated list of _declarations_.[[10]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-10)

Each declaration itself consists of a _property_, a colon (`:`), and a _value_. Optional white-space may be around the declaration block, declarations, colons, and semi-colons for readability.[[11]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-11)

Properties are specified in the CSS standard. Each property has a set of possible values. Some properties can affect any type of element, and others apply only to particular groups of elements.[[12]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-12)[[13]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-13)

Values may be keywords, such as "center" or "inherit", or numerical values, such as `200px` (200 pixels), `50vw` (50 percent of the viewport width) or 80% (80 percent of the parent element's width).

Color values can be specified with keywords (e.g. "`red`"), hexadecimal values (e.g. `#FF0000`, also abbreviated as `#F00`), RGB values on a 0 to 255 scale (e.g. `rgb(255, 0, 0)`), RGBA values that specify both color and alpha transparency (e.g. `rgba(255, 0, 0, 0.8)`), or HSL or HSLA values (e.g. `hsl(0 100% 50%)`, `hsl(0 100% 50% / 0.8)`).[[14]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-14)

Non-zero numeric values representing linear measures must include a length unit, which is either an alphabetic code or abbreviation, as in `200px` or `50vw`; or a percentage sign, as in `80%`. Some units – `cm` ([centimetre](https://en.wikipedia.org/wiki/Centimetre "Centimetre")); `in` ([inch](https://en.wikipedia.org/wiki/Inch "Inch")); `mm` ([millimetre](https://en.wikipedia.org/wiki/Millimetre "Millimetre")); `pc` ([pica](https://en.wikipedia.org/wiki/Pica_(typography) "Pica (typography)")); and `pt` ([point](https://en.wikipedia.org/wiki/Point_(typography) "Point (typography)")) – are _absolute_, which means that the rendered dimension does not depend upon the structure of the page; others – `em` ([em](https://en.wikipedia.org/wiki/Em_(typography) "Em (typography)")); `ex` ([ex](https://en.wikipedia.org/wiki/Ex_(typography) "Ex (typography)")) and `px` ([pixel](https://en.wikipedia.org/wiki/Pixel "Pixel"))[_[clarification needed](https://en.wikipedia.org/wiki/Wikipedia:Please\_clarify "Wikipedia:Please clarify")_] – are _relative_, which means that factors such as the font size of a parent element can affect the rendered measurement. These eight units were a feature of CSS 1[[15]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-15) and retained in all subsequent revisions. The proposed CSS Values and Units Module Level 3 will, if adopted as a W3C Recommendation, provide seven further length units: `ch`; `Q`; `rem`; `vh`; `vmax`; `vmin`; and `vw`.[[16]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-16)

Before CSS, nearly all presentational attributes of HTML documents were contained within the HTML markup. All font colors, background styles, element alignments, borders, and sizes had to be explicitly described, often repeatedly, within the HTML. CSS lets authors move much of that information to another file, the style sheet, resulting in considerably simpler HTML. And additionally, as more and more devices are able to access responsive web pages, different screen sizes and layouts begin to appear. Customizing a website for each device size is costly and increasingly difficult. The modular nature of CSS means that styles can be reused in different parts of a site or even across sites, promoting consistency and efficiency.

For example, headings (`h1` elements), sub-headings (`h2`), sub-sub-headings (`h3`), etc., are defined structurally using HTML. In print and on the screen, choice of [font](https://en.wikipedia.org/wiki/Typeface "Typeface"), [size](https://en.wikipedia.org/wiki/Point_(typography) "Point (typography)"), [color](https://en.wikipedia.org/wiki/Color "Color") and [emphasis](https://en.wikipedia.org/wiki/Emphasis_(typography) "Emphasis (typography)") for these elements is _presentational_.

Before CSS, document authors who wanted to assign such [typographic](https://en.wikipedia.org/wiki/Typography "Typography") characteristics to, say, all `h2` headings had to repeat HTML presentational markup for each occurrence of that heading type. This made documents more complex, larger, and more error-prone and difficult to maintain. CSS allows the separation of presentation from structure. CSS can define color, font, text alignment, size, borders, spacing, layout and many other typographic characteristics, and can do so independently for on-screen and printed views. CSS also defines non-visual styles, such as reading speed and emphasis for aural text readers. The [W3C](https://en.wikipedia.org/wiki/W3C "W3C") has now [deprecated](https://en.wikipedia.org/wiki/Deprecation "Deprecation") the use of all presentational HTML markup.[[17]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-17)

For example, under pre-CSS HTML, a heading element defined with red text would be written as:

<h1><font color="red">Chapter 1.</font></h1>

Using CSS, the same element can be coded using style properties instead of HTML presentational attributes:

<h1 style="color: red;">Chapter 1.</h1>

The advantages of this may not be immediately clear but the power of CSS becomes more apparent when the style properties are placed in an internal style element or, even better, an external CSS file. For example, suppose the document contains the style element:

<style>
 h1 {
 color: red;
 }
</style>

All `h1` elements in the document will then automatically become red without requiring any explicit code. If the author later wanted to make `h1` elements blue instead, this could be done by changing the style element to:

<style>
 h1 {
 color: blue;
 }
</style>

rather than by laboriously going through the document and changing the color for each individual `h1` element.

The styles can also be placed in an external CSS file, as described below, and loaded using syntax similar to:

<link href="path/to/file.css" rel="stylesheet" type="text/css">

This further decouples the styling from the HTML document and makes it possible to restyle multiple documents by simply editing a shared external CSS file.

CSS, or Cascading Style Sheets, offers a flexible way to style web content, with styles originating from browser defaults, user preferences, or web designers. These styles can be applied inline, within an HTML document, or through external .css files for broader consistency. Not only does this simplify web development by promoting reusability and maintainability, it also improves site performance because styles can be offloaded into dedicated .css files that browsers can cache. Additionally, even if the styles cannot be loaded or are disabled, this separation maintains the accessibility and readability of the content, ensuring that the site is usable for all users, including those with disabilities. Its multi-faceted approach, including considerations for selector specificity, rule order, and media types, ensures that websites are visually coherent and adaptive across different devices and user needs, striking a balance between design intent and user accessibility.

#### Multiple style sheets

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=14 "Edit section: Multiple style sheets")]

Multiple style sheets can be imported. Different styles can be applied depending on the output device being used; for example, the screen version can be quite different from the printed version, so authors can tailor the presentation appropriately for each medium.

The style sheet with the highest priority controls the content display. Declarations not set in the highest priority source are passed on to a source of lower priority, such as the user agent style. The process is called _cascading_.

One of the goals of CSS is to allow users greater [control over presentation](https://en.wikipedia.org/wiki/Style_sheet_(web_development)#Customization "Style sheet (web development)"). Someone who finds red italic headings difficult to read may apply a different style sheet. Depending on the browser and the website, a user may choose from various style sheets provided by the designers, or may remove all added styles, and view the site using the browser's default styling, or may override just the red italic heading style without altering other attributes. Browser extensions like [Stylish](https://en.wikipedia.org/wiki/Stylish_(software) "Stylish (software)") and [Stylus](https://en.wikipedia.org/wiki/Stylus_(browser_extension) "Stylus (browser extension)") have been created to facilitate the management of such user style sheets. In the case of large projects, cascading can be used to determine which style has a higher priority when developers do integrate third-party styles that have conflicting priorities, and to further resolve those conflicts. Additionally, cascading can help create themed designs, which help designers fine-tune aspects of a design without compromising the overall layout.

##### CSS priority scheme

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=16 "Edit section: CSS priority scheme")]

CSS priority scheme (highest to lowest) | Priority | CSS source type | Description |
| --- | --- | --- |
| 1 | Importance | The "`!important`" annotation overwrites the previous priority types |
| 2 | Inline | A style applied to an HTML element via HTML "style" attribute |
| 3 | Media Type | A property definition applies to all media types unless a media-specific CSS is defined |
| 4 | User defined | Most browsers have the accessibility feature: a user-defined CSS |
| 5 | Selector specificity | A specific contextual selector (`#heading p`) overwrites generic definition |
| 6 | Rule order | Last rule declaration has a higher priority |
| 7 | Parent inheritance | If a property is not specified, it is inherited from a parent element |
| 8 | CSS property definition in HTML document | CSS rule or CSS inline style overwrites a default browser value |
| 9 | Browser default | The lowest priority: browser default value is determined by W3C initial value specifications |

_Specificity_ refers to the relative weights of various rules.[[18]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-Cascading-18) It determines which styles apply to an element when more than one rule could apply. Based on the specification, a simple selector (e.g. H1) has a specificity of 1, class selectors have a specificity of 1,0, and ID selectors have a specificity of 1,0,0. Because the specificity values do not carry over as in the decimal system, commas are used to separate the "digits"[[19]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-19) (a CSS rule having 11 elements and 11 classes would have a specificity of 11,11, not 121).

Thus the selectors of the following rule result in the indicated specificity:

| Selectors | Specificity |
| --- | --- |
| `h1 {color: white;}` | 0, 0, 0, 1 |
| `p em {color: green;}` | 0, 0, 0, 2 |
| `.grape {color: red;}` | 0, 0, 1, 0 |
| `p.bright {color: blue;}` | 0, 0, 1, 1 |
| `p.bright em.dark {color: yellow;}` | 0, 0, 2, 2 |
| `#id218 {color: brown;}` | 0, 1, 0, 0 |
| `style=" "` | 1, 0, 0, 0 |

Consider this HTML fragment:

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <style>
 #xyz { color: blue; }
 </style>
    </head>
    <body>
        <p id="xyz" style="color: green;">To demonstrate specificity</p>
    </body>
</html>

In the above example, the declaration in the `style` attribute overrides the one in the `<style>` element because it has a higher specificity, and thus, the paragraph appears green:

To demonstrate specificity

Inheritance is a key feature in CSS; it relies on the ancestor-descendant relationship to operate. Inheritance is the mechanism by which properties are applied not only to a specified element but also to its descendants.[[18]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-Cascading-18) Inheritance relies on the document tree, which is the hierarchy of [XHTML](https://en.wikipedia.org/wiki/XHTML "XHTML") elements in a page based on nesting. Descendant elements may inherit CSS property values from any ancestor element enclosing them. In general, descendant elements inherit text-related properties, but their box-related properties are not inherited. Properties that can be inherited are color, font, letter spacing, line-height, list-style, text-align, text-indent, text-transform, visibility, white-space, and word-spacing. Properties that cannot be inherited are background, border, display, float and clear, height, and width, margin, min- and max-height and -width, outline, overflow, padding, position, text-decoration, vertical-align, and z-index.

Inheritance can be used to avoid declaring certain properties over and over again in a style sheet, allowing for shorter CSS.

Inheritance in CSS is not the same as [inheritance in class-based programming languages](https://en.wikipedia.org/wiki/Class-based_programming#Inheritance "Class-based programming"), where it is possible to define class B as "like class A, but with modifications".[[20]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-20) With CSS, it is possible to style an _element_ with "class A, but with modifications". However, it is not possible to define a CSS _class_ B like that, which could then be used to style multiple elements without having to repeat the modifications.

Given the following style sheet:

p {
 color: pink;
}

Suppose there is a p element with an emphasizing element (`<em>`) inside:

<p>
   This is to <em>illustrate</em> inheritance
</p>

If no color is assigned to the em element, the emphasized word "illustrate" inherits the color of the parent element, p. The style sheet p has the color pink, hence, the em element is likewise pink:

This is to _illustrate_ inheritance

The whitespace between properties and selectors is ignored. This code snippet:

body{overflow:hidden;background:#000000;background-image:url(images/bg.gif);background-repeat:no-repeat;background-position:left top;}

is functionally equivalent to this one:

body {
 overflow: hidden;
 background-color: #000000;
 background-image: url(images/bg.gif);
 background-repeat: no-repeat;
 background-position: left top;
}

One common way to format CSS for readability is to indent each property and give it its own line. In addition to formatting CSS for readability, shorthand properties can be used to write out the code faster, which also gets processed more quickly when being rendered:[[21]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-Mozilla_Developers-21)

body {
 overflow: hidden;
 background: #000 url(images/bg.gif) no-repeat left top;
}

Sometimes, multiple property values are indented onto their own line:

@font-face {
 font-family: 'Comic Sans';
 font-size: 20px;
 src: url('first.example.com'),
 url('second.example.com'),
 url('third.example.com'),
 url('fourth.example.com');
}

CSS 2.1 defines three positioning schemes:

Normal flow _Inline_ items are laid out in the same way as the letters in words in the text, one after the other across the available space until there is no more room, then starting a new line below. _Block_ items stack vertically, like paragraphs and like the items in a bulleted list. Normal flow also includes the relative positioning of block or inline items and run-in boxes.Floats A floated item is taken out of the normal flow and shifted to the left or right as far as possible in the space available. Other content then flows alongside the floated item.Absolute positioning An absolutely positioned item has no place in, and no effect on, the normal flow of other items. It occupies its assigned position in its container independently of other items.[[22]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-W3C-positioning-22)
There are five possible values of the `position` property. If an item is positioned in any way other than `static`, then the further properties `top`, `bottom`, `left`, and `right` are used to specify offsets and positions.The element having position static is not affected by the `top`, `bottom` , `left` or `right` properties.

The default value places the item in the _normal flow_.

The item is placed in the _normal flow_, and then shifted or offset from that position. Subsequent flow items are laid out as if the item had not been moved.

Specifies _absolute positioning_. The element is positioned in relation to its nearest non-static ancestor.

The item is _absolutely positioned_ in a fixed position on the screen even as the rest of the document is scrolled[[22]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-W3C-positioning-22)

The `float` property may have one of three values. _Absolutely_ positioned or _fixed_ items cannot be floated. Other elements normally flow around floated items, unless they are prevented from doing so by their `clear` property.

left The item _floats_ to the left of the line that it would have appeared in; other items may flow around its right side.right The item _floats_ to the right of the line that it would have appeared in; other items may flow around its left side.clear Forces the element to appear underneath ('clear') floated elements to the left (`clear:left`), right (`clear:right`) or both sides (`clear:both`).[[22]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-W3C-positioning-22)[[23]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-23)[![Image 4](https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/H%C3%A5kon_Wium_Lie.jpg/250px-H%C3%A5kon_Wium_Lie.jpg)](https://en.wikipedia.org/wiki/File:H%C3%A5kon_Wium_Lie.jpg)

[Håkon Wium Lie](https://en.wikipedia.org/wiki/H%C3%A5kon_Wium_Lie "Håkon Wium Lie"), chief technical officer of the Opera Software company and co-creator of the CSS web standards

CSS was first proposed by [Håkon Wium Lie](https://en.wikipedia.org/wiki/H%C3%A5kon_Wium_Lie "Håkon Wium Lie") on 10 October 1994.[[24]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chss-proposal-24) At the time, Lie was working with [Tim Berners-Lee](https://en.wikipedia.org/wiki/Tim_Berners-Lee "Tim Berners-Lee") at [CERN](https://en.wikipedia.org/wiki/CERN "CERN").[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25) Several other style sheet languages for the web were proposed around the same time, and discussions on public mailing lists and inside [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium") resulted in the first W3C CSS Recommendation (CSS1)[[26]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-w3c-css1-26) being released in 1996. In particular, a proposal by [Bert Bos](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") was influential; he became co-author of CSS1, and is regarded as co-creator of CSS.[[27]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-WWW3-27)

Style sheets have existed in one form or another since the beginnings of Standard Generalized Markup Language ([SGML](https://en.wikipedia.org/wiki/SGML "SGML")) in the 1980s, and CSS was developed to provide style sheets for the web.[[28]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-css-phd-28) One requirement for a web style sheet language was for style sheets to come from different sources on the web. Therefore, existing style sheet languages like [DSSSL](https://en.wikipedia.org/wiki/Document_Style_Semantics_and_Specification_Language "Document Style Semantics and Specification Language") and [FOSI](https://en.wikipedia.org/wiki/Formatting_Output_Specification_Instance "Formatting Output Specification Instance") were not suitable. CSS, on the other hand, let a document's style be influenced by multiple style sheets by way of "cascading" styles.[[28]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-css-phd-28)

As HTML grew, it came to encompass a wider variety of stylistic capabilities to meet the demands of [web developers](https://en.wikipedia.org/wiki/Web_development "Web development"). This evolution gave the designer more control over site appearance, at the cost of more complex HTML. Variations in [web browser](https://en.wikipedia.org/wiki/Web_browser "Web browser") implementations, such as [ViolaWWW](https://en.wikipedia.org/wiki/ViolaWWW "ViolaWWW") and [WorldWideWeb](https://en.wikipedia.org/wiki/WorldWideWeb "WorldWideWeb"),[[29]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-IEEE-29) made consistent site appearance difficult, and users had less control over how web content was displayed. The browser/editor developed by Tim Berners-Lee had style sheets that were hard-coded into the program. The style sheets could therefore not be linked to documents on the web.[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25)[Robert Cailliau](https://en.wikipedia.org/wiki/Robert_Cailliau "Robert Cailliau"), also of CERN, wanted to separate the structure from the presentation so that different style sheets could describe different presentation for printing, screen-based presentations, and editors.[[29]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-IEEE-29)

Improving web presentation capabilities was a topic of interest to many in the web community and nine different style sheet languages were proposed on the www-style mailing list.[[28]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-css-phd-28) Of these nine proposals, two were especially influential on what became CSS: Cascading HTML Style Sheets[[24]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chss-proposal-24) and Stream-based Style Sheet Proposal (SSP).[[27]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-WWW3-27)[[30]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-ssp-30) Two browsers served as testbeds for the initial proposals; Lie worked with [Yves Lafon](https://en.wikipedia.org/w/index.php?title=Yves_Lafon&action=edit&redlink=1 "Yves Lafon (page does not exist)") to implement CSS in [Dave Raggett](https://en.wikipedia.org/wiki/Dave_Raggett "Dave Raggett")'s [Arena](https://en.wikipedia.org/wiki/Arena_(web_browser) "Arena (web browser)") browser.[[31]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-31)[[32]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-32)[[33]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-33) Bert Bos implemented his own SSP proposal in the [Argo](https://en.wikipedia.org/wiki/Argo_(web_browser) "Argo (web browser)") browser.[[27]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-WWW3-27) Thereafter, Lie and Bos worked together to develop the CSS standard (the 'H' was removed from the name because these style sheets could also be applied to other markup languages besides HTML).[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25)

Lie's proposal was presented at the "[Mosaic and the Web](https://en.wikipedia.org/w/index.php?title=Mosaic_and_the_Web&action=edit&redlink=1 "Mosaic and the Web (page does not exist)")" conference (later called WWW2) in Chicago, Illinois in 1994, and again with Bert Bos in 1995.[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25) Around this time the W3C was already being established and took an interest in the development of CSS. It organized a workshop toward that end chaired by [Steven Pemberton](https://en.wikipedia.org/wiki/Steven_Pemberton "Steven Pemberton"). This resulted in W3C adding work on CSS to the deliverables of the HTML editorial review board (ERB). Lie and Bos were the primary technical staff on this aspect of the project, with additional members, including [Thomas Reardon](https://en.wikipedia.org/wiki/Thomas_Reardon "Thomas Reardon") of Microsoft, participating as well. In August 1996, [Netscape](https://en.wikipedia.org/wiki/Netscape "Netscape") Communication Corporation presented an alternative style sheet language called [JavaScript Style Sheets](https://en.wikipedia.org/wiki/JavaScript_Style_Sheets "JavaScript Style Sheets") (JSSS).[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25) The spec was never finished, and is deprecated.[[34]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-34) By the end of 1996, CSS was ready to become official, and the CSS level 1 Recommendation was published in December.

Development of HTML, CSS, and the [DOM](https://en.wikipedia.org/wiki/Document_Object_Model "Document Object Model") had all been taking place in one group, the HTML Editorial Review Board (ERB). Early in 1997, the ERB was split into three working groups: [HTML Working Group](https://en.wikipedia.org/wiki/HTML_Working_Group "HTML Working Group"), chaired by [Dan Connolly](https://en.wikipedia.org/wiki/Dan_Connolly_(computer_scientist) "Dan Connolly (computer scientist)") of W3C; DOM Working group, chaired by Lauren Wood of [SoftQuad](https://en.wikipedia.org/wiki/SoftQuad "SoftQuad"); and [CSS Working Group](https://en.wikipedia.org/wiki/CSS_Working_Group "CSS Working Group"), chaired by [Chris Lilley](https://en.wikipedia.org/wiki/Chris_Lilley_(W3C) "Chris Lilley (W3C)") of W3C.

The CSS Working Group began tackling issues that had not been addressed with CSS level 1, resulting in the creation of CSS level 2 on November 4, 1997. It was published as a W3C Recommendation on May 12, 1998. CSS level 3, which was started in 1998, is still under development as of 2014.

In 2005, the CSS Working Groups decided to enforce the requirements for standards more strictly. This meant that already published standards like CSS 2.1, CSS 3 Selectors, and CSS 3 Text were pulled back from Candidate Recommendation to Working Draft level.

### Difficulty with adoption

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=31 "Edit section: Difficulty with adoption")]

The CSS 1 specification was completed in 1996. Microsoft's [Internet Explorer 3](https://en.wikipedia.org/wiki/Internet_Explorer_3 "Internet Explorer 3")[[25]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-chapter20-25) was released that year, featuring some limited support for CSS. [IE 4](https://en.wikipedia.org/wiki/Internet_Explorer_4 "Internet Explorer 4") and [Netscape 4.x](https://en.wikipedia.org/wiki/Netscape_Navigator "Netscape Navigator") added more support, but it was typically incomplete and had many [bugs](https://en.wikipedia.org/wiki/Software_bug "Software bug") that prevented CSS from being usefully adopted. It was more than three years before any web browser achieved near-full implementation of the specification. [Internet Explorer 5.0](https://en.wikipedia.org/wiki/Internet_Explorer_for_Mac "Internet Explorer for Mac") for the [Macintosh](https://en.wikipedia.org/wiki/Apple_Macintosh "Apple Macintosh"), shipped in March 2000, was the first browser to have full (better than 99 percent) CSS 1 support,[[35]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-35) surpassing [Opera](https://en.wikipedia.org/wiki/Opera_(web_browser) "Opera (web browser)"), which had been the leader since its introduction of CSS support fifteen months earlier. Other browsers followed soon afterward, and many of them additionally implemented parts of CSS 2.

However, even when later "version 5" web browsers began to offer a fairly full implementation of CSS, they were still incorrect in certain areas. They were fraught with inconsistencies, bugs, and other [quirks](https://en.wikipedia.org/wiki/Quirks_mode "Quirks mode"). [Microsoft Internet Explorer 5. x for Windows](https://en.wikipedia.org/wiki/Internet_Explorer_5 "Internet Explorer 5"), as opposed to the very different [IE for Macintosh](https://en.wikipedia.org/wiki/Internet_Explorer_for_Mac "Internet Explorer for Mac"), had a flawed implementation of the [CSS box model](https://en.wikipedia.org/wiki/CSS_box_model "CSS box model"), as compared with the CSS standards. Such inconsistencies and variation in feature support made it difficult for designers to achieve a consistent appearance across browsers and [platforms](https://en.wikipedia.org/wiki/Computing_platform "Computing platform") without the use of [workarounds](https://en.wikipedia.org/wiki/Workaround "Workaround") termed [CSS hacks](https://en.wikipedia.org/wiki/CSS_hack "CSS hack") and filters. The IE Windows box model bugs were so serious that, when [Internet Explorer 6](https://en.wikipedia.org/wiki/Internet_Explorer_6 "Internet Explorer 6") was released, Microsoft introduced a backward-compatible mode of CSS interpretation ("[quirks mode](https://en.wikipedia.org/wiki/Quirks_mode "Quirks mode")") alongside an alternative, corrected "standards mode". Other non-Microsoft browsers also provided mode-switch capabilities. It, therefore, became necessary for authors of [HTML](https://en.wikipedia.org/wiki/HTML "HTML") files to ensure they contained special distinctive ["standards-compliant CSS intended" marker](https://en.wikipedia.org/wiki/Document_type_declaration#HTML5_DTD-less_DOCTYPE "Document type declaration") to show that the authors intended CSS to be interpreted correctly, in compliance with standards, as opposed to being intended for the now long-obsolete [IE5/Windows browser](https://en.wikipedia.org/wiki/Internet_Explorer_5 "Internet Explorer 5"). Without this marker, web browsers with the "quirks mode"-switching capability will size objects in web pages as IE 5 on Windows would, rather than following CSS standards.

Problems with the patchy adoption of CSS and errata in the original specification led the W3C to revise the CSS 2 standards into CSS 2.1, which moved nearer to a working snapshot of current CSS support in HTML browsers. Some CSS 2 properties that no browser successfully implemented were dropped, and in a few cases, defined behaviors were changed to bring the standard into line with the predominant existing implementations. CSS 2.1 became a Candidate Recommendation on February 25, 2004, but CSS 2.1 was pulled back to Working Draft status on June 13, 2005,[[36]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-36) and only returned to Candidate Recommendation status on July 19, 2007.[[37]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-37)

In addition to these problems, the `.css` extension was used by a software product used to convert [PowerPoint](https://en.wikipedia.org/wiki/Microsoft_PowerPoint "Microsoft PowerPoint") files into Compact Slide Show files,[[38]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-38) so some web servers served all `.css`[[39]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-39) as [MIME type](https://en.wikipedia.org/wiki/Internet_media_type "Internet media type")`application/x-pointplus`[[40]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-40) rather than `text/css`.

Individual browser vendors occasionally introduced new parameters ahead of standardization and universalization. To prevent interfering with future implementations, vendors prepended unique names to the parameters, such as `-moz-` for [Mozilla Firefox](https://en.wikipedia.org/wiki/Mozilla_Firefox "Mozilla Firefox"), `-webkit-` named after [the browsing engine](https://en.wikipedia.org/wiki/WebKit "WebKit") of [Apple Safari](https://en.wikipedia.org/wiki/Apple_Safari "Apple Safari"), `-o-` for [Opera Browser](https://en.wikipedia.org/wiki/Opera_Browser "Opera Browser") and `-ms-` for [Microsoft Internet Explorer](https://en.wikipedia.org/wiki/Microsoft_Internet_Explorer "Microsoft Internet Explorer") and early versions of [Microsoft Edge](https://en.wikipedia.org/wiki/Microsoft_Edge "Microsoft Edge") that use EdgeHTML.

Occasionally, the parameters with vendor prefixes such as `-moz-radial-gradient` and `-webkit-linear-gradient` have slightly different syntax as compared to their non-vendor-prefix counterparts.[[41]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-41)

Prefixed properties are rendered obsolete by the time of standardization. Programs are available to automatically add prefixes for older browsers and to point out standardized versions of prefixed parameters. Since prefixes are limited to a small subset of browsers, removing the prefix allows other browsers to see the functionality. An exception is certain obsolete `-webkit-` prefixed properties, which are so common and persistent on the web that other families of browsers have decided to support them for compatibility.[[42]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-42)

[![Image 5](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/W3C_CSS_Snapshot.png/250px-W3C_CSS_Snapshot.png)](https://en.wikipedia.org/wiki/File:W3C_CSS_Snapshot.png)

CSS Snapshot 2021

CSS has various levels and profiles. Each level of CSS builds upon the last, typically adding new features and typically denoted[[43]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-43) as CSS 1, CSS 2, CSS 3, and CSS 4. Profiles are typically a subset of one or more levels of CSS built for a particular device or user interface. Currently, there are profiles for mobile devices, printers, and television sets. Profiles should not be confused with media types, which were added in CSS 2.

The first CSS specification to become an official W3C Recommendation is CSS level 1, published on 17 December 1996. [Håkon Wium Lie](https://en.wikipedia.org/wiki/H%C3%A5kon_Wium_Lie "Håkon Wium Lie") and [Bert Bos](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") are credited as the original developers.[[44]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-44)[[45]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-45) Among its capabilities are support for

*   [Font](https://en.wikipedia.org/wiki/Typeface "Typeface") properties such as typeface and emphasis
*   Color of text, backgrounds, and other elements
*   Text attributes such as spacing between words, letters, and lines of text
*   [Alignment](https://en.wikipedia.org/wiki/Alignment_(typesetting) "Alignment (typesetting)") of text, images, [tables](https://en.wikipedia.org/wiki/Table_(HTML) "Table (HTML)") and other elements
*   Margin, border, padding, and positioning for most elements
*   Unique identification and generic classification of groups of attributes

The W3C no longer maintains the CSS 1 Recommendation.[[46]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-46)

CSS level 2 specification was developed by the W3C and published as a recommendation in May 1998. A superset of CSS 1, CSS 2 includes a number of new capabilities like absolute, relative, and fixed positioning of elements and [z-index](https://en.wikipedia.org/wiki/Z-index "Z-index"), the concept of media types, support for aural style sheets (which were later replaced by the CSS 3 speech modules)[[47]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-47) and bidirectional text, and new font properties such as shadows.

The W3C no longer maintains the CSS 2 recommendation.[[48]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-48)

CSS level 2 revision 1, often referred to as "CSS 2.1", fixes errors in CSS 2, removes poorly supported or not fully interoperable features and adds already implemented browser extensions to the specification. To comply with the W3C Process for standardizing technical specifications, CSS 2.1 went back and forth between Working Draft status and Candidate Recommendation status for many years. CSS 2.1 first became a [Candidate Recommendation](https://www.w3.org/TR/2004/CR-CSS21-20040225/) on 25 February 2004, but it was reverted to a Working Draft on 13 June 2005 for further review. It returned to Candidate Recommendation on 19 July 2007 and then updated twice in 2009. However, because changes and clarifications were made, it again went back to Last Call Working Draft on 7 December 2010.

CSS 2.1 went to Proposed Recommendation on 12 April 2011.[[49]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-49) After being reviewed by the W3C Advisory Committee, it was finally published as a W3C Recommendation on 7 June 2011.[[50]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-w3.org-50)

CSS 2.1 was planned as the first and final revision of level 2—but low-priority work on CSS 2.2 began in 2015.

Unlike CSS 2, which is a large single specification defining various features, CSS 3 is divided into several separate documents called "modules". Each module adds new capabilities or extends features defined in CSS 2, preserving backward compatibility. Work on CSS level 3 started around the time of publication of the original CSS 2 recommendation. The earliest CSS 3 drafts were published in June 1999.[[51]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-World_Wide_Web_Consortium-51)

Due to the modularization, different modules have different stability and statuses.[[52]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-52)

Some modules have _[Candidate Recommendation](https://en.wikipedia.org/wiki/W3C\_Recommendation#Candidate\_recommendation\_(CR) "W3C Recommendation")_ (_CR_) status and are considered moderately stable. At _CR_ stage, implementations are advised to drop vendor prefixes.[[53]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-53)

Summary of main module-specifications[[54]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-54)| Module | Specification title | Status | Date |
| --- | --- | --- | --- |
| css3-background | [CSS Backgrounds and Borders Module Level 3](https://www.w3.org/TR/css3-background/) | _Candidate_ Rec. | Feb 2023 |
| css-box-3 | [CSS Box Model Module Level 3](https://www.w3.org/TR/css-box-3/) | _Recommendation_ | Apr 2023 |
| css-cascade-3 | [CSS Cascading and Inheritance Level 3](https://www.w3.org/TR/css-cascade-3/) | _Recommendation_ | Feb 2021 |
| css-color-3 | [CSS Color Module Level 3](https://www.w3.org/TR/css3-color) | _Recommendation_ | Jan 2022 |
| css3-content | [CSS Generated Content Module Level 3](https://www.w3.org/TR/css-content-3/) | Working _Draft_ | Aug 2019 |
| css-fonts-3 | [CSS Fonts Module Level 3](https://www.w3.org/TR/css-fonts-3/) | _Recommendation_ | Sep 2018 |
| css3-gcpm | [CSS Generated Content for Paged Media Module](https://www.w3.org/TR/css-gcpm-3/) | Working _Draft_ | May 2014 |
| css3-layout | [CSS Template Layout Module](https://www.w3.org/TR/css-template-3/) | _Note_ | Mar 2015 |
| css3-mediaqueries | [Media Queries](https://www.w3.org/TR/css3-mediaqueries/) | _Recommendation_ | Jun 2012 |
| mediaqueries-4 | [Media Queries Level 4](https://www.w3.org/TR/mediaqueries-4/) | _Candidate_ Rec. | Dec 2021 |
| css3-multicol | [Multi-column Layout Module Level 1](https://www.w3.org/TR/css-multicol-1/) | _Candidate_ Rec. | Oct 2021 |
| css3-page | [CSS Paged Media Module Level 3](https://www.w3.org/TR/css3-page/) | Working _Draft_, and part migrated to css3-break | Oct 2018 |
| css3-break | [CSS Fragmentation Module Level 3](https://www.w3.org/TR/css-break/) | _Candidate_ Rec. | Dec 2018 |
| selectors-3 | [Selectors Level 3](https://www.w3.org/TR/selectors-3/) | _Recommendation_ | Nov 2018 |
| selectors-4 | [Selectors Level 4](https://www.w3.org/TR/selectors-4/) | Working _Draft_ | Nov 2022 |
| css3-ui | [CSS Basic User Interface Module Level 3 (CSS3 UI)](https://www.w3.org/TR/css-ui-3/) | _Recommendation_ | Jun 2018 |

[Jen Simmons](https://en.wikipedia.org/wiki/Jen_Simmons "Jen Simmons") discussing the state of CSS in 2019, as several CSS 4 modules were being advanced

There is no single, integrated CSS4 specification,[[55]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-55) because the specification has been split into many separate modules which level independently.

Modules that build on things from CSS Level 2 started at Level 3. Some of them have already reached Level 4 or are already approaching Level 5. Other modules that define entirely new functionality, such as [Flexbox](https://en.wikipedia.org/wiki/Flexbox "Flexbox"),[[56]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-56) have been designated as Level 1 and some of them are approaching Level 2.

The CSS Working Group sometimes publishes "Snapshots", a collection of whole modules and parts of other drafts that are considered stable enough to be implemented by browser developers. So far, five such "best current practices" documents have been published as Notes, in 2007,[[57]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-57) 2010,[[58]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-58) 2015,[[59]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-59) 2017,[[60]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-60) and 2018.[[61]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-61)

Since these specification snapshots are primarily intended for developers, there has been a growing demand for a similar versioned reference document targeted at authors, which would present the state of interoperable implementations as meanwhile documented by sites like Can I Use...[[62]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-caniuse-62) and the MDN Web Docs.[[63]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-mdn-63) A W3C Community Group has been established in early 2020 in order to discuss and define such a resource.[[64]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-css4-64) The actual kind of [versioning](https://en.wikipedia.org/wiki/Software_versioning "Software versioning") is also up to debate, which means that the document, once produced, might not be called "CSS4".

Each web browser uses a [layout engine](https://en.wikipedia.org/wiki/Web_browser_engine "Web browser engine") to render web pages, and support for CSS functionality is not consistent between them. Because browsers do not parse CSS perfectly, multiple coding techniques have been developed to target specific browsers with workarounds (commonly known as [CSS hacks](https://en.wikipedia.org/wiki/CSS_hacks "CSS hacks") or CSS filters). The adoption of new functionality in CSS can be hindered by a lack of support in major browsers. For example, Internet Explorer was slow to add support for many CSS 3 features, which slowed the adoption of those features and damaged the browser's reputation among developers. Additionally, a proprietary syntax for the non-vendor-prefixed `filter` property was used in some versions.[[65]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-65) In order to ensure a consistent experience for their users, web developers often test their sites across multiple operating systems, browsers, and browser versions, increasing development time and complexity. Tools such as [BrowserStack](https://en.wikipedia.org/wiki/BrowserStack "BrowserStack") have been built to reduce the complexity of maintaining these environments.

In addition to these testing tools, many sites maintain lists of browser support for specific CSS properties, including [CanIUse](https://caniuse.com/) and the [MDN Web Docs](https://en.wikipedia.org/wiki/MDN_Web_Docs "MDN Web Docs"). Additionally, CSS 3 defines feature queries, which provide an `@supports` directive that will allow developers to target browsers with support for certain functionality directly within their CSS.[[66]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-66) CSS that is not supported by older browsers can also sometimes be patched in using JavaScript [polyfills](https://en.wikipedia.org/wiki/Polyfill_(programming) "Polyfill (programming)"), which are pieces of JavaScript code designed to make browsers behave consistently. These workarounds—and the need to support fallback functionality—can add complexity to development projects, and consequently, companies frequently define a list of browser versions that they will and will not support.

As websites adopt newer code standards that are incompatible with older browsers, these browsers can be cut off from accessing many of the resources on the web (sometimes intentionally).[[67]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-67) Many of the most popular sites on the internet are not just visually degraded on older browsers due to poor CSS support but do not work at all, in large part due to the evolution of JavaScript and other web technologies.

Some noted limitations of the current capabilities of CSS include:

### Cannot explicitly declare new scope independently of position

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=40 "Edit section: Cannot explicitly declare new scope independently of position")]

Scoping rules for properties such as z-index look for the closest parent element with a position: absolute or position: relative attribute. This odd coupling has undesired effects. For example, it is impossible to avoid declaring a new scope when one is forced to adjust an element's position, preventing one from using the desired scope of a parent element.

### Pseudo-class dynamic behavior not controllable

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=41 "Edit section: Pseudo-class dynamic behavior not controllable")]

CSS implements pseudo-classes that allow a degree of user feedback by conditional application of alternative styles. One CSS pseudo-class, "`:hover`", is dynamic (equivalent of JavaScript "onmouseover") and has potential for misuse (e.g., implementing cursor-proximity popups),[[68]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-68) but CSS has no ability for a client to disable it (no "disable"-like property) or limit its effects (no "nochange"-like values for each property).

There is no way to name a CSS rule, which would allow (for example) client-side scripts to refer to the rule even if its selector changes.

### Cannot include styles from a rule into another rule

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=43 "Edit section: Cannot include styles from a rule into another rule")]

CSS styles often must be duplicated in several rules to achieve the desired effect, causing additional maintenance and requiring more thorough testing. Some new CSS features were proposed to solve this but were abandoned afterward.[[69]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-69)[[70]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-70) Instead, authors may gain this ability by using more sophisticated stylesheet languages which compile to CSS, such as [Sass](https://en.wikipedia.org/wiki/Sass_(stylesheet_language) "Sass (stylesheet language)"), [Less](https://en.wikipedia.org/wiki/Less_(stylesheet_language) "Less (stylesheet language)"), or [Stylus](https://en.wikipedia.org/wiki/Stylus_(stylesheet_language) "Stylus (stylesheet language)").

### Cannot target specific text without altering markup

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=44 "Edit section: Cannot target specific text without altering markup")]

Besides the `::first-letter` pseudo-element, one cannot target specific ranges of text without needing to utilize placeholder elements.

### Separation of content from presentation

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=46 "Edit section: Separation of content from presentation")]

CSS facilitates the publication of content in multiple presentation formats by adjusting styles based on various nominal parameters. These parameters include explicit user preferences (such as themes or font size), compatibility with different web browsers, the type of device used to view the content (e.g., desktop, tablet, or mobile device), screen resolutions, the geographic location of the user, and many other variables. CSS also enables responsive design, ensuring that content dynamically adapts to different screen sizes and orientations, enhancing accessibility and user experience across a wide range of environments.

### Site-wide consistency

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=47 "Edit section: Site-wide consistency")]

When CSS is used effectively, in terms of inheritance and "cascading", a global style sheet can be used to affect and style elements site-wide. If the situation arises that the styling of the elements should be changed or adjusted, these changes can be made by editing rules in the global style sheet. Before CSS, this sort of maintenance was more difficult, expensive, and time-consuming.

A stylesheet, internal or external, specifies the style once for a range of HTML elements selected by `class`, type or relationship to others. This is much more efficient than repeating style information inline for each occurrence of the element. An external stylesheet is usually stored in the [browser cache](https://en.wikipedia.org/wiki/Browser_cache "Browser cache"), and can therefore be used on multiple pages without being reloaded, further reducing data transfer over a network.

With a simple change of one line, a different style sheet can be used for the same page. This has advantages for accessibility, as well as providing the ability to tailor a page or site to different target devices. Furthermore, devices not able to understand the styling still display the content.

Without CSS, web designers must typically lay out their pages with techniques such as HTML tables that hinder accessibility for vision-impaired users (see [Tableless web design §Accessibility](https://en.wikipedia.org/wiki/Tableless_web_design#Accessibility "Tableless web design")).

[CSS frameworks](https://en.wikipedia.org/wiki/CSS_framework "CSS framework") are prepared [libraries](https://en.wikipedia.org/wiki/Library_(computing) "Library (computing)") that are meant to allow for easier, more standards-compliant styling of [web pages](https://en.wikipedia.org/wiki/Web_page "Web page") using the Cascading Style Sheets language. CSS frameworks include [Blueprint](https://en.wikipedia.org/wiki/Blueprint_(CSS_framework) "Blueprint (CSS framework)"), [Bootstrap](https://en.wikipedia.org/wiki/Bootstrap_(front-end_framework) "Bootstrap (front-end framework)"), [Foundation](https://en.wikipedia.org/wiki/Foundation_(framework) "Foundation (framework)") and Materialize. Like programming and scripting language libraries, CSS frameworks are usually incorporated as external .css sheets referenced in the HTML `<head>`. They provide a number of ready-made options for designing and laying out the web page. Although many of these frameworks have been published, some authors use them mostly for rapid prototyping, or for learning from, and prefer to 'handcraft' CSS that is appropriate to each published site without the design, maintenance and download overhead of having many unused features in the site's styling.[[71]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-71)

### Design methodologies

[[edit](https://en.wikipedia.org/w/index.php?title=CSS&action=edit&section=53 "Edit section: Design methodologies")]

As the size of CSS resources used in a project increases, a development team often needs to decide on a common design methodology to keep them organized. The goals are ease of development, ease of collaboration during development, and performance of the deployed stylesheets in the browser. Popular methodologies include OOCSS (object-oriented CSS), ACSS (atomic CSS), CSS (organic Cascade Style Sheet), SMACSS (scalable and modular architecture for CSS), and BEM (block, element, modifier).[[72]](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_note-72)

*   [Flash of unstyled content](https://en.wikipedia.org/wiki/Flash_of_unstyled_content "Flash of unstyled content")
*   [CSS-in-JS](https://en.wikipedia.org/wiki/CSS-in-JS "CSS-in-JS")

1.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-1)**["Minutes Telecon 2024-12-11"](https://www.w3.org/blog/CSS/2024/12/12/minutes-2024-12-11/). _CSS WG Blog_. W3C. 2024-12-12. [Archived](https://web.archive.org/web/20250116125653/https://www.w3.org/blog/CSS/2024/12/12/minutes-2024-12-11/) from the original on 2025-01-16. Retrieved 2025-01-16.
2.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-2)**["CSS developer guide"](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS). _MDN Web Docs_. [Archived](https://web.archive.org/web/20150925133829/https://developer.mozilla.org/en-US/docs/Web/Guide/CSS) from the original on 2015-09-25. Retrieved 2015-09-24.
3.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-3)**Flanagan, David (18 April 2011). _JavaScript: the definitive guide_. Beijing; Farnham: O'Reilly. p.1. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-4493-9385-4](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4493-9385-4 "Special:BookSources/978-1-4493-9385-4"). [OCLC](https://en.wikipedia.org/wiki/OCLC_(identifier) "OCLC (identifier)")[686709345](https://search.worldcat.org/oclc/686709345). JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behavior of web pages.
4.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-4)**["What is CSS?"](https://www.w3.org/standards/webdesign/htmlcss#whatcss). World Wide Web Consortium. [Archived](https://web.archive.org/web/20101129081921/https://www.w3.org/standards/webdesign/htmlcss#whatcss) from the original on 2010-11-29. Retrieved 2010-12-01.
5.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-5)**Clark, Scott (23 July 2010). ["Web-based Mobile Apps of the Future Using HTML 5, CSS and JavaScript"](https://www.htmlgoodies.com/beyond/article.php/3893911/Web-based-Mobile-Apps-of-the-Future-Using-HTML-5-CSS-and-JavaScript.htm). _HTML Goodies_. HTMLGoodies. [Archived](https://web.archive.org/web/20141020121735/https://www.htmlgoodies.com/beyond/article.php/3893911/Web-based-Mobile-Apps-of-the-Future-Using-HTML-5-CSS-and-JavaScript.htm) from the original on 2014-10-20. Retrieved 2014-10-16.
6.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-6)**["W3C CSS validation service"](https://jigsaw.w3.org/css-validator/). [Archived](https://web.archive.org/web/20110214164625/https://jigsaw.w3.org/css-validator/) from the original on 2011-02-14. Retrieved 2012-06-30.
7.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-7)**["W3C CSS2.1 specification for pseudo-elements and pseudo-classes"](https://www.w3.org/TR/CSS21/selector.html#pseudo-elements). World Wide Web Consortium. 7 June 2011. [Archived](https://web.archive.org/web/20120430011514/https://www.w3.org/TR/CSS21/selector.html#pseudo-elements) from the original on 30 April 2012. Retrieved 30 April 2012.
8.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-8)**["Selectors"](https://www.w3.org/TR/CSS21/selector.html). _Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification_. W3C. [Archived](https://web.archive.org/web/20060423174213/https://www.w3.org/TR/CSS21/selector.html) from the original on 2006-04-23.
9.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-9)**["Selectors Level 3"](https://www.w3.org/TR/selectors/). W3C. [Archived](https://web.archive.org/web/20140603165900/https://www.w3.org/TR/selectors/) from the original on 2014-06-03. Retrieved 2014-05-30.
10.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-10)**["CSS Syntax Module Level 3"](https://www.w3.org/TR/css-syntax-3/#syntax-description). _W3C_. [Archived](https://web.archive.org/web/20231001223513/https://www.w3.org/TR/css-syntax-3/) from the original on 1 October 2023. Retrieved 1 October 2023.
11.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-11)**["W3C CSS2.1 specification for rule sets, declaration blocks, and selectors"](https://www.w3.org/TR/CSS21/syndata.html#q10). World Wide Web Consortium. 7 June 2011. [Archived](https://web.archive.org/web/20080328113605/https://www.w3.org/TR/CSS21/syndata.html#q10) from the original on 28 March 2008. Retrieved 2009-06-20.
12.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-12)**["Full property table"](https://www.w3.org/TR/CSS2/propidx.html). W3C. [Archived](https://web.archive.org/web/20140530163211/https://www.w3.org/TR/CSS2/propidx.html) from the original on 2014-05-30. Retrieved 2014-05-30.
13.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-13)**["Index of CSS properties"](https://www.w3.org/Style/CSS/all-properties.en.html). _W3C_. Retrieved 2020-08-09.
14.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-14)**["CSS Color"](https://developer.mozilla.org/en-US/docs/Web/CSS/color). MDN Web Docs. 2024-04-05. [Archived](https://web.archive.org/web/20240327000753/https://developer.mozilla.org/en-US/docs/Web/CSS/color) from the original on 2024-03-27. Retrieved 2024-04-05.
15.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-15)**["6.1 Length units"](https://www.w3.org/TR/REC-CSS1-961217#length-units). _Cascading Style Sheets, level 1_. 17 December 1996. [Archived](https://web.archive.org/web/20190614194847/https://www.w3.org/TR/REC-CSS1-961217#length-units) from the original on 14 June 2019. Retrieved 20 June 2019.
16.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-16)**["5. Distance Units: the <length> type"](https://www.w3.org/TR/2019/CR-css-values-3-20190606/#lengths). _CSS Values and Units Module Level 3_. 6 June 2019. [Archived](https://web.archive.org/web/20190607171702/https://www.w3.org/TR/2019/CR-css-values-3-20190606/#lengths) from the original on 7 June 2019. Retrieved 20 June 2019.
17.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-17)**W3C HTML Working Group. ["HTML 5. A vocabulary and associated APIs for HTML and XHTML"](https://www.w3.org/TR/html/introduction.html#presentational-markup). [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium"). [Archived](https://web.archive.org/web/20140715001359/https://www.w3.org/TR/html/introduction.html#presentational-markup) from the original on 15 July 2014. Retrieved 28 June 2014.
18.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-Cascading_18-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-Cascading_18-1)Meyer, Eric A. (2006). [_Cascading Style Sheets: The Definitive Guide_](https://shop.oreilly.com/product/9781565926226.do) (3rd ed.). O'Reilly Media, Inc. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-596-52733-0](https://en.wikipedia.org/wiki/Special:BookSources/0-596-52733-0 "Special:BookSources/0-596-52733-0"). [Archived](https://web.archive.org/web/20140215041138/https://shop.oreilly.com/product/9781565926226.do) from the original on 2014-02-15. Retrieved 2014-02-16.
19.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-19)**["Assigning property values, Cascading, and Inheritance"](https://www.w3.org/TR/CSS21/cascade.html#specificity). [Archived](https://web.archive.org/web/20140611010536/https://www.w3.org/TR/CSS21/cascade.html#specificity) from the original on 2014-06-11. Retrieved 2014-06-10.
20.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-20)**["Can a CSS class inherit one or more other classes?"](https://stackoverflow.com/questions/1065435/can-a-css-class-inherit-one-or-more-other-classes). _StackOverflow_. [Archived](https://web.archive.org/web/20171014054727/https://stackoverflow.com/questions/1065435/can-a-css-class-inherit-one-or-more-other-classes) from the original on 2017-10-14. Retrieved 2017-09-10.
21.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-Mozilla_Developers_21-0)**["Shorthand properties"](https://web.archive.org/web/20180130204516/https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties). _Tutorial_. Mozilla Developers. 2017-12-07. Archived from [the original](https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties) on 2018-01-30. Retrieved 2018-01-30.
22.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-W3C-positioning_22-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-W3C-positioning_22-1)[_**c**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-W3C-positioning_22-2)Bos, Bert; et al. (7 December 2010). ["9.3 Positioning schemes"](https://www.w3.org/TR/CSS2/visuren.html#positioning-scheme). _Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification_. W3C. [Archived](https://web.archive.org/web/20110218054848/https://www.w3.org/TR/CSS2/visuren.html#positioning-scheme) from the original on 18 February 2011. Retrieved 16 February 2011.
23.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-23)**[Holzschlag, Molly E](https://en.wikipedia.org/wiki/Molly_Holzschlag "Molly Holzschlag") (2005). _Spring into HTML and CSS_. Pearson Education, Inc. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-13-185586-7](https://en.wikipedia.org/wiki/Special:BookSources/0-13-185586-7 "Special:BookSources/0-13-185586-7").
24.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chss-proposal_24-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chss-proposal_24-1)Lie, Hakon W (10 October 1994). ["Cascading HTML style sheets – a proposal"](https://www.w3.org/People/howcome/p/cascade.html)(Proposal). CERN. [Archived](https://web.archive.org/web/20140604022945/https://www.w3.org/People/howcome/p/cascade.html) from the original on 4 June 2014. Retrieved 25 May 2014.
25.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-1)[_**c**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-2)[_**d**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-3)[_**e**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-4)[_**f**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-chapter20_25-5)[Lie, Håkon Wium](https://en.wikipedia.org/wiki/H%C3%A5kon_Wium_Lie "Håkon Wium Lie"); [Bos, Bert](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") (1999). [_Cascading Style Sheets, designing for the Web_](https://archive.org/details/cascadingstyles000lieh). Addison Wesley. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-201-59625-3](https://en.wikipedia.org/wiki/Special:BookSources/0-201-59625-3 "Special:BookSources/0-201-59625-3"). Retrieved 23 June 2010.
26.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-w3c-css1_26-0)**["Cascading Style Sheets, level 1"](https://www.w3.org/TR/1999/REC-CSS1-19990111). World Wide Web Consortium. [Archived](https://web.archive.org/web/20140409234430/https://www.w3.org/TR/1999/REC-CSS1-19990111) from the original on 2014-04-09. Retrieved 2014-03-07.
27.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-WWW3_27-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-WWW3_27-1)[_**c**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-WWW3_27-2)[Bos, Bert](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") (14 April 1995). ["Simple style sheets for SGML & HTML on the web"](https://www.w3.org/People/Bos/style.html). World Wide Web Consortium. [Archived](https://web.archive.org/web/20090923221609/https://www.w3.org/People/Bos/style.html) from the original on 23 September 2009. Retrieved 20 June 2010.
28.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-css-phd_28-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-css-phd_28-1)[_**c**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-css-phd_28-2)["Cascading Style Sheets"](https://web.archive.org/web/20060906211843/https://people.opera.com/howcome/2006/phd/). University of Oslo. Archived from [the original](https://people.opera.com/howcome/2006/phd/) on 2006-09-06. Retrieved 3 September 2014.
29.   ^ [_**a**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-IEEE_29-0)[_**b**_](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-IEEE_29-1)Petrie, Charles; [Cailliau, Robert](https://en.wikipedia.org/wiki/Robert_Cailliau "Robert Cailliau") (November 1997). ["Interview Robert Cailliau on the WWW Proposal: "How It Really Happened.""](https://web.archive.org/web/20110106041256/https://www.computer.org/portal/web/computingnow/ic-cailliau). [Institute of Electrical and Electronics Engineers](https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers "Institute of Electrical and Electronics Engineers"). Archived from [the original](https://www.computer.org/portal/web/computingnow/ic-cailliau) on 6 January 2011. Retrieved 18 August 2010.
30.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-ssp_30-0)**[Bos, Bert](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") (31 March 1995). ["Stream-based Style sheet Proposal"](https://www.w3.org/People/Bos/stylesheets.html). [Archived](https://web.archive.org/web/20141012131653/https://www.w3.org/People/Bos/stylesheets.html) from the original on 12 October 2014. Retrieved 3 September 2014.
31.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-31)**[Nielsen, Henrik Frystyk](https://en.wikipedia.org/wiki/Henrik_Frystyk_Nielsen "Henrik Frystyk Nielsen") (7 June 2002). ["Libwww Hackers"](https://www.w3.org/Library/Collaborators.html). World Wide Web Consortium. [Archived](https://web.archive.org/web/20091202042207/https://www.w3.org/Library/Collaborators.html) from the original on 2 December 2009. Retrieved 6 June 2010.
32.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-32)**["Yves Lafon"](https://www.w3.org/People/Lafon/). World Wide Web Consortium. [Archived](https://web.archive.org/web/20100624003146/https://www.w3.org/People/Lafon/) from the original on 24 June 2010. Retrieved 17 June 2010.
33.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-33)**["The W3C Team: Technology and Society"](https://www.w3.org/People/domain?domain=Technology+and+Society). World Wide Web Consortium. 18 July 2008. [Archived](https://web.archive.org/web/20100528051449/https://www.w3.org/People/domain?domain=Technology+and+Society) from the original on 28 May 2010. Retrieved 22 January 2011.
34.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-34)**[Lou Montulli](https://en.wikipedia.org/wiki/Lou_Montulli "Lou Montulli"); [Brendan Eich](https://en.wikipedia.org/wiki/Brendan_Eich "Brendan Eich"); [Scott Furman](https://en.wikipedia.org/w/index.php?title=Scott_Furman&action=edit&redlink=1 "Scott Furman (page does not exist)"); [Donna Converse](https://en.wikipedia.org/w/index.php?title=Donna_Converse&action=edit&redlink=1 "Donna Converse (page does not exist)"); [Troy Chevalier](https://en.wikipedia.org/w/index.php?title=Troy_Chevalier&action=edit&redlink=1 "Troy Chevalier (page does not exist)") (22 August 1996). ["JavaScript-Based Style Sheets"](https://www.w3.org/Submission/1996/1/WD-jsss-960822). W3C. [Archived](https://web.archive.org/web/20100527213412/https://www.w3.org/Submission/1996/1/WD-jsss-960822) from the original on 27 May 2010. Retrieved 23 June 2010.
35.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-35)**["CSS software"](https://www.w3.org/Style/CSS/software.en.html#w26). W3C. [Archived](https://web.archive.org/web/20101125162013/https://www.w3.org/Style/CSS/software.en.html#w26) from the original on 2010-11-25. Retrieved 2011-01-15.
36.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-36)**[Anne van Kesteren](https://en.wikipedia.org/wiki/Anne_van_Kesteren "Anne van Kesteren"). ["CSS 2.1– Anne's Weblog"](https://annevankesteren.nl/2005/06/css-21). [Archived](https://web.archive.org/web/20051210101312/https://annevankesteren.nl/2005/06/css-21) from the original on 2005-12-10. Retrieved 2011-02-16.
37.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-37)**["Archive of W3C News in 2007"](https://www.w3.org/News/2007.html#entry-7058). [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium"). 21 December 2007. [Archived](https://web.archive.org/web/20110628191558/https://www.w3.org/News/2007.html#entry-7058) from the original on 2011-06-28. Retrieved 2011-02-16.
38.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-38)**Nitot, Tristan (18 March 2002). ["Incorrect MIME Type for CSS Files"](https://web.archive.org/web/20110520044919/https://developer.mozilla.org/en/Incorrect_MIME_Type_for_CSS_Files). _[Mozilla Developer Center](https://en.wikipedia.org/wiki/Mozilla\_Developer\_Center "Mozilla Developer Center")_. [Mozilla](https://en.wikipedia.org/wiki/Mozilla "Mozilla"). Archived from [the original](https://developer.mozilla.org/en/Incorrect_MIME_Type_for_CSS_Files) on 2011-05-20. Retrieved 20 June 2010.
39.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-39)**McBride, Don (27 November 2009). ["File Types"](https://donsnotes.com/tech/filetype.html). [Archived](https://web.archive.org/web/20101029155135/https://donsnotes.com/tech/filetype.html) from the original on 29 October 2010. Retrieved 20 June 2010.
40.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-40)**["css file extension details"](https://web.archive.org/web/20110718182554/https://extensions.pndesign.cz/css-file). File extension database. 12 March 2010. Archived from [the original](https://extensions.pndesign.cz/css-file) on 18 July 2011. Retrieved 20 June 2010.
41.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-41)**Kyrnin, Jennifer (2019-11-12). ["What Are CSS Vendor or Browser Prefixes?"](https://www.lifewire.com/css-vendor-prefixes-3466867). _Lifewire_. [Archived](https://web.archive.org/web/20201130084004/https://www.lifewire.com/css-vendor-prefixes-3466867) from the original on Nov 30, 2020.
42.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-42)**["Compatibility Standard"](https://compat.spec.whatwg.org/). _WHATWG_. 24 January 2024. [Archived](https://web.archive.org/web/20240204073005/https://compat.spec.whatwg.org/) from the original on Feb 4, 2024.
43.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-43)**["CSS Snapshot 2023 – 2.4. CSS Levels"](https://www.w3.org/TR/CSS/#css-levels). _W3C_. 7 December 2023. [Archived](https://web.archive.org/web/20240208172654/https://www.w3.org/TR/CSS/#css-levels) from the original on Feb 8, 2024.
44.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-44)**Bos, Bert; Wium Lie, Håkon (1997). [_Cascading style sheets: designing for the Web_](https://archive.org/details/cascadingstylesh00lieh) (1st print.ed.). Harlow, England; Reading, MA.: Addison Wesley Longman. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[0-201-41998-X](https://en.wikipedia.org/wiki/Special:BookSources/0-201-41998-X "Special:BookSources/0-201-41998-X").
45.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-45)**[W3C](https://en.wikipedia.org/wiki/W3C "W3C"): _[Cascading Style Sheets, level 1](https://www.w3.org/TR/CSS1)[Archived](https://web.archive.org/web/20110209205309/https://www.w3.org/TR/CSS1/) 2011-02-09 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback\_Machine "Wayback Machine") CSS 1 specification_
46.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-46)**[W3C](https://en.wikipedia.org/wiki/W3C "W3C"): _[Cascading Style Sheets level 1 specification](https://www.w3.org/TR/2008/REC-CSS1-20080411/)[Archived](https://web.archive.org/web/20110211185814/https://www.w3.org/TR/2008/REC-CSS1-20080411/) 2011-02-11 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback\_Machine "Wayback Machine") CSS level 1 specification_
47.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-47)**["Aural style sheets"](https://www.w3.org/TR/CSS21/aural.html#aural-media-group). W3C. [Archived](https://web.archive.org/web/20141026010749/https://www.w3.org/TR/CSS21/aural.html#aural-media-group) from the original on 2014-10-26. Retrieved 2014-10-26.
48.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-48)**[W3C](https://en.wikipedia.org/wiki/W3C "W3C"): _[Cascading Style Sheets, level 2](https://www.w3.org/TR/2008/REC-CSS2-20080411/)[Archived](https://web.archive.org/web/20110116000124/https://www.w3.org/TR/2008/REC-CSS2-20080411/) 2011-01-16 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback\_Machine "Wayback Machine") CSS 2 specification (1998 recommendation)_
49.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-49)**[W3C](https://en.wikipedia.org/wiki/W3C "W3C"):_[Cascading Style Sheets, level 2 revision 1](https://www.w3.org/TR/2011/PR-CSS2-20110412/)[Archived](https://web.archive.org/web/20111109095352/https://www.w3.org/TR/2011/PR-CSS2-20110412/) 2011-11-09 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback\_Machine "Wayback Machine") CSS 2.1 specification (W3C Proposed Recommendation)_
50.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-w3.org_50-0)**W3C: [Cascading Style Sheets Standard Boasts Unprecedented Interoperability](https://www.w3.org/2011/05/css-pr.html.en)[Archived](https://web.archive.org/web/20110610221708/https://www.w3.org/2011/05/css-pr.html.en) 2011-06-10 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine")
51.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-World_Wide_Web_Consortium_51-0)**[Bos, Bert](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") (18 February 2011). ["Descriptions of all CSS specifications"](https://www.w3.org/Style/CSS/specs). [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium"). [Archived](https://web.archive.org/web/20110331092216/https://www.w3.org/Style/CSS/specs) from the original on 31 March 2011. Retrieved 3 March 2011.
52.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-52)**[Bos, Bert](https://en.wikipedia.org/wiki/Bert_Bos "Bert Bos") (26 February 2011). ["CSS current work"](https://www.w3.org/Style/CSS/current-work). [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium"). [Archived](https://web.archive.org/web/20110303230112/https://www.w3.org/Style/CSS/current-work) from the original on 3 March 2011. Retrieved 3 March 2011.
53.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-53)**[Etemad, Elika J.](https://en.wikipedia.org/w/index.php?title=Elika_J._Etemad&action=edit&redlink=1 "Elika J. Etemad (page does not exist)") (12 December 2010). ["Cascading Style Sheets (CSS) Snapshot 2010"](https://www.w3.org/TR/css-2010/#css). [World Wide Web Consortium](https://en.wikipedia.org/wiki/World_Wide_Web_Consortium "World Wide Web Consortium"). [Archived](https://web.archive.org/web/20110316103250/https://www.w3.org/TR/css-2010/#css) from the original on 16 March 2011. Retrieved 3 March 2011.
54.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-54)**["All CSS specifications"](https://www.w3.org/Style/CSS/specs). W3C. 2014-05-22. [Archived](https://web.archive.org/web/20140530231250/https://www.w3.org/Style/CSS/specs) from the original on 2014-05-30. Retrieved 2014-05-30.
55.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-55)**Atkins, Tab Jr. ["A Word About CSS4"](https://www.xanthir.com/b4Ko0). [Archived](https://web.archive.org/web/20121031194751/https://www.xanthir.com/b4Ko0) from the original on 31 October 2012. Retrieved 18 October 2012.
56.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-56)**["CSS Flexible Box Layout Module Level 1"](https://www.w3.org/TR/css3-flexbox/). W3C. 19 November 2018. [Archived](https://web.archive.org/web/20121019153636/https://www.w3.org/TR/css3-flexbox/) from the original on 19 October 2012. Retrieved 18 October 2012.
57.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-57)**["Cascading Style Sheets (CSS) Snapshot 2007"](https://www.w3.org/TR/css-beijing/). 12 May 2011. [Archived](https://web.archive.org/web/20160808144255/https://www.w3.org/TR/css-beijing/) from the original on 8 August 2016. Retrieved 18 July 2016.
58.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-58)**["Cascading Style Sheets (CSS) Snapshot 2010"](https://www.w3.org/TR/css-2010/). 12 May 2011. [Archived](https://web.archive.org/web/20110316103250/https://www.w3.org/TR/css-2010/) from the original on 16 March 2011. Retrieved 3 March 2011.
59.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-59)**["CSS Snapshot 2015"](https://www.w3.org/TR/css-2015/). _W3C_. 13 October 2015. [Archived](https://web.archive.org/web/20170127073733/https://www.w3.org/TR/css-2015/) from the original on 27 January 2017. Retrieved 13 February 2017.
60.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-60)**["CSS Snapshot 2017"](https://www.w3.org/TR/css-2017/). _W3C_. 31 January 2017. [Archived](https://web.archive.org/web/20170213164514/https://www.w3.org/TR/css-2017/) from the original on 13 February 2017. Retrieved 13 February 2017.
61.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-61)**["CSS Snapshot 2018"](https://www.w3.org/TR/css-2018/). _W3C_. 22 January 2019. [Archived](https://web.archive.org/web/20190201162518/https://www.w3.org/TR/css-2018/) from the original on 1 February 2019. Retrieved 2 January 2019.
62.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-caniuse_62-0)**["CSS"](https://caniuse.com/#cats=CSS). _Can I Use… Support tables for HTML5, CSS3, etc_. [Archived](https://web.archive.org/web/20180219074228/https://caniuse.com/#cats=CSS) from the original on 2018-02-19. Retrieved 2019-01-26.
63.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-mdn_63-0)**["CSS"](https://developer.mozilla.org/docs/Web/CSS). _MDN Web Docs_. 21 July 2023. [Archived](https://web.archive.org/web/20231126230858/https://developer.mozilla.org/en-US/docs/Web/CSS) from the original on Nov 26, 2023.
64.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-css4_64-0)**["Call for Participation in CSS4 Community Group"](https://www.w3.org/community/css4/). _W3C_. 24 February 2020. [Archived](https://web.archive.org/web/20230210062151/https://www.w3.org/community/css4/2020/02/24/call-for-participation-in-css4-community-group/) from the original on Feb 10, 2023. Retrieved 2020-02-27.
65.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-65)**Lazaris, Louis (2010-04-28). ["CSS3 Solutions for Internet Explorer"](https://www.smashingmagazine.com/2010/04/css3-solutions-for-internet-explorer/). _Smashing Magazine_. [Archived](https://web.archive.org/web/20161012224430/https://www.smashingmagazine.com/2010/04/css3-solutions-for-internet-explorer/) from the original on 2016-10-12. Retrieved 2016-10-12.
66.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-66)**Simmons, Jen (August 17, 2016). ["Using Feature Queries in CSS"](https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/). _Mozilla Hacks_. [Archived](https://web.archive.org/web/20161011151259/https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/) from the original on 2016-10-11. Retrieved 2016-10-12.
67.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-67)**Hutchinson, Lee (2019). ["Looking at the Web with Internet Explorer 6, one last time"](https://arstechnica.com/information-technology/2014/04/looking-at-the-web-with-internet-explorer-6-one-last-time/). _Ars Technica_. [Archived](https://web.archive.org/web/20161012151514/https://arstechnica.com/information-technology/2014/04/looking-at-the-web-with-internet-explorer-6-one-last-time/) from the original on 2016-10-12. Retrieved 2016-10-12.
68.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-68)**["Pure CSS Popups"](https://web.archive.org/web/20091209071014/https://meyerweb.com/eric/css/edge/popups/demo.html). meyerweb.com. Archived from [the original](https://meyerweb.com/eric/css/edge/popups/demo.html) on 2009-12-09. Retrieved 2009-11-19.
69.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-69)**Tab Atkins Jr. ["CSS apply rule"](https://web.archive.org/web/20160222160949/https://tabatkins.github.io/specs/css-apply-rule/). GitHub. Archived from [the original](https://tabatkins.github.io/specs/css-apply-rule/) on 2016-02-22. Retrieved 2016-02-27.
70.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-70)**["Why I Abandoned @apply — Tab Completion"](https://www.xanthir.com/b4o00).
71.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-71)**Cederholm, Dan; Ethan Marcotte (2009). [_Handcrafted CSS: More Bulletproof Web Design_](https://books.google.com/books?id=UgrUeIwsS60C&pg=PA114). New Riders. p.114. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-321-64338-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-321-64338-4 "Special:BookSources/978-0-321-64338-4"). [Archived](https://web.archive.org/web/20121220221903/https://books.google.com/books?id=UgrUeIwsS60C&pg=PA114) from the original on 20 December 2012. Retrieved 19 June 2010.
72.   **[^](https://en.wikipedia.org/wiki/Cascading_Style_Sheets#cite_ref-72)**Antti, Hiljá. ["OOCSS, ACSS, BEM, SMACSS: what are they? What should I use?"](https://web.archive.org/web/20150602231126/https://clubmate.fi/oocss-acss-bem-smacss-what-are-they-what-should-i-use/). _clubmate.fi_. Hiljá. Archived from [the original](https://clubmate.fi/oocss-acss-bem-smacss-what-are-they-what-should-i-use/) on 2 June 2015. Retrieved 2 June 2015.

*   [Meyer, Eric A.](https://en.wikipedia.org/wiki/Eric_A._Meyer "Eric A. Meyer"); Weyl, Estelle (2023). [_Cascading Style Sheets: The Definitive Guide, Fifth Edition_](https://www.oreilly.com/library/view/css-the-definitive/9781098117603/). O'Reilly Media, Inc. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-09-811761-0](https://en.wikipedia.org/wiki/Special:BookSources/978-1-09-811761-0 "Special:BookSources/978-1-09-811761-0").
*   Grant, Keith J. (2018). [_CSS in Depth_](https://learning.oreilly.com/library/view/css-in-depth/9781617293450/). Manning Publications Co. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-1-61729-345-0](https://en.wikipedia.org/wiki/Special:BookSources/978-1-61729-345-0 "Special:BookSources/978-1-61729-345-0").
*   [MDN CSS reference](https://developer.mozilla.org/en-US/docs/Web/CSS/)
*   [MDN Getting Started with CSS](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics/)

*   [Official website](https://www.w3.org/Style/CSS/)[![Image 6: Edit this at Wikidata](https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/20px-OOjs_UI_icon_edit-ltr-progressive.svg.png)](https://www.wikidata.org/wiki/Q46441#P856 "Edit this at Wikidata")
