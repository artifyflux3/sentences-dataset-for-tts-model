Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview Toggle Overview subsection 1.1 Formal language 1.2 Formation rules 1.3 Formal systems 1.4 Formal proofs 1.5 Interpretations 2 Important distinctions Toggle Important distinctions subsection 2.1 Metalanguage–object language 2.2 Syntax–semantics 2.3 Use–mention 2.4 Type–token 3 History 4 Results 5 See also 6 References 7 External links Toggle the table of contents Metalogic 24 languages العربية Azərbaycanca Български Català Deutsch Español فارسی Français 한국어 Հայերեն Bahasa Indonesia Қазақша Кыргызча Nederlands 日本語 Norsk bokmål Polski Português Română Русский Simple English Slovenčina Svenska Українська Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Study of the properties of logical systems Metalogic is the metatheory of logic . Whereas logic studies how logical systems can be used to construct valid and sound arguments , metalogic studies the properties of logical systems .

[ 1 ] Logic concerns the truths that may be derived using a logical system; metalogic concerns the truths that may be derived about the languages and systems that are used to express truths.

[ 2 ] The basic objects of metalogical study are formal languages, formal systems, and their interpretations . The study of interpretation of formal systems is the branch of mathematical logic that is known as model theory , and the study of deductive systems is the branch that is known as proof theory .

Overview [ edit ] Formal language [ edit ] Main article: Formal language A formal language is an organized set of symbols , the symbols of which precisely define it by shape and place. Such a language therefore can be defined without reference to the meanings of its expressions; it can exist before any interpretation is assigned to it—that is, before it has any meaning.

First-order logic is expressed in some formal language. A formal grammar determines which symbols and sets of symbols are formulas in a formal language.

A formal language can be formally defined as a set A of strings (finite sequences) on a fixed alphabet α. Some authors, including Rudolf Carnap , define the language as the ordered pair <α, A >.

[ 3 ] Carnap also requires that each element of α must occur in at least one string in A .

Formation rules [ edit ] Main article: Formation rule Formation rules (also called formal grammar ) are a precise description of the well-formed formulas of a formal language. They are synonymous with the set of strings over the alphabet of the formal language that constitute well formed formulas. However, it does not describe their semantics (i.e. what they mean).

Formal systems [ edit ] Main article: Formal system A formal system (also called a logical calculus , or a logical system ) consists of a formal language together with a deductive apparatus (also called a deductive system ). The deductive apparatus may consist of a set of transformation rules (also called inference rules ) or a set of axioms , or have both. A formal system is used to derive one expression from one or more other expressions.

A formal system can be formally defined as an ordered triple <α, I {\displaystyle {\mathcal {I}}} , D {\displaystyle {\mathcal {D}}} d>, where D {\displaystyle {\mathcal {D}}} d is the relation of direct derivability. This relation is understood in a comprehensive sense such that the primitive sentences of the formal system are taken as directly derivable from the empty set of sentences. Direct derivability is a relation between a sentence and a finite, possibly empty set of sentences. Axioms are so chosen that every first place member of D {\displaystyle {\mathcal {D}}} d is a member of I {\displaystyle {\mathcal {I}}} and every second place member is a finite subset of I {\displaystyle {\mathcal {I}}} .

A formal system can also be defined with only the relation D {\displaystyle {\mathcal {D}}} d.   Thereby can be omitted I {\displaystyle {\mathcal {I}}} and α in the definitions of interpreted formal language , and interpreted formal system . However, this method can be more difficult to understand and use.

[ 3 ] Formal proofs [ edit ] Main article: Formal proof A formal proof is a sequence of well-formed formulas of a formal language, the last of which is a theorem of a formal system. The theorem is a syntactic consequence of all the well formed formulae that precede it in the proof system. For a well formed formula to qualify as part of a proof, it must result from applying a rule of the deductive apparatus of some formal system to the previous well formed formulae in the proof sequence.

Interpretations [ edit ] Main articles: Interpretation (logic) and Formal semantics (logic) An interpretation of a formal system is the assignment of meanings to the symbols and truth-values to the sentences of the formal system. The study of interpretations is called Formal semantics .

Giving an interpretation is synonymous with constructing a model .

Important distinctions [ edit ] Metalanguage–object language [ edit ] Main article: Metalanguage In metalogic, formal languages are sometimes called object languages . The language used to make statements about an object language is called a metalanguage . This distinction is a key difference between logic and metalogic. While logic deals with proofs in a formal system , expressed in some formal language, metalogic deals with proofs about a formal system which are expressed in a metalanguage about some object language.

Syntax–semantics [ edit ] Main articles: Syntax (logic) and Formal semantics (logic) In metalogic, 'syntax' has to do with formal languages or formal systems without regard to any interpretation of them, whereas, 'semantics' has to do with interpretations of formal languages. The term 'syntactic' has a slightly wider scope than 'proof-theoretic', since it may be applied to properties of formal languages without any deductive systems, as well as to formal systems. 'Semantic' is synonymous with 'model-theoretic'.

Use–mention [ edit ] Main article: Use–mention distinction In metalogic, the words use and mention , in both their noun and verb forms, take on a technical sense in order to identify an important distinction.

[ 2 ] The use–mention distinction (sometimes referred to as the words-as-words distinction ) is the distinction between using a word (or phrase) and mentioning it. Usually it is indicated that an expression is being mentioned rather than used by enclosing it in quotation marks, printing it in italics, or setting the expression by itself on a line. The enclosing in quotes of an expression gives us the name of an expression, for example: "Metalogic" is the name of this article.

This article is about metalogic.

Type–token [ edit ] Main article: Type–token distinction The type-token distinction is a distinction in metalogic, that separates an abstract concept from the objects which are particular instances of the concept. For example, the particular bicycle in your garage is a token of the type of thing known as "The bicycle." Whereas, the bicycle in your garage is in a particular place at a particular time, that is not true of "the bicycle" as used in the sentence: " The bicycle has become more popular recently." This distinction is used to clarify the meaning of symbols of formal languages .

History [ edit ] Metalogical questions have been asked since the time of Aristotle .

[ 4 ] However, it was only with the rise of formal languages in the late 19th and early 20th century that investigations into the foundations of logic began to flourish. In 1904, David Hilbert observed that in investigating the foundations of mathematics that logical notions are presupposed, and therefore a simultaneous account of metalogical and metamathematical principles was required. Today, metalogic and metamathematics are largely synonymous with each other, and both have been substantially subsumed by mathematical logic in academia. A possible alternate, less mathematical model may be found in the writings of Charles Sanders Peirce and other semioticians .

Results [ edit ] This section is in list format but may read better as prose .

You can help by converting this section , if appropriate.

Editing help is available.

( May 2024 ) Results in metalogic consist of such things as formal proofs demonstrating the consistency , completeness , and decidability of particular formal systems .

Major results in metalogic include: Proof of the uncountability of the power set of the natural numbers ( Cantor's theorem 1891) Löwenheim–Skolem theorem ( Leopold Löwenheim 1915 and Thoralf Skolem 1919) Proof of the consistency of truth-functional propositional logic ( Emil Post 1920) Proof of the semantic completeness of truth-functional propositional logic ( Paul Bernays 1918), [ 5 ] (Emil Post 1920) [ 2 ] Proof of the syntactic completeness of truth-functional propositional logic (Emil Post 1920) [ 2 ] Proof of the decidability of truth-functional propositional logic (Emil Post 1920) [ 2 ] Proof of the consistency of first-order monadic predicate logic ( Leopold Löwenheim 1915) Proof of the semantic completeness of first-order monadic predicate logic (Leopold Löwenheim 1915) Proof of the decidability of first-order monadic predicate logic (Leopold Löwenheim 1915) Proof of the consistency of first-order predicate logic ( David Hilbert and Wilhelm Ackermann 1928) Proof of the semantic completeness of first-order predicate logic ( Gödel's completeness theorem 1930) Proof of the cut-elimination theorem for the sequent calculus ( Gentzen 's Hauptsatz 1934) Proof of the undecidability of first-order predicate logic ( Church's theorem 1936) Gödel's first incompleteness theorem 1931 Gödel's second incompleteness theorem 1931 Tarski's undefinability theorem (Gödel and Tarski in the 1930s) See also [ edit ] Philosophy portal Metalogic programming Metamathematics References [ edit ] ^ Harry Gensler, Introduction to Logic , Routledge, 2001, p. 336.

^ a b c d e Hunter, Geoffrey (1996) [1971].

Metalogic: An Introduction to the Metatheory of Standard First-Order Logic . University of California Press (published 1973).

ISBN 9780520023567 .

OCLC 36312727 .

( accessible to patrons with print disabilities ) ^ a b Rudolf Carnap (1958) Introduction to Symbolic Logic and its Applications , p. 102.

^ Smith, Robin (2022), "Aristotle's Logic" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Winter 2022 ed.), Metaphysics Research Lab, Stanford University , retrieved 2023-08-28 ^ Hao Wang, Reflections on Kurt Gödel External links [ edit ] Media related to Metalogic at Wikimedia Commons Dragalin, A.G. (2001) [1994], "Meta-logic" , Encyclopedia of Mathematics , EMS Press v t e Metalogic and metamathematics Cantor's theorem Entscheidungsproblem Church–Turing thesis Consistency Effective method Foundations of mathematics of geometry Gödel's completeness theorem Gödel's incompleteness theorems Soundness Completeness Decidability Interpretation Löwenheim–Skolem theorem Metatheorem Satisfiability Independence Type–token distinction Use–mention distinction NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐cp9tw
Cached time: 20250812014202
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.294 seconds
Real time usage: 0.423 seconds
Preprocessor visited node count: 1112/1000000
Revision size: 11337/2097152 bytes
Post‐expand include size: 21480/2097152 bytes
Template argument size: 936/2097152 bytes
Highest expansion depth: 11/100
Expensive parser function count: 14/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 27253/5000000 bytes
Lua time usage: 0.194/10.000 seconds
Lua memory usage: 5381284/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  338.961      1 -total
 21.22%   71.944      1 Template:Metalogic
 20.60%   69.835      1 Template:Navbox
 19.00%   64.415      1 Template:Hunter_1996
 18.57%   62.955      1 Template:Cite_book
 15.42%   52.268      1 Template:Short_description
 11.22%   38.034      1 Template:Prose
 10.22%   34.651      9 Template:Main
 10.16%   34.432      1 Template:Ambox
  9.20%   31.190      2 Template:Pagetype Saved in parser cache with key enwiki:pcache:387934:|#|:idhash:canonical and timestamp 20250812014202 and revision id 1284965171. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Metalogic&oldid=1284965171 " Categories : Metalogic Formal logic Metaphilosophy Hidden categories: Articles with short description Short description matches Wikidata Articles needing cleanup from May 2024 All pages needing cleanup Articles with sections that need to be turned into prose from May 2024 Commons category link from Wikidata This page was last edited on 10 April 2025, at 20:44 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Metalogic 24 languages Add topic

