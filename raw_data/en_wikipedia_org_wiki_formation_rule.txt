Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Formal language 2 Formal systems 3 Propositional and predicate logic 4 See also 5 References Toggle the table of contents Formation rule 4 languages العربية Nederlands 日本語 Português Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Rule defining the correct structure of expressions in formal grammar Part of a series on Formal languages Key concepts Formal system Alphabet Syntax Formal semantics Semantics (programming languages) Formal grammar Formation rule Well-formed formula Automata theory Regular expression Production Ground expression Atomic formula Applications Formal methods Propositional calculus Predicate logic Mathematical notation Natural language processing Programming language theory Mathematical linguistics Computational linguistics Syntax analysis Formal verification Automated theorem proving v t e In mathematical logic , formation rules are rules for describing well-formed words over the alphabet of a formal language .

[ 1 ] These rules only address the location and manipulation of the strings of the language. It does not describe anything else about a language, such as its semantics (i.e. what the strings mean). (See also formal grammar ).

Formal language [ edit ] Main article: Formal language A formal language is an organized set of symbols the essential feature being that it can be precisely defined in terms of just the shapes and locations of those symbols. Such a language can be defined, then, without any reference to any meanings of any of its expressions; it can exist before any interpretation is assigned to it—that is, before it has any meaning. A formal grammar determines which symbols and sets of symbols are formulas in a formal language.

Formal systems [ edit ] Main article: Formal system A formal system (also called a logical calculus , or a logical system ) consists of a formal language together with a deductive apparatus (also called a deductive system ). The deductive apparatus may consist of a set of transformation rules (also called inference rules ) or a set of axioms , or have both. A formal system is used to derive one expression from one or more other expressions. Propositional and predicate calculi are examples of formal systems.

Propositional and predicate logic [ edit ] The formation rules of a propositional calculus may, for instance, take a form such that; if we take Φ to be a propositional formula we can also take ¬ ¬ {\displaystyle \neg } Φ to be a formula; if we take Φ and Ψ to be a propositional formulas we can also take (Φ ∧ ∧ {\displaystyle \wedge } Ψ), (Φ → → {\displaystyle \to } Ψ), (Φ ∨ ∨ {\displaystyle \lor } Ψ) and (Φ ↔ ↔ {\displaystyle \leftrightarrow } Ψ) to also be formulas.

A predicate calculus will usually include all the same rules as a propositional calculus, with the addition of quantifiers such that if we take Φ to be a formula of propositional logic and α as a variable then we can take ( ∀ ∀ {\displaystyle \forall } α)Φ and ( ∃ ∃ {\displaystyle \exists } α)Φ each to be formulas of our predicate calculus.

See also [ edit ] finite-state automaton References [ edit ] ^ Hinman, Peter (2005).

Fundamentals of Mathematical Logic . A K Peters/CRC Press . Retrieved 2022-11-17 .

Specifying the syntax of any language L follows a common pattern. First a set of symbols is given, and we define an L-expression to be any finite sequence of these symbols. Then we specify one or more sets of L-expressions which we regard as meaningful. The meaningful expressions are generally described as those constructed by following certain rules or algorithms, and the set of them is characterized as the smallest set of expressions which is closed under these formation rules.

v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐2t22f
Cached time: 20250812032417
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.263 seconds
Real time usage: 0.382 seconds
Preprocessor visited node count: 707/1000000
Revision size: 3500/2097152 bytes
Post‐expand include size: 73003/2097152 bytes
Template argument size: 1177/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 4/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 22608/5000000 bytes
Lua time usage: 0.161/10.000 seconds
Lua memory usage: 4637127/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  268.872      1 -total
 24.11%   64.813      1 Template:Formal_languages
 24.04%   64.638      4 Template:Navbox
 23.63%   63.527      1 Template:Sidebar_with_collapsible_lists
 22.93%   61.643      1 Template:Cite_book
 21.95%   59.008      1 Template:Short_description
 19.76%   53.124      1 Template:Mathematical_logic
 11.94%   32.115      2 Template:Pagetype
  6.91%   18.586      6 Template:Main_other
  6.75%   18.149      2 Template:Main Saved in parser cache with key enwiki:pcache:15115411:|#|:idhash:canonical and timestamp 20250812032417 and revision id 1288377632. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Formation_rule&oldid=1288377632 " Categories : Formal languages Propositional calculus Predicate logic Rules Syntax (logic) Logical truth Hidden categories: Articles with short description Short description is different from Wikidata This page was last edited on 2 May 2025, at 07:01 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Formation rule 4 languages Add topic

