Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Notation 2 In mechanisms without money Toggle In mechanisms without money subsection 2.1 Necessity 3 In mechanisms with money Toggle In mechanisms with money subsection 3.1 Necessity 3.2 Sufficiency 4 Examples 5 See also 6 References Toggle the table of contents Monotonicity (mechanism design) Add languages Add links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia In mechanism design , monotonicity is a property of a social choice function . It is a necessary condition for being able to implement such a function using a strategyproof mechanism. Its verbal description is: [ 1 ] If changing one agent's type (while keeping the types of other agents fixed) changes the outcome under the social choice function, then the resulting difference in utilities of the new and original outcomes evaluated at the new type of this agent must be at least as much as this difference in utilities evaluated at the original type of this agent.

In other words: [ 2 ] : 227 If the social choice changes when a single player changes his valuation, then it must be because the player increased his value of the new choice relative to his value of the old choice.

Notation [ edit ] There is a set X {\displaystyle X} of possible outcomes.

There are n {\displaystyle n} agents which have different valuations for each outcome. The valuation of agent i {\displaystyle i} is represented as a function: v i : X ⟶ ⟶ R + {\displaystyle v_{i}:X\longrightarrow R_{+}} which expresses the value it assigns to each alternative.

The vector of all value-functions is denoted by v {\displaystyle v} .

For every agent i {\displaystyle i} , the vector of all value-functions of the other agents is denoted by v − − i {\displaystyle v_{-i}} . So v ≡ ≡ ( v i , v − − i ) {\displaystyle v\equiv (v_{i},v_{-i})} .

A social choice function is a function that takes as input the value-vector v {\displaystyle v} and returns an outcome x ∈ ∈ X {\displaystyle x\in X} . It is denoted by Outcome ( v ) {\displaystyle {\text{Outcome}}(v)} or Outcome ( v i , v − − i ) {\displaystyle {\text{Outcome}}(v_{i},v_{-i})} .

In mechanisms without money [ edit ] A social choice function satisfies the strong monotonicity property (SMON) if for every agent i {\displaystyle i} and every v i , v i ′ , v − − i {\displaystyle v_{i},v_{i}',v_{-i}} , if: x = Outcome ( v i , v − − i ) {\displaystyle x={\text{Outcome}}(v_{i},v_{-i})} x ′ = Outcome ( v i ′ , v − − i ) {\displaystyle x'={\text{Outcome}}(v'_{i},v_{-i})} then: x ⪰ ⪰ i x ′ {\displaystyle x\succeq _{i}x'} (by the initial preferences, the agent prefers the initial outcome).

x ⪯ ⪯ i ′ x ′ {\displaystyle x\preceq _{i'}x'} (by the final preferences, the agent prefers the final outcome). Or equivalently: v i ( x ) − − v i ( x ′ ) ≥ ≥ 0 {\displaystyle v_{i}(x)-v_{i}(x')\geq 0} v i ′ ( x ) − − v i ′ ( x ′ ) ≤ ≤ 0 {\displaystyle v_{i}'(x)-v_{i}'(x')\leq 0} Necessity [ edit ] If there exists a strategyproof mechanism without money, with an outcome function O u t c o m e {\displaystyle Outcome} , then this function must be SMON.

PROOF: Fix some agent i {\displaystyle i} and some valuation vector v − − i {\displaystyle v_{-i}} . Strategyproofness means that an agent with real valuation v i {\displaystyle v_{i}} weakly prefers to declare v i {\displaystyle v_{i}} than to lie and declare v i ′ {\displaystyle v_{i}'} ; hence: v i ( x ) ≥ ≥ v i ( x ′ ) {\displaystyle v_{i}(x)\geq v_{i}(x')} Similarly, an agent with real valuation v i ′ {\displaystyle v_{i}'} weakly prefers to declare v i ′ {\displaystyle v_{i}'} than to lie and declare v i {\displaystyle v_{i}} ; hence: v i ′ ( x ′ ) ≥ ≥ v i ′ ( x ) {\displaystyle v_{i}'(x')\geq v_{i}'(x)} In mechanisms with money [ edit ] When the mechanism is allowed to use money, the SMON property is no longer necessary for implementability, since the mechanism can switch to an alternative which is less preferable for an agent and compensate that agent with money.

A social choice function satisfies the weak monotonicity property (WMON) if for every agent i {\displaystyle i} and every v i , v i ′ , v − − i {\displaystyle v_{i},v_{i}',v_{-i}} , if: x = Outcome ( v i , v − − i ) {\displaystyle x={\text{Outcome}}(v_{i},v_{-i})} x ′ = Outcome ( v i ′ , v − − i ) {\displaystyle x'={\text{Outcome}}(v'_{i},v_{-i})} then: v i ( x ) − − v i ( x ′ ) ≥ ≥ v i ′ ( x ) − − v i ′ ( x ′ ) {\displaystyle v_{i}(x)-v_{i}(x')\geq v_{i}'(x)-v_{i}'(x')} Necessity [ edit ] If there exists a strategyproof mechanism with an outcome function Outcome {\displaystyle {\text{Outcome}}} , then this function must be WMON.

PROOF: [ 2 ] : 227 Fix some agent i {\displaystyle i} and some valuation vector v − − i {\displaystyle v_{-i}} . A strategyproof mechanism has a price function P r i c e i ( x , v − − i ) {\displaystyle Price_{i}(x,v_{-i})} , that determines how much payment agent i {\displaystyle i} receives when the outcome of the mechanism is x {\displaystyle x} ; this price depends on the outcome but must not depend directly on v i {\displaystyle v_{i}} . Strategyproofness means that a player with valuation v i {\displaystyle v_{i}} weakly prefers to declare v i {\displaystyle v_{i}} over declaring v i ′ {\displaystyle v_{i}'} ; hence: v i ( x ) + Price i ( x , v − − i ) ≥ ≥ v i ( x ′ ) + Price i ( x ′ , v − − i ) {\displaystyle v_{i}(x)+{\text{Price}}_{i}(x,v_{-i})\geq v_{i}(x')+{\text{Price}}_{i}(x',v_{-i})} Similarly, a player with valuation v i ′ {\displaystyle v_{i}'} weakly prefers to declare v i ′ {\displaystyle v_{i}'} over declaring v i {\displaystyle v_{i}} ; hence: v i ′ ( x ) + Price i ( x , v − − i ) ≤ ≤ v i ′ ( x ′ ) + Price i ( x ′ , v − − i ) {\displaystyle v_{i}'(x)+{\text{Price}}_{i}(x,v_{-i})\leq v_{i}'(x')+{\text{Price}}_{i}(x',v_{-i})} Subtracting the second inequality from the first gives the WMON property.

Sufficiency [ edit ] Monotonicity is not always a sufficient condition for implementability, but there are some important cases in it is sufficient (i.e, every WMON social-choice function can be implemented): When the agents have single-parameter utility functions.

In many convex domains, most notably when the range of each value-function is R + {\displaystyle \mathbb {R} ^{+}} .

[ 1 ] When the range of each value-function is R {\displaystyle \mathbb {R} } , or a cube (Gui, Müller, and Vohra (2004)).

In any convex domain (Saks and Yu (2005)).

In any domain with a convex closure.

[ 3 ] In any "monotonicity domain".

[ 3 ] Examples [ edit ] When agents have single peaked preferences , the median social-choice function (selecting the median among the outcomes that are best for the agents) is strongly monotonic . Indeed, the mechanism selecting the median vote is a truthful mechanism without money. See median voting rule .

When agents have general preferences represented by cardinal utility functions, the utilitarian social-choice function (selecting the outcome that maximizes the sum of the agents' valuations) is not strongly-monotonic but it is weakly monotonic . Indeed, it can be implemented by the VCG mechanism , which is a truthful mechanism with money.

In job-scheduling, the makespan -minimization social-choice function is not strongly-monotonic nor weakly-monotonic. Indeed, it cannot be implemented by a truthful mechanism; see truthful job scheduling .

See also [ edit ] The monotonicity criterion in voting systems.

Maskin monotonicity Other meanings of monotonicity in different fields.

References [ edit ] ^ a b Bikhchandani, Sushil; Chatterji, Shurojit; Lavi, Ron; Mu'Alem, Ahuva; Nisan, Noam; Sen, Arunava (2006).

"Weak Monotonicity Characterizes Deterministic Dominant-Strategy Implementation" (PDF) .

Econometrica .

74 (4): 1109.

doi : 10.1111/j.1468-0262.2006.00695.x .

S2CID 6210226 .

^ a b Vazirani, Vijay V.

; Nisan, Noam ; Roughgarden, Tim ; Tardos, Éva (2007).

Algorithmic Game Theory (PDF) . Cambridge, UK: Cambridge University Press.

ISBN 0-521-87282-0 .

^ a b "Monotonicity and Implementability".

Econometrica .

78 (5): 1749– 1772. 2010.

doi : 10.3982/ECTA8882 .

S2CID 1024035 .

Retrieved from " https://en.wikipedia.org/w/index.php?title=Monotonicity_(mechanism_design)&oldid=1232285734 " Category : Mechanism design This page was last edited on 2 July 2024, at 23:24 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Monotonicity (mechanism design) Add languages Add topic

