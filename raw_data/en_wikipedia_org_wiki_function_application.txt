Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Representation 2 Set theory 3 As an operator 4 Other instances 5 See also 6 References Toggle the table of contents Function application 1 language Ido Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Concept in mathematics This article needs additional citations for verification .

Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed.

Find sources: "Function application" – news · newspapers · books · scholar · JSTOR ( February 2024 ) ( Learn how and when to remove this message ) In mathematics , function application is the act of applying a function to an argument from its domain so as to obtain the corresponding value from its range .

[ 1 ] In this sense, function application can be thought of as the opposite of function abstraction .

Representation [ edit ] Function application is usually depicted by juxtaposing the variable representing the function with its argument encompassed in parentheses . For example, the following expression represents the application of the function ƒ to its argument x .

f ( x ) {\displaystyle f(x)} In some instances, a different notation is used where the parentheses aren't required, and function application can be expressed just by juxtaposition . For example, the following expression can be considered the same as the previous one: f x {\displaystyle f\;x} The latter notation is especially useful in combination with the currying isomorphism.  Given a function f : ( X × × Y ) → → Z {\displaystyle f:(X\times Y)\to Z} , its application is represented as f ( x , y ) {\displaystyle f(x,y)} by the former notation and f ( x , y ) {\displaystyle f\;(x,y)} (or f ⟨ ⟨ x , y ⟩ ⟩ {\displaystyle f\;\langle x,y\rangle } with the argument ⟨ ⟨ x , y ⟩ ⟩ ∈ ∈ X × × Y {\displaystyle \langle x,y\rangle \in X\times Y} written with the less common angle brackets) by the latter.  However, functions in curried form f : X → → ( Y → → Z ) {\displaystyle f:X\to (Y\to Z)} can be represented by juxtaposing their arguments: f x y {\displaystyle f\;x\;y} , rather than f ( x ) ( y ) {\displaystyle f(x)(y)} .  This relies on function application being left-associative .

U+2061 FUNCTION APPLICATION ( &af;, &ApplyFunction; ) — a contiguity operator indicating application of a function; that is an invisible zero width character intended to distinguish concatenation meaning function application from concatenation meaning multiplication.

Set theory [ edit ] In axiomatic set theory , especially Zermelo–Fraenkel set theory , a function f : D ↦ ↦ R {\displaystyle f:D\mapsto R} is often defined as a relation ( f ⊆ ⊆ D × × R {\displaystyle f\subseteq D\times R} ) having the property that, for any x ∈ ∈ D {\displaystyle x\in D} there is a unique y ∈ ∈ R {\displaystyle y\in R} such that ( x , y ) ∈ ∈ f {\displaystyle (x,y)\in f} .

One is usually not content to write " ( x , y ) ∈ ∈ f {\displaystyle (x,y)\in f} " to specify that y {\displaystyle y} , and usually wishes for the more common function notation " f ( x ) = y {\displaystyle f(x)=y} ", thus function application, or more specifically, the notation " f ( x ) {\displaystyle f(x)} ", is allowed by defining a binary, functional predicate ∙ ∙ ( ∙ ∙ ) {\displaystyle \bullet (\bullet )} as: [ 2 ] X ( Y ) = { z if X is a function, and ( Y , z ) ∈ ∈ X ∅ ∅ otherwise {\displaystyle X(Y)=\left\{{\begin{array}{lll}z&{\text{if }}X{\text{ is a function, and }}(Y,z)\in X\\\varnothing &{\text{otherwise}}\\\end{array}}\right.} Or, more formally: [ 3 ] [ 4 ] X ( Y ) = z ⟺ ⟺ ( ∃ ∃ D , R ( X ∈ ∈ R D ∧ ∧ ( ( Y , z ) ∈ ∈ X ) ) ) ∨ ∨ ( ∀ ∀ D , R ( X ∉ ∉ R D ∨ ∨ ( Y , z ) ∉ ∉ X ) ∧ ∧ z = ∅ ∅ ) {\displaystyle X(Y)=z\iff (\exists D,R(X\in R^{D}\land ((Y,z)\in X)))\lor (\forall D,R(X\notin R^{D}\lor (Y,z)\notin X)\land z=\varnothing )} Stating X ( Y ) = z {\displaystyle X(Y)=z} if there exists a domain D {\displaystyle D} and range R {\displaystyle R} such that X {\displaystyle X} is a function from D {\displaystyle D} to R {\displaystyle R} and ( Y , z ) ∈ ∈ X {\displaystyle (Y,z)\in X} ; or (the negation of former) and z = ∅ ∅ .

{\displaystyle z=\varnothing .} The choice of using the empty set ∅ ∅ {\displaystyle \varnothing } when X ( Y ) {\displaystyle X(Y)} is undefined is arbitrary. However, since ∙ ∙ ( ∙ ∙ ) {\displaystyle \bullet (\bullet )} is a function predicate, it must be defined for any two objects (sets, in this case) it takes in the domain of discourse .

[ 5 ] Since, for any two sets, X , Y {\displaystyle X,Y} the left side of the formula obove associates a unique object z {\displaystyle z} , the language of set theory can use an extension by definition to include the function application operation ∙ ∙ ( ∙ ∙ ) {\displaystyle \bullet (\bullet )} conservatively .

As an operator [ edit ] Main article: Apply Function application can be defined as an operator , called apply or $ $ {\displaystyle \$} , by the following definition: f $ $ ⁡ ⁡ x = f ( x ) {\displaystyle f\mathop {\,\$\,} x=f(x)} The operator may also be denoted by a backtick (`).

If the operator is understood to be of low precedence and right-associative , the application operator can be used to cut down on the number of parentheses needed in an expression. For example; f ( g ( h ( j ( x ) ) ) ) {\displaystyle f(g(h(j(x))))} can be rewritten as: f $ $ ⁡ ⁡ g $ $ ⁡ ⁡ h $ $ ⁡ ⁡ j $ $ ⁡ ⁡ x {\displaystyle f\mathop {\,\$\,} g\mathop {\,\$\,} h\mathop {\,\$\,} j\mathop {\,\$\,} x} However, this is perhaps more clearly expressed by using function composition instead: ( f ∘ ∘ g ∘ ∘ h ∘ ∘ j ) ( x ) {\displaystyle (f\circ g\circ h\circ j)(x)} or even: ( f ∘ ∘ g ∘ ∘ h ∘ ∘ j ∘ ∘ x ) ( ) {\displaystyle (f\circ g\circ h\circ j\circ x)()} if one considers x {\displaystyle x} to be a constant function returning x {\displaystyle x} .

Other instances [ edit ] Function application in the lambda calculus is expressed by β-reduction .

The Curry–Howard correspondence relates function application to the logical rule of modus ponens .

See also [ edit ] Polish notation References [ edit ] ^ Alama, Jesse; Korbmacher, Johannes (2023), "The Lambda Calculus" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Winter 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 2024-02-29 ^ Mendelson, Elliot (1987).

Introduction to Mathematical Logic (3rd ed.). Belmont: Wadsworth, Inc.

p. 185.

doi : 10.1007/978-1-4615-7288-6 .

ISBN 978-1-4615-7290-9 .

LCCN 86-11084 .

^ Suppes, Patrick (1972).

Axiomatic set theory . Internet Archive. New York, Dover Publications. p. 87.

ISBN 978-0-486-61630-8 .

^ Lévy, Azriel (1979).

Basic set theory . Berlin; New York: Springer-Verlag. p. 27.

ISBN 978-0-387-08417-6 .

^ Lévy, Azriel (1979).

Basic set theory . Berlin; New York: Springer-Verlag. p. 15.

ISBN 978-0-387-08417-6 .

Retrieved from " https://en.wikipedia.org/w/index.php?title=Function_application&oldid=1300494278 " Category : Functions and mappings Hidden categories: Articles with short description Short description is different from Wikidata Articles needing additional references from February 2024 All articles needing additional references Pages that use a deprecated format of the math tags This page was last edited on 14 July 2025, at 17:36 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Function application 1 language Add topic

