Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview 2 Left adjoints of forgetful functors 3 See also 4 References 5 External links Toggle the table of contents Forgetful functor 7 languages Čeština Ελληνικά Bahasa Indonesia Nederlands Русский Українська 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Concept in category theory In mathematics , more specifically in the area of category theory , a forgetful functor (also known as a stripping functor ) "forgets" or drops some or all of the input's structure or properties before mapping to the output. For an algebraic structure of a given signature , this may be expressed by curtailing the signature: the new signature is an edited form of the old one. If the signature is left as an empty list, the functor is simply to take the underlying set of a structure. Because many structures in mathematics consist of a set with an additional added structure, a forgetful functor that maps to the underlying set is the most common case.

Overview [ edit ] As an example, there are several forgetful functors from the category of commutative rings .  A ( unital ) ring , described in the language of universal algebra , is an ordered tuple ( R , + , × × , a , 0 , 1 ) {\displaystyle (R,+,\times ,a,0,1)} satisfying certain axioms, where + {\displaystyle +} and × × {\displaystyle \times } are binary functions on the set R {\displaystyle R} , a {\displaystyle a} is a unary operation corresponding to additive inverse, and 0 and 1 are nullary operations giving the identities of the two binary operations.  Deleting the 1 gives a forgetful functor to the category of rings without unit ; it simply "forgets" the unit.  Deleting × × {\displaystyle \times } and 1 yields a functor to the category of abelian groups , which assigns to each ring R {\displaystyle R} the underlying additive abelian group of R {\displaystyle R} . To each morphism of rings is assigned the same function considered merely as a morphism of addition between the underlying groups.  Deleting all the operations gives the functor to the underlying set R {\displaystyle R} .

It is beneficial to distinguish between forgetful functors that "forget structure" versus those that "forget properties".  For example, in the above example of commutative rings, in addition to those functors that delete some of the operations, there are functors that forget some of the axioms.  There is a functor from the category CRing to Ring that forgets the axiom of commutativity, but keeps all the operations.  Occasionally the object may include extra sets not defined strictly in terms of the underlying set (in this case, which part to consider the underlying set is a matter of taste, though this is rarely ambiguous in practice).  For these objects, there are forgetful functors that forget the extra sets that are more general.

Most common objects studied in mathematics are constructed as underlying sets along with extra sets of structure on those sets (operations on the underlying set, privileged subsets of the underlying set, etc.) which may satisfy some axioms.  For these objects, a commonly considered forgetful functor is as follows.
Let C {\displaystyle {\mathcal {C}}} be any category based on sets , e.g.

groups —sets of elements—or topological spaces —sets of 'points'. As usual, write Ob ⁡ ⁡ ( C ) {\displaystyle \operatorname {Ob} ({\mathcal {C}})} for the objects of C {\displaystyle {\mathcal {C}}} and write Fl ⁡ ⁡ ( C ) {\displaystyle \operatorname {Fl} ({\mathcal {C}})} for the morphisms of the same. Consider the rule: For all A {\displaystyle A} in Ob ⁡ ⁡ ( C ) , A ↦ ↦ | A | = {\displaystyle \operatorname {Ob} ({\mathcal {C}}),A\mapsto |A|=} the underlying set of A , {\displaystyle A,} For all u {\displaystyle u} in Fl ⁡ ⁡ ( C ) , u ↦ ↦ | u | = {\displaystyle \operatorname {Fl} ({\mathcal {C}}),u\mapsto |u|=} the morphism, u {\displaystyle u} , as a map of sets.

The functor | ⋅ ⋅ | {\displaystyle |\cdot |} is then the forgetful functor from C {\displaystyle {\mathcal {C}}} to Set , the category of sets .

Forgetful functors are almost always faithful .

Concrete categories have forgetful functors to the category of sets—indeed they may be defined as those categories that admit a faithful functor to that category.

Forgetful functors that only forget axioms are always fully faithful , since every morphism that respects the structure between objects that satisfy the axioms automatically also respects the axioms.  Forgetful functors that forget structures need not be full; some morphisms don't respect the structure.  These functors are still faithful however because distinct morphisms that do respect the structure are still distinct when the structure is forgotten.  Functors that forget the extra sets need not be faithful, since distinct morphisms respecting the structure of those extra sets may be indistinguishable on the underlying set.

In the language of formal logic, a functor of the first kind removes axioms, a functor of the second kind removes predicates, and a functor of the third kind remove types [ clarification needed ] . An example of the first kind is the forgetful functor Ab → Grp .  One of the second kind is the forgetful functor Ab → Set .  A functor of the third kind is the functor Mod → Ab , where Mod is the fibred category of all modules over arbitrary rings.  To see this, just choose a ring homomorphism between the underlying rings that does not change the ring action.  Under the forgetful functor, this morphism yields the identity.  Note that an object in Mod is a tuple, which includes a ring and an abelian group, so which to forget is a matter of taste.

Left adjoints of forgetful functors [ edit ] Forgetful functors tend to have left adjoints , which are ' free ' constructions. For example: free module : the forgetful functor from M o d ( R ) {\displaystyle \mathbf {Mod} (R)} (the category of R {\displaystyle R} - modules ) to S e t {\displaystyle \mathbf {Set} } has left adjoint Free R {\displaystyle \operatorname {Free} _{R}} , with X ↦ ↦ Free R ⁡ ⁡ ( X ) {\displaystyle X\mapsto \operatorname {Free} _{R}(X)} , the free R {\displaystyle R} -module with basis X {\displaystyle X} .

free group free lattice tensor algebra free category , adjoint to the forgetful functor from categories to quivers universal enveloping algebra For a more extensive list, see (Mac Lane 1997).

As this is a fundamental example of adjoints, we spell it out:
adjointness means that given a set X and an object (say, an R -module) M , maps of sets X → → | M | {\displaystyle X\to |M|} correspond to maps of modules Free R ⁡ ⁡ ( X ) → → M {\displaystyle \operatorname {Free} _{R}(X)\to M} : every map of sets yields a map of modules, and every map of modules comes from a map of sets.

In the case of vector spaces, this is summarized as:
"A map between vector spaces is determined by where it sends a basis, and a basis can be mapped to anything." Symbolically: Hom M o d R ⁡ ⁡ ( Free R ⁡ ⁡ ( X ) , M ) = Hom S e t ⁡ ⁡ ( X , Forget ⁡ ⁡ ( M ) ) .

{\displaystyle \operatorname {Hom} _{\mathbf {Mod} _{R}}(\operatorname {Free} _{R}(X),M)=\operatorname {Hom} _{\mathbf {Set} }(X,\operatorname {Forget} (M)).} The unit of the free–forgetful adjunction is the "inclusion of a basis": X → → Free R ⁡ ⁡ ( X ) {\displaystyle X\to \operatorname {Free} _{R}(X)} .

Fld , the category of fields, furnishes an example of a forgetful functor with no adjoint.  There is no field satisfying a free universal property for a given set.

See also [ edit ] Adjoint functors Functors Projection (set theory) References [ edit ] Mac Lane, Saunders .

Categories for the Working Mathematician , Graduate Texts in Mathematics 5, Springer-Verlag, Berlin, Heidelberg, New York, 1997.

ISBN 0-387-98403-8 External links [ edit ] Forgetful functor at the n Lab v t e Functor types Additive Adjoint Conservative Derived Diagonal Enriched Essentially surjective Exact Forgetful Full and faithful Logical Monoidal Representable Smooth Retrieved from " https://en.wikipedia.org/w/index.php?title=Forgetful_functor&oldid=1289045266 " Category : Functors Hidden categories: Articles with short description Short description is different from Wikidata Wikipedia articles needing clarification from July 2019 This page was last edited on 6 May 2025, at 04:14 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Forgetful functor 7 languages Add topic

