Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Terminology 2 Properties and examples 3 Notation 4 Binary operations as ternary relations 5 Other binary operations 6 See also 7 Notes 8 References 9 External links Toggle the table of contents Binary operation 66 languages العربية Asturianu বাংলা Беларуская Български Bosanski Català Чӑвашла Čeština Dansk Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Français Gàidhlig Galego Хальмг 한국어 Hrvatski Ido Bahasa Indonesia Interlingua Íslenska Italiano עברית Kurdî Latviešu മലയാളം Bahasa Melayu Minangkabau Монгол Nederlands 日本語 Norsk bokmål Norsk nynorsk Occitan Piemontèis Polski Português Română Русский Shqip Sicilianu Simple English Slovenčina Slovenščina کوردی Српски / srpski Srpskohrvatski / српскохрватски Suomi Svenska Tagalog தமிழ் ไทย Türkçe Українська Tiếng Việt 文言 吴语 ייִדיש 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikibooks Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Mathematical operation with two operands Not to be confused with Bitwise operation .

A binary operation ∘ ∘ {\displaystyle \circ } is a rule for combining the arguments x {\displaystyle x} and y {\displaystyle y} to produce x ∘ ∘ y {\displaystyle x\circ y} In mathematics , a binary operation or dyadic operation is a rule for combining two elements (called operands ) to produce another element. More formally, a binary operation is an operation of arity two.

More specifically, a binary operation on a set is a binary function that maps every pair of elements of the set to an element of the set. Examples include the familiar arithmetic operations like addition , subtraction , multiplication , set operations like union, complement, intersection. Other examples are readily found in different areas of mathematics, such as vector addition , matrix multiplication , and conjugation in groups .

A binary function that involves several sets is sometimes also called a binary operation . For example, scalar multiplication of vector spaces takes a scalar and a vector to produce a vector, and scalar product takes two vectors to produce a scalar.

Binary operations are the keystone of most structures that are studied in algebra , in particular in semigroups , monoids , groups , rings , fields , and vector spaces .

Terminology [ edit ] More precisely, a binary operation on a set S {\displaystyle S} is a mapping of the elements of the Cartesian product S × × S {\displaystyle S\times S} to S {\displaystyle S} : [ 1 ] [ 2 ] [ 3 ] f : : S × × S → → S .

{\displaystyle \,f\colon S\times S\rightarrow S.} If f {\displaystyle f} is not a function but a partial function , then f {\displaystyle f} is called a partial binary operation . For instance, division is a partial binary operation on the set of all real numbers , because one cannot divide by zero : a 0 {\displaystyle {\frac {a}{0}}} is undefined for every real number a {\displaystyle a} .  In both model theory and classical universal algebra , binary operations are required to be defined on all elements of S × × S {\displaystyle S\times S} . However, partial algebras [ 4 ] generalize universal algebras to allow partial operations.

Sometimes, especially in computer science , the term binary operation is used for any binary function .

Properties and examples [ edit ] Typical examples of binary operations are the addition ( + {\displaystyle +} ) and multiplication ( × × {\displaystyle \times } ) of numbers and matrices as well as composition of functions on a single set.
For instance, On the set of real numbers R {\displaystyle \mathbb {R} } , f ( a , b ) = a + b {\displaystyle f(a,b)=a+b} is a binary operation since the sum of two real numbers is a real number.

On the set of natural numbers N {\displaystyle \mathbb {N} } , f ( a , b ) = a + b {\displaystyle f(a,b)=a+b} is a binary operation since the sum of two natural numbers is a natural number.  This is a different binary operation than the previous one since the sets are different.

On the set M ( 2 , R ) {\displaystyle M(2,\mathbb {R} )} of 2 × × 2 {\displaystyle 2\times 2} matrices with real entries, f ( A , B ) = A + B {\displaystyle f(A,B)=A+B} is a binary operation since the sum of two such matrices is a 2 × × 2 {\displaystyle 2\times 2} matrix.

On the set M ( 2 , R ) {\displaystyle M(2,\mathbb {R} )} of 2 × × 2 {\displaystyle 2\times 2} matrices with real entries, f ( A , B ) = A B {\displaystyle f(A,B)=AB} is a binary operation since the product of two such matrices is a 2 × × 2 {\displaystyle 2\times 2} matrix.

For a given set C {\displaystyle C} , let S {\displaystyle S} be the set of all functions h : : C → → C {\displaystyle h\colon C\rightarrow C} .  Define f : : S × × S → → S {\displaystyle f\colon S\times S\rightarrow S} by f ( h 1 , h 2 ) ( c ) = ( h 1 ∘ ∘ h 2 ) ( c ) = h 1 ( h 2 ( c ) ) {\displaystyle f(h_{1},h_{2})(c)=(h_{1}\circ h_{2})(c)=h_{1}(h_{2}(c))} for all c ∈ ∈ C {\displaystyle c\in C} , the composition of the two functions h 1 {\displaystyle h_{1}} and h 2 {\displaystyle h_{2}} in S {\displaystyle S} . Then f {\displaystyle f} is a binary operation since the composition of the two functions is again a function on the set C {\displaystyle C} (that is, a member of S {\displaystyle S} ).

Many binary operations of interest in both algebra and formal logic are commutative , satisfying f ( a , b ) = f ( b , a ) {\displaystyle f(a,b)=f(b,a)} for all elements a {\displaystyle a} and b {\displaystyle b} in S {\displaystyle S} , or associative , satisfying f ( f ( a , b ) , c ) = f ( a , f ( b , c ) ) {\displaystyle f(f(a,b),c)=f(a,f(b,c))} for all a {\displaystyle a} , b {\displaystyle b} , and c {\displaystyle c} in S {\displaystyle S} .  Many also have identity elements and inverse elements .

The first three examples above are commutative and all of the above examples are associative.

On the set of real numbers R {\displaystyle \mathbb {R} } , subtraction , that is, f ( a , b ) = a − − b {\displaystyle f(a,b)=a-b} , is a binary operation which is not commutative since, in general, a − − b ≠ ≠ b − − a {\displaystyle a-b\neq b-a} .  It is also not associative, since, in general, a − − ( b − − c ) ≠ ≠ ( a − − b ) − − c {\displaystyle a-(b-c)\neq (a-b)-c} ; for instance, 1 − − ( 2 − − 3 ) = 2 {\displaystyle 1-(2-3)=2} but ( 1 − − 2 ) − − 3 = − − 4 {\displaystyle (1-2)-3=-4} .

On the set of natural numbers N {\displaystyle \mathbb {N} } , the binary operation exponentiation , f ( a , b ) = a b {\displaystyle f(a,b)=a^{b}} , is not commutative since, a b ≠ ≠ b a {\displaystyle a^{b}\neq b^{a}} (cf.

Equation x y = y x ), and is also not associative since f ( f ( a , b ) , c ) ≠ ≠ f ( a , f ( b , c ) ) {\displaystyle f(f(a,b),c)\neq f(a,f(b,c))} .  For instance, with a = 2 {\displaystyle a=2} , b = 3 {\displaystyle b=3} , and c = 2 {\displaystyle c=2} , f ( 2 3 , 2 ) = f ( 8 , 2 ) = 8 2 = 64 {\displaystyle f(2^{3},2)=f(8,2)=8^{2}=64} , but f ( 2 , 3 2 ) = f ( 2 , 9 ) = 2 9 = 512 {\displaystyle f(2,3^{2})=f(2,9)=2^{9}=512} .  By changing the set N {\displaystyle \mathbb {N} } to the set of integers Z {\displaystyle \mathbb {Z} } , this binary operation becomes a partial binary operation since it is now undefined when a = 0 {\displaystyle a=0} and b {\displaystyle b} is any negative integer.  For either set, this operation has a right identity (which is 1 {\displaystyle 1} ) since f ( a , 1 ) = a {\displaystyle f(a,1)=a} for all a {\displaystyle a} in the set, which is not an identity (two sided identity) since f ( 1 , b ) ≠ ≠ b {\displaystyle f(1,b)\neq b} in general.

Division ( ÷ ÷ {\displaystyle \div } ), a partial binary operation on the set of real or rational numbers, is not commutative or associative.

Tetration ( ↑ ↑ ↑ ↑ {\displaystyle \uparrow \uparrow } ), as a binary operation on the natural numbers, is not commutative or associative and has no identity element.

Notation [ edit ] Binary operations are often written using infix notation such as a ∗ ∗ b {\displaystyle a\ast b} , a + b {\displaystyle a+b} , a ⋅ ⋅ b {\displaystyle a\cdot b} or (by juxtaposition with no symbol) a b {\displaystyle ab} rather than by functional notation of the form f ( a , b ) {\displaystyle f(a,b)} .  Powers are usually also written without operator, but with the second argument as superscript .

Binary operations are sometimes written using prefix or (more frequently) postfix notation, both of which dispense with parentheses.  They are also called, respectively, Polish notation ∗ ∗ a b {\displaystyle \ast ab} and reverse Polish notation a b ∗ ∗ {\displaystyle ab\ast } .

Binary operations as ternary relations [ edit ] A binary operation f {\displaystyle f} on a set S {\displaystyle S} may be viewed as a ternary relation on S {\displaystyle S} , that is, the set of triples ( a , b , f ( a , b ) ) {\displaystyle (a,b,f(a,b))} in S × × S × × S {\displaystyle S\times S\times S} for all a {\displaystyle a} and b {\displaystyle b} in S {\displaystyle S} .

Other binary operations [ edit ] For example, scalar multiplication in linear algebra .  Here K {\displaystyle K} is a field and S {\displaystyle S} is a vector space over that field.

Also the dot product of two vectors maps S × × S {\displaystyle S\times S} to K {\displaystyle K} , where K {\displaystyle K} is a field and S {\displaystyle S} is a vector space over K {\displaystyle K} . It depends on authors whether it is considered as a binary operation.

See also [ edit ] Category:Properties of binary operations Iterated binary operation – Repeated application of an operation to a sequence Magma (algebra) – Algebraic structure with a binary operation Operator (programming) – Basic programming language construct Pages displaying short descriptions of redirect targets Ternary operation – Mathematical operation that combines three elements to produce another element Truth table § Binary operations Unary operation – Mathematical operation with only one operand Notes [ edit ] ^ Rotman 1973 , pg. 1 ^ Hardy & Walker 2002 , pg. 176, Definition 67 ^ Fraleigh 1976 , pg. 10 ^ George A. Grätzer (2008).

Universal Algebra (2nd ed.). Springer Science & Business Media. Chapter 2. Partial algebras.

ISBN 978-0-387-77487-9 .

References [ edit ] Fraleigh, John B. (1976), A First Course in Abstract Algebra (2nd ed.), Reading: Addison-Wesley, ISBN 0-201-01984-1 Hall, Marshall Jr. (1959), The Theory of Groups , New York: Macmillan Hardy, Darel W.; Walker, Carol L.

(2002), Applied Algebra: Codes, Ciphers and Discrete Algorithms , Upper Saddle River, NJ: Prentice-Hall, ISBN 0-13-067464-8 Rotman, Joseph J. (1973), The Theory of Groups: An Introduction (2nd ed.), Boston: Allyn and Bacon External links [ edit ] Weisstein, Eric W.

"Binary Operation" .

MathWorld .

v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal Authority control databases : National Czech Republic Retrieved from " https://en.wikipedia.org/w/index.php?title=Binary_operation&oldid=1290872120 " Category : Binary operations Hidden categories: Articles with short description Short description is different from Wikidata Pages displaying short descriptions of redirect targets via Module:Annotated link This page was last edited on 17 May 2025, at 16:41 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Binary operation 66 languages Add topic

