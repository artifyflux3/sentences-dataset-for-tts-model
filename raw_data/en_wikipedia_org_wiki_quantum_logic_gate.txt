Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Representation Toggle Representation subsection 2.1 Relation to the time evolution operator 3 Notable examples Toggle Notable examples subsection 3.1 Identity gate 3.2 Pauli gates ( X , Y , Z ) 3.3 Controlled gates 3.3.1 Classical control 3.4 Phase shift gates 3.5 Hadamard gate 3.6 Swap gate 3.7 Toffoli (CCNOT) gate 4 Universal quantum gates Toggle Universal quantum gates subsection 4.1 Deutsch gate 5 Circuit composition Toggle Circuit composition subsection 5.1 Serially wired gates 5.1.1 Exponents of quantum gates 5.2 Parallel gates 5.2.1 Hadamard transform 5.2.2 Application on entangled states 5.2.3 Computational complexity and the tensor product 5.3 Unitary inversion of gates 6 Measurement Toggle Measurement subsection 6.1 The effect of measurement on entangled states 6.2 Measurement on registers with pairwise entangled qubits 7 Logic function synthesis 8 See also 9 Notes 10 References Toggle References subsection 10.1 Sources Toggle the table of contents Quantum logic gate 17 languages العربية Català Deutsch Español Euskara فارسی Français 한국어 Italiano עברית ਪੰਜਾਬੀ Polski Русский Suomi Українська Tiếng Việt 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Basic circuit in quantum computing "Quantum gate" redirects here; not to be confused with Quantum Gate (video game) or Quantum Gate (album) .

Common quantum logic gates by name (including abbreviation), circuit form(s) and the corresponding unitary matrices In quantum computing and specifically the quantum circuit model of computation , a quantum logic gate (or simply quantum gate ) is a basic quantum circuit operating on a small number of qubits . Quantum logic gates are the building blocks of quantum circuits, like classical logic gates are for conventional digital circuits.

Unlike many classical logic gates, quantum logic gates are reversible . It is possible to perform classical computing using only reversible gates. For example, the reversible Toffoli gate can implement all Boolean functions , often at the cost of having to use ancilla bits . The Toffoli gate has a direct quantum equivalent, showing that quantum circuits can perform all operations performed by classical circuits.

Quantum gates are unitary operators , and are described as unitary matrices relative to some orthonormal basis . Usually the computational basis is used, which unless comparing it with something, just means that for a d -level quantum system (such as a qubit , a quantum register , or qutrits and qudits ) [ 1 ] : 22–23 the orthonormal basis vectors are labeled | 0 ⟩ ⟩ , | 1 ⟩ ⟩ , … … , | d − − 1 ⟩ ⟩ {\displaystyle |0\rangle ,|1\rangle ,\dots ,|d-1\rangle } , or use binary notation .

History [ edit ] The current notation for quantum gates was developed by many of the founders of quantum information science including Adriano Barenco, Charles Bennett , Richard Cleve , David P. DiVincenzo , Norman Margolus , Peter Shor , Tycho Sleator, John A. Smolin , and Harald Weinfurter, [ 2 ] building on notation introduced by Richard Feynman in 1986.

[ 3 ] Representation [ edit ] Single qubit states that are not entangled and lack global phase can be represented as points on the surface of the Bloch sphere , written as | ψ ψ ⟩ ⟩ = cos ⁡ ⁡ ( θ θ / 2 ) | 0 ⟩ ⟩ + e i φ φ sin ⁡ ⁡ ( θ θ / 2 ) | 1 ⟩ ⟩ .

{\displaystyle |\psi \rangle =\cos \left(\theta /2\right)|0\rangle +e^{i\varphi }\sin \left(\theta /2\right)|1\rangle .} Rotations about the x, y, z axes of the Bloch sphere are represented by the rotation operator gates .

Quantum logic gates are represented by unitary matrices . A gate that acts on n {\displaystyle n} qubits (a register ) is represented by a 2 n × × 2 n {\displaystyle 2^{n}\times 2^{n}} unitary matrix, and the set of all such gates with the group operation of matrix multiplication [ a ] is the unitary group U(2 n ).

[ 2 ] The quantum states that the gates act upon are unit vectors in 2 n {\displaystyle 2^{n}} complex dimensions, with the complex Euclidean norm (the 2-norm ).

[ 4 ] : 66 [ 5 ] : 56, 65 The basis vectors (sometimes called eigenstates ) are the possible outcomes if the state of the qubits is measured , and a quantum state is a linear combination of these outcomes. The most common quantum gates operate on vector spaces of one or two qubits, just like the common classical logic gates operate on one or two bits .

Even though the quantum logic gates belong to continuous symmetry groups , real hardware is inexact and thus limited in precision. The application of gates typically introduces errors, and the quantum states' fidelities decrease over time. If error correction is used, the usable gates are further restricted to a finite set.

[ 4 ] : ch. 10 [ 1 ] : ch. 14 Later in this article, this is ignored as the focus is on the ideal quantum gates' properties.

Quantum states are typically represented by "kets", from a notation known as bra–ket .

The vector representation of a single qubit is | a ⟩ ⟩ = v 0 | 0 ⟩ ⟩ + v 1 | 1 ⟩ ⟩ → → [ v 0 v 1 ] .

{\displaystyle |a\rangle =v_{0}|0\rangle +v_{1}|1\rangle \rightarrow {\begin{bmatrix}v_{0}\\v_{1}\end{bmatrix}}.} Here, v 0 {\displaystyle v_{0}} and v 1 {\displaystyle v_{1}} are the complex probability amplitudes of the qubit. These values determine the probability of measuring a 0 or a 1, when measuring the state of the qubit. See measurement below for details.

The value zero is represented by the ket | 0 ⟩ ⟩ = [ 1 0 ] {\displaystyle |0\rangle ={\begin{bmatrix}1\\0\end{bmatrix}}} , and the value one is represented by the ket | 1 ⟩ ⟩ = [ 0 1 ] {\displaystyle |1\rangle ={\begin{bmatrix}0\\1\end{bmatrix}}} .

The tensor product (or Kronecker product ) is used to combine quantum states. The combined state for a qubit register is the tensor product of the constituent qubits. The tensor product is denoted by the symbol ⊗ ⊗ {\displaystyle \otimes } .

The vector representation of two qubits is: [ 6 ] | ψ ψ ⟩ ⟩ = v 00 | 00 ⟩ ⟩ + v 01 | 01 ⟩ ⟩ + v 10 | 10 ⟩ ⟩ + v 11 | 11 ⟩ ⟩ → → [ v 00 v 01 v 10 v 11 ] .

{\displaystyle |\psi \rangle =v_{00}|00\rangle +v_{01}|01\rangle +v_{10}|10\rangle +v_{11}|11\rangle \rightarrow {\begin{bmatrix}v_{00}\\v_{01}\\v_{10}\\v_{11}\end{bmatrix}}.} The action of the gate on a specific quantum state is found by multiplying the vector | ψ ψ 1 ⟩ ⟩ {\displaystyle |\psi _{1}\rangle } , which represents the state by the matrix U {\displaystyle U} representing the gate. The result is a new quantum state | ψ ψ 2 ⟩ ⟩ {\displaystyle |\psi _{2}\rangle } : U | ψ ψ 1 ⟩ ⟩ = | ψ ψ 2 ⟩ ⟩ .

{\displaystyle U|\psi _{1}\rangle =|\psi _{2}\rangle .} Relation to the time evolution operator [ edit ] The Schrödinger equation describes how quantum systems that are not observed evolve over time, and is i ℏ ℏ d d t | Ψ Ψ ⟩ ⟩ = H ^ ^ | Ψ Ψ ⟩ ⟩ .

{\displaystyle i\hbar {\frac {d}{dt}}|\Psi \rangle ={\hat {H}}|\Psi \rangle .} When the system is in a stable environment, so it has a constant Hamiltonian , the solution to this equation is U ( t ) = e − − i H ^ ^ t / ℏ ℏ .

{\displaystyle U(t)=e^{-i{\hat {H}}t/\hbar }.} [ 1 ] : 24–25 If the time t {\displaystyle t} is always the same it may be omitted for simplicity, and the way quantum states evolve can be described as U | ψ ψ 1 ⟩ ⟩ = | ψ ψ 2 ⟩ ⟩ , {\displaystyle U|\psi _{1}\rangle =|\psi _{2}\rangle ,} just as in the above section.

That is, a quantum gate is how a quantum system that is not observed evolves over some specific time, or equivalently, a gate is the unitary time evolution operator U {\displaystyle U} acting on a quantum state for a specific duration.

Notable examples [ edit ] Main article: List of quantum logic gates There exists an uncountably infinite number of gates. Some of them have been named by various authors, [ 1 ] [ 2 ] [ 4 ] [ 5 ] [ 7 ] [ 8 ] [ 9 ] and below follow some of those most often used in the literature.

Identity gate [ edit ] The identity gate is the identity matrix , usually written as I , and is defined for a single qubit as I = [ 1 0 0 1 ] , {\displaystyle I={\begin{bmatrix}1&0\\0&1\end{bmatrix}},} where I is basis independent and does not modify the quantum state. The identity gate is most useful when describing mathematically the result of various gate operations or when discussing multi-qubit circuits.

Pauli gates ( X , Y , Z ) [ edit ] Further information: Clifford gates and Pauli group Quantum gates (from top to bottom): Identity gate, NOT gate, Pauli Y, Pauli Z The Pauli gates ( X , Y , Z ) {\displaystyle (X,Y,Z)} are the three Pauli matrices ( σ σ x , σ σ y , σ σ z ) {\displaystyle (\sigma _{x},\sigma _{y},\sigma _{z})} and act on a single qubit. The Pauli X , Y and Z equate, respectively, to a rotation around the x , y and z axes of the Bloch sphere by π π {\displaystyle \pi } radians.

[ b ] The Pauli- X gate is the quantum equivalent of the NOT gate for classical computers with respect to the standard basis | 0 ⟩ ⟩ {\displaystyle |0\rangle } , | 1 ⟩ ⟩ {\displaystyle |1\rangle } , which distinguishes the z axis on the Bloch sphere . It is sometimes called a bit-flip as it maps | 0 ⟩ ⟩ {\displaystyle |0\rangle } to | 1 ⟩ ⟩ {\displaystyle |1\rangle } and | 1 ⟩ ⟩ {\displaystyle |1\rangle } to | 0 ⟩ ⟩ {\displaystyle |0\rangle } . Similarly, the Pauli- Y maps | 0 ⟩ ⟩ {\displaystyle |0\rangle } to i | 1 ⟩ ⟩ {\displaystyle i|1\rangle } and | 1 ⟩ ⟩ {\displaystyle |1\rangle } to − − i | 0 ⟩ ⟩ {\displaystyle -i|0\rangle } . Pauli Z leaves the basis state | 0 ⟩ ⟩ {\displaystyle |0\rangle } unchanged and maps | 1 ⟩ ⟩ {\displaystyle |1\rangle } to − − | 1 ⟩ ⟩ {\displaystyle -|1\rangle } .

Due to this nature, Pauli Z is sometimes called phase-flip.

These matrices are usually represented as X = σ σ x = NOT = [ 0 1 1 0 ] , {\displaystyle X=\sigma _{x}=\operatorname {NOT} ={\begin{bmatrix}0&1\\1&0\end{bmatrix}},} Y = σ σ y = [ 0 − − i i 0 ] , {\displaystyle Y=\sigma _{y}={\begin{bmatrix}0&-i\\i&0\end{bmatrix}},} Z = σ σ z = [ 1 0 0 − − 1 ] .

{\displaystyle Z=\sigma _{z}={\begin{bmatrix}1&0\\0&-1\end{bmatrix}}.} The Pauli matrices are involutory , meaning that the square of a Pauli matrix is the identity matrix .

I 2 = X 2 = Y 2 = Z 2 = − − i X Y Z = I {\displaystyle I^{2}=X^{2}=Y^{2}=Z^{2}=-iXYZ=I} The Pauli matrices also anti-commute , for example Z X = i Y = − − X Z .

{\displaystyle ZX=iY=-XZ.} The matrix exponential of a Pauli matrix σ σ j {\displaystyle \sigma _{j}} is a rotation operator , often written as e − − i σ σ j θ θ / 2 .

{\displaystyle e^{-i\sigma _{j}\theta /2}.} Controlled gates [ edit ] Further information: Controlled NOT gate Circuit representation of controlled- U gate Controlled gates act on 2 or more qubits, where one or more qubits act as a control for some operation.

[ 2 ] For example, the controlled NOT gate (or CNOT or CX) acts on 2 qubits, and performs the NOT operation on the second qubit only when the first qubit is | 1 ⟩ ⟩ {\displaystyle |1\rangle } , and otherwise leaves it unchanged. With respect to the basis | 00 ⟩ ⟩ {\displaystyle |00\rangle } , | 01 ⟩ ⟩ {\displaystyle |01\rangle } , | 10 ⟩ ⟩ {\displaystyle |10\rangle } , | 11 ⟩ ⟩ {\displaystyle |11\rangle } , it is represented by the Hermitian unitary matrix: CNOT = [ 1 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 ] .

{\displaystyle {\mbox{CNOT}}={\begin{bmatrix}1&0&0&0\\0&1&0&0\\0&0&0&1\\0&0&1&0\end{bmatrix}}.} The CNOT (or controlled Pauli- X ) gate can be described as the gate that maps the basis states | a , b ⟩ ⟩ ↦ ↦ | a , a ⊕ ⊕ b ⟩ ⟩ {\displaystyle |a,b\rangle \mapsto |a,a\oplus b\rangle } , where ⊕ ⊕ {\displaystyle \oplus } is XOR .

The CNOT can be expressed in the Pauli basis as: CNOT = e i π π 4 ( I − − Z 1 ) ( I − − X 2 ) = e − − i π π 4 ( I − − Z 1 ) ( I − − X 2 ) .

{\displaystyle {\mbox{CNOT}}=e^{i{\frac {\pi }{4}}(I-Z_{1})(I-X_{2})}=e^{-i{\frac {\pi }{4}}(I-Z_{1})(I-X_{2})}.} Being a Hermitian unitary operator, CNOT has the property that e i θ θ U = ( cos ⁡ ⁡ θ θ ) I + ( i sin ⁡ ⁡ θ θ ) U {\displaystyle e^{i\theta U}=(\cos \theta )I+(i\sin \theta )U} and U = e i π π 2 ( I − − U ) = e − − i π π 2 ( I − − U ) {\displaystyle U=e^{i{\frac {\pi }{2}}(I-U)}=e^{-i{\frac {\pi }{2}}(I-U)}} , and is involutory .

More generally if U is a gate that operates on a single qubit with matrix representation U = [ u 00 u 01 u 10 u 11 ] , {\displaystyle U={\begin{bmatrix}u_{00}&u_{01}\\u_{10}&u_{11}\end{bmatrix}},} then the controlled-U gate is a gate that operates on two qubits in such a way that the first qubit serves as a control. It maps the basis states as follows.

Circuit diagrams of controlled Pauli gates (from left to right): CNOT (or controlled-X), controlled-Y and controlled-Z.

| 00 ⟩ ⟩ ↦ ↦ | 00 ⟩ ⟩ {\displaystyle |00\rangle \mapsto |00\rangle } | 01 ⟩ ⟩ ↦ ↦ | 01 ⟩ ⟩ {\displaystyle |01\rangle \mapsto |01\rangle } | 10 ⟩ ⟩ ↦ ↦ | 1 ⟩ ⟩ ⊗ ⊗ U | 0 ⟩ ⟩ = | 1 ⟩ ⟩ ⊗ ⊗ ( u 00 | 0 ⟩ ⟩ + u 10 | 1 ⟩ ⟩ ) {\displaystyle |10\rangle \mapsto |1\rangle \otimes U|0\rangle =|1\rangle \otimes (u_{00}|0\rangle +u_{10}|1\rangle )} | 11 ⟩ ⟩ ↦ ↦ | 1 ⟩ ⟩ ⊗ ⊗ U | 1 ⟩ ⟩ = | 1 ⟩ ⟩ ⊗ ⊗ ( u 01 | 0 ⟩ ⟩ + u 11 | 1 ⟩ ⟩ ) {\displaystyle |11\rangle \mapsto |1\rangle \otimes U|1\rangle =|1\rangle \otimes (u_{01}|0\rangle +u_{11}|1\rangle )} The matrix representing the controlled U is C U = [ 1 0 0 0 0 1 0 0 0 0 u 00 u 01 0 0 u 10 u 11 ] .

{\displaystyle {\mbox{C}}U={\begin{bmatrix}1&0&0&0\\0&1&0&0\\0&0&u_{00}&u_{01}\\0&0&u_{10}&u_{11}\end{bmatrix}}.} When U is one of the Pauli operators, X , Y , Z , the respective terms "controlled- X ", "controlled- Y ", or "controlled- Z " are sometimes used.

[ 4 ] : 177–185 Sometimes this is shortened to just C X , C Y and C Z .

In general, any single qubit unitary gate can be expressed as U = e i H {\displaystyle U=e^{iH}} , where H is a Hermitian matrix , and then the controlled U is C U = e i 1 2 ( I − − Z 1 ) H 2 .

{\displaystyle {\mbox{C}}U=e^{i{\frac {1}{2}}(I-Z_{1})H_{2}}.} Control can be extended to gates with arbitrary number of qubits [ 2 ] and functions in programming languages.

[ 10 ] Functions can be conditioned on superposition states.

[ 11 ] [ 12 ] Classical control [ edit ] Further information: Deferred measurement principle Example: The qubit ϕ ϕ {\displaystyle \phi } is measured , and the result of this measurement is a Boolean value, which is consumed by the classical computer. If ϕ ϕ {\displaystyle \phi } measures to 1, then the classical computer tells the quantum computer to apply the U gate on ψ ψ {\displaystyle \psi } .

In circuit diagrams, single lines are qubits , and doubled lines are bits .

Gates can also be controlled by classical logic. A quantum computer is controlled by a classical computer , and behaves like a coprocessor that receives instructions from the classical computer about what gates to execute on which qubits.

[ 13 ] : 42–43 [ 14 ] Classical control is simply the inclusion, or omission, of gates in the instruction sequence for the quantum computer.

[ 4 ] : 26–28 [ 1 ] : 87–88 Phase shift gates [ edit ] The phase shift is a family of single-qubit gates that map the basis states | 0 ⟩ ⟩ ↦ ↦ | 0 ⟩ ⟩ {\displaystyle |0\rangle \mapsto |0\rangle } and | 1 ⟩ ⟩ ↦ ↦ e i φ φ | 1 ⟩ ⟩ {\displaystyle |1\rangle \mapsto e^{i\varphi }|1\rangle } . The probability of measuring a | 0 ⟩ ⟩ {\displaystyle |0\rangle } or | 1 ⟩ ⟩ {\displaystyle |1\rangle } is unchanged after applying this gate, however it modifies the phase of the quantum state. This is equivalent to tracing a horizontal circle (a line of constant latitude), or a rotation about the z-axis on the Bloch sphere by φ φ {\displaystyle \varphi } radians. The phase shift gate is represented by the matrix: P ( φ φ ) = [ 1 0 0 e i φ φ ] {\displaystyle P(\varphi )={\begin{bmatrix}1&0\\0&e^{i\varphi }\end{bmatrix}}} where φ φ {\displaystyle \varphi } is the phase shift with the period 2π . Some common examples are the T gate where φ φ = π π 4 {\textstyle \varphi ={\frac {\pi }{4}}} (historically known as the π π / 8 {\displaystyle \pi /8} gate), the phase gate (also known as the S gate, written as S , though S is sometimes used for SWAP gates) where φ φ = π π 2 {\textstyle \varphi ={\frac {\pi }{2}}} and the Pauli- Z gate where φ φ = π π .

{\displaystyle \varphi =\pi .} The phase shift gates are related to each other as follows: Z = [ 1 0 0 e i π π ] = [ 1 0 0 − − 1 ] = P ( π π ) {\displaystyle Z={\begin{bmatrix}1&0\\0&e^{i\pi }\end{bmatrix}}={\begin{bmatrix}1&0\\0&-1\end{bmatrix}}=P\left(\pi \right)} S = [ 1 0 0 e i π π 2 ] = [ 1 0 0 i ] = P ( π π 2 ) = Z {\displaystyle S={\begin{bmatrix}1&0\\0&e^{i{\frac {\pi }{2}}}\end{bmatrix}}={\begin{bmatrix}1&0\\0&i\end{bmatrix}}=P\left({\frac {\pi }{2}}\right)={\sqrt {Z}}} T = [ 1 0 0 e i π π 4 ] = P ( π π 4 ) = S = Z 4 {\displaystyle T={\begin{bmatrix}1&0\\0&e^{i{\frac {\pi }{4}}}\end{bmatrix}}=P\left({\frac {\pi }{4}}\right)={\sqrt {S}}={\sqrt[{4}]{Z}}} Note that the phase gate P ( φ φ ) {\displaystyle P(\varphi )} is not Hermitian (except for all φ φ = n π π , n ∈ ∈ Z {\displaystyle \varphi =n\pi ,n\in \mathbb {Z} } ). These gates are different from their Hermitian conjugates: P † † ( φ φ ) = P ( − − φ φ ) {\displaystyle P^{\dagger }(\varphi )=P(-\varphi )} . The two adjoint (or conjugate transpose ) gates S † † {\displaystyle S^{\dagger }} and T † † {\displaystyle T^{\dagger }} are sometimes included in instruction sets.

[ 15 ] [ 16 ] Hadamard gate [ edit ] Further information: Hadamard transform § Quantum computing applications , and Hadamard matrix The Hadamard or Walsh-Hadamard gate, named after Jacques Hadamard ( French: [adamaʁ] ) and Joseph L. Walsh , acts on a single qubit. It maps the basis states | 0 ⟩ ⟩ ↦ ↦ | 0 ⟩ ⟩ + | 1 ⟩ ⟩ 2 {\textstyle |0\rangle \mapsto {\frac {|0\rangle +|1\rangle }{\sqrt {2}}}} and | 1 ⟩ ⟩ ↦ ↦ | 0 ⟩ ⟩ − − | 1 ⟩ ⟩ 2 {\textstyle |1\rangle \mapsto {\frac {|0\rangle -|1\rangle }{\sqrt {2}}}} (it creates an equal superposition state if given a computational basis state). The two states ( | 0 ⟩ ⟩ + | 1 ⟩ ⟩ ) / 2 {\displaystyle (|0\rangle +|1\rangle )/{\sqrt {2}}} and ( | 0 ⟩ ⟩ − − | 1 ⟩ ⟩ ) / 2 {\displaystyle (|0\rangle -|1\rangle )/{\sqrt {2}}} are sometimes written | + ⟩ ⟩ {\displaystyle |+\rangle } and | − − ⟩ ⟩ {\displaystyle |-\rangle } respectively. The Hadamard gate performs a rotation of π π {\displaystyle \pi } about the axis ( x ^ ^ + z ^ ^ ) / 2 {\displaystyle ({\hat {x}}+{\hat {z}})/{\sqrt {2}}} at the Bloch sphere , and is therefore involutory . It is represented by the Hadamard matrix : Circuit representation of Hadamard gate H = 1 2 [ 1 1 1 − − 1 ] .

{\displaystyle H={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&1\\1&-1\end{bmatrix}}.} If the Hermitian (so H † † = H − − 1 = H {\displaystyle H^{\dagger }=H^{-1}=H} ) Hadamard gate is used to perform a change of basis , it flips x ^ ^ {\displaystyle {\hat {x}}} and z ^ ^ {\displaystyle {\hat {z}}} . For example, H Z H = X {\displaystyle HZH=X} and H X H = Z = S .

{\displaystyle H{\sqrt {X}}\;H={\sqrt {Z}}=S.} Swap gate [ edit ] Further information: List of quantum logic gates § Non-Clifford swap gates Circuit representation of SWAP gate The swap gate swaps two qubits. With respect to the basis | 00 ⟩ ⟩ {\displaystyle |00\rangle } , | 01 ⟩ ⟩ {\displaystyle |01\rangle } , | 10 ⟩ ⟩ {\displaystyle |10\rangle } , | 11 ⟩ ⟩ {\displaystyle |11\rangle } , it is represented by the matrix SWAP = [ 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 ] .

{\displaystyle {\mbox{SWAP}}={\begin{bmatrix}1&0&0&0\\0&0&1&0\\0&1&0&0\\0&0&0&1\end{bmatrix}}.} The swap gate can be decomposed into summation form: SWAP = I ⊗ ⊗ I + X ⊗ ⊗ X + Y ⊗ ⊗ Y + Z ⊗ ⊗ Z 2 {\displaystyle {\mbox{SWAP}}={\frac {I\otimes I+X\otimes X+Y\otimes Y+Z\otimes Z}{2}}} Toffoli (CCNOT) gate [ edit ] Main article: Toffoli gate Circuit representation of Toffoli gate The Toffoli gate, named after Tommaso Toffoli and also called the CCNOT gate or Deutsch gate D ( π π / 2 ) {\displaystyle D(\pi /2)} , is a 3-bit gate that is universal for classical computation but not for quantum computation. The quantum Toffoli gate is the same gate, defined for 3 qubits. If we limit ourselves to only accepting input qubits that are | 0 ⟩ ⟩ {\displaystyle |0\rangle } and | 1 ⟩ ⟩ {\displaystyle |1\rangle } , then if the first two bits are in the state | 1 ⟩ ⟩ {\displaystyle |1\rangle } it applies a Pauli- X (or NOT) on the third bit, else it does nothing. It is an example of a CC-U (controlled-controlled Unitary) gate. Since it is the quantum analog of a classical gate, it is completely specified by its truth table. The Toffoli gate is universal when combined with the single qubit Hadamard gate.

[ 17 ] Truth table Matrix form Input Output 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 [ 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 ] {\displaystyle {\begin{bmatrix}1&0&0&0&0&0&0&0\\0&1&0&0&0&0&0&0\\0&0&1&0&0&0&0&0\\0&0&0&1&0&0&0&0\\0&0&0&0&1&0&0&0\\0&0&0&0&0&1&0&0\\0&0&0&0&0&0&0&1\\0&0&0&0&0&0&1&0\\\end{bmatrix}}} The Toffoli gate is related to the classical AND ( ∧ ∧ {\displaystyle \land } ) and XOR ( ⊕ ⊕ {\displaystyle \oplus } ) operations as it performs the mapping | a , b , c ⟩ ⟩ ↦ ↦ | a , b , c ⊕ ⊕ ( a ∧ ∧ b ) ⟩ ⟩ {\displaystyle |a,b,c\rangle \mapsto |a,b,c\oplus (a\land b)\rangle } on states in the computational basis.

The Toffoli gate can be expressed using Pauli matrices as Toff = e i π π 8 ( I − − Z 1 ) ( I − − Z 2 ) ( I − − X 3 ) = e − − i π π 8 ( I − − Z 1 ) ( I − − Z 2 ) ( I − − X 3 ) .

{\displaystyle {\mbox{Toff}}=e^{i{\frac {\pi }{8}}(I-Z_{1})(I-Z_{2})(I-X_{3})}=e^{-i{\frac {\pi }{8}}(I-Z_{1})(I-Z_{2})(I-X_{3})}.} Universal quantum gates [ edit ] Both CNOT and SWAP {\displaystyle {\sqrt {\mbox{SWAP}}}} are universal two-qubit gates and can be transformed into each other.

A set of universal quantum gates is any set of gates to which any operation possible on a quantum computer can be reduced, that is, any other unitary operation can be expressed as a finite sequence of gates from the set. Technically, this is impossible with anything less than an uncountable set of gates since the number of possible quantum gates is uncountable, whereas the number of finite sequences from a finite set is countable . To solve this problem, we only require that any quantum operation can be approximated by a sequence of gates from this finite set. Moreover, for unitaries on a constant number of qubits, the Solovay–Kitaev theorem guarantees that this can be done efficiently. Checking if a set of quantum gates is universal can be done using group theory methods [ 18 ] and/or relation to (approximate) unitary t-designs [ 19 ] Some universal quantum gate sets include: The rotation operators R x ( θ ) , R y ( θ ) , R z ( θ ) , the phase shift gate P ( φ ) [ c ] and CNOT are commonly used to form a universal quantum gate set.

[ 20 ] [ d ] The Clifford set {CNOT, H , S } + T gate. The Clifford set alone is not a universal quantum gate set, as it can be efficiently simulated classically according to the Gottesman–Knill theorem .

The Toffoli gate + Hadamard gate.

[ 17 ] The Toffoli gate alone forms a set of universal gates for reversible Boolean algebraic logic circuits, which encompasses all classical computation.

Deutsch gate [ edit ] A single-gate set of universal quantum gates can also be formulated using the parametrized three-qubit Deutsch gate D ( θ θ ) {\displaystyle D(\theta )} , [ 21 ] named after physicist David Deutsch . It is a general case of CC-U , or controlled-controlled-unitary gate, and is defined as | a , b , c ⟩ ⟩ ↦ ↦ { i cos ⁡ ⁡ ( θ θ ) | a , b , c ⟩ ⟩ + sin ⁡ ⁡ ( θ θ ) | a , b , 1 − − c ⟩ ⟩ for a = b = 1 , | a , b , c ⟩ ⟩ otherwise .

{\displaystyle |a,b,c\rangle \mapsto {\begin{cases}i\cos(\theta )|a,b,c\rangle +\sin(\theta )|a,b,1-c\rangle &{\text{for}}\ a=b=1,\\|a,b,c\rangle &{\text{otherwise}}.\end{cases}}} Unfortunately, a working Deutsch gate has remained out of reach, due to lack of a protocol. There are some proposals to realize a Deutsch gate with dipole–dipole interaction in neutral atoms.

[ 22 ] A universal logic gate for reversible classical computing, the Toffoli gate, is reducible to the Deutsch gate D ( π π / 2 ) {\displaystyle D(\pi /2)} , thus showing that all reversible classical logic operations can be performed on a universal quantum computer.

There also exist single two-qubit gates sufficient for universality. In 1996, Adriano Barenco showed that the Deutsch gate can be decomposed using only a single two-qubit gate ( Barenco gate ), but it is hard to realize experimentally.

[ 1 ] : 93 This feature is exclusive to quantum circuits, as there is no classical two-bit gate that is both reversible and universal.

[ 1 ] : 93 Universal two-qubit gates could be implemented to improve classical reversible circuits in fast low-power microprocessors.

[ 1 ] : 93 Circuit composition [ edit ] Serially wired gates [ edit ] Two gates Y and X in series. The order in which they appear on the wire is reversed when multiplying them together.

Assume that we have two gates A and B that both act on n {\displaystyle n} qubits. When B is put after A in a series circuit, then the effect of the two gates can be described as a single gate C .

C = B ⋅ ⋅ A {\displaystyle C=B\cdot A} where ⋅ ⋅ {\displaystyle \cdot } is matrix multiplication . The resulting gate C will have the same dimensions as A and B . The order in which the gates would appear in a circuit diagram is reversed when multiplying them together.

[ 4 ] : 17–18,22–23,62–64 [ 5 ] : 147–169 For example, putting the Pauli X gate after the Pauli Y gate, both of which act on a single qubit, can be described as a single combined gate C : C = X ⋅ ⋅ Y = [ 0 1 1 0 ] ⋅ ⋅ [ 0 − − i i 0 ] = [ i 0 0 − − i ] = i Z {\displaystyle C=X\cdot Y={\begin{bmatrix}0&1\\1&0\end{bmatrix}}\cdot {\begin{bmatrix}0&-i\\i&0\end{bmatrix}}={\begin{bmatrix}i&0\\0&-i\end{bmatrix}}=iZ} The product symbol ( ⋅ ⋅ {\displaystyle \cdot } ) is often omitted.

Exponents of quantum gates [ edit ] All real exponents of unitary matrices are also unitary matrices, and all quantum gates are unitary matrices.

Positive integer exponents are equivalent to sequences of serially wired gates (e.g.

X 3 = X ⋅ ⋅ X ⋅ ⋅ X {\displaystyle X^{3}=X\cdot X\cdot X} ), and the real exponents is a generalization of the series circuit. For example, X π π {\displaystyle X^{\pi }} and X = X 1 / 2 {\displaystyle {\sqrt {X}}=X^{1/2}} are both valid quantum gates.

U 0 = I {\displaystyle U^{0}=I} for any unitary matrix U {\displaystyle U} . The identity matrix ( I {\displaystyle I} ) behaves like a NOP [ 23 ] [ 24 ] and can be represented as bare wire in quantum circuits, or not shown at all.

All gates are unitary matrices, so that U † † U = U U † † = I {\displaystyle U^{\dagger }U=UU^{\dagger }=I} and U † † = U − − 1 {\displaystyle U^{\dagger }=U^{-1}} , where † † {\displaystyle \dagger } is the conjugate transpose . This means that negative exponents of gates are unitary inverses of their positively exponentiated counterparts: U − − n = ( U n ) † † {\displaystyle U^{-n}=(U^{n})^{\dagger }} .

For example, some negative exponents of the phase shift gates are T − − 1 = T † † {\displaystyle T^{-1}=T^{\dagger }} and T − − 2 = ( T 2 ) † † = S † † {\displaystyle T^{-2}=(T^{2})^{\dagger }=S^{\dagger }} .

Note that for a Hermitian matrix H † † = H , {\displaystyle H^{\dagger }=H,} and because of unitarity, H H † † = I , {\displaystyle HH^{\dagger }=I,} so H 2 = I {\displaystyle H^{2}=I} for all Hermitian gates. They are involutory . Examples of Hermitian gates are the Pauli gates , Hadamard , CNOT , SWAP and Toffoli . Each Hermitian unitary matrix H {\displaystyle H} has the property that e i θ θ H = ( cos ⁡ ⁡ θ θ ) I + ( i sin ⁡ ⁡ θ θ ) H {\displaystyle e^{i\theta H}=(\cos \theta )I+(i\sin \theta )H} where H = e i π π 2 ( I − − H ) = e − − i π π 2 ( I − − H ) .

{\displaystyle H=e^{i{\frac {\pi }{2}}(I-H)}=e^{-i{\frac {\pi }{2}}(I-H)}.} The exponent of a gate is a multiple of the duration of time that the time evolution operator is applied to a quantum state. E.g. in a spin qubit quantum computer the S W A P {\displaystyle {\sqrt {\mathrm {SWAP} }}} gate could be realized via exchange interaction on the spin of two electrons for half the duration of a full exchange interaction.

[ 25 ] Parallel gates [ edit ] Two gates Y {\displaystyle Y} and X {\displaystyle X} in parallel is equivalent to the gate Y ⊗ ⊗ X {\displaystyle Y\otimes X} .

The tensor product (or Kronecker product ) of two quantum gates is the gate that is equal to the two gates in parallel.

[ 4 ] : 71–75 [ 5 ] : 148 If we, as in the picture, combine the Pauli- Y gate with the Pauli- X gate in parallel, then this can be written as: C = Y ⊗ ⊗ X = [ 0 − − i i 0 ] ⊗ ⊗ [ 0 1 1 0 ] = [ 0 [ 0 1 1 0 ] − − i [ 0 1 1 0 ] i [ 0 1 1 0 ] 0 [ 0 1 1 0 ] ] = [ 0 0 0 − − i 0 0 − − i 0 0 i 0 0 i 0 0 0 ] {\displaystyle C=Y\otimes X={\begin{bmatrix}0&-i\\i&0\end{bmatrix}}\otimes {\begin{bmatrix}0&1\\1&0\end{bmatrix}}={\begin{bmatrix}0{\begin{bmatrix}0&1\\1&0\end{bmatrix}}&-i{\begin{bmatrix}0&1\\1&0\end{bmatrix}}\\i{\begin{bmatrix}0&1\\1&0\end{bmatrix}}&0{\begin{bmatrix}0&1\\1&0\end{bmatrix}}\end{bmatrix}}={\begin{bmatrix}0&0&0&-i\\0&0&-i&0\\0&i&0&0\\i&0&0&0\end{bmatrix}}} Both the Pauli- X and the Pauli- Y gate act on a single qubit. The resulting gate C {\displaystyle C} act on two qubits.

Sometimes the tensor product symbol is omitted, and indexes are used for the operators instead.

[ 25 ] Hadamard transform [ edit ] Further information: Hadamard transform The gate H 2 = H ⊗ ⊗ H {\displaystyle H_{2}=H\otimes H} is the Hadamard gate ( H {\displaystyle H} ) applied in parallel on 2 qubits. It can be written as: H 2 = H ⊗ ⊗ H = 1 2 [ 1 1 1 − − 1 ] ⊗ ⊗ 1 2 [ 1 1 1 − − 1 ] = 1 2 [ 1 1 1 1 1 − − 1 1 − − 1 1 1 − − 1 − − 1 1 − − 1 − − 1 1 ] {\displaystyle H_{2}=H\otimes H={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&1\\1&-1\end{bmatrix}}\otimes {\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&1\\1&-1\end{bmatrix}}={\frac {1}{2}}{\begin{bmatrix}1&1&1&1\\1&-1&1&-1\\1&1&-1&-1\\1&-1&-1&1\end{bmatrix}}} This "two-qubit parallel Hadamard gate" will, when applied to, for example, the two-qubit zero-vector ( | 00 ⟩ ⟩ {\displaystyle |00\rangle } ), create a quantum state that has equal probability of being observed in any of its four possible outcomes; | 00 ⟩ ⟩ {\displaystyle |00\rangle } , | 01 ⟩ ⟩ {\displaystyle |01\rangle } , | 10 ⟩ ⟩ {\displaystyle |10\rangle } , and | 11 ⟩ ⟩ {\displaystyle |11\rangle } .

We can write this operation as: H 2 | 00 ⟩ ⟩ = 1 2 [ 1 1 1 1 1 − − 1 1 − − 1 1 1 − − 1 − − 1 1 − − 1 − − 1 1 ] [ 1 0 0 0 ] = 1 2 [ 1 1 1 1 ] = 1 2 | 00 ⟩ ⟩ + 1 2 | 01 ⟩ ⟩ + 1 2 | 10 ⟩ ⟩ + 1 2 | 11 ⟩ ⟩ = | 00 ⟩ ⟩ + | 01 ⟩ ⟩ + | 10 ⟩ ⟩ + | 11 ⟩ ⟩ 2 {\displaystyle H_{2}|00\rangle ={\frac {1}{2}}{\begin{bmatrix}1&1&1&1\\1&-1&1&-1\\1&1&-1&-1\\1&-1&-1&1\end{bmatrix}}{\begin{bmatrix}1\\0\\0\\0\end{bmatrix}}={\frac {1}{2}}{\begin{bmatrix}1\\1\\1\\1\end{bmatrix}}={\frac {1}{2}}|00\rangle +{\frac {1}{2}}|01\rangle +{\frac {1}{2}}|10\rangle +{\frac {1}{2}}|11\rangle ={\frac {|00\rangle +|01\rangle +|10\rangle +|11\rangle }{2}}} Example: The Hadamard transform on a 3- qubit register | ψ ψ ⟩ ⟩ {\displaystyle |\psi \rangle } .

Here the amplitude for each measurable state is 1 ⁄ 2 . The probability to observe any state is the square of the absolute value of the measurable states amplitude, which in the above example means that there is one in four that we observe any one of the individual four cases. See measurement for details.

H 2 {\displaystyle H_{2}} performs the Hadamard transform on two qubits. Similarly the gate H ⊗ ⊗ H ⊗ ⊗ ⋯ ⋯ ⊗ ⊗ H ⏟ ⏟ n times = ⨂ ⨂ i = 0 n − − 1 H = H ⊗ ⊗ n = H n {\displaystyle \underbrace {H\otimes H\otimes \dots \otimes H} _{n{\text{ times}}}=\bigotimes _{i=0}^{n-1}H=H^{\otimes n}=H_{n}} performs a Hadamard transform on a register of n {\displaystyle n} qubits.

When applied to a register of n {\displaystyle n} qubits all initialized to | 0 ⟩ ⟩ {\displaystyle |0\rangle } , the Hadamard transform puts the quantum register into a superposition with equal probability of being measured in any of its 2 n {\displaystyle 2^{n}} possible states: ⨂ ⨂ i = 0 n − − 1 ( H | 0 ⟩ ⟩ ) = 1 2 n [ 1 1 ⋮ ⋮ 1 ] = 1 2 n ( | 0 ⟩ ⟩ + | 1 ⟩ ⟩ + ⋯ ⋯ + | 2 n − − 1 ⟩ ⟩ ) = 1 2 n ∑ ∑ i = 0 2 n − − 1 | i ⟩ ⟩ {\displaystyle \bigotimes _{i=0}^{n-1}(H|0\rangle )={\frac {1}{\sqrt {2^{n}}}}{\begin{bmatrix}1\\1\\\vdots \\1\end{bmatrix}}={\frac {1}{\sqrt {2^{n}}}}{\Big (}|0\rangle +|1\rangle +\dots +|2^{n}-1\rangle {\Big )}={\frac {1}{\sqrt {2^{n}}}}\sum _{i=0}^{2^{n}-1}|i\rangle } This state is a uniform superposition and it is generated as the first step in some search algorithms, for example in amplitude amplification and phase estimation .

Measuring this state results in a random number between | 0 ⟩ ⟩ {\displaystyle |0\rangle } and | 2 n − − 1 ⟩ ⟩ {\displaystyle |2^{n}-1\rangle } .

[ e ] How random the number is depends on the fidelity of the logic gates. If not measured, it is a quantum state with equal probability amplitude 1 2 n {\displaystyle {\frac {1}{\sqrt {2^{n}}}}} for each of its possible states.

The Hadamard transform acts on a register | ψ ψ ⟩ ⟩ {\displaystyle |\psi \rangle } with n {\displaystyle n} qubits such that | ψ ψ ⟩ ⟩ = ⨂ ⨂ i = 0 n − − 1 | ψ ψ i ⟩ ⟩ {\textstyle |\psi \rangle =\bigotimes _{i=0}^{n-1}|\psi _{i}\rangle } as follows: ⨂ ⨂ i = 0 n − − 1 H | ψ ψ ⟩ ⟩ = ⨂ ⨂ i = 0 n − − 1 | 0 ⟩ ⟩ + ( − − 1 ) ψ ψ i | 1 ⟩ ⟩ 2 = 1 2 n ⨂ ⨂ i = 0 n − − 1 ( | 0 ⟩ ⟩ + ( − − 1 ) ψ ψ i | 1 ⟩ ⟩ ) = H | ψ ψ 0 ⟩ ⟩ ⊗ ⊗ H | ψ ψ 1 ⟩ ⟩ ⊗ ⊗ ⋯ ⋯ ⊗ ⊗ H | ψ ψ n − − 1 ⟩ ⟩ {\displaystyle \bigotimes _{i=0}^{n-1}H|\psi \rangle =\bigotimes _{i=0}^{n-1}{\frac {|0\rangle +(-1)^{\psi _{i}}|1\rangle }{\sqrt {2}}}={\frac {1}{\sqrt {2^{n}}}}\bigotimes _{i=0}^{n-1}{\Big (}|0\rangle +(-1)^{\psi _{i}}|1\rangle {\Big )}=H|\psi _{0}\rangle \otimes H|\psi _{1}\rangle \otimes \cdots \otimes H|\psi _{n-1}\rangle } Application on entangled states [ edit ] If two or more qubits are viewed as a single quantum state, this combined state is equal to the tensor product of the constituent qubits. Any state that can be written as a tensor product from the constituent subsystems are called separable states . On the other hand, an entangled state is any state that cannot be tensor-factorized, or in other words: An entangled state can not be written as a tensor product of its constituent qubits states.

Special care must be taken when applying gates to constituent qubits that make up entangled states.

If we have a set of N qubits that are entangled and wish to apply a quantum gate on M < N qubits in the set, we will have to extend the gate to take N qubits. This application can be done by combining the gate with an identity matrix such that their tensor product becomes a gate that act on N qubits. The identity matrix ( I {\displaystyle I} ) is a representation of the gate that maps every state to itself (i.e., does nothing at all). In a circuit diagram the identity gate or matrix will often appear as just a bare wire.

The example given in the text. The Hadamard gate H {\displaystyle H} only act on 1 qubit, but | ψ ψ ⟩ ⟩ {\displaystyle |\psi \rangle } is an entangled quantum state that spans 2 qubits. In our example, | ψ ψ ⟩ ⟩ = | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 {\displaystyle |\psi \rangle ={\frac {|00\rangle +|11\rangle }{\sqrt {2}}}} .

For example, the Hadamard gate ( H {\displaystyle H} ) acts on a single qubit, but if we feed it the first of the two qubits that constitute the entangled Bell state | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 {\displaystyle {\frac {|00\rangle +|11\rangle }{\sqrt {2}}}} , we cannot write that operation easily. We need to extend the Hadamard gate H {\displaystyle H} with the identity gate I {\displaystyle I} so that we can act on quantum states that span two qubits: K = H ⊗ ⊗ I = 1 2 [ 1 1 1 − − 1 ] ⊗ ⊗ [ 1 0 0 1 ] = 1 2 [ 1 0 1 0 0 1 0 1 1 0 − − 1 0 0 1 0 − − 1 ] {\displaystyle K=H\otimes I={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&1\\1&-1\end{bmatrix}}\otimes {\begin{bmatrix}1&0\\0&1\end{bmatrix}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&0&1&0\\0&1&0&1\\1&0&-1&0\\0&1&0&-1\end{bmatrix}}} The gate K {\displaystyle K} can now be applied to any two-qubit state, entangled or otherwise. The gate K {\displaystyle K} will leave the second qubit untouched and apply the Hadamard transform to the first qubit. If applied to the Bell state in our example, we may write that as: K | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 = 1 2 [ 1 0 1 0 0 1 0 1 1 0 − − 1 0 0 1 0 − − 1 ] 1 2 [ 1 0 0 1 ] = 1 2 [ 1 1 1 − − 1 ] = | 00 ⟩ ⟩ + | 01 ⟩ ⟩ + | 10 ⟩ ⟩ − − | 11 ⟩ ⟩ 2 {\displaystyle K{\frac {|00\rangle +|11\rangle }{\sqrt {2}}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&0&1&0\\0&1&0&1\\1&0&-1&0\\0&1&0&-1\end{bmatrix}}{\frac {1}{\sqrt {2}}}{\begin{bmatrix}1\\0\\0\\1\end{bmatrix}}={\frac {1}{2}}{\begin{bmatrix}1\\1\\1\\-1\end{bmatrix}}={\frac {|00\rangle +|01\rangle +|10\rangle -|11\rangle }{2}}} Computational complexity and the tensor product [ edit ] The time complexity for multiplying two n × × n {\displaystyle n\times n} -matrices is at least Ω Ω ( n 2 log ⁡ ⁡ n ) {\displaystyle \Omega (n^{2}\log n)} , [ 26 ] if using a classical machine. Because the size of a gate that operates on q {\displaystyle q} qubits is 2 q × × 2 q {\displaystyle 2^{q}\times 2^{q}} it means that the time for simulating a step in a quantum circuit (by means of multiplying the gates) that operates on generic entangled states is Ω Ω ( 2 q 2 log ⁡ ⁡ ( 2 q ) ) {\displaystyle \Omega ({2^{q}}^{2}\log({2^{q}}))} .

For this reason it is believed to be intractable to simulate large entangled quantum systems using classical computers. Subsets of the gates, such as the Clifford gates , or the trivial case of circuits that only implement classical Boolean functions (e.g. combinations of X , CNOT , Toffoli ), can however be efficiently simulated on classical computers.

The state vector of a quantum register with n {\displaystyle n} qubits is 2 n {\displaystyle 2^{n}} complex entries. Storing the probability amplitudes as a list of floating point values is not tractable for large n {\displaystyle n} .

Unitary inversion of gates [ edit ] Example: The unitary inverse of the Hadamard-CNOT product. The three gates H {\displaystyle H} , I {\displaystyle I} and C N O T {\displaystyle \mathrm {CNOT} } are their own unitary inverses.

Because all quantum logical gates are reversible , any composition of multiple gates is also reversible. All products and tensor products (i.e.

series and parallel combinations) of unitary matrices are also unitary matrices. This means that it is possible to construct an inverse of all algorithms and functions, as long as they contain only gates.

Initialization, measurement, I/O and spontaneous decoherence are side effects in quantum computers. Gates however are purely functional and bijective .

If U {\displaystyle U} is a unitary matrix , then U † † U = U U † † = I {\displaystyle U^{\dagger }U=UU^{\dagger }=I} and U † † = U − − 1 {\displaystyle U^{\dagger }=U^{-1}} .

The dagger ( † † {\displaystyle \dagger } ) denotes the conjugate transpose . It is also called the Hermitian adjoint .

If a function F {\displaystyle F} is a product of m {\displaystyle m} gates, F = A 1 ⋅ ⋅ A 2 ⋅ ⋅ ⋯ ⋯ ⋅ ⋅ A m {\displaystyle F=A_{1}\cdot A_{2}\cdot \dots \cdot A_{m}} , the unitary inverse of the function F † † {\displaystyle F^{\dagger }} can be constructed: Because ( U V ) † † = V † † U † † {\displaystyle (UV)^{\dagger }=V^{\dagger }U^{\dagger }} we have, after repeated application on itself F † † = ( ∏ ∏ i = 1 m A i ) † † = ∏ ∏ i = m 1 A i † † = A m † † ⋅ ⋅ ⋯ ⋯ ⋅ ⋅ A 2 † † ⋅ ⋅ A 1 † † {\displaystyle F^{\dagger }=\left(\prod _{i=1}^{m}A_{i}\right)^{\dagger }=\prod _{i=m}^{1}A_{i}^{\dagger }=A_{m}^{\dagger }\cdot \dots \cdot A_{2}^{\dagger }\cdot A_{1}^{\dagger }} Similarly if the function G {\displaystyle G} consists of two gates A {\displaystyle A} and B {\displaystyle B} in parallel, then G = A ⊗ ⊗ B {\displaystyle G=A\otimes B} and G † † = ( A ⊗ ⊗ B ) † † = A † † ⊗ ⊗ B † † {\displaystyle G^{\dagger }=(A\otimes B)^{\dagger }=A^{\dagger }\otimes B^{\dagger }} .

Gates that are their own unitary inverses are called Hermitian or self-adjoint operators . Some elementary gates such as the Hadamard ( H ) and the Pauli gates ( I , X , Y , Z ) are Hermitian operators, while others like the phase shift ( S , T , P , CPhase ) gates generally are not.

For example, an algorithm for addition can be used for subtraction, if it is being "run in reverse", as its unitary inverse. The inverse quantum Fourier transform is the unitary inverse. Unitary inverses can also be used for uncomputation . Programming languages for quantum computers, such as Microsoft 's Q# , [ 10 ] Bernhard Ömer's QCL , [ 13 ] : 61 and IBM 's Qiskit , [ 27 ] contain function inversion as programming concepts.

Measurement [ edit ] Further information: Measurement in quantum mechanics and Deferred measurement principle Circuit representation of measurement. The two lines on the right hand side represent a classical bit, and the single line on the left hand side represents a qubit.

Measurement (sometimes called observation ) is irreversible and therefore not a quantum gate, because it assigns the observed quantum state to a single value. Measurement takes a quantum state and projects it to one of the basis vectors , with a likelihood equal to the square of the vector's length (in the 2-norm [ 4 ] : 66 [ 5 ] : 56, 65 ) along that basis vector.

[ 1 ] : 15–17 [ 28 ] [ 29 ] [ 30 ] This is known as the Born rule and appears [ e ] as a stochastic non-reversible operation as it probabilistically sets the quantum state equal to the basis vector that represents the measured state. At the instant of measurement, the state is said to " collapse " to the definite single value that was measured. Why and how, or even if [ 31 ] [ 32 ] the quantum state collapses at measurement, is called the measurement problem .

The probability of measuring a value with probability amplitude ϕ ϕ {\displaystyle \phi } is 1 ≥ ≥ | ϕ ϕ | 2 ≥ ≥ 0 {\displaystyle 1\geq |\phi |^{2}\geq 0} , where | ⋅ ⋅ | {\displaystyle |\cdot |} is the modulus .

Measuring a single qubit, whose quantum state is represented by the vector a | 0 ⟩ ⟩ + b | 1 ⟩ ⟩ = [ a b ] {\displaystyle a|0\rangle +b|1\rangle ={\begin{bmatrix}a\\b\end{bmatrix}}} , will result in | 0 ⟩ ⟩ {\displaystyle |0\rangle } with probability | a | 2 {\displaystyle |a|^{2}} , and in | 1 ⟩ ⟩ {\displaystyle |1\rangle } with probability | b | 2 {\displaystyle |b|^{2}} .

For example, measuring a qubit with the quantum state | 0 ⟩ ⟩ − − i | 1 ⟩ ⟩ 2 = 1 2 [ 1 − − i ] {\displaystyle {\frac {|0\rangle -i|1\rangle }{\sqrt {2}}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1\\-i\end{bmatrix}}} will yield with equal probability either | 0 ⟩ ⟩ {\displaystyle |0\rangle } or | 1 ⟩ ⟩ {\displaystyle |1\rangle } .

For a single qubit, we have a unit sphere in C 2 {\displaystyle \mathbb {C} ^{2}} with the quantum state a | 0 ⟩ ⟩ + b | 1 ⟩ ⟩ {\displaystyle a|0\rangle +b|1\rangle } such that | a | 2 + | b | 2 = 1 {\displaystyle |a|^{2}+|b|^{2}=1} .

The state can be re-written as | cos ⁡ ⁡ θ θ | 2 + | sin ⁡ ⁡ θ θ | 2 = 1 {\displaystyle |\cos \theta |^{2}+|\sin \theta |^{2}=1} , or | a | 2 = cos 2 ⁡ ⁡ θ θ {\displaystyle |a|^{2}=\cos ^{2}\theta } and | b | 2 = sin 2 ⁡ ⁡ θ θ {\displaystyle |b|^{2}=\sin ^{2}\theta } .

Note: | a | 2 {\displaystyle |a|^{2}} is the probability of measuring | 0 ⟩ ⟩ {\displaystyle |0\rangle } and | b | 2 {\displaystyle |b|^{2}} is the probability of measuring | 1 ⟩ ⟩ {\displaystyle |1\rangle } .

A quantum state | Ψ Ψ ⟩ ⟩ {\displaystyle |\Psi \rangle } that spans n qubits can be written as a vector in 2 n {\displaystyle 2^{n}} complex dimensions: | Ψ Ψ ⟩ ⟩ ∈ ∈ C 2 n {\displaystyle |\Psi \rangle \in \mathbb {C} ^{2^{n}}} .

This is because the tensor product of n qubits is a vector in 2 n {\displaystyle 2^{n}} dimensions. This way, a register of n qubits can be measured to 2 n {\displaystyle 2^{n}} distinct states, similar to how a register of n classical bits can hold 2 n {\displaystyle 2^{n}} distinct states. Unlike with the bits of classical computers, quantum states can have non-zero probability amplitudes in multiple measurable values simultaneously. This is called superposition .

The sum of all probabilities for all outcomes must always be equal to 1 .

[ f ] Another way to say this is that the Pythagorean theorem generalized to C 2 n {\displaystyle \mathbb {C} ^{2^{n}}} has that all quantum states | Ψ Ψ ⟩ ⟩ {\displaystyle |\Psi \rangle } with n qubits must satisfy 1 = ∑ ∑ x = 0 2 n − − 1 | a x | 2 , {\textstyle 1=\sum _{x=0}^{2^{n}-1}|a_{x}|^{2},} [ g ] where a x {\displaystyle a_{x}} is the probability amplitude for measurable state | x ⟩ ⟩ {\displaystyle |x\rangle } .

A geometric interpretation of this is that the possible value-space of a quantum state | Ψ Ψ ⟩ ⟩ {\displaystyle |\Psi \rangle } with n qubits is the surface of the unit sphere in C 2 n {\displaystyle \mathbb {C} ^{2^{n}}} and that the unitary transforms (i.e. quantum logic gates) applied to it are rotations on the sphere. The rotations that the gates perform form the symmetry group U(2 n ) . Measurement is then a probabilistic projection of the points at the surface of this complex sphere onto the basis vectors that span the space (and labels the outcomes).

In many cases the space is represented as a Hilbert space H {\displaystyle {\mathcal {H}}} rather than some specific 2 n {\displaystyle 2^{n}} -dimensional complex space. The number of dimensions (defined by the basis vectors, and thus also the possible outcomes from measurement) is then often implied by the operands, for example as the required state space for solving a problem . In Grover's algorithm , Grover named this generic basis vector set "the database" .

The selection of basis vectors against which to measure a quantum state will influence the outcome of the measurement.

[ 1 ] : 30–35 [ 4 ] : 22, 84–85, 185–188 [ 33 ] See change of basis and Von Neumann entropy for details. In this article, we always use the computational basis , which means that we have labeled the 2 n {\displaystyle 2^{n}} basis vectors of an n -qubit register | 0 ⟩ ⟩ , | 1 ⟩ ⟩ , | 2 ⟩ ⟩ , ⋯ ⋯ , | 2 n − − 1 ⟩ ⟩ {\displaystyle |0\rangle ,|1\rangle ,|2\rangle ,\cdots ,|2^{n}-1\rangle } , or use the binary representation | 0 10 ⟩ ⟩ = | 0 … … 00 2 ⟩ ⟩ , | 1 10 ⟩ ⟩ = | 0 … … 01 2 ⟩ ⟩ , | 2 10 ⟩ ⟩ = | 0 … … 10 2 ⟩ ⟩ , ⋯ ⋯ , | 2 n − − 1 ⟩ ⟩ = | 111 … … 1 2 ⟩ ⟩ {\displaystyle |0_{10}\rangle =|0\dots 00_{2}\rangle ,|1_{10}\rangle =|0\dots 01_{2}\rangle ,|2_{10}\rangle =|0\dots 10_{2}\rangle ,\cdots ,|2^{n}-1\rangle =|111\dots 1_{2}\rangle } .

In quantum mechanics , the basis vectors constitute an orthonormal basis .

An example of usage of an alternative measurement basis is in the BB84 cipher.

The effect of measurement on entangled states [ edit ] The Hadamard - CNOT gate, which when given the input | 00 ⟩ ⟩ {\displaystyle |00\rangle } produces a Bell state If two quantum states (i.e.

qubits , or registers ) are entangled (meaning that their combined state cannot be expressed as a tensor product ), measurement of one register affects or reveals the state of the other register by partially or entirely collapsing its state too. This effect can be used for computation, and is used in many algorithms.

The Hadamard-CNOT combination acts on the zero-state as follows: CNOT ⁡ ⁡ ( H ⊗ ⊗ I ) | 00 ⟩ ⟩ = ( [ 1 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 ] ( 1 2 [ 1 1 1 − − 1 ] ⊗ ⊗ [ 1 0 0 1 ] ) ) [ 1 0 0 0 ] = 1 2 [ 1 0 0 1 ] = | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 {\displaystyle \operatorname {CNOT} (H\otimes I)|00\rangle =\left({\begin{bmatrix}1&0&0&0\\0&1&0&0\\0&0&0&1\\0&0&1&0\end{bmatrix}}\left({\frac {1}{\sqrt {2}}}{\begin{bmatrix}1&1\\1&-1\end{bmatrix}}\otimes {\begin{bmatrix}1&0\\0&1\end{bmatrix}}\right)\right){\begin{bmatrix}1\\0\\0\\0\end{bmatrix}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1\\0\\0\\1\end{bmatrix}}={\frac {|00\rangle +|11\rangle }{\sqrt {2}}}} The Bell state in the text is | Ψ Ψ ⟩ ⟩ = a | 00 ⟩ ⟩ + b | 01 ⟩ ⟩ + c | 10 ⟩ ⟩ + d | 11 ⟩ ⟩ {\displaystyle |\Psi \rangle =a|00\rangle +b|01\rangle +c|10\rangle +d|11\rangle } where a = d = 1 2 {\displaystyle a=d={\frac {1}{\sqrt {2}}}} and b = c = 0 {\displaystyle b=c=0} .

Therefore, it can be described by the plane spanned by the basis vectors | 00 ⟩ ⟩ {\displaystyle |00\rangle } and | 11 ⟩ ⟩ {\displaystyle |11\rangle } , as in the picture. The unit sphere (in C 4 {\displaystyle \mathbb {C} ^{4}} ) that represent the possible value-space of the 2-qubit system intersects the plane and | Ψ Ψ ⟩ ⟩ {\displaystyle |\Psi \rangle } lies on the unit spheres surface. Because | a | 2 = | d | 2 = 1 / 2 {\displaystyle |a|^{2}=|d|^{2}=1/2} , there is equal probability of measuring this state to | 00 ⟩ ⟩ {\displaystyle |00\rangle } or | 11 ⟩ ⟩ {\displaystyle |11\rangle } , and because b = c = 0 {\displaystyle b=c=0} there is zero probability of measuring it to | 01 ⟩ ⟩ {\displaystyle |01\rangle } or | 10 ⟩ ⟩ {\displaystyle |10\rangle } .

This resulting state is the Bell state | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 = 1 2 [ 1 0 0 1 ] {\displaystyle {\frac {|00\rangle +|11\rangle }{\sqrt {2}}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1\\0\\0\\1\end{bmatrix}}} .

It cannot be described as a tensor product of two qubits. There is no solution for [ x y ] ⊗ ⊗ [ w z ] = [ x w x z y w y z ] = 1 2 [ 1 0 0 1 ] , {\displaystyle {\begin{bmatrix}x\\y\end{bmatrix}}\otimes {\begin{bmatrix}w\\z\end{bmatrix}}={\begin{bmatrix}xw\\xz\\yw\\yz\end{bmatrix}}={\frac {1}{\sqrt {2}}}{\begin{bmatrix}1\\0\\0\\1\end{bmatrix}},} because for example w needs to be both non-zero and zero in the case of xw and yw .

The quantum state spans the two qubits. This is called entanglement . Measuring one of the two qubits that make up this Bell state will result in that the other qubit logically must have the same value, both must be the same: Either it will be found in the state | 00 ⟩ ⟩ {\displaystyle |00\rangle } , or in the state | 11 ⟩ ⟩ {\displaystyle |11\rangle } .

If we measure one of the qubits to be for example | 1 ⟩ ⟩ {\displaystyle |1\rangle } , then the other qubit must also be | 1 ⟩ ⟩ {\displaystyle |1\rangle } , because their combined state became | 11 ⟩ ⟩ {\displaystyle |11\rangle } .

Measurement of one of the qubits collapses the entire quantum state, that span the two qubits.

The GHZ state is a similar entangled quantum state that spans three or more qubits.

This type of value-assignment occurs instantaneously over any distance and this has as of 2018 been experimentally verified by QUESS for distances of up to 1200 kilometers.

[ 34 ] [ 35 ] [ 36 ] That the phenomena appears to happen instantaneously as opposed to the time it would take to traverse the distance separating the qubits at the speed of light is called the EPR paradox , and it is an open question in physics how to resolve this. Originally it was solved by giving up the assumption of local realism , but other interpretations have also emerged. For more information see the Bell test experiments . The no-communication theorem proves that this phenomenon cannot be used for faster-than-light communication of classical information .

Measurement on registers with pairwise entangled qubits [ edit ] The effect of a unitary transform F on a register A that is in a superposition of 2 n {\displaystyle 2^{n}} states and pairwise entangled with the register B. Here, n is 3 (each register has 3 qubits).

Take a register A with n qubits all initialized to | 0 ⟩ ⟩ {\displaystyle |0\rangle } , and feed it through a parallel Hadamard gate H ⊗ ⊗ n {\textstyle H^{\otimes n}} .

Register A will then enter the state 1 2 n ∑ ∑ k = 0 2 n − − 1 | k ⟩ ⟩ {\textstyle {\frac {1}{\sqrt {2^{n}}}}\sum _{k=0}^{2^{n}-1}|k\rangle } that have equal probability of when measured to be in any of its 2 n {\displaystyle 2^{n}} possible states; | 0 ⟩ ⟩ {\displaystyle |0\rangle } to | 2 n − − 1 ⟩ ⟩ {\displaystyle |2^{n}-1\rangle } .

Take a second register B, also with n qubits initialized to | 0 ⟩ ⟩ {\displaystyle |0\rangle } and pairwise CNOT its qubits with the qubits in register A, such that for each p the qubits A p {\displaystyle A_{p}} and B p {\displaystyle B_{p}} forms the state | A p B p ⟩ ⟩ = | 00 ⟩ ⟩ + | 11 ⟩ ⟩ 2 {\displaystyle |A_{p}B_{p}\rangle ={\frac {|00\rangle +|11\rangle }{\sqrt {2}}}} .

If we now measure the qubits in register A, then register B will be found to contain the same value as A. If we however instead apply a quantum logic gate F on A and then measure, then | A ⟩ ⟩ = F | B ⟩ ⟩ ⟺ ⟺ F † † | A ⟩ ⟩ = | B ⟩ ⟩ {\displaystyle |A\rangle =F|B\rangle \iff F^{\dagger }|A\rangle =|B\rangle } , where F † † {\displaystyle F^{\dagger }} is the unitary inverse of F .

Because of how unitary inverses of gates act, F † † | A ⟩ ⟩ = F − − 1 ( | A ⟩ ⟩ ) = | B ⟩ ⟩ {\displaystyle F^{\dagger }|A\rangle =F^{-1}(|A\rangle )=|B\rangle } .

For example, say F ( x ) = x + 3 ( mod 2 n ) {\displaystyle F(x)=x+3{\pmod {2^{n}}}} , then | B ⟩ ⟩ = | A − − 3 ( mod 2 n ) ⟩ ⟩ {\displaystyle |B\rangle =|A-3{\pmod {2^{n}}}\rangle } .

The equality will hold no matter in which order measurement is performed (on the registers A or B), assuming that F has run to completion. Measurement can even be randomly and concurrently interleaved qubit by qubit, since the measurements assignment of one qubit will limit the possible value-space from the other entangled qubits.

Even though the equalities holds, the probabilities for measuring the possible outcomes may change as a result of applying F , as may be the intent in a quantum search algorithm.

This effect of value-sharing via entanglement is used in Shor's algorithm , phase estimation and in quantum counting . Using the Fourier transform to amplify the probability amplitudes of the solution states for some problem is a generic method known as " Fourier fishing ".

[ 37 ] Logic function synthesis [ edit ] A quantum full adder , given by Feynman in 1986.

[ 3 ] It consists of only Toffoli and CNOT gates. The gate that is surrounded by the dotted square in this picture can be omitted if uncomputation to restore the B output is not required.

Functions and routines that only use gates can themselves be described as matrices, just like the smaller gates. The matrix that represents a quantum function acting on q {\displaystyle q} qubits has size 2 q × × 2 q {\displaystyle 2^{q}\times 2^{q}} .

For example, a function that acts on a "qubyte" (a register of 8 qubits) would be represented by a matrix with 2 8 × × 2 8 = 256 × × 256 {\displaystyle 2^{8}\times 2^{8}=256\times 256} elements.

Unitary transformations that are not in the set of gates natively available at the quantum computer (the primitive gates) can be synthesised, or approximated, by combining the available primitive gates in a circuit . One way to do this is to factor the matrix that encodes the unitary transformation into a product of tensor products (i.e.

series and parallel circuits) of the available primitive gates. The group U(2 q ) is the symmetry group for the gates that act on q {\displaystyle q} qubits.

[ 2 ] Factorization is then the problem of finding a path in U(2 q ) from the generating set of primitive gates. The Solovay–Kitaev theorem shows that given a sufficient set of primitive gates, there exist an efficient approximate for any gate. For the general case with a large number of qubits this direct approach to circuit synthesis is intractable .

[ 38 ] [ 39 ] This puts a limit on how large functions can be brute-force factorized into primitive quantum gates. Typically quantum programs are instead built using relatively small and simple quantum functions, similar to normal classical programming.

Because of the gates unitary nature, all functions must be reversible and always be bijective mappings of input to output. There must always exist a function F − − 1 {\displaystyle F^{-1}} such that F − − 1 ( F ( | ψ ψ ⟩ ⟩ ) ) = | ψ ψ ⟩ ⟩ {\displaystyle F^{-1}(F(|\psi \rangle ))=|\psi \rangle } .

Functions that are not invertible can be made invertible by adding ancilla qubits to the input or the output, or both. After the function has run to completion, the ancilla qubits can then either be uncomputed or left untouched. Measuring or otherwise collapsing the quantum state of an ancilla qubit (e.g. by re-initializing the value of it, or by its spontaneous decoherence ) that have not been uncomputed may result in errors, [ 40 ] [ 41 ] as their state may be entangled with the qubits that are still being used in computations.

Logically irreversible operations, for example addition modulo 2 n {\displaystyle 2^{n}} of two n {\displaystyle n} -qubit registers a and b , F ( a , b ) = a + b ( mod 2 n ) {\displaystyle F(a,b)=a+b{\pmod {2^{n}}}} , [ h ] can be made logically reversible by adding information to the output, so that the input can be computed from the output (i.e. there exists a function F − − 1 {\displaystyle F^{-1}} ).

In our example, this can be done by passing on one of the input registers to the output: F ( | a ⟩ ⟩ ⊗ ⊗ | b ⟩ ⟩ ) = | a + b ( mod 2 n ) ⟩ ⟩ ⊗ ⊗ | a ⟩ ⟩ {\displaystyle F(|a\rangle \otimes |b\rangle )=|a+b{\pmod {2^{n}}}\rangle \otimes |a\rangle } .

The output can then be used to compute the input (i.e. given the output a + b {\displaystyle a+b} and a {\displaystyle a} , we can easily find the input; a {\displaystyle a} is given and ( a + b ) − − a = b {\displaystyle (a+b)-a=b} ) and the function is made bijective.

All Boolean algebraic expressions can be encoded as unitary transforms (quantum logic gates), for example by using combinations of the Pauli-X , CNOT and Toffoli gates. These gates are functionally complete in the Boolean logic domain.

There are many unitary transforms available in the libraries of Q# , QCL , Qiskit , and other quantum programming languages. It also appears in the literature.

[ 42 ] [ 43 ] For example, i n c ( | x ⟩ ⟩ ) = | x + 1 ( mod 2 x length ) ⟩ ⟩ {\displaystyle \mathrm {inc} (|x\rangle )=|x+1{\pmod {2^{x_{\text{length}}}}}\rangle } , where x length {\displaystyle x_{\text{length}}} is the number of qubits that constitutes the register x {\displaystyle x} , is implemented as the following in QCL: [ 44 ] [ 13 ] [ 12 ] cond qufunct inc ( qureg x ) { // increment register int i ; for i = # x - 1 to 0 step - 1 { CNot ( x [ i ], x [ 0 :: i ]); // apply controlled-not from } // MSB to LSB } The generated circuit, when x length = 4 {\displaystyle x_{\text{length}}=4} . The symbols ⊕ ⊕ {\displaystyle \oplus } , ∧ ∧ {\displaystyle \land } and ¬ ¬ {\displaystyle \neg } denotes XOR , AND and NOT respectively, and comes from the Boolean representation of Pauli- X with zero or more control qubits when applied to states that are in the computational basis.

In QCL, decrement is done by "undoing" increment. The prefix !

is used to instead run the unitary inverse of the function.

!inc(x) is the inverse of inc(x) and instead performs the operation i n c † † | x ⟩ ⟩ = i n c − − 1 ( | x ⟩ ⟩ ) = | x − − 1 ( mod 2 x length ) ⟩ ⟩ {\displaystyle \mathrm {inc} ^{\dagger }|x\rangle =\mathrm {inc} ^{-1}(|x\rangle )=|x-1{\pmod {2^{x_{\text{length}}}}}\rangle } .

The cond keyword means that the function can be conditional .

[ 11 ] In the model of computation used in this article (the quantum circuit model), a classic computer generates the gate composition for the quantum computer, and the quantum computer behaves as a coprocessor that receives instructions from the classical computer about which primitive gates to apply to which qubits.

[ 13 ] : 36–43 [ 14 ] Measurement of quantum registers results in binary values that the classical computer can use in its computations.

Quantum algorithms often contain both a classical and a quantum part. Unmeasured I/O (sending qubits to remote computers without collapsing their quantum states) can be used to create networks of quantum computers .

Entanglement swapping can then be used to realize distributed algorithms with quantum computers that are not directly connected. Examples of distributed algorithms that only require the use of a handful of quantum logic gates are superdense coding , the quantum Byzantine agreement and the BB84 cipherkey exchange protocol .

See also [ edit ] Further information: List of quantum logic gates Adiabatic quantum computation BQP Cellular automaton Cloud-based quantum computing Counterfactual definiteness Counterfactual quantum computation Landauer's principle Logical connective One-way quantum computer Quantum algorithm Quantum cellular automaton Quantum channel Quantum finite automaton Quantum logic Quantum memory Quantum network Quantum Zeno effect Reversible computing Unitary transformation (quantum mechanics) Notes [ edit ] ^ Matrix multiplication of quantum gates is defined as series circuits .

^ Note, here a full rotation about the Bloch sphere is 2 π π {\displaystyle 2\pi } radians, as opposed to the rotation operator gates where a full turn is 4 π π .

{\displaystyle 4\pi .} ^ Either the P or Ph gate can be used, as R z ( δ δ ) Ph ⁡ ⁡ ( δ δ / 2 ) = P ( δ δ ) {\displaystyle R_{z}(\delta )\operatorname {Ph} (\delta /2)=P(\delta )} [ 2 ] : 11 [ 1 ] : 76–83 ^ This set generates every possible unitary gate exactly. However as the global phase is irrelevant in the  measurement output, universal quantum subsets can be constructed e.g. the set containing R y ( θ ) , R z ( θ ) and CNOT only spans all unitaries with determinant ±1 but it is sufficient for quantum computation.

^ a b If this actually is a stochastic effect depends on which interpretation of quantum mechanics that is correct (and if any interpretation can be correct). For example, De Broglie–Bohm theory and the many-worlds interpretation asserts determinism . (In the many-worlds interpretation, a quantum computer is a machine that runs programs ( quantum circuits ) that selects a reality where the probability of it having the solution states of a problem is large. That is, the machine more often than not ends up in a reality where it gives the correct answer. Because all outcomes are realized in separate universes according to the many-worlds interpretation, the total outcome is deterministic. This interpretation does however not change the mechanics by which the machine operates.) ^ See Probability axioms § Second axiom ^ The hypotenuse has length 1 because the probabilities sum to 1, so the quantum state vector is a unit vector .

^ The input is 2 n {\displaystyle 2n} qubits, but the output is just n {\displaystyle n} qubits. Information erasure is not a reversible (or unitary ) operation, and therefore not allowed. See also Landauer's principle .

References [ edit ] ^ a b c d e f g h i j k Colin P. Williams (2011).

Explorations in Quantum Computing .

Springer .

ISBN 978-1-84628-887-6 .

^ a b c d e f g Barenco, Adriano; Bennett, Charles H.; Cleve, Richard; DiVincenzo, David P.; Margolus, Norman; Shor, Peter; Sleator, Tycho; Smolin, John A.; Weinfurter, Harald (1995-11-01). "Elementary gates for quantum computation".

Physical Review A .

52 (5). American Physical Society (APS): 3457– 3467.

arXiv : quant-ph/9503016 .

Bibcode : 1995PhRvA..52.3457B .

doi : 10.1103/physreva.52.3457 .

ISSN 1050-2947 .

PMID 9912645 .

S2CID 8764584 .

^ a b Feynman, Richard P. (1986). "Quantum mechanical computers".

Foundations of Physics .

16 (6). Springer Science and Business Media LLC: 507– 531.

Bibcode : 1986FoPh...16..507F .

doi : 10.1007/bf01886518 .

ISSN 0015-9018 .

S2CID 122076550 .

^ a b c d e f g h i Nielsen, Michael A.

; Chuang, Isaac (2010).

Quantum Computation and Quantum Information . Cambridge: Cambridge University Press .

ISBN 978-1-10700-217-3 .

OCLC 43641333 .

^ a b c d e Yanofsky, Noson S.; Mannucci, Mirco (2013).

Quantum computing for computer scientists .

Cambridge University Press .

ISBN 978-0-521-87996-5 .

^ Preskill, John (2021-06-06). "Quantum computing 40 years later". pp.

10– 15.

arXiv : 2106.10522 [ quant-ph ].

^ "Circuit Library" . IBM ( Qiskit ).

^ "cQASM: Qubit gate operations" . QuTech. Archived from the original on 2024-05-11 . Retrieved 2021-10-06 .

^ "Microsoft.Quantum.Intrinsic namespace" . Microsoft ( Q# ). 28 July 2023.

^ a b Operations and Functions (Q# documentation) ^ a b Ömer, Bernhard (2 September 2009).

"Structured Quantum Programming" (PDF) . Institute for Theoretical Physics, Vienna University of Technology. pp. 72, 92– 107. Archived from the original (PDF) on March 27, 2022.

^ a b Ömer, Bernhard (29 Apr 2003). "Classical Concepts in Quantum Programming".

International Journal of Theoretical Physics .

44 (7): 943– 955.

arXiv : quant-ph/0211100 .

doi : 10.1007/s10773-005-7071-x .

S2CID 119373370 .

^ a b c d Ömer, Bernhard (2000-01-20).

Quantum Programming in QCL (PDF) (Thesis). Institute for Theoretical Physics, Vienna University of Technology. Archived from the original (PDF) on June 1, 2022 . Retrieved 2021-05-24 .

^ a b Pauka SJ, Das W, Kalra R, Moini A, Yang Y, Trainer M, Bousquet A, Cantaloube C, Dick N, Gardner GC, Manfra MJ, Reilly DJ (2021). "A cryogenic CMOS chip for generating control signals for multiple qubits".

Nature Electronics .

4 (4): 64– 70.

arXiv : 1912.01299 .

doi : 10.1038/s41928-020-00528-y .

S2CID 231715555 .

^ "TdgGate" .

Qiskit online documentation.

^ "T dagger Gate" .

cQASM online documentation.

^ a b Aharonov, Dorit (2003-01-09). "A Simple Proof that Toffoli and Hadamard are Quantum Universal".

arXiv : quant-ph/0301040 .

^ Sawicki, Adam; Karnas, Katarzyna (2017-11-01).

"Universality of Single-Qudit Gates" .

Annales Henri Poincaré .

18 (11): 3515– 3552.

arXiv : 1609.05780 .

Bibcode : 2017AnHP...18.3515S .

doi : 10.1007/s00023-017-0604-z .

ISSN 1424-0661 .

S2CID 253594045 .

^ Sawicki, Adam; Mattioli, Lorenzo; Zimborás, Zoltán (2022-05-12).

"Universality verification for a set of quantum gates" .

Physical Review A .

105 (5): 052602.

arXiv : 2111.03862 .

Bibcode : 2022PhRvA.105e2602S .

doi : 10.1103/PhysRevA.105.052602 .

S2CID 248761038 .

^ Williams, Colin P. (2011), Williams, Colin P. (ed.), "Quantum Gates" , Explorations in Quantum Computing , Texts in Computer Science, London: Springer, pp.

51– 122, doi : 10.1007/978-1-84628-887-6_2 , ISBN 978-1-84628-887-6 , retrieved 2021-05-14 ^ Deutsch, David (September 8, 1989), "Quantum computational networks", Proc. R. Soc. Lond. A , 425 (1989): 73– 90, Bibcode : 1989RSPSA.425...73D , doi : 10.1098/rspa.1989.0099 , S2CID 123073680 ^ Shi, Xiao-Feng (2018-05-22).

"Deutsch, Toffoli, and cnot Gates via Rydberg Blockade of Neutral Atoms" .

Physical Review Applied .

9 (5): 051001.

arXiv : 1710.01859 .

Bibcode : 2018PhRvP...9e1001S .

doi : 10.1103/PhysRevApplied.9.051001 .

ISSN 2331-7019 .

S2CID 118909059 .

^ "I operation" .

docs.microsoft.com . 28 July 2023.

^ "IGate" .

qiskit.org .

Qiskit online documentation.

^ a b Loss, Daniel; DiVincenzo, David P. (1998-01-01).

"Quantum computation with quantum dots" .

Physical Review A .

57 (1): 120– 126.

arXiv : cond-mat/9701055 .

Bibcode : 1998PhRvA..57..120L .

doi : 10.1103/physreva.57.120 .

ISSN 1050-2947 .

Example in eq. 2.

^ Raz, Ran (2002). "On the complexity of matrix product".

Proceedings of the thiry-fourth annual ACM Symposium on Theory of Computing . pp.

144– 151.

doi : 10.1145/509907.509932 .

ISBN 1581134959 .

S2CID 9582328 .

^ "UnitaryGate § UnitaryGate adjoint()" .

docs.quantum.ibm.com .

^ Griffiths, D.J.

(2008).

Introduction to Elementary Particles (2nd ed.) .

John Wiley & Sons . pp.

115– 121, 126.

ISBN 978-3-527-40601-2 .

^ David Albert (1994).

Quantum mechanics and experience .

Harvard University Press . p. 35.

ISBN 0-674-74113-7 .

^ Sean M. Carroll (2019).

Spacetime and geometry: An introduction to general relativity .

Cambridge University Press . pp.

376– 394.

ISBN 978-1-108-48839-6 .

^ David Wallace (2012).

The emergent multiverse: Quantum theory according to the Everett Interpretation .

Oxford University Press .

ISBN 9780199546961 .

^ Sean M. Carroll (2019).

Something deeply hidden: Quantum worlds and the emergence of spacetime .

Penguin Random House .

ISBN 9781524743017 .

^ Q# Online manual: Measurement ^ Juan Yin; Yuan Cao; Yu-Huai Li; Sheng-Kai Liao; Liang Zhang; Ji-Gang Ren; Wen-Qi Cai; Wei-Yue Liu; Bo Li; Hui Dai; Guang-Bing Li; Qi-Ming Lu; Yun-Hong Gong; Yu Xu; Shuang-Lin Li; Feng-Zhi Li; Ya-Yun Yin; Zi-Qing Jiang; Ming Li; Jian-Jun Jia; Ge Ren; Dong He; Yi-Lin Zhou; Xiao-Xiang Zhang; Na Wang; Xiang Chang; Zhen-Cai Zhu; Nai-Le Liu; Yu-Ao Chen; Chao-Yang Lu; Rong Shu; Cheng-Zhi Peng; Jian-Yu Wang; Jian-Wei Pan (2017). "Satellite-based entanglement distribution over 1200 kilometers".

Quantum Optics .

356 (6343): 1140– 1144.

arXiv : 1707.01339 .

doi : 10.1126/science.aan3211 .

PMID 28619937 .

S2CID 5206894 .

^ Billings, Lee (23 April 2020).

"China Shatters "Spooky Action at a Distance" Record, Preps for Quantum Internet" .

Scientific American .

^ Popkin, Gabriel (15 June 2017).

"China's quantum satellite achieves 'spooky action' at record distance" .

Science – AAAS .

^ Aaronson, Scott (2009). "BQP and the Polynomial Hierarchy".

arXiv : 0910.4698 [ quant-ph ].

^ Dawson, Christopher M.; Nielsen, Michael (2006-01-01).

"The Solovay-Kitaev algorithm" .

Quantum Information and Computation .

6 (1). Section 5.1, equation 23.

arXiv : quant-ph/0505030 .

doi : 10.26421/QIC6.1-6 .

^ Matteo, Olivia Di (2016).

"Parallelizing quantum circuit synthesis" .

Quantum Science and Technology .

1 (1): 015003.

arXiv : 1606.07413 .

Bibcode : 2016QS&T....1a5003D .

doi : 10.1088/2058-9565/1/1/015003 .

S2CID 62819073 .

^ Aaronson, Scott (2002). "Quantum Lower Bound for Recursive Fourier Sampling".

Quantum Information and Computation .

3 (2): 165– 174.

arXiv : quant-ph/0209060 .

Bibcode : 2002quant.ph..9060A .

doi : 10.26421/QIC3.2-7 .

^ Q# online manual: Quantum Memory Management ^ Ryo, Asaka; Kazumitsu, Sakai; Ryoko, Yahagi (2020).

"Quantum circuit for the fast Fourier transform" .

Quantum Information Processing .

19 (277): 277.

arXiv : 1911.03055 .

Bibcode : 2020QuIP...19..277A .

doi : 10.1007/s11128-020-02776-5 .

S2CID 207847474 .

^ Montaser, Rasha (2019). "New Design of Reversible Full Adder/Subtractor using R gate".

International Journal of Theoretical Physics .

58 (1): 167– 183.

arXiv : 1708.00306 .

Bibcode : 2019IJTP...58..167M .

doi : 10.1007/s10773-018-3921-1 .

S2CID 24590164 .

^ QCL 0.6.4 source code, the file "lib/examples.qcl" Sources [ edit ] Nielsen, Michael A.

; Chuang, Isaac (2000).

Quantum Computation and Quantum Information . Cambridge: Cambridge University Press .

ISBN 0521632358 .

OCLC 43641333 .

Williams, Colin P. (2011).

Explorations in Quantum Computing .

Springer .

ISBN 978-1-84628-887-6 .

Yanofsky, Noson S.; Mannucci, Mirco (2013).

Quantum computing for computer scientists .

Cambridge University Press .

ISBN 978-0-521-87996-5 .

v t e Quantum information science General DiVincenzo's criteria NISQ era Quantum computing timeline Quantum information Quantum programming Quantum simulation Qubit physical vs. logical Quantum processors cloud-based Theorems Bell's Eastin–Knill Gleason's Gottesman–Knill Holevo's No-broadcasting No-cloning No-communication No-deleting No-hiding No-teleportation PBR Quantum speed limit Threshold Solovay–Kitaev Schrödinger-HJW Quantum communication Classical capacity entanglement-assisted quantum capacity Entanglement distillation Entanglement swapping Monogamy of entanglement LOCC Quantum channel quantum network State purification Quantum teleportation quantum energy teleportation quantum gate teleportation Superdense coding Quantum cryptography Post-quantum cryptography Quantum coin flipping Quantum money Quantum key distribution BB84 SARG04 other protocols Quantum secret sharing Quantum algorithms Algorithmic cooling Amplitude amplification Bernstein–Vazirani BHT Boson sampling Deutsch–Jozsa Grover's HHL Hidden subgroup Magic state distillation Quantum annealing Quantum counting Quantum Fourier transform Quantum optimization Quantum phase estimation Shor's Simon's VQE Quantum complexity theory BQP DQC1 EQP QIP QMA PostBQP Quantum processor benchmarks Quantum supremacy Quantum volume Randomized benchmarking XEB Relaxation times T 1 T 2 Quantum computing models Adiabatic quantum computation Continuous-variable quantum information One-way quantum computer cluster state Quantum circuit quantum logic gate Quantum machine learning quantum neural network Quantum Turing machine Topological quantum computer Hamiltonian quantum computation Quantum error correction Codes 5 qubit CSS GKP quantum convolutional stabilizer Shor Bacon–Shor Steane Toric gnu Entanglement-assisted Physical implementations Quantum optics Cavity QED Circuit QED Linear optical QC KLM protocol Ultracold atoms Neutral atom QC Trapped-ion QC Spin -based Kane QC Spin qubit QC NV center NMR QC Superconducting Charge qubit Flux qubit Phase qubit Transmon Quantum programming OpenQASM – Qiskit – IBM QX Quil – Forest/Rigetti QCS Cirq Q# libquantum many others...

Quantum information science Quantum mechanics topics v t e Emerging technologies Fields Quantum algorithms amplifier bus cellular automata channel circuit complexity theory computing cryptography post-quantum dynamics electronics error correction finite automata image processing imaging information key distribution logic logic clock logic gate machine machine learning metamaterial network neural network optics programming sensing simulator teleportation Other Acoustic levitation Anti-gravity Cloak of invisibility Digital scent technology Force field Plasma window Immersive virtual reality Magnetic refrigeration Phased-array optics Thermoacoustic heat engine List NewPP limit report
Parsed by mw‐web.codfw.main‐597b4b5bbd‐ftfw2
Cached time: 20250815000200
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 1.433 seconds
Real time usage: 1.806 seconds
Preprocessor visited node count: 16644/1000000
Revision size: 77773/2097152 bytes
Post‐expand include size: 180449/2097152 bytes
Template argument size: 11169/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 22/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 210097/5000000 bytes
Lua time usage: 0.672/10.000 seconds
Lua memory usage: 24810076/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00% 1136.948      1 -total
 15.85%  180.158     26 Template:R
 14.93%  169.697     26 Template:R/ref
 13.80%  156.941     12 Template:Cite_book
 11.98%  136.164      1 Template:IPA
 10.55%  119.942     26 Template:R/superscript
  9.91%  112.659      1 Template:Short_description
  8.56%   97.316     14 Template:Cite_journal
  8.46%   96.209      5 Template:Navbox
  7.50%   85.274      1 Template:Quantum_computing Saved in parser cache with key enwiki:pcache:888587:|#|:idhash:canonical and timestamp 20250815000200 and revision id 1304603273. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Quantum_logic_gate&oldid=1304603273 " Categories : Quantum gates Quantum information science Logic gates Australian inventions Hidden categories: Articles with short description Short description matches Wikidata Use American English from April 2019 All Wikipedia articles written in American English Pages using multiple image with auto scaled images Pages with French IPA This page was last edited on 7 August 2025, at 01:56 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Quantum logic gate 17 languages Add topic

