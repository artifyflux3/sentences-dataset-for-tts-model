Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Structure 2 Unit state probability 3 Equilibrium state 4 Training 5 Problems 6 Types Toggle Types subsection 6.1 Restricted Boltzmann machine 6.2 Deep Boltzmann machine 6.3 Spike-and-slab RBMs 6.4 In mathematics 7 History 8 See also 9 References 10 Further reading 11 External links Toggle the table of contents Boltzmann machine 16 languages Català Deutsch Español فارسی 한국어 עברית മലയാളം 日本語 Português Русский Shqip Suomi Українська Tiếng Việt 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Type of stochastic recurrent neural network A graphical representation of an example Boltzmann machine. Each undirected edge represents dependency. In this example there are 3 hidden units and 4 visible units. This is not a restricted Boltzmann machine.

A Boltzmann machine (also called Sherrington–Kirkpatrick model with external field or stochastic Ising model ), named after Ludwig Boltzmann , is a spin-glass model with an external field, i.e., a Sherrington–Kirkpatrick model , [ 1 ] that is a stochastic Ising model . It is a statistical physics technique applied in the context of cognitive science .

[ 2 ] It is also classified as a Markov random field .

[ 3 ] Boltzmann machines are theoretically intriguing because of the locality and Hebbian nature of their training algorithm (being trained by Hebb's rule), and because of their parallelism and the resemblance of their dynamics to simple physical processes .  Boltzmann machines with unconstrained connectivity have not been proven useful for practical problems in machine learning or inference , but if the connectivity is properly constrained, the learning can be made efficient enough to be useful for practical problems.

[ 4 ] They are named after the Boltzmann distribution in statistical mechanics , which is used in their sampling function .  They were heavily popularized and promoted by Geoffrey Hinton , Terry Sejnowski and Yann LeCun in cognitive sciences communities, particularly in machine learning , [ 2 ] as part of " energy-based models " (EBM), because Hamiltonians of spin glasses as energy are used as a starting point to define the learning task.

[ 5 ] Structure [ edit ] A graphical representation of a Boltzmann machine with a few weights labeled. Each undirected edge represents dependency and is weighted with weight w i j {\displaystyle w_{ij}} . In this example there are 3 hidden units (blue) and 4 visible units (white). This is not a restricted Boltzmann machine.

A Boltzmann machine, like a Sherrington–Kirkpatrick model , is a network of units with a total "energy" ( Hamiltonian ) defined for the overall network. Its units produce binary results. Boltzmann machine weights are stochastic . The global energy E {\displaystyle E} in a Boltzmann machine is identical in form to that of Hopfield networks and Ising models : E = − − ( ∑ ∑ i < j w i j s i s j + ∑ ∑ i θ θ i s i ) {\displaystyle E=-\left(\sum _{i<j}w_{ij}\,s_{i}\,s_{j}+\sum _{i}\theta _{i}\,s_{i}\right)} Where: w i j {\displaystyle w_{ij}} is the connection strength between unit j {\displaystyle j} and unit i {\displaystyle i} .

s i {\displaystyle s_{i}} is the state, s i ∈ ∈ { 0 , 1 } {\displaystyle s_{i}\in \{0,1\}} , of unit i {\displaystyle i} .

θ θ i {\displaystyle \theta _{i}} is the bias of unit i {\displaystyle i} in the global energy function. ( − − θ θ i {\displaystyle -\theta _{i}} is the activation threshold for the unit.) Often the weights w i j {\displaystyle w_{ij}} are represented as a symmetric matrix W = [ w i j ] {\displaystyle W=[w_{ij}]} with zeros along the diagonal.

Unit state probability [ edit ] The difference in the global energy that results from a single unit i {\displaystyle i} equaling 0 (off) versus 1 (on), written Δ Δ E i {\displaystyle \Delta E_{i}} , assuming a symmetric matrix of weights, is given by: Δ Δ E i = ∑ ∑ j > i w i j s j + ∑ ∑ j < i w j i s j + θ θ i {\displaystyle \Delta E_{i}=\sum _{j>i}w_{ij}\,s_{j}+\sum _{j<i}w_{ji}\,s_{j}+\theta _{i}} This can be expressed as the difference of energies of two states: Δ Δ E i = E i=off − − E i=on {\displaystyle \Delta E_{i}=E_{\text{i=off}}-E_{\text{i=on}}} Substituting the energy of each state with its relative probability according to the Boltzmann factor (the property of a Boltzmann distribution that the energy of a state is proportional to the negative log probability of that state)
yields: Δ Δ E i = − − k B T ln ⁡ ⁡ ( p i=off ) − − ( − − k B T ln ⁡ ⁡ ( p i=on ) ) , {\displaystyle \Delta E_{i}=-k_{B}T\ln(p_{\text{i=off}})-(-k_{B}T\ln(p_{\text{i=on}})),} where k B {\displaystyle k_{B}} is the Boltzmann constant and is absorbed into the artificial notion of temperature T {\displaystyle T} .
Noting that the probabilities of the unit being on or off sum to 1 {\displaystyle 1} allows for the simplification: − − Δ Δ E i k B T = − − ln ⁡ ⁡ ( p i = on ) + ln ⁡ ⁡ ( p i = off ) = ln ⁡ ⁡ ( 1 − − p i = on p i = on ) = ln ⁡ ⁡ ( p i = on − − 1 − − 1 ) , {\displaystyle -{\frac {\Delta E_{i}}{k_{B}T}}=-\ln(p_{i={\text{on}}})+\ln(p_{i={\text{off}}})=\ln {\Big (}{\frac {1-p_{i={\text{on}}}}{p_{i={\text{on}}}}}{\Big )}=\ln(p_{i={\text{on}}}^{-1}-1),} whence the probability that the i {\displaystyle i} -th unit is given by p i = on = 1 1 + exp ⁡ ⁡ ( − − Δ Δ E i k B T ) , {\displaystyle p_{i={\text{on}}}={\frac {1}{1+\exp {\Big (}-{\frac {\Delta E_{i}}{k_{B}T}}{\Big )}}},} where the scalar T {\displaystyle T} is referred to as the temperature of the system.
This relation is the source of the logistic function found in probability expressions in variants of the Boltzmann machine.

Equilibrium state [ edit ] The network runs by repeatedly choosing a unit and resetting its state. After running for long enough at a certain temperature, the probability of a global state of the network depends only upon that global state's energy, according to a Boltzmann distribution , and not on the initial state from which the process was started. This means that log-probabilities of global states become linear in their energies. This relationship is true when the machine is "at thermal equilibrium ", meaning that the probability distribution of global states has converged. Running the network beginning from a high temperature, its temperature gradually decreases until reaching a thermal equilibrium at a lower temperature. It then may converge to a distribution where the energy level fluctuates around the global minimum. This process is called simulated annealing .

To train the network so that the chance it will converge to a global state according to an external distribution over these states, the weights must be set so that the global states with the highest probabilities get the lowest energies. This is done by training.

Training [ edit ] The units in the Boltzmann machine are divided into 'visible' units, V, and 'hidden' units, H. The visible units are those that receive information from the 'environment', i.e. the training set is a set of binary vectors over the set V. The distribution over the training set is denoted P + ( V ) {\displaystyle P^{+}(V)} .

The distribution over global states converges as the Boltzmann machine reaches thermal equilibrium . We denote this distribution, after we marginalize it over the hidden units, as P − − ( V ) {\displaystyle P^{-}(V)} .

Our goal is to approximate the "real" distribution P + ( V ) {\displaystyle P^{+}(V)} using the P − − ( V ) {\displaystyle P^{-}(V)} produced by the machine. The similarity of the two distributions is measured by the Kullback–Leibler divergence , G {\displaystyle G} : G = ∑ ∑ v P + ( v ) ln ⁡ ⁡ ( P + ( v ) P − − ( v ) ) {\displaystyle G=\sum _{v}{P^{+}(v)\ln \left({\frac {P^{+}(v)}{P^{-}(v)}}\right)}} where the sum is over all the possible states of V {\displaystyle V} .

G {\displaystyle G} is a function of the weights, since they determine the energy of a state, and the energy determines P − − ( v ) {\displaystyle P^{-}(v)} , as promised by the Boltzmann distribution. A gradient descent algorithm over G {\displaystyle G} changes a given weight, w i j {\displaystyle w_{ij}} ,  by subtracting the partial derivative of G {\displaystyle G} with respect to the weight.

Boltzmann machine training involves two alternating phases. One is the "positive" phase where the visible units' states are clamped to a particular binary state vector sampled from the training set (according to P + {\displaystyle P^{+}} ). The other is the "negative" phase where the network is allowed to run freely, i.e. only the input nodes have their state determined by external data, but the output nodes are allowed to float. The gradient with respect to a given weight, w i j {\displaystyle w_{ij}} , is given by the equation: [ 2 ] ∂ ∂ G ∂ ∂ w i j = − − 1 R [ p i j + − − p i j − − ] {\displaystyle {\frac {\partial {G}}{\partial {w_{ij}}}}=-{\frac {1}{R}}[p_{ij}^{+}-p_{ij}^{-}]} where: p i j + {\displaystyle p_{ij}^{+}} is the probability that units i and j are both on when the machine is at equilibrium on the positive phase.

p i j − − {\displaystyle p_{ij}^{-}} is the probability that units i and j are both on when the machine is at equilibrium on the negative phase.

R {\displaystyle R} denotes the learning rate This result follows from the fact that at thermal equilibrium the probability P − − ( s ) {\displaystyle P^{-}(s)} of any global state s {\displaystyle s} when the network is free-running is given by the Boltzmann distribution.

This learning rule is biologically plausible because the only information needed to change the weights is provided by "local" information. That is, the connection ( synapse , biologically) does not need information about anything other than the two neurons it connects. This is more biologically realistic than the information needed by a connection in many other neural network training algorithms, such as backpropagation .

The training of a Boltzmann machine does not use the EM algorithm , which is heavily used in machine learning . By minimizing the KL-divergence , it is equivalent to maximizing the log-likelihood of the data. Therefore, the training procedure performs gradient ascent on the log-likelihood of the observed data. This is in contrast to the EM algorithm, where the posterior distribution of the hidden nodes must be calculated before the maximization of the expected value of the complete data likelihood during the M-step.

Training the biases is similar, but uses only single node activity: ∂ ∂ G ∂ ∂ θ θ i = − − 1 R [ p i + − − p i − − ] {\displaystyle {\frac {\partial {G}}{\partial {\theta _{i}}}}=-{\frac {1}{R}}[p_{i}^{+}-p_{i}^{-}]} Problems [ edit ] Theoretically the Boltzmann machine is a rather general computational medium. For instance, if trained on photographs, the machine would theoretically model the distribution of photographs, and could use that model to, for example, complete a partial photograph.

Unfortunately, Boltzmann machines experience a serious practical problem, namely that it seems to stop learning correctly when the machine is scaled up to anything larger than a trivial size.

[ citation needed ] This is due to important effects, specifically: the required time order to collect equilibrium statistics grows exponentially with the machine's size, and with the magnitude of the connection strengths [ citation needed ] connection strengths are more plastic when the connected units have activation probabilities intermediate between zero and one, leading to a so-called variance trap. The net effect is that noise causes the connection strengths to follow a random walk until the activities saturate.

Types [ edit ] Restricted Boltzmann machine [ edit ] Graphical representation of a restricted Boltzmann machine. The four blue units represent hidden units, and the three red units represent visible states. In restricted Boltzmann machines there are only connections (dependencies) between hidden and visible units, and none between units of the same type (no hidden-hidden, nor visible-visible connections).

Main article: Restricted Boltzmann machine Although learning is impractical in general Boltzmann machines, it can be made quite efficient in a restricted Boltzmann machine (RBM) which does not allow intralayer connections between hidden units and visible units, i.e. there is no connection between visible to visible and hidden to hidden units. After training one RBM, the activities of its hidden units can be treated as data for training a higher-level RBM. This method of stacking RBMs makes it possible to train many layers of hidden units efficiently and is one of the most common deep learning strategies. As each new layer is added the generative model improves.

An extension to the restricted Boltzmann machine allows using real valued data rather than binary data.

[ 6 ] One example of a practical RBM application is in speech recognition.

[ 7 ] Deep Boltzmann machine [ edit ] A deep Boltzmann machine (DBM) is a type of binary pairwise Markov random field ( undirected probabilistic graphical model ) with multiple layers of hidden random variables . It is a network of symmetrically coupled stochastic binary units . It comprises a set of visible units ν ν ∈ ∈ { 0 , 1 } D {\displaystyle {\boldsymbol {\nu }}\in \{0,1\}^{D}} and layers of hidden units h ( 1 ) ∈ ∈ { 0 , 1 } F 1 , h ( 2 ) ∈ ∈ { 0 , 1 } F 2 , … … , h ( L ) ∈ ∈ { 0 , 1 } F L {\displaystyle {\boldsymbol {h}}^{(1)}\in \{0,1\}^{F_{1}},{\boldsymbol {h}}^{(2)}\in \{0,1\}^{F_{2}},\ldots ,{\boldsymbol {h}}^{(L)}\in \{0,1\}^{F_{L}}} . No connection links units of the same layer (like RBM ). For the DBM , the probability assigned to vector ν is p ( ν ν ) = 1 Z ∑ ∑ h e ∑ ∑ i j W i j ( 1 ) ν ν i h j ( 1 ) + ∑ ∑ j l W j l ( 2 ) h j ( 1 ) h l ( 2 ) + ∑ ∑ l m W l m ( 3 ) h l ( 2 ) h m ( 3 ) , {\displaystyle p({\boldsymbol {\nu }})={\frac {1}{Z}}\sum _{h}e^{\sum _{ij}W_{ij}^{(1)}\nu _{i}h_{j}^{(1)}+\sum _{jl}W_{jl}^{(2)}h_{j}^{(1)}h_{l}^{(2)}+\sum _{lm}W_{lm}^{(3)}h_{l}^{(2)}h_{m}^{(3)}},} where h = { h ( 1 ) , h ( 2 ) , h ( 3 ) } {\displaystyle {\boldsymbol {h}}=\{{\boldsymbol {h}}^{(1)},{\boldsymbol {h}}^{(2)},{\boldsymbol {h}}^{(3)}\}} are the set of hidden units, and θ θ = { W ( 1 ) , W ( 2 ) , W ( 3 ) } {\displaystyle \theta =\{{\boldsymbol {W}}^{(1)},{\boldsymbol {W}}^{(2)},{\boldsymbol {W}}^{(3)}\}} are the model parameters, representing visible-hidden and hidden-hidden interactions.

[ 8 ] In a DBN only the top two layers form a restricted Boltzmann machine (which is an undirected graphical model ), while lower layers form a directed generative model. In a DBM all layers are symmetric and undirected.

Like DBNs , DBMs can learn complex and abstract internal representations of the input in tasks such as object or speech recognition , using limited, labeled data to fine-tune the representations built using a large set of unlabeled sensory input data. However, unlike DBNs and deep convolutional neural networks , they pursue the inference and training procedure in both directions, bottom-up and top-down, which allow the DBM to better unveil the representations of the input structures.

[ 9 ] [ 10 ] [ 11 ] However, the slow speed of DBMs limits their performance and functionality. Because exact maximum likelihood learning is intractable for DBMs, only approximate maximum likelihood learning is possible. Another option is to use mean-field inference to estimate data-dependent expectations and approximate the expected sufficient statistics by using Markov chain Monte Carlo (MCMC).

[ 8 ] This approximate inference, which must be done for each test input, is about 25 to 50 times slower than a single bottom-up pass in DBMs. This makes joint optimization impractical for large data sets, and restricts the use of DBMs for tasks such as feature representation.

Spike-and-slab RBMs [ edit ] The need for deep learning with real-valued inputs, as in Gaussian RBMs, led to the spike-and-slab RBM ( ss RBM ), which models continuous-valued inputs with binary latent variables .

[ 12 ] Similar to basic RBMs and its variants, a spike-and-slab RBM is a bipartite graph , while like G RBMs , the visible units (input) are real-valued. The difference is in the hidden layer, where each hidden unit has a binary spike variable and a real-valued slab variable. A spike is a discrete probability mass at zero, while a slab is a density over continuous domain; [ 13 ] their mixture forms a prior .

[ 14 ] An extension of ss RBM called μ-ss RBM provides extra modeling capacity using additional terms in the energy function . One of these terms enables the model to form a conditional distribution of the spike variables by marginalizing out the slab variables given an observation.

In mathematics [ edit ] Main articles: Gibbs measure and Log-linear model In more general mathematical setting, the Boltzmann distribution is also known as the Gibbs measure . In statistics and machine learning it is called a log-linear model . In deep learning the Boltzmann distribution is used in the sampling distribution of stochastic neural networks such as the Boltzmann machine.

History [ edit ] The Boltzmann machine is based on the Sherrington–Kirkpatrick spin glass model by David Sherrington and Scott Kirkpatrick .

[ 15 ] The seminal publication by John Hopfield (1982) applied methods of statistical mechanics, mainly the recently developed (1970s) theory of spin glasses, to study associative memory (later named the "Hopfield network").

[ 16 ] The original contribution in applying such energy-based models in cognitive science appeared in papers by Geoffrey Hinton and Terry Sejnowski .

[ 17 ] [ 18 ] [ 19 ] In a 1995 interview, Hinton stated that in 1983 February or March, he was going to give a talk on simulated annealing in Hopfield networks, so he had to design a learning algorithm for the talk, resulting in the Boltzmann machine learning algorithm.

[ 20 ] The idea of applying the Ising model with annealed Gibbs sampling was used in Douglas Hofstadter 's Copycat project (1984).

[ 21 ] [ 22 ] The explicit analogy drawn with statistical mechanics in the Boltzmann machine formulation led to the use of terminology borrowed from physics (e.g., "energy"), which became standard in the field. The widespread adoption of this terminology may have been encouraged by the fact that its use led to the adoption of a variety of concepts and methods from statistical mechanics. The various proposals to use simulated annealing for inference were apparently independent.

Similar ideas (with a change of sign in the energy function) are found in Paul Smolensky 's "Harmony Theory".

[ 23 ] Ising models can be generalized to Markov random fields , which find widespread application in linguistics , robotics , computer vision and artificial intelligence .

In 2024, Hopfield and Hinton were awarded Nobel Prize in Physics for their foundational contributions to machine learning , such as the Boltzmann machine.

[ 24 ] See also [ edit ] Restricted Boltzmann machine Helmholtz machine Markov random field (MRF) Ising model (Lenz–Ising model) Hopfield network References [ edit ] ^ Sherrington, David; Kirkpatrick, Scott (1975), "Solvable Model of a Spin-Glass", Physical Review Letters , 35 (35): 1792– 1796, Bibcode : 1975PhRvL..35.1792S , doi : 10.1103/PhysRevLett.35.1792 ^ a b c Ackley, David H.; Hinton, Geoffrey E.; Sejnowski, Terrence J. (1985).

"A Learning Algorithm for Boltzmann Machines" (PDF) .

Cognitive Science .

9 (1): 147– 169.

doi : 10.1207/s15516709cog0901_7 . Archived from the original (PDF) on 18 July 2011.

^ Hinton, Geoffrey E. (2007-05-24).

"Boltzmann machine" .

Scholarpedia .

2 (5): 1668.

Bibcode : 2007SchpJ...2.1668H .

doi : 10.4249/scholarpedia.1668 .

ISSN 1941-6016 .

^ Osborn, Thomas R. (1 January 1990).

"Fast Teaching of Boltzmann Machines with Local Inhibition" .

International Neural Network Conference . Springer Netherlands. pp.

785 .

doi : 10.1007/978-94-009-0643-3_76 .

ISBN 978-0-7923-0831-7 .

^ Nijkamp, E.; Hill, M. E; Han, T. (2020), "On the Anatomy of MCMC-Based Maximum Likelihood Learning of Energy-Based Models" , Proceedings of the AAAI Conference on Artificial Intelligence , 4 (34): 5272– 5280, arXiv : 1903.12370 , doi : 10.1609/aaai.v34i04.5973 ^ Recent Developments in Deep Learning , 22 March 2010, archived from the original on 2021-12-22 , retrieved 2020-02-17 ^ Yu, Dong; Dahl, George; Acero, Alex; Deng, Li (2011).

"Context-Dependent Pre-trained Deep Neural Networks for Large Vocabulary Speech Recognition" (PDF) .

Microsoft Research .

20 .

^ a b Hinton, Geoffrey; Salakhutdinov, Ruslan (2012).

"A better way to pretrain deep Boltzmann machines" (PDF) .

Advances in Neural .

3 : 1– 9. Archived from the original (PDF) on 2017-08-13 . Retrieved 2017-08-18 .

^ Hinton, Geoffrey; Salakhutdinov, Ruslan (2009).

"Efficient Learning of Deep Boltzmann Machines" (PDF) .

Proceedings of the Twelfth International Conference on Artificial Intelligence and Statistics . Vol. 3. pp.

448– 455. Archived from the original (PDF) on 2015-11-06 . Retrieved 2017-08-18 .

^ Bengio, Yoshua; LeCun, Yann (2007).

"Scaling Learning Algorithms towards AI" (PDF) .

Université de Montréal (Preprint).

^ Larochelle, Hugo; Salakhutdinov, Ruslan (2010).

"Efficient Learning of Deep Boltzmann Machines" (PDF) .

Proceedings of the Thirteenth International Conference on Artificial Intelligence and Statistics . pp.

693– 700. Archived from the original (PDF) on 2017-08-14 . Retrieved 2017-08-18 .

^ Courville, Aaron; Bergstra, James; Bengio, Yoshua (2011).

"A Spike and Slab Restricted Boltzmann Machine" (PDF) .

JMLR: Workshop and Conference Proceeding .

15 : 233– 241. Archived from the original (PDF) on 2016-03-04 . Retrieved 2019-08-25 .

^ Courville, Aaron; Bergstra, James; Bengio, Yoshua (2011).

"Unsupervised Models of Images by Spike-and-Slab RBMs" (PDF) .

Proceedings of the 28th International Conference on Machine Learning . Vol. 10. pp.

1– 8. Archived from the original (PDF) on 2016-03-04 . Retrieved 2019-08-25 .

^ Mitchell, T; Beauchamp, J (1988). "Bayesian Variable Selection in Linear Regression".

Journal of the American Statistical Association .

83 (404): 1023– 1032.

doi : 10.1080/01621459.1988.10478694 .

^ Sherrington, David; Kirkpatrick, Scott (1975-12-29). "Solvable Model of a Spin-Glass".

Physical Review Letters .

35 (26): 1792– 1796.

Bibcode : 1975PhRvL..35.1792S .

doi : 10.1103/physrevlett.35.1792 .

ISSN 0031-9007 .

^ Hopfield, J. J. (1982).

"Neural networks and physical systems with emergent collective computational abilities" .

Proceedings of the National Academy of Sciences of the United States of America .

79 (8). [s.n.]: 2554– 8.

Bibcode : 1982PNAS...79.2554H .

doi : 10.1073/pnas.79.8.2554 .

OCLC 848771572 .

PMC 346238 .

PMID 6953413 .

^ Hinton, Geoffery; Sejnowski, Terrence J. (May 1983).

Analyzing Cooperative Computation . 5th Annual Congress of the Cognitive Science Society. Rochester, New York . Retrieved 17 February 2020 .

[ permanent dead link ] ^ Hinton, Geoffrey E.; Sejnowski, Terrence J. (June 1983).

Optimal Perceptual Inference . IEEE Conference on Computer Vision and Pattern Recognition (CVPR). Washington, D.C.: IEEE Computer Society. pp.

448– 453.

^ Fahlman SE, Hinton GE, Sejnowski TJ.

Massively parallel architectures for Al: NETL, Thistle, and Boltzmann machines.

In: Genesereth MR, editor.

AAAI-83.

Washington, DC: AAAI; 1983. pp. 109–113 ^ Chapter 16. Rosenfeld, Edward, and James A. Anderson, eds. 2000.

Talking Nets: An Oral History of Neural Networks . Reprint edition. The MIT Press.

^ Hofstadter, D. R. (January 1984).

The Copycat Project: An Experiment in Nondeterminism and Creative Analogies . Defense Technical Information Center.

OCLC 227617764 .

^ Hofstadter, Douglas R. (1988). "A Non-Deterministic Approach to Analogy, Involving the Ising Model of Ferromagnetism". In Caianiello, Eduardo R. (ed.).

Physics of cognitive processes . Teaneck, New Jersey: World Scientific.

ISBN 9971-5-0255-0 .

OCLC 750950619 .

^ Smolensky, Paul. "Information processing in dynamical systems: Foundations of harmony theory." (1986): 194-281.

^ Johnston, Hamish (2024-10-08).

"John Hopfield and Geoffrey Hinton share the 2024 Nobel Prize for Physics" .

Physics World . Retrieved 2024-10-18 .

Further reading [ edit ] Hinton, G. E.

; Sejnowski, T. J.

(1986). D. E. Rumelhart; J. L. McClelland (eds.).

"Learning and Relearning in Boltzmann Machines" (PDF) .

Parallel Distributed Processing: Explorations in the Microstructure of Cognition. Volume 1: Foundations : 282– 317. Archived from the original (PDF) on 2010-07-05.

Hinton, G. E.

(2002).

"Training Products of Experts by Minimizing Contrastive Divergence" (PDF) .

Neural Computation .

14 (8): 1771– 1800.

CiteSeerX 10.1.1.35.8613 .

doi : 10.1162/089976602760128018 .

PMID 12180402 .

S2CID 207596505 .

Hinton, G. E.

; Osindero, S.; Teh, Y. (2006).

"A fast learning algorithm for deep belief nets" (PDF) .

Neural Computation .

18 (7): 1527– 1554.

CiteSeerX 10.1.1.76.1541 .

doi : 10.1162/neco.2006.18.7.1527 .

PMID 16764513 .

S2CID 2309950 .

Kothari P (2020): https://www.forbes.com/sites/tomtaulli/2020/02/02/coronavirus-can-ai-artificial-intelligence-make-a-difference/?sh=1eca51e55817 Montufar, Guido (2018).

"Restricted Boltzmann Machines: Introduction and Review" (PDF) .

MPI MiS (Preprint) . Retrieved 1 August 2023 .

External links [ edit ] Scholarpedia article by Hinton about Boltzmann machines Talk at Google by Geoffrey Hinton v t e Statistical mechanics Theory Principle of maximum entropy ergodic theory Statistical thermodynamics Ensembles partition functions equations of state thermodynamic potential : U H F G Maxwell relations Models Ferromagnetism models Ising Potts Heisenberg percolation Particles with force field depletion force Lennard-Jones potential Mathematical approaches Boltzmann equation H-theorem Vlasov equation BBGKY hierarchy stochastic process mean-field theory and conformal field theory Critical phenomena Phase transition Critical exponents correlation length size scaling Entropy Boltzmann Shannon Tsallis Rényi von Neumann Applications Statistical field theory elementary particle superfluidity Condensed matter physics Complex system chaos information theory Boltzmann machine Authority control databases : National Germany NewPP limit report
Parsed by mw‐web.codfw.main‐645954cd9f‐2bk85
Cached time: 20250815210643
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.483 seconds
Real time usage: 0.686 seconds
Preprocessor visited node count: 2748/1000000
Revision size: 29879/2097152 bytes
Post‐expand include size: 79904/2097152 bytes
Template argument size: 2743/2097152 bytes
Highest expansion depth: 17/100
Expensive parser function count: 7/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 106410/5000000 bytes
Lua time usage: 0.287/10.000 seconds
Lua memory usage: 6203866/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  442.860      1 -total
 46.71%  206.857      1 Template:Reflist
 17.46%   77.304      3 Template:Citation
 14.21%   62.949     11 Template:Cite_journal
 14.10%   62.454      1 Template:Statistical_mechanics_topics
 13.74%   60.862      1 Template:Navbox
 12.85%   56.895      1 Template:Short_description
  7.80%   34.542      2 Template:Citation_needed
  7.74%   34.266      2 Template:Pagetype
  7.36%   32.615      3 Template:Fix Saved in parser cache with key enwiki:pcache:1166059:|#|:idhash:canonical and timestamp 20250815210643 and revision id 1272470985. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Boltzmann_machine&oldid=1272470985 " Categories : Neural network architectures Ludwig Boltzmann Mathematical physics Hidden categories: All articles with dead external links Articles with dead external links from June 2024 Articles with permanently dead external links Articles with short description Short description is different from Wikidata All articles with unsourced statements Articles with unsourced statements from January 2013 Articles with unsourced statements from August 2015 This page was last edited on 28 January 2025, at 20:14 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Boltzmann machine 16 languages Add topic

