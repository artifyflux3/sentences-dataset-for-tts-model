Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Formal deductions 2 Propositional logic Toggle Propositional logic subsection 2.1 Frege's Begriffsschrift 2.2 Łukasiewicz's P 2 2.3 Schematic form of P 2 2.3.1 Proof example in P 2 3 Predicate logic (example system) 4 Conservative extensions Toggle Conservative extensions subsection 4.1 Existential quantification 4.2 Conjunction and disjunction 5 See also 6 Notes 7 References 8 External links Toggle the table of contents Hilbert system 6 languages Čeština Deutsch Français Polski Português 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia System of formal deduction in logic In logic , more specifically proof theory , a Hilbert system , sometimes called Hilbert calculus , Hilbert-style system , Hilbert-style proof system , Hilbert-style deductive system or Hilbert–Ackermann system , is a type of formal proof system attributed to Gottlob Frege [ 1 ] and David Hilbert .

[ 2 ] These deductive systems are most often studied for first-order logic , but are of interest for other logics as well.

It is defined as a deductive system that generates theorems from axioms and inference rules, [ 3 ] [ 4 ] [ 5 ] especially if the only postulated inference rule is modus ponens .

[ 6 ] [ 7 ] Every Hilbert system is an axiomatic system , which is used by many authors as a sole less specific term to declare their Hilbert systems, [ 8 ] [ 9 ] [ 10 ] without mentioning any more specific terms. In this context, "Hilbert systems" are contrasted with natural deduction systems, [ 3 ] in which no axioms are used, only inference rules.

While all sources that refer to an "axiomatic" logical proof system characterize it simply as a logical proof system with axioms, sources that use variants of the term "Hilbert system" sometimes define it in different ways, which will not be used in this article. For instance, Troelstra defines a "Hilbert system" as a system with axioms and with → → E {\displaystyle {\rightarrow }E} and ∀ ∀ I {\displaystyle {\forall }I} as the only inference rules.

[ 11 ] A specific set of axioms is also sometimes called "the Hilbert system", [ 12 ] or "the Hilbert-style calculus".

[ 13 ] Sometimes, "Hilbert-style" is used to convey the type of axiomatic system that has its axioms given in schematic form, [ 2 ] as in the § Schematic form of P2 below—but other sources use the term "Hilbert-style" as encompassing both systems with schematic axioms and systems with a rule of substitution, [ 14 ] as this article does. The use of "Hilbert-style" and similar terms to describe axiomatic proof systems in logic is due to the influence of Hilbert and Ackermann 's Principles of Mathematical Logic (1928).

[ 2 ] Most variants of Hilbert systems take a characteristic tack in the way they balance a trade-off between logical axioms and rules of inference .

[ 1 ] [ 6 ] [ 15 ] [ 11 ] Hilbert systems can be characterised by the choice of a large number of schemas of logical axioms and a small set of rules of inference . Systems of natural deduction take the opposite tack, including many deduction rules but very few or no axiom schemas.

[ 3 ] The most commonly studied Hilbert systems have either just one rule of inference – modus ponens , for propositional logics –  or two –  with generalisation , to handle predicate logics , as well –  and several infinite axiom schemas.  Hilbert systems for alethic modal logics , sometimes called Hilbert-Lewis systems , additionally require the necessitation rule . Some systems use a finite list of concrete formulas as axioms instead of an infinite set of formulas via axiom schemas, in which case the uniform substitution rule is required.

[ 14 ] A characteristic feature of the many variants of Hilbert systems is that the context is not changed in any of their rules of inference, while both natural deduction and sequent calculus contain some context-changing rules.

[ 16 ] Thus, if one is interested only in the derivability of tautologies , no hypothetical judgments, then one can formalize the Hilbert system in such a way that its rules of inference contain only judgments of a rather simple form. The same cannot be done with the other two deductions systems: [ citation needed ] as context is changed in some of their rules of inferences, they cannot be formalized so that hypothetical judgments could be avoided –  not even if we want to use them just for proving derivability of tautologies.

Formal deductions [ edit ] This section does not cite any sources .

Please help improve this section by adding citations to reliable sources . Unsourced material may be challenged and removed .

( August 2024 ) ( Learn how and when to remove this message ) A graphic representation of the deduction system In a Hilbert system, a formal deduction (or proof ) is a finite sequence of formulas in which each formula is either an axiom or is obtained from previous formulas by a rule of inference. These formal deductions are meant to mirror natural-language proofs, although they are far more detailed.

Suppose Γ Γ {\displaystyle \Gamma } is a set of formulas, considered as hypotheses . For example, Γ Γ {\displaystyle \Gamma } could be a set of axioms for group theory or set theory . The notation Γ Γ ⊢ ⊢ ϕ ϕ {\displaystyle \Gamma \vdash \phi } means that there is a deduction that ends with ϕ ϕ {\displaystyle \phi } using as axioms only logical axioms and elements of Γ Γ {\displaystyle \Gamma } . Thus, informally, Γ Γ ⊢ ⊢ ϕ ϕ {\displaystyle \Gamma \vdash \phi } means that ϕ ϕ {\displaystyle \phi } is provable assuming all the formulas in Γ Γ {\displaystyle \Gamma } .

Hilbert systems are characterized by the use of numerous schemas of logical axioms . An axiom schema is an infinite set of axioms obtained by substituting all formulas of some form into a specific pattern. The set of logical axioms includes not only those axioms generated from this pattern, but also any generalization of one of those axioms.  A generalization of a formula is obtained by prefixing zero or more universal quantifiers on the formula; for example ∀ ∀ y ( ∀ ∀ x P x y → → P t y ) {\displaystyle \forall y(\forall xPxy\to Pty)} is a generalization of ∀ ∀ x P x y → → P t y {\displaystyle \forall xPxy\to Pty} .

Propositional logic [ edit ] The following are some Hilbert systems that have been used in propositional logic . One of them, the § Schematic form of P2 , is also considered a Frege system .

Frege's Begriffsschrift [ edit ] Axiomatic proofs have been used in mathematics since the famous Ancient Greek textbook, Euclid 's Elements of Geometry , c.

300 BC. But the first known fully formalized proof system that thereby qualifies as a Hilbert system  dates back to Gottlob Frege 's 1879 Begriffsschrift .

[ 9 ] [ 17 ] Frege's system used only implication and negation as connectives, [ 18 ] and it had six axioms, [ 17 ] which were these ones: [ 19 ] [ 20 ] Proposition 1: a ⊃ ⊃ ( b ⊃ ⊃ a ) {\displaystyle a\supset (b\supset a)} Proposition 2: ( c ⊃ ⊃ ( b ⊃ ⊃ a ) ) ⊃ ⊃ ( ( c ⊃ ⊃ b ) ⊃ ⊃ ( c ⊃ ⊃ a ) ) {\displaystyle (c\supset (b\supset a))\supset ((c\supset b)\supset (c\supset a))} Proposition 8: ( d ⊃ ⊃ ( b ⊃ ⊃ a ) ) ⊃ ⊃ ( b ⊃ ⊃ ( d ⊃ ⊃ a ) ) {\displaystyle (d\supset (b\supset a))\supset (b\supset (d\supset a))} Proposition 28: ( b ⊃ ⊃ a ) ⊃ ⊃ ( ¬ ¬ a ⊃ ⊃ ¬ ¬ b ) {\displaystyle (b\supset a)\supset (\neg a\supset \neg b)} Proposition 31: ¬ ¬ ¬ ¬ a ⊃ ⊃ a {\displaystyle \neg \neg a\supset a} Proposition 41: a ⊃ ⊃ ¬ ¬ ¬ ¬ a {\displaystyle a\supset \neg \neg a} These were used by Frege together with modus ponens and a rule of substitution (which was used but never precisely stated) to yield a complete and consistent axiomatization of classical truth-functional propositional logic.

[ 19 ] Łukasiewicz's P 2 [ edit ] Jan Łukasiewicz showed that, in Frege's system, "the third axiom is superfluous since it can be derived from the preceding two axioms, and that the last three axioms can be replaced by the single sentence C C N p N q C q p {\displaystyle CCNpNqCqp} ".

[ 20 ] Which, taken out of Łukasiewicz's Polish notation into modern notation, means ( ¬ ¬ p → → ¬ ¬ q ) → → ( q → → p ) {\displaystyle (\neg p\rightarrow \neg q)\rightarrow (q\rightarrow p)} . Hence, Łukasiewicz is credited [ 17 ] with this system of three axioms: p → → ( q → → p ) {\displaystyle p\to (q\to p)} ( p → → ( q → → r ) ) → → ( ( p → → q ) → → ( p → → r ) ) {\displaystyle (p\to (q\to r))\to ((p\to q)\to (p\to r))} ( ¬ ¬ p → → ¬ ¬ q ) → → ( q → → p ) {\displaystyle (\neg p\to \neg q)\to (q\to p)} Just like Frege's system, this system uses a substitution rule and uses modus ponens as an inference rule.

[ 17 ] The exact same system was given (with an explicit substitution rule) by Alonzo Church , [ 21 ] who referred to it as the system P 2, [ 21 ] [ 22 ] and helped popularize it.

[ 22 ] Schematic form of P 2 [ edit ] One may avoid using the rule of substitution by giving the axioms in schematic form, using them to generate an infinite set of axioms. Hence, using Greek letters to represent schemas (metalogical variables that may stand for any well-formed formulas ), the axioms are given as: [ 9 ] [ 22 ] φ φ → → ( ψ ψ → → φ φ ) {\displaystyle \varphi \to (\psi \to \varphi )} ( φ φ → → ( ψ ψ → → χ χ ) ) → → ( ( φ φ → → ψ ψ ) → → ( φ φ → → χ χ ) ) {\displaystyle (\varphi \to (\psi \to \chi ))\to ((\varphi \to \psi )\to (\varphi \to \chi ))} ( ¬ ¬ φ φ → → ¬ ¬ ψ ψ ) → → ( ψ ψ → → φ φ ) {\displaystyle (\neg \varphi \to \neg \psi )\to (\psi \to \varphi )} The schematic version of P 2 is attributed to John von Neumann , [ 17 ] and is used in the Metamath "set.mm" formal proof database.

[ 22 ] In fact, the very idea of using axiom schemas to replace the rule of substitution is attributed to von Neumann.

[ 23 ] The schematic version of P 2 has also been attributed to Hilbert , and named H {\displaystyle {\mathcal {H}}} in this context.

[ 24 ] Systems for propositional logic whose inference rules are schematic are also called Frege systems ; as the authors that originally defined the term "Frege system" [ 25 ] note, this actually excludes Frege's own system, given above, since it had axioms instead of axiom schemas.

[ 23 ] Proof example in P 2 [ edit ] As an example, a proof of A → → A {\displaystyle A\to A} in P 2 is given below. First, the axioms are given names: (A1) ( p → → ( q → → p ) ) {\displaystyle (p\to (q\to p))} (A2) ( ( p → → ( q → → r ) ) → → ( ( p → → q ) → → ( p → → r ) ) ) {\displaystyle ((p\to (q\to r))\to ((p\to q)\to (p\to r)))} (A3) ( ( ¬ ¬ p → → ¬ ¬ q ) → → ( q → → p ) ) {\displaystyle ((\neg p\to \neg q)\to (q\to p))} And the proof is as follows: A → → ( ( B → → A ) → → A ) {\displaystyle A\to ((B\to A)\to A)} (instance of (A1)) ( A → → ( ( B → → A ) → → A ) ) → → ( ( A → → ( B → → A ) ) → → ( A → → A ) ) {\displaystyle (A\to ((B\to A)\to A))\to ((A\to (B\to A))\to (A\to A))} (instance of (A2)) ( A → → ( B → → A ) ) → → ( A → → A ) {\displaystyle (A\to (B\to A))\to (A\to A)} (from (1) and (2) by modus ponens ) A → → ( B → → A ) {\displaystyle A\to (B\to A)} (instance of (A1)) A → → A {\displaystyle A\to A} (from (4) and (3) by modus ponens) Predicate logic (example system) [ edit ] This section does not cite any sources .

Please help improve this section by adding citations to reliable sources . Unsourced material may be challenged and removed .

( August 2024 ) ( Learn how and when to remove this message ) There is an unlimited amount of axiomatisations of predicate logic, since for any logic there is freedom in choosing axioms and rules that characterise that logic.  We describe here a Hilbert system with nine axioms and just the rule modus ponens, which we call the one-rule axiomatisation and which describes classical equational logic.  We deal with a minimal language for this logic, where formulas use only the connectives ¬ ¬ {\displaystyle \lnot } and → → {\displaystyle \to } and only the quantifier ∀ ∀ {\displaystyle \forall } . Later we show how the system can be extended to include additional logical connectives, such as ∧ ∧ {\displaystyle \land } and ∨ ∨ {\displaystyle \lor } , without enlarging the class of deducible formulas.

The first four logical axiom schemas allow (together with modus ponens) for the manipulation of logical connectives.

P1.

ϕ ϕ → → ϕ ϕ {\displaystyle \phi \to \phi } P2.

ϕ ϕ → → ( ψ ψ → → ϕ ϕ ) {\displaystyle \phi \to \left(\psi \to \phi \right)} P3.

( ϕ ϕ → → ( ψ ψ → → ξ ξ ) ) → → ( ( ϕ ϕ → → ψ ψ ) → → ( ϕ ϕ → → ξ ξ ) ) {\displaystyle \left(\phi \to \left(\psi \rightarrow \xi \right)\right)\to \left(\left(\phi \to \psi \right)\to \left(\phi \to \xi \right)\right)} P4.

( ¬ ¬ ϕ ϕ → → ¬ ¬ ψ ψ ) → → ( ψ ψ → → ϕ ϕ ) {\displaystyle \left(\lnot \phi \to \lnot \psi \right)\to \left(\psi \to \phi \right)} The axiom P1 is redundant, as it follows from P3, P2 and modus ponens (see proof ).  These axioms describe classical propositional logic ; without axiom P4 we get positive implicational logic .

Minimal logic is achieved either by adding instead the axiom P4m, or by defining ¬ ¬ ϕ ϕ {\displaystyle \lnot \phi } as ϕ ϕ → → ⊥ ⊥ {\displaystyle \phi \to \bot } .

P4m.

( ϕ ϕ → → ψ ψ ) → → ( ( ϕ ϕ → → ¬ ¬ ψ ψ ) → → ¬ ¬ ϕ ϕ ) {\displaystyle \left(\phi \to \psi \right)\to \left(\left(\phi \to \lnot \psi \right)\to \lnot \phi \right)} Intuitionistic logic is achieved by adding axioms P4i and P5i to positive implicational logic, or by adding axiom P5i to minimal logic. Both P4i and P5i are theorems of classical propositional logic.

P4i.

( ϕ ϕ → → ¬ ¬ ϕ ϕ ) → → ¬ ¬ ϕ ϕ {\displaystyle \left(\phi \to \lnot \phi \right)\to \lnot \phi } P5i.

¬ ¬ ϕ ϕ → → ( ϕ ϕ → → ψ ψ ) {\displaystyle \lnot \phi \to \left(\phi \to \psi \right)} Note that these are axiom schemas, which represent infinitely many specific instances of axioms.  For example, P1 might represent the particular axiom instance p → → p {\displaystyle p\to p} , or it might represent ( p → → q ) → → ( p → → q ) {\displaystyle \left(p\to q\right)\to \left(p\to q\right)} : the ϕ ϕ {\displaystyle \phi } is a place where any formula can be placed.  A variable such as this that ranges over formulae is called a 'schematic variable'.

With a second rule of uniform substitution (US), we can change each of these axiom schemas into a single axiom, replacing each schematic variable by some propositional variable that isn't mentioned in any axiom to get what we call the substitutional axiomatisation.  Both formalisations have variables, but where the one-rule axiomatisation has schematic variables that are outside the logic's language, the substitutional axiomatisation uses propositional variables that do the same work by expressing the idea of a variable ranging over formulae with a rule that uses substitution.

US. Let ϕ ϕ ( p ) {\displaystyle \phi (p)} be a formula with one or more instances of the propositional variable p {\displaystyle p} , and let ψ ψ {\displaystyle \psi } be another formula.  Then from ϕ ϕ ( p ) {\displaystyle \phi (p)} , infer ϕ ϕ ( ψ ψ ) {\displaystyle \phi (\psi )} .

The next three logical axiom schemas provide ways to add, manipulate, and remove universal quantifiers.

Q5.

∀ ∀ x ( ϕ ϕ ) → → ϕ ϕ [ x := t ] {\displaystyle \forall x\left(\phi \right)\to \phi [x:=t]} where t may be substituted for x in ϕ ϕ {\displaystyle \,\!\phi } Q6.

∀ ∀ x ( ϕ ϕ → → ψ ψ ) → → ( ∀ ∀ x ( ϕ ϕ ) → → ∀ ∀ x ( ψ ψ ) ) {\displaystyle \forall x\left(\phi \to \psi \right)\to \left(\forall x\left(\phi \right)\to \forall x\left(\psi \right)\right)} Q7.

ϕ ϕ → → ∀ ∀ x ( ϕ ϕ ) {\displaystyle \phi \to \forall x\left(\phi \right)} where x is not free in ϕ ϕ {\displaystyle \phi } .

These three additional rules extend the propositional system to axiomatise classical predicate logic .  Likewise, these three rules extend system for intuitionistic propositional logic (with P1-3 and P4i and P5i)  to intuitionistic predicate logic .

Universal quantification is often given an alternative axiomatisation using an extra rule of generalisation, in which case the rules Q6 and Q7 are redundant.

Generalization : If Γ Γ ⊢ ⊢ ϕ ϕ {\displaystyle \Gamma \vdash \phi } and x does not occur free in any formula of Γ Γ {\displaystyle \Gamma } then Γ Γ ⊢ ⊢ ∀ ∀ x ϕ ϕ {\displaystyle \Gamma \vdash \forall x\phi } .

The final axiom schemas are required to work with formulas involving the equality symbol.

I8.

x = x {\displaystyle x=x} for every variable x .

I9.

( x = y ) → → ( ϕ ϕ [ z := x ] → → ϕ ϕ [ z := y ] ) {\displaystyle \left(x=y\right)\to \left(\phi [z:=x]\to \phi [z:=y]\right)} Conservative extensions [ edit ] This section does not cite any sources .

Please help improve this section by adding citations to reliable sources . Unsourced material may be challenged and removed .

( March 2024 ) ( Learn how and when to remove this message ) It is common to include in a Hilbert system only axioms for the logical operators implication and negation towards functional completeness . Given these axioms, it is possible to form conservative extensions of the deduction theorem that permit the use of additional connectives. These extensions are called conservative because if a formula φ involving new connectives is rewritten as a logically equivalent formula θ involving only negation, implication, and universal quantification, then φ is derivable in the extended system if and only if θ is derivable in the original system. When fully extended, a Hilbert system will resemble more closely a system of natural deduction .

Existential quantification [ edit ] Introduction ∀ ∀ x ( ϕ ϕ → → ∃ ∃ y ( ϕ ϕ [ x := y ] ) ) {\displaystyle \forall x(\phi \to \exists y(\phi [x:=y]))} Elimination ∀ ∀ x ( ϕ ϕ → → ψ ψ ) → → ∃ ∃ x ( ϕ ϕ ) → → ψ ψ {\displaystyle \forall x(\phi \to \psi )\to \exists x(\phi )\to \psi } where x {\displaystyle x} is not a free variable of ψ ψ {\displaystyle \psi } .

Conjunction and disjunction [ edit ] Conjunction introduction and elimination introduction: α α → → ( β β → → α α ∧ ∧ β β ) {\displaystyle \alpha \to (\beta \to \alpha \land \beta )} elimination left: α α ∧ ∧ β β → → α α {\displaystyle \alpha \wedge \beta \to \alpha } elimination right: α α ∧ ∧ β β → → β β {\displaystyle \alpha \wedge \beta \to \beta } Disjunction introduction and elimination introduction left: α α → → α α ∨ ∨ β β {\displaystyle \alpha \to \alpha \vee \beta } introduction right: β β → → α α ∨ ∨ β β {\displaystyle \beta \to \alpha \vee \beta } elimination: ( α α → → γ γ ) → → ( ( β β → → γ γ ) → → α α ∨ ∨ β β → → γ γ ) {\displaystyle (\alpha \to \gamma )\to ((\beta \to \gamma )\to \alpha \vee \beta \to \gamma )} See also [ edit ] List of Hilbert systems Natural deduction Sequent calculus Notes [ edit ] ^ a b Máté & Ruzsa 1997:129 ^ a b c Smith, Peter (2013-02-21).

An Introduction to Gödel's Theorems . Cambridge University Press. p. 10.

ISBN 978-1-107-02284-3 .

^ a b c Restall, Greg (2002-09-11).

An Introduction to Substructural Logics . Routledge. pp.

73– 74.

ISBN 978-1-135-11131-1 .

^ Gaifman, Haim (2002).

"A Hilbert Type Deductive System for Sentential Logic, Completeness and Compactness" (PDF) .

Columbia . Retrieved 2024-08-19 .

^ Benthem, Johan van; Gupta, Amitabha; Parikh, Rohit (2011-04-02).

Proof, Computation and Agency: Logic at the Crossroads . Springer Science & Business Media. p. 41.

ISBN 978-94-007-0080-2 .

^ a b Bacon, Andrew (2023-09-29).

A Philosophical Introduction to Higher-order Logics . Taylor & Francis. p. 424.

ISBN 978-1-000-92575-3 .

^ Eijck, Jan van (1991-02-26).

Logics in AI: European Workshop JELIA '90, Amsterdam, The Netherlands, September 10-14, 1990. Proceedings . Springer Science & Business Media. p. 113.

ISBN 978-3-540-53686-4 .

^ Haack, Susan (1978-07-27).

Philosophy of Logics . Cambridge University Press. p. 19.

ISBN 978-0-521-29329-7 .

^ a b c Bostock, David (1997).

Intermediate logic . Oxford : New York: Clarendon Press; Oxford University Press. pp.

4– 5, 8– 13, 18– 19, 22, 27, 29, 191, 194.

ISBN 978-0-19-875141-0 .

^ Lucas, J. R. (2018-10-10).

A Treatise on Time and Space . Routledge. p. 152.

ISBN 978-0-429-68517-0 .

^ a b Troelstra, A. S.; Schwichtenberg, H. (2000).

Basic Proof Theory . Cambridge Tracts in Theoretical Computer Science (2 ed.). Cambridge: Cambridge University Press. p. 51.

doi : 10.1017/cbo9781139168717 .

ISBN 978-0-521-77911-1 .

^ "Introduction to Logic - Chapter 4" .

intrologic.stanford.edu . Retrieved 2024-08-16 .

^ Buss, S. R. (1998-07-09).

Handbook of Proof Theory . Elsevier. pp.

552– 553.

ISBN 978-0-08-053318-6 .

^ a b Ono, Hiroakira (2019-08-02).

Proof Theory and Algebra in Logic . Springer. p. 5.

ISBN 978-981-13-7997-0 .

^ Eijck, Jan van (1991-02-26).

Logics in AI: European Workshop JELIA '90, Amsterdam, The Netherlands, September 10-14, 1990. Proceedings . Springer Science & Business Media. p. 113.

ISBN 978-3-540-53686-4 .

^ Gabbay, Dov M.; Guenthner, Franz (2013-03-14).

Handbook of Philosophical Logic . Springer Science & Business Media. p. 201.

ISBN 978-94-017-0458-8 .

^ a b c d e Smullyan, Raymond M. (2014-07-23).

A Beginner's Guide to Mathematical Logic . Courier Corporation. pp.

102– 103.

ISBN 978-0-486-49237-7 .

^ Franks, Curtis (2023), "Propositional Logic" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Fall 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 2024-03-22 ^ a b Mendelsohn, Richard L. (2005-01-10).

The Philosophy of Gottlob Frege . Cambridge University Press. p. 185.

ISBN 978-1-139-44403-3 .

^ a b Łukasiewicz, Jan (1970).

Jan Lukasiewicz: Selected Works . North-Holland. p. 136.

^ a b Church, Alonzo (1996).

Introduction to Mathematical Logic . Princeton University Press. p. 119.

ISBN 978-0-691-02906-1 .

^ a b c d "Proof Explorer - Home Page - Metamath" .

us.metamath.org . Retrieved 2024-07-02 .

^ a b Cook, Stephen A.; Reckhow, Robert A. (1979).

"The relative efficiency of propositional proof systems" .

The Journal of Symbolic Logic .

44 (1): 39.

doi : 10.2307/2273702 .

ISSN 0022-4812 .

JSTOR 2273702 .

^ Walicki, Michał (2017).

Introduction to mathematical logic (Extended ed.). New Jersey: World Scientific. p. 126.

ISBN 978-981-4719-95-7 .

^ Pudlák, Pavel; Buss, Samuel R. (1995).

"How to lie without being (easily) convicted and the lengths of proofs in propositional calculus" . In Pacholski, Leszek; Tiuryn, Jerzy (eds.).

Computer Science Logic . Lecture Notes in Computer Science. Vol. 933. Berlin, Heidelberg: Springer. p. 152.

doi : 10.1007/BFb0022253 .

ISBN 978-3-540-49404-1 .

References [ edit ] Curry, Haskell B.; Robert Feys (1958).

Combinatory Logic Vol. I . Vol. 1. Amsterdam: North Holland.

Monk, J. Donald (1976).

Mathematical Logic . Graduate Texts in Mathematics. Berlin, New York: Springer-Verlag .

ISBN 978-0-387-90170-1 .

Ruzsa, Imre; Máté, András (1997).

Bevezetés a modern logikába (in Hungarian). Budapest: Osiris Kiadó.

Tarski, Alfred (1990).

Bizonyítás és igazság (in Hungarian). Budapest: Gondolat.

It is a Hungarian translation of Alfred Tarski 's selected papers on semantic theory of truth .

David Hilbert (1927) "The foundations of mathematics", translated by Stephan Bauer-Menglerberg and Dagfinn Føllesdal (pp. 464–479).  in: van Heijenoort, Jean (1967).

From Frege to Gödel: A Source Book in Mathematical Logic, 1879–1931 (3rd printing 1976 ed.). Cambridge MA: Harvard University Press.

ISBN 0-674-32449-8 .

Hilbert's 1927, Based on an earlier 1925 "foundations" lecture (pp. 367–392), presents his 17 axioms—axioms of implication #1-4, axioms about & and V #5-10, axioms of negation #11-12, his logical ε-axiom #13, axioms of equality #14-15, and axioms of number #16-17—along with the other necessary elements of his Formalist "proof theory"—e.g. induction axioms, recursion axioms, etc.; he also offers up a spirited defense against L.E.J. Brouwer's Intuitionism. Also see  Hermann Weyl's (1927) comments and rebuttal (pp. 480–484), Paul Bernay's (1927) appendix to Hilbert's lecture (pp. 485–489) and Luitzen Egbertus Jan Brouwer's (1927) response (pp. 490–495) Kleene, Stephen Cole (1952).

Introduction to Metamathematics (10th impression with 1971 corrections ed.). Amsterdam NY: North Holland Publishing Company.

ISBN 0-7204-2103-9 .

{{ cite book }} : ISBN / Date incompatibility ( help ) See in particular Chapter IV Formal System (pp. 69–85) wherein Kleene presents subchapters §16 Formal symbols, §17 Formation rules, §18 Free and bound variables (including substitution), §19 Transformation rules (e.g. modus ponens) -- and from these he presents 21 "postulates"—18 axioms and 3 "immediate-consequence" relations divided as follows: Postulates for the propostional calculus #1-8, Additional postulates for the predicate calculus #9-12, and Additional postulates for number theory #13-21.

External links [ edit ] Gaifman, Haim.

"A Hilbert Type Deductive System for Sentential Logic, Completeness and Compactness" (PDF) .

Farmer, W. M.

"Propositional logic" (PDF) .

It describes (among others) a specific Hilbert-style proof system (that is restricted to propositional calculus ).

v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal v t e Major topics in Foundations of Mathematics Mathematical logic Peano axioms Mathematical induction Formal system Axiomatic system Hilbert system Natural deduction Mathematical proof Model theory Mathematical constructivism Modal logic List of mathematical logic topics Set theory Set Naive set theory Axiomatic set theory Zermelo set theory Zermelo–Fraenkel set theory Constructive set theory Descriptive set theory Determinacy Russell's paradox List of set theory topics Type theory Axiom of reducibility Simple type theory Dependent type theory Intuitionistic type theory Homotopy type theory Univalent foundations Girard's paradox Category theory Category Topos theory Category of sets Higher category theory ∞-groupoid ∞-topos theory Mathematical structuralism Glossary of category theory List of category theory topics NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐djhv8
Cached time: 20250812033746
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.557 seconds
Real time usage: 0.720 seconds
Preprocessor visited node count: 3142/1000000
Revision size: 27576/2097152 bytes
Post‐expand include size: 147919/2097152 bytes
Template argument size: 1785/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 5/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 131866/5000000 bytes
Lua time usage: 0.311/10.000 seconds
Lua memory usage: 6677458/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  457.521      1 -total
 39.22%  179.438     25 Template:Cite_book
 20.82%   95.254      5 Template:Navbox
 18.47%   84.514      1 Template:Mathematical_logic
 11.54%   52.791      1 Template:Short_description
  7.11%   32.518      2 Template:Pagetype
  6.86%   31.366      3 Template:Unreferenced_section
  6.29%   28.793      3 Template:Unreferenced
  5.62%   25.698      3 Template:Ambox
  5.49%   25.139      5 Template:Cite_web Saved in parser cache with key enwiki:pcache:8529655:|#|:idhash:canonical and timestamp 20250812033746 and revision id 1302366480. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Hilbert_system&oldid=1302366480 " Categories : Proof theory Logical calculi Automated theorem proving Hidden categories: Articles with short description Short description matches Wikidata All articles with unsourced statements Articles with unsourced statements from March 2014 Articles needing additional references from August 2024 All articles needing additional references Articles needing additional references from March 2024 CS1 Hungarian-language sources (hu) CS1 errors: ISBN date This page was last edited on 25 July 2025, at 00:08 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Hilbert system 6 languages Add topic

