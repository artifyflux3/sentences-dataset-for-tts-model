Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Statement of Hilbert's program 2 Gödel's incompleteness theorems 3 Hilbert's program after Gödel 4 See also 5 References 6 External links Toggle the table of contents Hilbert's program 18 languages العربية Čeština Deutsch Español فارسی Français 한국어 Bahasa Indonesia Italiano עברית Nederlands 日本語 Português Русский Slovenčina Türkçe Українська 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia This article includes a list of general references , but it lacks sufficient corresponding inline citations .

Please help to improve this article by introducing more precise citations.

( April 2023 ) ( Learn how and when to remove this message ) Attempt to formalize all of mathematics, based on a finite set of axioms In mathematics , Hilbert's program , formulated by German mathematician David Hilbert in the early 1920s, [ 1 ] was a proposed solution to the foundational crisis of mathematics , when early attempts to clarify the foundations of mathematics were found to suffer from paradoxes and inconsistencies. As a solution, Hilbert proposed to ground all existing theories to a finite, complete set of axioms , and provide a proof that these axioms were consistent . Hilbert proposed that the consistency of more complicated systems, such as real analysis , could be proven in terms of simpler systems. Ultimately, the consistency of all of mathematics could be reduced to basic arithmetic .

Gödel's incompleteness theorems , published in 1931, showed that Hilbert's program was unattainable for key areas of mathematics. In his first theorem, Gödel showed that any consistent system with a computable set of axioms which is capable of expressing arithmetic can never be complete: it is possible to construct a statement that can be shown to be true, but that cannot be derived from the formal rules of the system. In his second theorem, he showed that such a system could not prove its own consistency, so it certainly cannot be used to prove the consistency of anything stronger with certainty. This refuted Hilbert's assumption that a finitistic system could be used to prove the consistency of itself, and therefore could not prove everything else.

Statement of Hilbert's program [ edit ] The main goal of Hilbert's program was to provide secure foundations for all mathematics. In particular, this should include: A formulation of all mathematics; in other words all mathematical statements should be written in a precise formal language , and manipulated according to well defined rules.

Completeness: a proof that all true mathematical statements can be proved in the formalism.

Consistency: a proof that no contradiction can be obtained in the formalism of mathematics. This consistency proof should preferably use only "finitistic" reasoning about finite mathematical objects.

Conservation: a proof that any result about "real objects" obtained using reasoning about "ideal objects" (such as uncountable sets) can be proved without using ideal objects.

Decidability : there should be an algorithm for deciding the truth or falsity of any mathematical statement.

Gödel's incompleteness theorems [ edit ] Main article: Gödel's incompleteness theorems Kurt Gödel showed that most of the goals of Hilbert's program were impossible to achieve, at least if interpreted in the most obvious way. Gödel's second incompleteness theorem shows that any consistent theory powerful enough to encode addition and multiplication of integers cannot prove its own consistency. This presents a challenge to Hilbert's program: It is not possible to formalize all mathematical true statements within a formal system, as any attempt at such a formalism will omit some true mathematical statements. There is no complete, consistent extension of even Peano arithmetic based on a computably enumerable set of axioms.

A theory such as Peano arithmetic cannot even prove its own consistency, so a restricted "finitistic" subset of it certainly cannot prove the consistency of more powerful theories such as set theory.

There is no algorithm to decide the truth (or provability) of statements in any consistent extension of Peano arithmetic. Strictly speaking, this negative solution to the Entscheidungsproblem appeared a few years after Gödel's theorem, because at the time the notion of an algorithm had not been precisely defined.

Hilbert's program after Gödel [ edit ] Many current lines of research in mathematical logic , such as proof theory and reverse mathematics , can be viewed as natural continuations of Hilbert's original program. Much of it can be salvaged by changing its goals slightly (Zach 2005), and with the following modifications some of it was successfully completed: Although it is not possible to formalize all mathematics, it is possible to formalize essentially all the mathematics that anyone uses. In particular Zermelo–Fraenkel set theory , combined with first-order logic , gives a satisfactory and generally accepted formalism for almost all current mathematics.

Although it is not possible to prove completeness for systems that can express at least the Peano arithmetic (or, more generally, that have a computable set of axioms), it is possible to prove forms of completeness for many other interesting systems. An example of a non-trivial theory for which completeness has been proved is the theory of algebraically closed fields of given characteristic .

The question of whether there are finitary consistency proofs of strong theories is difficult to answer, mainly because there is no generally accepted definition of a "finitary proof". Most mathematicians in proof theory seem to regard finitary mathematics as being contained in Peano arithmetic, and in this case it is not possible to give finitary proofs of reasonably strong theories. On the other hand, Gödel himself suggested the possibility of giving finitary consistency proofs using finitary methods that cannot be formalized in Peano arithmetic, so he seems to have had a more liberal view of what finitary methods might be allowed. A few years later, Gentzen gave a consistency proof for Peano arithmetic. The only part of this proof that was not clearly finitary was a certain transfinite induction up to the ordinal ε 0 . If this transfinite induction is accepted as a finitary method, then one can assert that there is a finitary proof of the consistency of Peano arithmetic. More powerful subsets of second-order arithmetic have been given consistency proofs by Gaisi Takeuti and others, and one can again debate about exactly how finitary or constructive these proofs are. (The theories that have been proved consistent by these methods are quite strong, and include most "ordinary" mathematics.) Although there is no algorithm for deciding the truth of statements in Peano arithmetic, there are many interesting and non-trivial theories for which such algorithms have been found. For example, Tarski found an algorithm that can decide the truth of any statement in analytic geometry (more precisely, he proved that the theory of real closed fields is decidable). Given the Cantor–Dedekind axiom , this algorithm can be regarded as an algorithm to decide the truth of any statement in Euclidean geometry . This is substantial as few people would consider Euclidean geometry a trivial theory.

See also [ edit ] Grundlagen der Mathematik Foundational crisis of mathematics References [ edit ] ^ Zach, Richard (2023), Zalta, Edward N.; Nodelman, Uri (eds.), "Hilbert's Program" , The Stanford Encyclopedia of Philosophy (Spring 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 2023-07-05 G. Gentzen, 1936/1969. Die Widerspruchfreiheit der reinen Zahlentheorie.

Mathematische Annalen 112:493–565. Translated as 'The consistency of arithmetic', in The collected papers of Gerhard Gentzen , M. E. Szabo (ed.), 1969.

D. Hilbert. 'Die Grundlegung der elementaren Zahlenlehre'.

Mathematische Annalen 104:485–94. Translated by W. Ewald as 'The Grounding of Elementary Number Theory', pp. 266–273 in Mancosu (ed., 1998) From Brouwer to Hilbert: The debate on the foundations of mathematics in the 1920s , Oxford University Press. New York.

S.G. Simpson , 1988.

Partial realizations of Hilbert's program (pdf) .

Journal of Symbolic Logic 53:349–363.

R. Zach , 2006. Hilbert's Program Then and Now.

Philosophy of Logic 5:411–447, arXiv:math/0508572 [math.LO].

External links [ edit ] Richard Zach.

"Hilbert's Program" . In Zalta, Edward N.

(ed.).

Stanford Encyclopedia of Philosophy .

Authority control databases : National Germany Retrieved from " https://en.wikipedia.org/w/index.php?title=Hilbert%27s_program&oldid=1240954687 " Categories : Mathematical logic Proof theory Hilbert's problems Hidden categories: Articles lacking in-text citations from April 2023 All articles lacking in-text citations Articles with short description Short description matches Wikidata This page was last edited on 18 August 2024, at 13:50 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Hilbert's program 18 languages Add topic

