Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Definition 2 Barycentric form 3 A perspective from linear algebra 4 Example 5 Notes 6 Remainder in Lagrange interpolation formula Toggle Remainder in Lagrange interpolation formula subsection 6.1 Derivation 7 Derivatives 8 Finite fields 9 See also 10 References 11 External links Toggle the table of contents Lagrange polynomial 22 languages العربية Català Čeština Español Esperanto Français 한국어 हिन्दी Italiano Nederlands 日本語 Norsk nynorsk Português Română Русский Slovenčina کوردی Српски / srpski Srpskohrvatski / српскохрватски Suomi Українська 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Lagrange interpolation ) Polynomials used for interpolation Not to be confused with Legendre polynomials (the orthogonal basis of function space).

This image shows, for four points ( (−9, 5) , (−4, 2) , (−1, −2) , (7, 9) ), the (cubic) interpolation polynomial L ( x ) (dashed, black), which is the sum of the scaled basis polynomials y 0 ℓ 0 ( x ) , y 1 ℓ 1 ( x ) , y 2 ℓ 2 ( x ) and y 3 ℓ 3 ( x ) . The interpolation polynomial passes through all four control points, and each scaled basis polynomial passes through its respective control point and is 0 where x corresponds to the other three control points.

In numerical analysis , the Lagrange interpolating polynomial is the unique polynomial of lowest degree that interpolates a given set of data.

Given a data set of coordinate pairs ( x j , y j ) {\displaystyle (x_{j},y_{j})} with 0 ≤ ≤ j ≤ ≤ k , {\displaystyle 0\leq j\leq k,} the x j {\displaystyle x_{j}} are called nodes and the y j {\displaystyle y_{j}} are called values . The Lagrange polynomial L ( x ) {\displaystyle L(x)} has degree ≤ ≤ k {\textstyle \leq k} and assumes each value at the corresponding node, L ( x j ) = y j .

{\displaystyle L(x_{j})=y_{j}.} Although named after Joseph-Louis Lagrange , who published it in 1795, [ 1 ] the method was first discovered in 1779 by Edward Waring .

[ 2 ] It is also an easy consequence of a formula published in 1783 by Leonhard Euler .

[ 3 ] Uses of Lagrange polynomials include the Newton–Cotes method of numerical integration , Shamir's secret sharing scheme in cryptography , and Reed–Solomon error correction in coding theory .

For equispaced nodes, Lagrange interpolation is susceptible to Runge's phenomenon of large oscillation.

Definition [ edit ] Given a set of k + 1 {\textstyle k+1} nodes { x 0 , x 1 , … … , x k } {\displaystyle \{x_{0},x_{1},\ldots ,x_{k}\}} , which must all be distinct, x j ≠ ≠ x m {\displaystyle x_{j}\neq x_{m}} for indices j ≠ ≠ m {\displaystyle j\neq m} , the Lagrange basis for polynomials of degree ≤ ≤ k {\textstyle \leq k} for those nodes is the set of polynomials { ℓ ℓ 0 ( x ) , ℓ ℓ 1 ( x ) , … … , ℓ ℓ k ( x ) } {\textstyle \{\ell _{0}(x),\ell _{1}(x),\ldots ,\ell _{k}(x)\}} each of degree k {\textstyle k} which take values ℓ ℓ j ( x m ) = 0 {\textstyle \ell _{j}(x_{m})=0} if m ≠ ≠ j {\textstyle m\neq j} and ℓ ℓ j ( x j ) = 1 {\textstyle \ell _{j}(x_{j})=1} . Using the Kronecker delta this can be written ℓ ℓ j ( x m ) = δ δ j m .

{\textstyle \ell _{j}(x_{m})=\delta _{jm}.} Each basis polynomial can be explicitly described by the product: ℓ ℓ j ( x ) = ( x − − x 0 ) ( x j − − x 0 ) ⋯ ⋯ ( x − − x j − − 1 ) ( x j − − x j − − 1 ) ( x − − x j + 1 ) ( x j − − x j + 1 ) ⋯ ⋯ ( x − − x k ) ( x j − − x k ) = ∏ ∏ 0 ≤ ≤ m ≤ ≤ k m ≠ ≠ j x − − x m x j − − x m | .

{\displaystyle {\begin{aligned}\ell _{j}(x)&={\frac {(x-x_{0})}{(x_{j}-x_{0})}}\cdots {\frac {(x-x_{j-1})}{(x_{j}-x_{j-1})}}{\frac {(x-x_{j+1})}{(x_{j}-x_{j+1})}}\cdots {\frac {(x-x_{k})}{(x_{j}-x_{k})}}\\[8mu]&=\prod _{\begin{smallmatrix}0\leq m\leq k\\m\neq j\end{smallmatrix}}{\frac {x-x_{m}}{x_{j}-x_{m}}}{\vphantom {\Bigg |}}.\end{aligned}}} Notice that the numerator ∏ ∏ m ≠ ≠ j ( x − − x m ) {\textstyle \prod _{m\neq j}(x-x_{m})} has k {\textstyle k} roots at the nodes { x m } m ≠ ≠ j {\textstyle \{x_{m}\}_{m\neq j}} while the denominator ∏ ∏ m ≠ ≠ j ( x j − − x m ) {\textstyle \prod _{m\neq j}(x_{j}-x_{m})} scales the resulting polynomial so that ℓ ℓ j ( x j ) = 1.

{\textstyle \ell _{j}(x_{j})=1.} The Lagrange interpolating polynomial for those nodes through the corresponding values { y 0 , y 1 , … … , y k } {\displaystyle \{y_{0},y_{1},\ldots ,y_{k}\}} is the linear combination : L ( x ) = ∑ ∑ j = 0 k y j ℓ ℓ j ( x ) .

{\displaystyle L(x)=\sum _{j=0}^{k}y_{j}\ell _{j}(x).} Each basis polynomial has degree k {\textstyle k} , so the sum L ( x ) {\textstyle L(x)} has degree ≤ ≤ k {\textstyle \leq k} , and it interpolates the data because L ( x m ) = ∑ ∑ j = 0 k y j ℓ ℓ j ( x m ) = ∑ ∑ j = 0 k y j δ δ m j = y m .

{\textstyle L(x_{m})=\sum _{j=0}^{k}y_{j}\ell _{j}(x_{m})=\sum _{j=0}^{k}y_{j}\delta _{mj}=y_{m}.} The interpolating polynomial is unique. Proof: assume the polynomial M ( x ) {\textstyle M(x)} of degree ≤ ≤ k {\textstyle \leq k} interpolates the data. Then the difference M ( x ) − − L ( x ) {\textstyle M(x)-L(x)} is zero at k + 1 {\textstyle k+1} distinct nodes { x 0 , x 1 , … … , x k } .

{\textstyle \{x_{0},x_{1},\ldots ,x_{k}\}.} But the only polynomial of degree ≤ ≤ k {\textstyle \leq k} with more than k {\textstyle k} roots is the constant zero function, so M ( x ) − − L ( x ) = 0 , {\textstyle M(x)-L(x)=0,} or M ( x ) = L ( x ) .

{\textstyle M(x)=L(x).} Barycentric form [ edit ] Each Lagrange basis polynomial ℓ ℓ j ( x ) {\textstyle \ell _{j}(x)} can be rewritten as the product of three parts, a function ℓ ℓ ( x ) = ∏ ∏ m ( x − − x m ) {\textstyle \ell (x)=\prod _{m}(x-x_{m})} common to every basis polynomial, a node-specific constant w j = ∏ ∏ m ≠ ≠ j ( x j − − x m ) − − 1 {\textstyle w_{j}=\prod _{m\neq j}(x_{j}-x_{m})^{-1}} (called the barycentric weight ), and a part representing the displacement from x j {\textstyle x_{j}} to x {\textstyle x} : [ 4 ] ℓ ℓ j ( x ) = ℓ ℓ ( x ) w j x − − x j {\displaystyle \ell _{j}(x)=\ell (x){\dfrac {w_{j}}{x-x_{j}}}} By factoring ℓ ℓ ( x ) {\textstyle \ell (x)} out from the sum, we can write the Lagrange polynomial in the so-called first barycentric form : L ( x ) = ℓ ℓ ( x ) ∑ ∑ j = 0 k w j x − − x j y j .

{\displaystyle L(x)=\ell (x)\sum _{j=0}^{k}{\frac {w_{j}}{x-x_{j}}}y_{j}.} If the weights w j {\displaystyle w_{j}} have been pre-computed, this requires only O ( k ) {\displaystyle {\mathcal {O}}(k)} operations compared to O ( k 2 ) {\displaystyle {\mathcal {O}}(k^{2})} for evaluating each Lagrange basis polynomial ℓ ℓ j ( x ) {\displaystyle \ell _{j}(x)} individually.

The barycentric interpolation formula can also easily be updated to incorporate a new node x k + 1 {\displaystyle x_{k+1}} by dividing each of the w j {\displaystyle w_{j}} , j = 0 … … k {\displaystyle j=0\dots k} by ( x j − − x k + 1 ) {\displaystyle (x_{j}-x_{k+1})} and constructing the new w k + 1 {\displaystyle w_{k+1}} as above.

For any x , {\textstyle x,} ∑ ∑ j = 0 k ℓ ℓ j ( x ) = 1 {\textstyle \sum _{j=0}^{k}\ell _{j}(x)=1} because the constant function g ( x ) = 1 {\textstyle g(x)=1} is the unique polynomial of degree ≤ ≤ k {\displaystyle \leq k} interpolating the data { ( x 0 , 1 ) , ( x 1 , 1 ) , … … , ( x k , 1 ) } .

{\textstyle \{(x_{0},1),(x_{1},1),\ldots ,(x_{k},1)\}.} We can thus further simplify the barycentric formula by dividing L ( x ) = L ( x ) / g ( x ) : : {\displaystyle L(x)=L(x)/g(x)\colon } L ( x ) = ℓ ℓ ( x ) ∑ ∑ j = 0 k w j x − − x j y j / ℓ ℓ ( x ) ∑ ∑ j = 0 k w j x − − x j = ∑ ∑ j = 0 k w j x − − x j y j / ∑ ∑ j = 0 k w j x − − x j .

{\displaystyle {\begin{aligned}L(x)&=\ell (x)\sum _{j=0}^{k}{\frac {w_{j}}{x-x_{j}}}y_{j}{\Bigg /}\ell (x)\sum _{j=0}^{k}{\frac {w_{j}}{x-x_{j}}}\\[10mu]&=\sum _{j=0}^{k}{\frac {w_{j}}{x-x_{j}}}y_{j}{\Bigg /}\sum _{j=0}^{k}{\frac {w_{j}}{x-x_{j}}}.\end{aligned}}} This is called the second form or true form of the barycentric interpolation formula.

This second form has advantages in computation cost and accuracy: it avoids evaluation of ℓ ℓ ( x ) {\displaystyle \ell (x)} ; the work to compute each term in the denominator w j / ( x − − x j ) {\displaystyle w_{j}/(x-x_{j})} has already been done in computing ( w j / ( x − − x j ) ) y j {\displaystyle {\bigl (}w_{j}/(x-x_{j}){\bigr )}y_{j}} and so computing the sum in the denominator costs only k {\textstyle k} addition operations; for evaluation points x {\textstyle x} which are close to one of the nodes x j {\textstyle x_{j}} , catastrophic cancelation would ordinarily be a problem for the value ( x − − x j ) {\textstyle (x-x_{j})} , however this quantity appears in both numerator and denominator and the two cancel leaving good relative accuracy in the final result.

Using this formula to evaluate L ( x ) {\displaystyle L(x)} at one of the nodes x j {\displaystyle x_{j}} will result in the indeterminate ∞ ∞ y j / ∞ ∞ {\displaystyle \infty y_{j}/\infty } ; computer implementations must replace such results by L ( x j ) = y j .

{\displaystyle L(x_{j})=y_{j}.} Each Lagrange basis polynomial can also be written in barycentric form: ℓ ℓ j ( x ) = w j x − − x j / ∑ ∑ m = 0 k w m x − − x m .

{\displaystyle \ell _{j}(x)={\frac {w_{j}}{x-x_{j}}}{\Bigg /}\sum _{m=0}^{k}{\frac {w_{m}}{x-x_{m}}}.} A perspective from linear algebra [ edit ] Solving an interpolation problem leads to a problem in linear algebra amounting to inversion of a matrix. Using a standard monomial basis for our interpolation polynomial L ( x ) = ∑ ∑ j = 0 k x j m j {\textstyle L(x)=\sum _{j=0}^{k}x^{j}m_{j}} , we must invert the Vandermonde matrix ( x i ) j {\displaystyle (x_{i})^{j}} to solve L ( x i ) = y i {\displaystyle L(x_{i})=y_{i}} for the coefficients m j {\displaystyle m_{j}} of L ( x ) {\displaystyle L(x)} . By choosing a better basis, the Lagrange basis, L ( x ) = ∑ ∑ j = 0 k l j ( x ) y j {\textstyle L(x)=\sum _{j=0}^{k}l_{j}(x)y_{j}} , we merely get the identity matrix , δ δ i j {\displaystyle \delta _{ij}} , which is its own inverse: the Lagrange basis automatically inverts the analog of the Vandermonde matrix.

This construction is analogous to the Chinese remainder theorem . Instead of checking for remainders of integers modulo prime numbers, we are checking for remainders of polynomials when divided by linears.

Furthermore, when the order is large, Fast Fourier transformation can be used to solve for the coefficients of the interpolated polynomial.

Example [ edit ] We wish to interpolate f ( x ) = x 2 {\displaystyle f(x)=x^{2}} over the domain 1 ≤ ≤ x ≤ ≤ 3 {\displaystyle 1\leq x\leq 3} at the three nodes { 1 , 2 , 3 } {\displaystyle \{1,\,2,\,3\}} : x 0 = 1 , y 0 = f ( x 0 ) = 1 , x 1 = 2 , y 1 = f ( x 1 ) = 4 , x 2 = 3 , y 2 = f ( x 2 ) = 9.

{\displaystyle {\begin{aligned}x_{0}&=1,&&&y_{0}=f(x_{0})&=1,\\[3mu]x_{1}&=2,&&&y_{1}=f(x_{1})&=4,\\[3mu]x_{2}&=3,&&&y_{2}=f(x_{2})&=9.\end{aligned}}} The node polynomial ℓ ℓ {\displaystyle \ell } is ℓ ℓ ( x ) = ( x − − 1 ) ( x − − 2 ) ( x − − 3 ) = x 3 − − 6 x 2 + 11 x − − 6.

{\displaystyle \ell (x)=(x-1)(x-2)(x-3)=x^{3}-6x^{2}+11x-6.} The barycentric weights are w 0 = ( 1 − − 2 ) − − 1 ( 1 − − 3 ) − − 1 = 1 2 , w 1 = ( 2 − − 1 ) − − 1 ( 2 − − 3 ) − − 1 = − − 1 , w 2 = ( 3 − − 1 ) − − 1 ( 3 − − 2 ) − − 1 = 1 2 .

{\displaystyle {\begin{aligned}w_{0}&=(1-2)^{-1}(1-3)^{-1}={\tfrac {1}{2}},\\[3mu]w_{1}&=(2-1)^{-1}(2-3)^{-1}=-1,\\[3mu]w_{2}&=(3-1)^{-1}(3-2)^{-1}={\tfrac {1}{2}}.\end{aligned}}} The Lagrange basis polynomials are ℓ ℓ 0 ( x ) = x − − 2 1 − − 2 ⋅ ⋅ x − − 3 1 − − 3 = 1 2 x 2 − − 5 2 x + 3 , ℓ ℓ 1 ( x ) = x − − 1 2 − − 1 ⋅ ⋅ x − − 3 2 − − 3 = − − x 2 + 4 x − − 3 , ℓ ℓ 2 ( x ) = x − − 1 3 − − 1 ⋅ ⋅ x − − 2 3 − − 2 = 1 2 x 2 − − 3 2 x + 1.

{\displaystyle {\begin{aligned}\ell _{0}(x)&={\frac {x-2}{1-2}}\cdot {\frac {x-3}{1-3}}={\tfrac {1}{2}}x^{2}-{\tfrac {5}{2}}x+3,\\[5mu]\ell _{1}(x)&={\frac {x-1}{2-1}}\cdot {\frac {x-3}{2-3}}=-x^{2}+4x-3,\\[5mu]\ell _{2}(x)&={\frac {x-1}{3-1}}\cdot {\frac {x-2}{3-2}}={\tfrac {1}{2}}x^{2}-{\tfrac {3}{2}}x+1.\end{aligned}}} The Lagrange interpolating polynomial is: L ( x ) = y 0 ⋅ ⋅ ℓ ℓ 0 ( x ) + y 1 ⋅ ⋅ ℓ ℓ 1 ( x ) + y 2 ⋅ ⋅ ℓ ℓ 2 ( x ) = x 2 .

{\displaystyle {\begin{aligned}L(x)&=y_{0}\cdot \ell _{0}(x)+y_{1}\cdot \ell _{1}(x)+y_{2}\cdot \ell _{2}(x)=x^{2}.\end{aligned}}} In (second) barycentric form, L ( x ) = ∑ ∑ j = 0 2 w j x − − x j y j ∑ ∑ j = 0 2 w j x − − x j = 1 2 x − − 1 + − − 4 x − − 2 + 9 2 x − − 3 1 2 x − − 1 + − − 1 x − − 2 + 1 2 x − − 3 .

{\displaystyle L(x)={\frac {\displaystyle \sum _{j=0}^{2}{\frac {w_{j}}{x-x_{j}}}y_{j}}{\displaystyle \sum _{j=0}^{2}{\frac {w_{j}}{x-x_{j}}}}}={\frac {\displaystyle {\frac {\tfrac {1}{2}}{x-1}}+{\frac {-4}{x-2}}+{\frac {\tfrac {9}{2}}{x-3}}}{\displaystyle {\frac {\tfrac {1}{2}}{x-1}}+{\frac {-1}{x-2}}+{\frac {\tfrac {1}{2}}{x-3}}}}.} Notes [ edit ] Example of interpolation divergence for a set of Lagrange polynomials.

The Lagrange form of the interpolation polynomial shows the linear character of polynomial interpolation and the uniqueness of the interpolation polynomial.  Therefore, it is preferred in proofs and theoretical arguments.  Uniqueness can also be seen from the invertibility of the Vandermonde matrix, due to the non-vanishing of the Vandermonde determinant .

But, as can be seen from the construction, each time a node x k changes, all Lagrange basis polynomials have to be recalculated. A better form of the interpolation polynomial for practical (or computational) purposes is the barycentric form of the Lagrange interpolation (see below) or Newton polynomials .

Lagrange and other interpolation at equally spaced points, as in the example above, yield a polynomial oscillating above and below the true function. This behaviour tends to grow with the number of points, leading to a divergence known as Runge's phenomenon ; the problem may be eliminated by choosing interpolation points at Chebyshev nodes .

[ 5 ] The Lagrange basis polynomials can be used in numerical integration to derive the Newton–Cotes formulas .

Remainder in Lagrange interpolation formula [ edit ] When interpolating a given function f by a polynomial of degree k at the nodes x 0 , .

.

.

, x k {\displaystyle x_{0},...,x_{k}} we get the remainder R ( x ) = f ( x ) − − L ( x ) {\displaystyle R(x)=f(x)-L(x)} which can be expressed as [ 6 ] R ( x ) = f [ x 0 , … … , x k , x ] ℓ ℓ ( x ) = ℓ ℓ ( x ) f ( k + 1 ) ( ξ ξ ) ( k + 1 ) !

, x 0 < ξ ξ < x k , {\displaystyle R(x)=f[x_{0},\ldots ,x_{k},x]\ell (x)=\ell (x){\frac {f^{(k+1)}(\xi )}{(k+1)!}},\quad \quad x_{0}<\xi <x_{k},} where f [ x 0 , … … , x k , x ] {\displaystyle f[x_{0},\ldots ,x_{k},x]} is the notation for divided differences . Alternatively, the remainder can be expressed as a contour integral in complex domain as R ( x ) = ℓ ℓ ( x ) 2 π π i ∫ ∫ C f ( t ) ( t − − x ) ( t − − x 0 ) ⋯ ⋯ ( t − − x k ) d t = ℓ ℓ ( x ) 2 π π i ∫ ∫ C f ( t ) ( t − − x ) ℓ ℓ ( t ) d t .

{\displaystyle R(x)={\frac {\ell (x)}{2\pi i}}\int _{C}{\frac {f(t)}{(t-x)(t-x_{0})\cdots (t-x_{k})}}dt={\frac {\ell (x)}{2\pi i}}\int _{C}{\frac {f(t)}{(t-x)\ell (t)}}dt.} The remainder can be bound as | R ( x ) | ≤ ≤ ( x k − − x 0 ) k + 1 ( k + 1 ) !

max x 0 ≤ ≤ ξ ξ ≤ ≤ x k | f ( k + 1 ) ( ξ ξ ) | .

{\displaystyle |R(x)|\leq {\frac {(x_{k}-x_{0})^{k+1}}{(k+1)!}}\max _{x_{0}\leq \xi \leq x_{k}}|f^{(k+1)}(\xi )|.} Derivation [ edit ] Clearly, R ( x ) {\displaystyle R(x)} is zero at nodes. To find R ( x ) {\displaystyle R(x)} at a point x p {\displaystyle x_{p}} , define a new function F ( x ) = R ( x ) − − R ~ ~ ( x ) = f ( x ) − − L ( x ) − − R ~ ~ ( x ) {\displaystyle F(x)=R(x)-{\tilde {R}}(x)=f(x)-L(x)-{\tilde {R}}(x)} and choose R ~ ~ ( x ) = C ⋅ ⋅ ∏ ∏ i = 0 k ( x − − x i ) {\textstyle {\tilde {R}}(x)=C\cdot \prod _{i=0}^{k}(x-x_{i})} where C {\displaystyle C} is the constant we are required to determine for a given x p {\displaystyle x_{p}} . We choose C {\displaystyle C} so that F ( x ) {\displaystyle F(x)} has k + 2 {\displaystyle k+2} zeroes (at all nodes and x p {\displaystyle x_{p}} ) between x 0 {\displaystyle x_{0}} and x k {\displaystyle x_{k}} (including endpoints). Assuming that f ( x ) {\displaystyle f(x)} is k + 1 {\displaystyle k+1} -times differentiable, since L ( x ) {\displaystyle L(x)} and R ~ ~ ( x ) {\displaystyle {\tilde {R}}(x)} are polynomials, and therefore, are infinitely differentiable, F ( x ) {\displaystyle F(x)} will be k + 1 {\displaystyle k+1} -times differentiable. By Rolle's theorem , F ( 1 ) ( x ) {\displaystyle F^{(1)}(x)} has k + 1 {\displaystyle k+1} zeroes, F ( 2 ) ( x ) {\displaystyle F^{(2)}(x)} has k {\displaystyle k} zeroes...

F ( k + 1 ) {\displaystyle F^{(k+1)}} has 1 zero, say ξ ξ , x 0 < ξ ξ < x k {\displaystyle \xi ,\,x_{0}<\xi <x_{k}} . Explicitly writing F ( k + 1 ) ( ξ ξ ) {\displaystyle F^{(k+1)}(\xi )} : F ( k + 1 ) ( ξ ξ ) = f ( k + 1 ) ( ξ ξ ) − − L ( k + 1 ) ( ξ ξ ) − − R ~ ~ ( k + 1 ) ( ξ ξ ) {\displaystyle F^{(k+1)}(\xi )=f^{(k+1)}(\xi )-L^{(k+1)}(\xi )-{\tilde {R}}^{(k+1)}(\xi )} L ( k + 1 ) = 0 , R ~ ~ ( k + 1 ) = C ⋅ ⋅ ( k + 1 ) !

{\displaystyle L^{(k+1)}=0,{\tilde {R}}^{(k+1)}=C\cdot (k+1)!} (Because the highest power of x {\displaystyle x} in R ~ ~ ( x ) {\displaystyle {\tilde {R}}(x)} is k + 1 {\displaystyle k+1} ) 0 = f ( k + 1 ) ( ξ ξ ) − − C ⋅ ⋅ ( k + 1 ) !

{\displaystyle 0=f^{(k+1)}(\xi )-C\cdot (k+1)!} The equation can be rearranged as [ 7 ] C = f ( k + 1 ) ( ξ ξ ) ( k + 1 ) !

{\displaystyle C={\frac {f^{(k+1)}(\xi )}{(k+1)!}}} Since F ( x p ) = 0 {\displaystyle F(x_{p})=0} we have R ( x p ) = R ~ ~ ( x p ) = f k + 1 ( ξ ξ ) ( k + 1 ) !

∏ ∏ i = 0 k ( x p − − x i ) {\displaystyle R(x_{p})={\tilde {R}}(x_{p})={\frac {f^{k+1}(\xi )}{(k+1)!}}\prod _{i=0}^{k}(x_{p}-x_{i})} Derivatives [ edit ] The d th derivative of a Lagrange interpolating polynomial can be written in terms of the derivatives of the basis polynomials, L ( d ) ( x ) := ∑ ∑ j = 0 k y j ℓ ℓ j ( d ) ( x ) .

{\displaystyle L^{(d)}(x):=\sum _{j=0}^{k}y_{j}\ell _{j}^{(d)}(x).} Recall (see § Definition above) that each Lagrange basis polynomial is ℓ ℓ j ( x ) = ∏ ∏ m = 0 m ≠ ≠ j k x − − x m x j − − x m .

{\displaystyle {\begin{aligned}\ell _{j}(x)&=\prod _{\begin{smallmatrix}m=0\\m\neq j\end{smallmatrix}}^{k}{\frac {x-x_{m}}{x_{j}-x_{m}}}.\end{aligned}}} The first derivative can be found using the product rule : ℓ ℓ j ′ ( x ) = ∑ ∑ i = 0 i ≠ j k [ 1 x j − − x i ∏ ∏ m = 0 m ≠ ( i , j ) k x − − x m x j − − x m ] = ℓ ℓ j ( x ) ∑ ∑ i = 0 i ≠ j k 1 x − − x i .

{\displaystyle {\begin{aligned}\ell _{j}'(x)&=\sum _{\begin{smallmatrix}i=0\\i\not =j\end{smallmatrix}}^{k}{\Biggl [}{\frac {1}{x_{j}-x_{i}}}\prod _{\begin{smallmatrix}m=0\\m\not =(i,j)\end{smallmatrix}}^{k}{\frac {x-x_{m}}{x_{j}-x_{m}}}{\Biggr ]}\\[5mu]&=\ell _{j}(x)\sum _{\begin{smallmatrix}i=0\\i\not =j\end{smallmatrix}}^{k}{\frac {1}{x-x_{i}}}.\end{aligned}}} The second derivative is ℓ ℓ j ″ ( x ) = ∑ ∑ i = 0 i ≠ ≠ j k 1 x j − − x i [ ∑ ∑ m = 0 m ≠ ≠ ( i , j ) k ( 1 x j − − x m ∏ ∏ n = 0 n ≠ ≠ ( i , j , m ) k x − − x n x j − − x n ) ] = ℓ ℓ j ( x ) ∑ ∑ 0 ≤ ≤ i < m ≤ ≤ k 2 ( x − − x i ) ( x − − x m ) = ℓ ℓ j ( x ) [ ( ∑ ∑ i = 0 i ≠ j k 1 x − − x i ) 2 − − ∑ ∑ i = 0 i ≠ j k 1 ( x − − x i ) 2 ] .

{\displaystyle {\begin{aligned}\ell _{j}''(x)&=\sum _{\begin{smallmatrix}i=0\\i\neq j\end{smallmatrix}}^{k}{\frac {1}{x_{j}-x_{i}}}{\Biggl [}\sum _{\begin{smallmatrix}m=0\\m\neq (i,j)\end{smallmatrix}}^{k}{\Biggl (}{\frac {1}{x_{j}-x_{m}}}\prod _{\begin{smallmatrix}n=0\\n\neq (i,j,m)\end{smallmatrix}}^{k}{\frac {x-x_{n}}{x_{j}-x_{n}}}{\Biggr )}{\Biggr ]}\\[10mu]&=\ell _{j}(x)\sum _{0\leq i<m\leq k}{\frac {2}{(x-x_{i})(x-x_{m})}}\\[10mu]&=\ell _{j}(x){\Biggl [}{\Biggl (}\sum _{\begin{smallmatrix}i=0\\i\not =j\end{smallmatrix}}^{k}{\frac {1}{x-x_{i}}}{\Biggr )}^{2}-\sum _{\begin{smallmatrix}i=0\\i\not =j\end{smallmatrix}}^{k}{\frac {1}{(x-x_{i})^{2}}}{\Biggr ]}.\end{aligned}}} The third derivative is ℓ ℓ j ‴ ( x ) = ℓ ℓ j ( x ) ∑ ∑ 0 ≤ ≤ i < m < n ≤ ≤ k 3 !

( x − − x i ) ( x − − x m ) ( x − − x n ) {\displaystyle {\begin{aligned}\ell _{j}'''(x)&=\ell _{j}(x)\sum _{0\leq i<m<n\leq k}{\frac {3!}{(x-x_{i})(x-x_{m})(x-x_{n})}}\end{aligned}}} and likewise for higher derivatives.

Note that all of these formulas for derivatives are invalid at or near a node.  A method of evaluating all orders of derivatives of a Lagrange polynomial efficiently at all points of the domain, including the nodes, is converting the Lagrange polynomial to power basis form and then evaluating the derivatives.

Finite fields [ edit ] The Lagrange polynomial can also be computed in finite fields .  This has applications in cryptography , such as in Shamir's Secret Sharing scheme.

See also [ edit ] Neville's algorithm Newton form of the interpolation polynomial Bernstein polynomial Carlson's theorem Lebesgue constant The Chebfun system Table of Newtonian series Frobenius covariant Sylvester's formula Finite difference coefficient Hermite interpolation References [ edit ] ^ Lagrange, Joseph-Louis (1795). "Leçon Cinquième. Sur l'usage des courbes dans la solution des problèmes".

Leçons Elémentaires sur les Mathématiques (in French). Paris.

Republished in Serret, Joseph-Alfred , ed. (1877).

Oeuvres de Lagrange . Vol. 7. Gauthier-Villars. pp.

271–287 .

Translated as "Lecture V. On the Employment of Curves in the Solution of Problems" .

Lectures on Elementary Mathematics . Translated by McCormack, Thomas J. (2nd ed.). Open Court. 1901. pp.

127– 149.

^ Waring, Edward (1779).

"Problems concerning interpolations" .

Philosophical Transactions of the Royal Society .

69 : 59– 67.

doi : 10.1098/rstl.1779.0008 .

^ Meijering, Erik (2002).

"A chronology of interpolation: from ancient astronomy to modern signal and image processing" (PDF) .

Proceedings of the IEEE .

90 (3): 319– 342.

doi : 10.1109/5.993400 .

^ Berrut, Jean-Paul ; Trefethen, Lloyd N. (2004).

"Barycentric Lagrange Interpolation" (PDF) .

SIAM Review .

46 (3): 501– 517.

Bibcode : 2004SIAMR..46..501B .

doi : 10.1137/S0036144502417715 .

^ Quarteroni, Alfio ; Saleri, Fausto (2003).

Scientific Computing with MATLAB . Texts in computational science and engineering. Vol. 2. Springer. p. 66.

ISBN 978-3-540-44363-6 .

.

^ Abramowitz, Milton ; Stegun, Irene Ann , eds. (1983) [June 1964].

"Chapter 25, eqn 25.2.3" .

Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables . Applied Mathematics Series. Vol. 55 (Ninth reprint with additional corrections of tenth original printing with corrections (December 1972); first ed.). Washington D.C.; New York: United States Department of Commerce, National Bureau of Standards; Dover Publications. p. 878.

ISBN 978-0-486-61272-0 .

LCCN 64-60036 .

MR 0167642 .

LCCN 65-12253 .

^ "Interpolation" (PDF) . pp.

12– 15. Archived from the original (PDF) on 2017-02-15.

External links [ edit ] The Wikibook Algorithm Implementation has a page on the topic of: Polynomial interpolation "Lagrange interpolation formula" , Encyclopedia of Mathematics , EMS Press , 2001 [1994] ALGLIB has an implementations in C++ / C# / VBA / Pascal.

GSL has a polynomial interpolation code in C SO has a MATLAB example that demonstrates the algorithm and recreates the first image in this article Lagrange Method of Interpolation — Notes, PPT, Mathcad, Mathematica, MATLAB, Maple Lagrange interpolation polynomial on www.math-linux.com Weisstein, Eric W.

"Lagrange Interpolating Polynomial" .

MathWorld .

Excel Worksheet Function for Bicubic Lagrange Interpolation Lagrange polynomials in Python v t e Joseph-Louis Lagrange Lagrange multiplier Lagrange polynomial Lagrange's four-square theorem Lagrange's theorem (group theory) Lagrange's identity Lagrange's identity (boundary value problem) Lagrange's trigonometric identities Lagrangian mechanics Lagrange's mean value theorem Lagrange stability Lagrange point Retrieved from " https://en.wikipedia.org/w/index.php?title=Lagrange_polynomial&oldid=1304385902 " Categories : Interpolation Polynomials Hidden categories: CS1 French-language sources (fr) Articles with short description Short description matches Wikidata Articles containing proofs This page was last edited on 5 August 2025, at 18:59 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Lagrange polynomial 22 languages Add topic

