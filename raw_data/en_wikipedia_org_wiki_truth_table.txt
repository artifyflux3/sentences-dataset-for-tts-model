Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Applications Toggle Applications subsection 2.1 Truth table for logic gates 2.2 Condensed truth tables for binary operators 2.3 Truth tables in digital logic 2.4 Applications of truth tables in digital electronics 3 Methods of writing truth tables Toggle Methods of writing truth tables subsection 3.1 Alternating method 3.2 Combinatorial method 4 Size of truth tables 5 Function Tables 6 Sentential operator truth tables Toggle Sentential operator truth tables subsection 6.1 Overview table 6.2 Wittgenstein table 6.3 Nullary operations 6.3.1 Logical true 6.3.2 Logical false 6.4 Unary operations 6.4.1 Logical identity 6.4.2 Logical negation 6.5 Binary operations 6.5.1 Logical conjunction (AND) 6.5.2 Logical disjunction (OR) 6.5.3 Logical implication 6.5.4 Logical equality 6.5.5 Exclusive disjunction 6.5.6 Logical NAND 6.5.7 Logical NOR 7 See also 8 Notes 9 References Toggle References subsection 9.1 Works cited 10 External links Toggle the table of contents Truth table 45 languages Afrikaans አማርኛ العربية বাংলা Català Čeština Dansk Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Français Galego 한국어 Հայերեն हिन्दी Ido Bahasa Indonesia Italiano עברית Latina Latviešu Македонски Bahasa Melayu Nederlands 日本語 Norsk bokmål Polski Português Русский සිංහල Simple English Slovenčina Српски / srpski Suomi Svenska ไทย Türkçe Українська 吴语 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Mathematical table used in logic Logical connectives NOT ¬ ¬ A , − − A , A ¯ ¯ , ∼ ∼ A {\displaystyle \neg A,-A,{\overline {A}},\sim A} AND A ∧ ∧ B , A ⋅ ⋅ B , A B , A & & B , A & & & & B {\displaystyle A\land B,A\cdot B,AB,A\ \&\ B,A\ \&\&\ B} NAND A ∧ ∧ ¯ ¯ B , A ↑ ↑ B , A ∣ ∣ B , A ⋅ ⋅ B ¯ ¯ {\displaystyle A{\overline {\land }}B,A\uparrow B,A\mid B,{\overline {A\cdot B}}} OR A ∨ ∨ B , A + B , A ∣ ∣ B , A ∥ ∥ B {\displaystyle A\lor B,A+B,A\mid B,A\parallel B} NOR A ∨ ∨ ¯ ¯ B , A ↓ ↓ B , A + B ¯ ¯ {\displaystyle A{\overline {\lor }}B,A\downarrow B,{\overline {A+B}}} XNOR A ⊙ ⊙ B , A ∨ ∨ ¯ ¯ B ¯ ¯ {\displaystyle A\odot B,{\overline {A{\overline {\lor }}B}}} └ equivalent A ≡ ≡ B , A ⇔ ⇔ B , A ⇋ ⇋ B {\displaystyle A\equiv B,A\Leftrightarrow B,A\leftrightharpoons B} XOR A ∨ ∨ _ _ B , A ⊕ ⊕ B {\displaystyle A{\underline {\lor }}B,A\oplus B} └ nonequivalent A ≢ B , A ⇎ B , A ↮ ↮ B {\displaystyle A\not \equiv B,A\not \Leftrightarrow B,A\nleftrightarrow B} implies A ⇒ ⇒ B , A ⊃ ⊃ B , A → → B {\displaystyle A\Rightarrow B,A\supset B,A\rightarrow B} nonimplication ( NIMPLY ) A ⇏ B , A ⊅ B , A ↛ ↛ B {\displaystyle A\not \Rightarrow B,A\not \supset B,A\nrightarrow B} converse A ⇐ ⇐ B , A ⊂ ⊂ B , A ← ← B {\displaystyle A\Leftarrow B,A\subset B,A\leftarrow B} converse nonimplication A ⇍ B , A ⊄ B , A ↚ ↚ B {\displaystyle A\not \Leftarrow B,A\not \subset B,A\nleftarrow B} Related concepts Propositional calculus Predicate logic Boolean algebra Truth table Truth function Boolean function Functional completeness Scope (logic) Applications Digital logic Programming languages Mathematical logic Philosophy of logic Category v t e A truth table is a mathematical table used in logic —specifically in connection with Boolean algebra , Boolean functions , and propositional calculus —which sets out the functional values of logical expressions on each of their functional arguments, that is, for each combination of values taken by their logical variables .

[ 1 ] In particular, truth tables can be used to show whether a propositional expression is true for all legitimate input values, that is, logically valid .

A truth table has one column for each input variable (for example, A and B), and one final column showing the result of the logical operation that the table represents (for example, A XOR B ). Each row of the truth table contains one possible configuration of the input variables (for instance, A=true, B=false), and the result of the operation for those values.

A proposition's truth table is a graphical representation of its truth function .  The truth function can be more useful for mathematical purposes, although the same information is encoded in both.

Ludwig Wittgenstein is generally credited with inventing and popularizing the truth table in his Tractatus Logico-Philosophicus , which was completed in 1918 and published in 1921.

[ 2 ] Such a system was also independently proposed in 1921 by Emil Leon Post .

[ 3 ] History [ edit ] Irving Anellis 's research shows that C.S. Peirce appears to be the earliest logician (in 1883) to devise a truth table matrix.

[ 4 ] From the summary of Anellis's paper: [ 4 ] In 1997, John Shosky discovered, on the verso of a page of the typed transcript of Bertrand Russell 's 1912 lecture on "The Philosophy of Logical Atomism" truth table matrices. The matrix for negation is Russell's, alongside of which is the matrix for material implication in the hand of Ludwig Wittgenstein. It is shown that an unpublished manuscript identified as composed by Peirce in 1893 includes a truth table matrix that is equivalent to the matrix for material implication discovered by John Shosky. An unpublished manuscript by Peirce identified as having been composed in 1883–84 in connection with the composition of Peirce's "On the Algebra of Logic: A Contribution to the Philosophy of Notation" that appeared in the American Journal of Mathematics in 1885 includes an example of an indirect truth table for the conditional.

Applications [ edit ] Truth tables can be used to prove many other logical equivalences .  For example, consider the following truth table: ( p → → q ) ≡ ≡ ( ¬ ¬ p ∨ ∨ q ) {\displaystyle (p\rightarrow q)\equiv (\neg p\vee q)} p {\displaystyle p} q {\displaystyle q} ¬ ¬ p {\displaystyle \neg p} ¬ ¬ p ∨ ∨ q {\displaystyle \neg p\vee q} p → → q {\displaystyle p\rightarrow q} T T F T T T F F F F F T T T T F F T T T This demonstrates the fact that p → → q {\displaystyle p\rightarrow q} is logically equivalent to ¬ ¬ p ∨ ∨ q {\displaystyle \neg p\vee q} .

Truth table for logic gates [ edit ] Here is a truth table that gives definitions of each of the 6 possible 2-input logic gate functions of two Boolean variables P and Q: P {\displaystyle P} Q {\displaystyle Q} P ∧ ∧ Q {\displaystyle P\land Q} P ∨ ∨ Q {\displaystyle P\vee Q} P ↑ ↑ Q {\displaystyle P\uparrow Q} P ↓ ↓ Q {\displaystyle P\downarrow Q} P ↮ ↮ Q {\displaystyle P\nleftrightarrow Q} P ↔ ↔ Q {\displaystyle P\leftrightarrow Q} T T T T F F F T T F F T T F T F F T F T T F T F F F F F T T F T Name (function) AND (conjunction) OR (disjunction) NAND (non-conjunction) NOR (non-disjunction) XOR (non-equivalence) XNOR (equivalence) where T means true and F means false Condensed truth tables for binary operators [ edit ] For binary operators, a condensed form of truth table is also used, where the row headings and the column headings specify the operands and the table cells specify the result. For example, Boolean logic uses this condensed truth table notation: ∧ T F T T F F F F ∨ T F T T T F T F This notation is useful especially if the operations are commutative, although one can additionally specify that the rows are the first operand and the columns are the second operand. This condensed notation is particularly useful in discussing multi-valued extensions of logic, as it significantly cuts down on combinatoric explosion of the number of rows otherwise needed. It also provides for quickly recognizable characteristic "shape" of the distribution of the values in the table which can assist the reader in grasping the rules more quickly.

Truth tables in digital logic [ edit ] Truth tables are also used to specify the function of hardware look-up tables (LUTs) in digital logic circuitry . For an n-input LUT, the truth table will have ⁠ 2 n {\displaystyle 2^{n}} ⁠ values (or rows in the above tabular format), completely specifying a Boolean function for the LUT. By representing each Boolean value as a bit in a binary number , truth table values can be efficiently encoded as integer values in electronic design automation (EDA) software . For example, a 32-bit integer can encode the truth table for a LUT with up to 5 inputs.

When using an integer representation of a truth table, the output value of the LUT can be obtained by calculating a bit index k based on the input values of the LUT, in which case the LUT's output value is the k th bit of the integer. For example, to evaluate the output value of a LUT given an array of n Boolean input values, the bit index of the truth table's output value can be computed as follows: if the i th input is true, let V i = 1 {\displaystyle V_{i}=1} , else let V i = 0 {\displaystyle V_{i}=0} . Then the k th bit of the binary representation of the truth table is the LUT's output value, where k = V 0 × × 2 0 + V 1 × × 2 1 + V 2 × × 2 2 + ⋯ ⋯ + V n − − 1 × × 2 n − − 1 .

{\displaystyle k=V_{0}\times 2^{0}+V_{1}\times 2^{1}+V_{2}\times 2^{2}+\dots +V_{n-1}\times 2^{n-1}.} Truth tables are a simple and straightforward way to encode Boolean functions, however given the exponential growth in size as the number of inputs increase, they are not suitable for functions with a large number of inputs. Other representations which are more memory efficient are text equations and binary decision diagrams .

Applications of truth tables in digital electronics [ edit ] In digital electronics and computer science (fields of applied logic engineering and mathematics), truth tables can be used to reduce basic Boolean operations to simple correlations of inputs to outputs, without the use of logic gates or code. For example, a binary addition can be represented with the truth table: Binary addition A B C R T T T F T F F T F T F T F F F F where A is the first operand, B is the second operand, C is the carry digit, and R is the result.

This truth table is read left to right: Value pair (A, B) equals value pair (C, R).

Or for this example, A plus B equal result R, with the Carry C.

This table does not describe the logic operations necessary to implement this operation, rather it simply specifies the function of inputs to output values.

With respect to the result, this example may be arithmetically viewed as modulo 2 binary addition, and as logically equivalent to the exclusive-or (exclusive disjunction) binary logic operation.

In this case it can be used for only very simple inputs and outputs, such as 1s and 0s. However, if the number of types of values one can have on the inputs increases, the size of the truth table will  increase.

For instance, in an addition operation, one needs two operands, A and B. Each can have one of two values, zero or one. The number of combinations of these two values is 2 × 2, or four. So the result is four possible outputs of C and R.  If one were to use base 3, the size would increase to 3 × 3, or nine possible outputs.

The first "addition" example above is called a half-adder. A full-adder is when the carry from the previous operation is provided as input to the next adder. Thus, a truth table of eight rows would be needed to describe a full adder 's logic: A B C* | C R
0 0 0  | 0 0
0 1 0  | 0 1
1 0 0  | 0 1
1 1 0  | 1 0
0 0 1  | 0 1
0 1 1  | 1 0
1 0 1  | 1 0
1 1 1  | 1 1

Same as previous, but..
C* = Carry from previous adder Methods of writing truth tables [ edit ] Regarding the guide columns [ 5 ] to the left of a table, which represent propositional variables , different authors have different recommendations about how to fill them in, although this is of no logical significance.

[ 6 ] Alternating method [ edit ] Lee Archie, a professor at Lander University , recommends this procedure, which is commonly followed in published truth-tables: Write out the number of variables (corresponding to the number of statements) in alphabetical order.

The number of lines needed is 2 n where n is the number of variables. (E. g., with three variables, 2 3 = 8).

Start in the right-hand column and alternate T 's and F 's until you run out of lines.

Then move left to the next column and alternate pairs of T 's and F 's until you run out of lines.

Then continue to the next left-hand column and double the numbers of T 's and F 's until completed.

[ 5 ] This method results in truth-tables such as the following table for P → ( Q ∨ R → ( R → ¬ P )) , produced by Stephen Cole Kleene : [ 7 ] P {\displaystyle P} Q {\displaystyle Q} R {\displaystyle R} P → → ( Q ∨ ∨ R → → ( R → → ¬ ¬ P ) ) {\displaystyle P\rightarrow (Q\vee R\rightarrow (R\rightarrow \neg P))} T T T F T T F T T F T F T F F T F T T T F T F T F F T T F F F T Combinatorial method [ edit ] Colin Howson , on the other hand, believes that "it is a good practical rule" to do the following: to start with all Ts, then all the ways (three) two Ts can be combined with one F, then all the ways (three) one T can be combined with two Fs, and then finish with all Fs. If a compound is built up from n distinct sentence letters, its truth table will have 2 n rows, since there are two ways of assigning T or F to the first letter, and for each of these there will be two ways of assigning T or F to the second, and for each of these there will be two ways of assigning T or F to the third, and so on, giving 2.2.2. …, n times, which is equal to 2 n .

[ 6 ] This results in truth tables like this table "showing that ( A → C )∧( B → C ) and ( A ∨ B )→ C are truth-functionally equivalent ", modeled after a table produced by Howson : [ 6 ] A {\displaystyle A} B {\displaystyle B} C {\displaystyle C} ( A → → C ) ∧ ∧ ( B → → C ) {\displaystyle (A\rightarrow C)\land (B\rightarrow C)} ( A ∨ ∨ B ) → → C {\displaystyle (A\vee B)\rightarrow C} T T T T T T T F F F T F T T T F T T T T F F T T T F T F F F T F F F F F F F T T Size of truth tables [ edit ] If there are n input variables then there are 2 n possible combinations of their truth values. A given function may produce true or false for each combination so the number of different functions of n variables is the double exponential 2 2 n .

n 2 n 2 2 n 0 1 2 1 2 4 2 4 16 3 8 256 4 16 65,536 5 32 4,294,967,296 ≈ 4.3 × 10 9 6 64 18,446,744,073,709,551,616 ≈ 1.8 × 10 19 7 128 340,282,366,920,938,463,463,374,607,431,768,211,456 ≈ 3.4 × 10 38 8 256 115,792,089,237,316,195,423,570,985,008,687,907,853,269,984,665,640,564,039,457,584,007,913,129,639,936 ≈ 1.2 × 10 77 Truth tables for functions of three or more variables are rarely given.

Function Tables [ edit ] It can be useful to have the output of a truth table expressed as a function of some variable values, instead of just a literal truth or false value. These may be called "function tables" to differentiate them from the more general "truth tables".

[ 8 ] For example, one value, G , may be used with an XOR gate to conditionally invert another value, X . In other words, when G is false, the output is X , and when G is true, the output is ¬ ¬ X {\textstyle \neg X} . The function table for this would look like: G {\displaystyle G} G ↮ ↮ X {\displaystyle G\nleftrightarrow X} F X {\displaystyle X} T ¬ ¬ X {\displaystyle \neg X} Similarly, a 4-to-1 multiplexer with select imputs S 0 {\displaystyle S_{0}} and S 1 {\displaystyle S_{1}} , data inputs A , B , C and D , and output Z (as displayed in the image) would have this function table: 4-to-1 multiplexer S 1 {\displaystyle S_{1}} S 0 {\displaystyle S_{0}} Z F F A F T B T F C T T D Sentential operator truth tables [ edit ] Overview table [ edit ] Here is an extended truth table giving definitions of all sixteen possible truth functions of two Boolean variables p and q : [ note 1 ] p {\displaystyle p} q {\displaystyle q} ⊥ ⊥ {\displaystyle \bot } p ↓ ↓ q {\displaystyle p\downarrow q} p ↚ ↚ q {\displaystyle p\nleftarrow q} ¬ ¬ p {\displaystyle \neg p} p ↛ ↛ q {\displaystyle p\nrightarrow q} ¬ ¬ q {\displaystyle \neg q} p ↮ ↮ q {\displaystyle p\nleftrightarrow q} p ↑ ↑ q {\displaystyle p\uparrow q} p ∧ ∧ q {\displaystyle p\land q} p ↔ ↔ q {\displaystyle p\leftrightarrow q} q {\displaystyle q} p → → q {\displaystyle p\rightarrow q} p {\displaystyle p} p ← ← q {\displaystyle p\leftarrow q} p ∨ ∨ q {\displaystyle p\vee q} ⊤ ⊤ {\displaystyle \top } T T F F F F F F F F T T T T T T T T T F F F F F T T T T F F F F T T T T F T F F T T F F T T F F T T F F T T F F F T F T F T F T F T F T F T F T Com Assoc Adj ⊥ ⊥ {\displaystyle \bot } p ↓ ↓ q {\displaystyle p\downarrow q} p ↛ ↛ q {\displaystyle p\nrightarrow q} ¬ ¬ q {\displaystyle \neg q} p ↚ ↚ q {\displaystyle p\nleftarrow q} ¬ ¬ p {\displaystyle \neg p} p ↮ ↮ q {\displaystyle p\nleftrightarrow q} p ↑ ↑ q {\displaystyle p\uparrow q} p ∧ ∧ q {\displaystyle p\land q} p ↔ ↔ q {\displaystyle p\leftrightarrow q} p {\displaystyle p} p ← ← q {\displaystyle p\leftarrow q} q {\displaystyle q} p → → q {\displaystyle p\rightarrow q} p ∨ ∨ q {\displaystyle p\vee q} ⊤ ⊤ {\displaystyle \top } Neg ⊤ ⊤ {\displaystyle \top } p ∨ ∨ q {\displaystyle p\vee q} p ← ← q {\displaystyle p\leftarrow q} p {\displaystyle p} p → → q {\displaystyle p\rightarrow q} q {\displaystyle q} p ↔ ↔ q {\displaystyle p\leftrightarrow q} p ∧ ∧ q {\displaystyle p\land q} p ↑ ↑ q {\displaystyle p\uparrow q} p ↮ ↮ q {\displaystyle p\nleftrightarrow q} ¬ ¬ q {\displaystyle \neg q} p ↛ ↛ q {\displaystyle p\nrightarrow q} ¬ ¬ p {\displaystyle \neg p} p ↚ ↚ q {\displaystyle p\nleftarrow q} p ↓ ↓ q {\displaystyle p\downarrow q} ⊥ ⊥ {\displaystyle \bot } Dual ⊤ ⊤ {\displaystyle \top } p ↑ ↑ q {\displaystyle p\uparrow q} p → → q {\displaystyle p\rightarrow q} ¬ ¬ p {\displaystyle \neg p} p ← ← q {\displaystyle p\leftarrow q} ¬ ¬ q {\displaystyle \neg q} p ↔ ↔ q {\displaystyle p\leftrightarrow q} p ↓ ↓ q {\displaystyle p\downarrow q} p ∨ ∨ q {\displaystyle p\vee q} p ↮ ↮ q {\displaystyle p\nleftrightarrow q} q {\displaystyle q} p ↚ ↚ q {\displaystyle p\nleftarrow q} p {\displaystyle p} p ↛ ↛ q {\displaystyle p\nrightarrow q} p ∧ ∧ q {\displaystyle p\land q} ⊥ ⊥ {\displaystyle \bot } L id F F T T T, F T F R id F F T T T, F T F where T = true.

F = false.

The Com row indicates whether an operator, op , is commutative – P op Q = Q op P .

The Assoc row indicates whether an operator, op , is associative – ( P op Q ) op R = P op ( Q op R ) .

The Adj row shows the operator op2 such that P op Q = Q op2 P .

The Neg row shows the operator op2 such that P op Q = ¬( P op2 Q ) .

The Dual row shows the dual operation obtained by interchanging T with F, and AND with OR.

The L id row shows the operator's left identities if it has any values I such that I op Q = Q .

The R id row shows the operator's right identities if it has any values I such that P op I = P .

[ note 2 ] Wittgenstein table [ edit ] In proposition 5.101 of the Tractatus Logico-Philosophicus , [ 9 ] Wittgenstein listed the table above as follows: Truthvalues Operator Operation name Tractatus [ note 3 ] 0 (F F F F)(p, q) ⊥ false Opq Contradiction p and not p; and q and not q 1 (F F F T)(p, q) NOR p ↓ q Xpq Logical NOR neither p nor q 2 (F F T F)(p, q) ↚ p ↚ q Mpq Converse nonimplication q and not p 3 (F F T T)(p, q) ¬p , ~p ¬p Np , Fpq Negation not p 4 (F T F F)(p, q) ↛ p ↛ q Lpq Material nonimplication p and not q 5 (F T F T)(p, q) ¬q , ~q ¬q Nq , Gpq Negation not q 6 (F T T F)(p, q) XOR p ⊕ q Jpq Exclusive disjunction p or q , but not both 7 (F T T T)(p, q) NAND p ↑ q Dpq Logical NAND not both p and q 8 (T F F F)(p, q) AND p ∧ q Kpq Logical conjunction p and q 9 (T F F T)(p, q) XNOR p iff q Epq Logical biconditional if p then q ; and if q then p 10 (T F T F)(p, q) q q Hpq Projection function q 11 (T F T T)(p, q) p → q if p then q Cpq Material implication if p then q 12 (T T F F)(p, q) p p Ipq Projection function p 13 (T T F T)(p, q) p ← q if q then p Bpq Converse implication if q then p 14 (T T T F)(p, q) OR p ∨ q Apq Logical disjunction p or q 15 (T T T T)(p, q) ⊤ true Vpq Tautology if p then p; and if q then q The truth table represented by each row is obtained by appending the sequence given in Truthvalues row to the table [ note 3 ] p T T F F q T F T F For example, the table p T T F F q T F T F 11 T F T T represents the truth table for Material implication . Logical operators can also be visualized using Venn diagrams .

Nullary operations [ edit ] There are 2 nullary operations: Always true Never true, unary falsum Logical true [ edit ] The output value is always true, because this operator has zero operands and therefore no input values p T T T F T Logical false [ edit ] The output value is never true: that is, always false, because this operator has zero operands and therefore no input values p F T F F F Unary operations [ edit ] There are 2 unary operations: Unary identity Unary negation Logical identity [ edit ] Logical identity is an operation on one logical value p, for which the output value remains p.

The truth table for the logical identity operator is as follows: p p T T F F Logical negation [ edit ] Logical negation is an operation on one logical value , typically the value of a proposition , that produces a value of true if its operand is false and a value of false if its operand is true.

The truth table for NOT p (also written as ¬p , Np , Fpq , or ~p ) is as follows: p ¬p T F F T Binary operations [ edit ] There are 16 possible truth functions of two binary variables , each operator has its own name.

Logical conjunction (AND) [ edit ] Logical conjunction is an operation on two logical values , typically the values of two propositions , that produces a value of true if both of its operands are true.

The truth table for p AND q (also written as p ∧ q , Kpq , p & q , or p ⋅ ⋅ {\displaystyle \cdot } q ) is as follows: p q p ∧ q T T T T F F F T F F F F In ordinary language terms, if both p and q are true, then the conjunction p ∧ q is true.  For all other assignments of logical values to p and to q the conjunction p ∧ q is false.

It can also be said that if p , then p ∧ q is q , otherwise p ∧ q is p .

Logical disjunction (OR) [ edit ] Logical disjunction is an operation on two logical values , typically the values of two propositions , that produces a value of true if at least one of its operands is true.

The truth table for p OR q (also written as p ∨ q , Apq , p || q , or p + q ) is as follows: p q p ∨ q T T T T F T F T T F F F Stated in English, if p , then p ∨ q is p , otherwise p ∨ q is q .

Logical implication [ edit ] Logical implication and the material conditional are both associated with an operation on two logical values , typically the values of two propositions , which produces a value of false if the first operand is true and the second operand is false, and  a value of true otherwise.

The truth table associated with the logical implication p implies q (symbolized as p ⇒ q , or more rarely Cpq ) is as follows: p q p ⇒ q T T T T F F F T T F F T The truth table associated with the material conditional if p then q (symbolized as p → q ) is as follows: p q p → q T T T T F F F T T F F T p ⇒ q and p → q are equivalent to ¬p ∨ q .

Logical equality [ edit ] Logical equality (also known as biconditional or exclusive nor ) is an operation on two logical values , typically the values of two propositions , that produces a value of true if both operands are false or both operands are true.

The truth table for p XNOR q (also written as p ↔ q , Epq , p = q , or p ≡ q ) is as follows: p q p ↔ q T T T T F F F T F F F T So p EQ q is true if p and q have the same truth value (both true or both false), and false if they have different truth values.

Exclusive disjunction [ edit ] Exclusive disjunction is an operation on two logical values , typically the values of two propositions , that produces a value of true if one but not both of its operands is true.

The truth table for p XOR q (also written as Jpq , or p ⊕ q ) is as follows: p q p ⊕ q T T F T F T F T T F F F For two propositions, XOR can also be written as (p ∧ ¬q) ∨ (¬p ∧ q).

Logical NAND [ edit ] The logical NAND is an operation on two logical values , typically the values of two propositions , that produces a value of false if both of its operands are true.  In other words, it produces a value of true if at least one of its operands is false.

The truth table for p NAND q (also written as p ↑ q , Dpq , or p | q ) is as follows: p q p ↑ q T T F T F T F T T F F T It is frequently useful to express a logical operation as a compound operation , that is, as an operation that is built up or composed from other operations.  Many such compositions are possible, depending on the operations that are taken as basic or "primitive" and the operations that are taken as composite or "derivative".

In the case of logical NAND, it is clearly expressible as a compound of NOT and AND.

The negation of a conjunction: ¬( p ∧ q ), and the disjunction of negations: (¬ p ) ∨ (¬ q ) can be tabulated as follows: p q p ∧ q ¬( p ∧ q ) ¬ p ¬ q (¬ p ) ∨ (¬ q ) T T T F F F F T F F T F T T F T F T T F T F F F T T T T Logical NOR [ edit ] The logical NOR is an operation on two logical values , typically the values of two propositions , that produces a value of true if both of its operands are false. In other words, it produces a value of false if at least one of its operands is true. ↓ is also known as the Peirce arrow after its inventor, Charles Sanders Peirce , and is a Sole sufficient operator .

The truth table for p NOR q (also written as p ↓ q , or Xpq ) is as follows: p q p ↓ q T T F T F F F T F F F T The negation of a disjunction ¬( p ∨ q ), and the conjunction of negations (¬ p ) ∧ (¬ q ) can be tabulated as follows: p q p ∨ q ¬( p ∨ q ) ¬ p ¬ q (¬ p ) ∧ (¬ q ) T T T F F F F T F T F F T F F T T F T F F F F F T T T T Inspection of the tabular derivations for NAND and NOR, under each assignment of logical values to the functional arguments p and q , produces the identical patterns of functional values for ¬( p ∧ q ) as for (¬ p ) ∨ (¬ q ), and for ¬( p ∨ q ) as for (¬ p ) ∧ (¬ q ).  Thus the first and second expressions in each pair are logically equivalent, and may be substituted for each other in all contexts that pertain solely to their logical values.

This equivalence is one of De Morgan's laws .

See also [ edit ] Philosophy portal Psychology portal Boolean domain Boolean-valued function Espresso heuristic logic minimizer Excitation table State-transition table First-order logic Functional completeness Karnaugh maps Logic gate Logical connective Logical graph Mathematical table Method of analytic tableaux Propositional calculus Truth function Decision table Notes [ edit ] ^ Information about notation may be found in ( Bocheński 1959 ), ( Enderton 2001 ), and ( Quine 1982 ).

^ The operators here with equal left and right identities (XOR, AND, XNOR, and OR) are also commutative monoids because they are also associative . While this distinction may be irrelevant in a simple discussion of logic, it can be quite important in more advanced mathematics. For example, in category theory an enriched category is described as a base category enriched over a monoid, and any of these operators can be used for enrichment.

^ a b Wittgenstein used a different mapping. In proposition 5.101 of the Tractatus one has to append Truthvalues row to the table p T F T F q T T F F This explains why Tractatus row in the table given here does not point to the same Truthvalues row as in the Tractatus.

References [ edit ] ^ Enderton 2001 ^ von Wright, Georg Henrik (1955). "Ludwig Wittgenstein, A Biographical Sketch".

The Philosophical Review .

64 (4): 527–545 (p. 532, note 9).

doi : 10.2307/2182631 .

JSTOR 2182631 .

^ Post, Emil (July 1921). "Introduction to a general theory of elementary propositions".

American Journal of Mathematics .

43 (3): 163– 185.

doi : 10.2307/2370324 .

hdl : 2027/uiuo.ark:/13960/t9j450f7q .

JSTOR 2370324 .

^ a b Anellis, Irving H.

(2012). "Peirce's Truth-functional Analysis and the Origin of the Truth Table".

History and Philosophy of Logic .

33 : 87– 97.

doi : 10.1080/01445340.2011.621702 .

S2CID 170654885 .

^ a b "How to Construct a Truth Table" .

philosophy.lander.edu . Retrieved 2024-04-05 .

^ a b c Howson, Colin (1997).

Logic with trees: an introduction to symbolic logic . London; New York: Routledge. p. 10.

ISBN 978-0-415-13342-5 .

^ Kleene, Stephen Cole (2013).

Mathematical Logic . Dover Books on Mathematics. Courier Corporation. p. 11.

ISBN 9780486317076 .

^ Mano, M. Morris; Ciletti, Michael (2018-07-13).

Digital Design, Global Edition (6th ed.). Pearson Education, Limited.

ISBN 9781292231167 .

^ Wittgenstein, Ludwig (1922).

Tractatus Logico-Philosophicus (PDF) . Proposition 5.101.

Works cited [ edit ] Bocheński, Józef Maria (1959).

A Précis of Mathematical Logic . Translated by Bird, Otto. D. Reidel.

doi : 10.1007/978-94-017-0592-9 .

ISBN 978-94-017-0592-9 .

{{ cite book }} : ISBN / Date incompatibility ( help ) Enderton, H.

(2001).

A Mathematical Introduction to Logic (2nd ed.). Harcourt Academic Press.

ISBN 0-12-238452-0 .

Quine, W.V.

(1982).

Methods of Logic (4th ed.). Harvard University Press.

ISBN 978-0-674-57175-4 .

External links [ edit ] Wikimedia Commons has media related to Truth tables .

"Truth table" , Encyclopedia of Mathematics , EMS Press , 2001 [1994] Truth Tables, Tautologies, and Logical Equivalence Converting truth tables into Boolean expressions v t e Classical logic General Quantifiers Predicate Connective Tautology Truth tables Truth function Truth value Well-formed formula Logicism Problem of multiple generality Associativity Distribution Validity Soundness Classical logics Term Propositional First-order Second-order Higher-order Principles Commutativity of conjunction Excluded middle Bivalence Noncontradiction Monotonicity of entailment Explosion Rules De Morgan's laws Material implication Transposition modus ponens modus tollens modus ponendo tollens Constructive dilemma Destructive dilemma Disjunctive syllogism Hypothetical syllogism Absorption Introduction Negation Double negation Existential Universal Biconditional Conjunction Disjunction Elimination Double negation Existential Universal Biconditional Conjunction Disjunction People Bernard Bolzano George Boole Georg Cantor Richard Dedekind Augustus De Morgan Gottlob Frege Kurt Gödel Hugh MacColl Giuseppe Peano Charles Sanders Peirce Bertrand Russell Ernst Schröder Henry M. Sheffer Alfred Tarski Willard Van Orman Quine Ludwig Wittgenstein Jan Łukasiewicz Works Begriffsschrift Function and Concept The Principles of Mathematics Principia Mathematica Tractatus Logico-Philosophicus v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal Authority control databases : National Germany v t e Diagrams in logic Venn diagram Square of opposition Porphyrian tree Karnaugh map Binary decision diagram Propositional directed acyclic graph Sentential decision diagram Truth table Sequent calculus Method of analytic tableaux NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐6qjf2
Cached time: 20250816015145
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.847 seconds
Real time usage: 1.173 seconds
Preprocessor visited node count: 7518/1000000
Revision size: 44025/2097152 bytes
Post‐expand include size: 195820/2097152 bytes
Template argument size: 3192/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 4/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 95280/5000000 bytes
Lua time usage: 0.354/10.000 seconds
Lua memory usage: 10858846/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  627.778      1 -total
 25.75%  161.664      2 Template:Reflist
 13.79%   86.597      1 Template:Logical_connectives_sidebar
 13.53%   84.941      1 Template:Sidebar
 13.53%   84.937      3 Template:Cite_journal
 11.50%   72.170      1 Template:Short_description
 10.30%   64.662      7 Template:Navbox
  7.77%   48.757      7 Template:Cite_book
  7.41%   46.538      1 Template:Commons_category
  7.10%   44.595      2 Template:Pagetype Saved in parser cache with key enwiki:pcache:25512250:|#|:idhash:canonical and timestamp 20250816015145 and revision id 1306118817. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Truth_table&oldid=1306118817 " Categories : Boolean algebra Mathematical tables Semantics Propositional calculus Conceptual models Hidden categories: Articles with short description Short description matches Wikidata CS1 errors: ISBN date Commons category link is on Wikidata Pages that use a deprecated format of the math tags This page was last edited on 16 August 2025, at 01:51 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Truth table 45 languages Add topic

