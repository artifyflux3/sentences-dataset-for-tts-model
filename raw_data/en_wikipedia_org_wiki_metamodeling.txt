Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview 2 Topics Toggle Topics subsection 2.1 Definition 2.2 Metadata modeling 2.3 Model transformations 2.4 Relationship to ontologies 2.5 Types of metamodels 2.6 Zoos of metamodels 3 See also 4 References 5 Further reading Toggle the table of contents Metamodeling 14 languages Català Deutsch Eesti Español فارسی Français 한국어 Italiano Latviešu Magyar 日本語 Polski Русский 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Concept of software engineering "Meta model" redirects here. For other uses, see Meta model (disambiguation) .

Not to be confused with Surrogate model .

Example of a Geologic map information meta-model, with four types of meta-objects, and their self-references.

[ 1 ] A metamodel is a model of a model, and metamodeling is the process of generating such metamodels. Thus metamodeling or meta-modeling is the analysis, construction, and development of the frames, rules, constraints, models, and theories applicable and useful for modeling a predefined class of problems. As its name implies, this concept applies the notions of meta- and modeling in software engineering and systems engineering . Metamodels are of many types and have diverse applications.

[ 2 ] Overview [ edit ] A metamodel/ surrogate model is a model of the model, i.e. a simplified model of an actual model of a circuit, system, or software-like entity.

[ 3 ] [ 4 ] Metamodel can be a mathematical relation or algorithm representing input and output relations. A model is an abstraction of phenomena in the real world ;  a metamodel is yet another abstraction, highlighting the properties of the model itself.  A model conforms to its metamodel in the way that a computer program conforms to the grammar of the programming language in which it is written. Various types of metamodels include polynomial equations, neural networks, Kriging , etc. "Metamodeling" is the construction of a collection of "concepts" (things, terms, etc.) within a certain domain. Metamodeling typically involves studying the output and input relationships and then fitting the right metamodels to represent that behavior.

Common uses for metamodels are: As a schema for semantic data that needs to be exchanged or stored As a language that supports a particular method or process As a language to express additional semantics of existing information As a mechanism to create tools that work with a broad class of models at run time As a schema for modeling and automatically exploring sentences of a language with applications to automated test synthesis As an approximation of a higher-fidelity model for use when reducing time, cost, or computational effort is necessary Because of the "meta" character of metamodeling, both the praxis and theory of metamodels are of relevance to metascience , metaphilosophy , metatheories and systemics , and meta-consciousness.  The concept can be useful in mathematics , and has practical applications in computer science and computer engineering / software engineering . The latter are the main focus of this article.

Topics [ edit ] Meta-Object Facility Illustration A US FEA Business reference model [ 5 ] Example of an ontology A DoDAF metamodel Definition [ edit ] In software engineering , the use of models is an alternative to more common code-based development techniques. A model always conforms to a unique metamodel. One of the currently most active branches of Model Driven Engineering is the approach named model-driven architecture proposed by OMG . This approach is embodied in the Meta Object Facility (MOF) specification.

[ citation needed ] Typical metamodelling specifications proposed by OMG are UML , SysML , SPEM or CWM.

ISO has also published the standard metamodel ISO/IEC 24744 .

[ 6 ] All the languages presented below could be defined as MOF metamodels.

Metadata modeling [ edit ] Metadata modeling is a type of metamodeling used in software engineering and systems engineering for the analysis and construction of models applicable and useful to some predefined class of problems. (see also: data modeling ).

Model transformations [ edit ] One important move in model-driven engineering is the systematic use of model transformation languages . The OMG has proposed a standard for this called QVT for Queries/Views/Transformations.

QVT is based on the meta-object facility (MOF). Among many other model transformation languages (MTLs), some examples of implementations of this standard are AndroMDA, VIATRA , Tefkat , MT , ManyDesigns Portofino .

Relationship to ontologies [ edit ] Meta-models are closely related to ontologies . Both are often used to describe and analyze the relations between concepts: [ 7 ] Ontologies: express something meaningful within a specified universe or domain of discourse by utilizing grammar for using vocabulary. The grammar specifies what it means to be a well-formed statement, assertion, query, etc. (formal constraints) on how terms in the ontology’s controlled vocabulary can be used together.

[ 8 ] Meta-modeling: can be considered as an explicit description (constructs and rules) of how a domain-specific model is built. In particular, this comprises a formalized specification of the domain-specific notations. Typically, metamodels are – and always should follow - a strict rule set.

[ 9 ] "A valid metamodel is an ontology, but not all ontologies are modeled explicitly as metamodels." [ 8 ] Types of metamodels [ edit ] For software engineering, several types of models (and their corresponding modeling activities) can be distinguished: Metadata modeling (MetaData model) Meta-process modeling (MetaProcess model) Executable meta-modeling (combining both of the above and much more, as in the general purpose tool Kermeta ) Model transformation language (see below) Polynomial metamodels [ 10 ] Neural network metamodels Kriging metamodels Piecewise polynomial (spline) metamodels Gradient-enhanced kriging (GEK) Zoos of metamodels [ edit ] A library of similar metamodels has been called a Zoo of metamodels.

[ 11 ] There are several types of meta-model zoos.

[ 12 ] Some are expressed in ECore. Others are written in MOF 1.4 – XMI 1.2. The metamodels expressed in UML - XMI 1.2 may be uploaded in Poseidon for UML, a UML CASE tool.

See also [ edit ] Business reference model Data governance Model-driven engineering (MDE) Model-driven architecture (MDA) Domain-specific language (DSL) Domain-specific modeling (DSM) Generic Eclipse Modeling System (GEMS) Kermeta (Kernel Meta-modeling) Metadata MetaCASE tool (tools for creating tools for computer-aided software engineering tools) Method engineering MODAF Meta-Model MOF Queries/Views/Transformations (MOF QVT) Object Process Methodology Requirements analysis Space mapping Surrogate model Transformation language VIATRA (Viatra) XML transformation language (XML TL) References [ edit ] ^ David R. Soller et al. (2001) Progress Report on the National Geologic Map Database, Phase 3: An Online Database of Map Information Digital Mapping Techniques '01 -- Workshop Proceedings U.S. Geological Survey Open-File Report 01-223.

^ Saraju Mohanty , Chapter 12 Metamodel-Based Fast AMS-SoC Design Methodologies, " Nanoelectronic Mixed-Signal System Design ", ISBN 978-0071825719 and 0071825711, 1st Edition, McGraw-Hill, 2015.

^ Oleg Garitselov, Saraju Mohanty , and Elias Kougianos, " A Comparative Study of Metamodels for Fast and Accurate Simulation of Nano-CMOS Circuits Archived 23 September 2015 at the Wayback Machine ", IEEE Transactions on Semiconductor Manufacturing (TSM), Vol. 25, No. 1, February 2012, pp. 26–36.

^ Saraju Mohanty Ultra-Fast Design Exploration of Nanoscale Circuits through Metamodeling Archived 23 September 2015 at the Wayback Machine , Invited Talk, Semiconductor Research Corporation (SRC), Texas Analog Center for Excellence (TxACE), 27 April 2012.

^ FEA (2005) FEA Records Management Profile, Version 1.0 . December 15, 2005.

^ International Organization for Standardization / International Electrotechnical Commission, 2007.

ISO/IEC 24744 . Software Engineering - Metamodel for Development Methodologies.

^ E. Söderström, et al. (2001) "Towards a Framework for Comparing Process Modelling Languages", in: Lecture Notes In Computer Science ; Vol. 2348. Proceedings of the 14th International Conference on Advanced Information Systems Engineering. Pages: 600 – 611, 2001 ^ a b Pidcock, Woody (2003), What are the differences between a vocabulary, a taxonomy, a thesaurus, an ontology, and a meta-model?

, archived from the original on 14 October 2009 , retrieved 10 October 2009 ^ Ernst, Johannes (2002), What is metamodeling, and what is it good for?

, archived from the original on 9 October 2011 , retrieved 9 October 2009 ^ Saraju Mohanty and Elias Kougianos, " Polynomial Metamodel Based Fast Optimization of Nano-CMOS Oscillator Circuits Archived 10 August 2014 at the Wayback Machine ", Springer Analog Integrated Circuits and Signal Processing Journal, Volume 79, Issue 3, June 2014, pp. 437–453.

^ Jean-Marie Favre: Towards a Basic Theory to Model Driven Engineering.

Archived 15 October 2006 at the Wayback Machine .

^ AtlanticZoo Archived 29 April 2006 at the Wayback Machine .

Further reading [ edit ] Wikimedia Commons has media related to Metamodeling .

Saraju Mohanty (2015). "Chapter 12 Metamodel-Based Fast AMS-SoC  Design Methodologies".

Nanoelectronic Mixed-Signal System Design . McGraw-Hill.

ISBN 978-0071825719 .

Booch, G., Rumbaugh, J., Jacobson, I. (1999), The Unified Modeling Language User Guide , Redwood City, CA: Addison Wesley Longman Publishing Co., Inc.

J. P. van Gigch , System Design Modeling and Metamodeling , Plenum Press, New York, 1991 Gopi Bulusu, hamara.in, 2004 Model Driven Transformation P. C. Smolik, Mambo Metamodeling Environment , Doctoral Thesis, Brno University of Technology. 2006 Gonzalez-Perez, C. and B. Henderson-Sellers, 2008. Metamodelling for Software Engineering. Chichester (UK): Wiley. 210 p.

ISBN 978-0-470-03036-3 M.A. Jeusfeld, M. Jarke, and J. Mylopoulos , 2009. Metamodeling for Method Engineering. Cambridge (USA): The MIT Press. 424 p.

ISBN 978-0-262-10108-0 , Open access via https://conceptbase.sourceforge.net/2021_Metamodeling_for_Method_Engineering.pdf G. Caplat Modèles & Métamodèles ,  2008  - ISBN 978-2-88074-749-7 (in French) Fill, H.-G., Karagiannis, D., 2013.

On the Conceptualisation of Modelling Methods Using the ADOxx Meta Modelling Platform , Enterprise Modelling and Information Systems Architectures, Vol. 8, Issue 1, 4-25.

v t e Software engineering Fields Computer programming DevOps Empirical software engineering Experimental software engineering Formal methods Requirements engineering Search-based software engineering Site reliability engineering Social software engineering Software deployment Software design Software maintenance Software testing Systems analysis Concepts Abstraction CI/CD Compatibility Backward compatibility Compatibility layer Compatibility mode Forward compatibility Software incompatibility Component-based software engineering Data modeling Enterprise architecture Functional specification Modeling language Programming paradigm Software Software archaeology Software architecture Software configuration management Software development process/methodology Software quality Software quality assurance Software system Software verification and validation Structured analysis Essential analysis Orientations Agile Aspect-oriented Object orientation Ontology SDLC Service orientation Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD Scrum Spiral model UP V-model Waterfall model XP Model-driven engineering Round-trip engineering Other CMMI Data model ER model Function model Information model Metamodeling Object model SPICE Systems model View model Languages IDEF SysML UML USL Systems design Requirements Functional requirement Non-functional requirement Capacity Users Compute Memory Storage Network Web traffic Interface API SOAP REST GraphQL gRPC Webhook High-level design Client Load balancing Application server Message queue Integration Vertical Peer-to-peer API gateway pub-sub Event source ETL Batch Stream Orchestration Architectures Monolithic Microservices Event-driven Client–server Serverless Circuit breaker Rate limiting Database Relational NoSQL Graph Key–value LSM tree Time series Column oriented Principles Consistency Reliability CAP theorem Maintainability Configurability Modularity Durability Scalability Stateless Asynchronous I/O Loose coupling Availability Fault tolerance Failover Single point of failure Replication Consistent hashing Circuit breaker Latency Cache CDN Shard Database index Pre-caching Storage Object storage Block storage Observability Logging Metrics Tracing Error rate Queries per second Notification system Anomaly detection Related fields Computer engineering Computer science Information science Project management Risk management Systems engineering Commons Category v t e Meta- Domains and methods Meta-analysis Metabibliography Metaclass Semantic Web Metacognition Meta-learning Metamemory Meta-communication Metacomputing Metadata Metadesign Metadiscourse Meta-emotion Metamood Metafiction Metagaming Metagenomics Metaheuristic Metahistory Metahumor Metaknowledge Metalanguage Metapragmatics Metasemantics Metalinguistics Metamaterials Metamathematics Metamedia Metamodeling Metamodernism Metamotivation Metanarrative Metaobject Meta-optimization Meta-organization Metaphenomics Metaphilosophy Metaepistemology Metaethics Metalogic Meta-ontology Metaphysics Metametaphysics Metapolitics Metapopulation Metaprogramming Metapsychiatry Metapsychology Metapuzzle Meta-reference Meta-regulation Metascience Metasociology Meta-system Metatheorem Metatheory Metaverse Retrieved from " https://en.wikipedia.org/w/index.php?title=Metamodeling&oldid=1305074991 " Categories : Software design Scientific modelling Hidden categories: Webarchive template wayback links Articles with short description Short description is different from Wikidata Use dmy dates from March 2015 All articles with unsourced statements Articles with unsourced statements from July 2023 Commons category link is on Wikidata Articles with French-language sources (fr) This page was last edited on 9 August 2025, at 22:22 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Metamodeling 14 languages Add topic

