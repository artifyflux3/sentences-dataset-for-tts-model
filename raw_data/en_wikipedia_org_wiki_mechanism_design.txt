Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Description 2 Foundations Toggle Foundations subsection 2.1 Mechanism 2.2 Revelation principle 2.3 Implementability 2.3.1 Necessity 2.3.2 Sufficiency 3 Highlighted results Toggle Highlighted results subsection 3.1 Revenue equivalence theorem 3.2 Vickrey–Clarke–Groves mechanisms 3.3 Gibbard–Satterthwaite theorem 3.4 Myerson–Satterthwaite theorem 3.5 Shapley value 3.6 Price discrimination 3.7 Myerson ironing 3.7.1 Proof 4 See also 5 Notes 6 References 7 Further reading 8 External links Toggle the table of contents Mechanism design 21 languages العربية Azərbaycanca Deutsch Ελληνικά Español فارسی Français 한국어 עברית Монгол 日本語 Português Русский Српски / srpski Suomi Svenska Türkçe Українська Tiếng Việt 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Field of economics and game theory This article includes a list of references , related reading , or external links , but its sources remain unclear because it lacks inline citations .

Please help improve this article by introducing more precise citations.

( July 2024 ) ( Learn how and when to remove this message ) Part of the behavioral sciences Economics Outline Index Glossary Economists Principles of Economics Tools and methodology Economic theory Mathematical modeling Game theory Rational choice Cognitive science ( Behavioral ) Economic equilibrium Empirical methods Experimental National accounts Econometrics Time series Spatial Prescriptive and policy Welfare analysis Social choice theory Rational choice theory Cost–benefit analysis Branches and subfields Applied Econometrics International Heterodox Micro Macro Mainstream Mathematical Mech. design Methodology Political Industrial org.

Market design Applications Agriculture Business Cultural Demographic Development Ecological Education Engineering Environmental Evolutionary Financial Geographic Happiness Health History Information Infrastructure Institutions Labour Law Management Non-monetary Organization Participation Personnel Planning Policy Public sector Public choice Social choice Regional Regulatory Resources Rural Service Transport Urban Welfare Economics portal Society portal v t e The upper-left space Θ Θ {\displaystyle \Theta } depicts the type space and the upper-right space X the space of outcomes. The social choice function f ( θ θ ) {\displaystyle f(\theta )} maps a type profile to an outcome. In games of mechanism design, agents send messages M {\displaystyle M} in a game environment g {\displaystyle g} . The equilibrium in the game ξ ξ ( M , g , θ θ ) {\displaystyle \xi (M,g,\theta )} can be designed to implement some social choice function f ( θ θ ) {\displaystyle f(\theta )} .

Mechanism design (sometimes implementation theory or institution design ) [ 1 ] is a branch of economics and game theory . It studies how to construct rules—called mechanisms or institutions—that produce good outcomes according to some predefined metric , even when the designer does not know the players' true preferences or what information they have. Mechanism design thus focuses on the study of solution concepts for a class of private-information games.

Mechanism design has broad applications, including traditional domains of economics such as market design , but also political science (through voting theory ). It is a foundational component in the operation of the internet , being used in networked systems (such as inter-domain routing ), [ 2 ] e-commerce , and advertisement auctions by Facebook and Google .

Because it starts with the end of the game (a particular result), then works backwards to find a game that implements it, it is sometimes described as reverse game theory .

[ 2 ] Leonid Hurwicz explains that "in a design problem, the goal function is the main given, while the mechanism is the unknown. Therefore, the design problem is the inverse of traditional economic theory, which is typically devoted to the analysis of the performance of a given mechanism." [ 3 ] The 2007 Nobel Memorial Prize in Economic Sciences was awarded to Leonid Hurwicz , Eric Maskin , and Roger Myerson "for having laid the foundations of mechanism design theory." [ 4 ] The related works of William Vickrey that established the field earned him the 1996 Nobel prize.

Description [ edit ] One person, called the "principal", would like to condition his behavior on information privately known to the players of a game . For example, the principal would like to know the true quality of a used car a salesman is pitching. He cannot learn anything simply by asking the salesman, because it is in the salesman's interest to distort the truth. However, in mechanism design, the principal does have one advantage: He may design a game whose rules influence others to act the way he would like.

Without mechanism design theory, the principal's problem would be difficult to solve. He would have to consider all the possible games and choose the one that best influences other players' tactics. In addition, the principal would have to draw conclusions from agents who may lie to him. Thanks to the revelation principle , the principal only needs to consider games in which agents truthfully report their private information.

Foundations [ edit ] Mechanism [ edit ] A game of mechanism design is a game of private information in which one of the agents, called the principal, chooses the payoff structure. Following Harsanyi ( 1967 ), the agents receive secret "messages" from nature containing information relevant to payoffs. For example, a message may contain information about their preferences or the quality of a good for sale. We call this information the agent's "type" (usually noted θ θ {\displaystyle \theta } and accordingly the space of types Θ Θ {\displaystyle \Theta } ). Agents then report a type to the principal (usually noted with a hat θ θ ^ ^ {\displaystyle {\hat {\theta }}} ) that can be a strategic lie. After the report, the principal and the agents are paid according to the payoff structure the principal chose.

The timing of the game is: The principal commits to a mechanism y ( ) {\displaystyle y()} that grants an outcome y {\displaystyle y} as a function of reported type The agents report, possibly dishonestly, a type profile θ θ ^ ^ {\displaystyle {\hat {\theta }}} The mechanism is executed (agents receive outcome y ( θ θ ^ ^ ) {\displaystyle y({\hat {\theta }})} ) In order to understand who gets what, it is common to divide the outcome y {\displaystyle y} into a goods allocation and a money transfer, y ( θ θ ) = { x ( θ θ ) , t ( θ θ ) } , x ∈ ∈ X , t ∈ ∈ T {\displaystyle y(\theta )=\{x(\theta ),t(\theta )\},\ x\in X,t\in T} where x {\displaystyle x} stands for an allocation of goods rendered or received as a function of type, and t {\displaystyle t} stands for a monetary transfer as a function of type.

As a benchmark the designer often defines what should happen under full information. Define a social choice function f ( θ θ ) {\displaystyle f(\theta )} mapping the (true) type profile directly to the allocation of goods received or rendered, f ( θ θ ) : Θ Θ → → Y {\displaystyle f(\theta ):\Theta \rightarrow Y} In contrast a mechanism maps the reported type profile to an outcome (again, both a goods allocation x {\displaystyle x} and a money transfer t {\displaystyle t} ) y ( θ θ ^ ^ ) : Θ Θ → → Y {\displaystyle y({\hat {\theta }}):\Theta \rightarrow Y} Revelation principle [ edit ] Main article: Revelation principle A proposed mechanism constitutes a Bayesian game (a game of private information), and if it is well-behaved the game has a Bayesian Nash equilibrium . At equilibrium agents choose their reports strategically as a function of type θ θ ^ ^ ( θ θ ) {\displaystyle {\hat {\theta }}(\theta )} It is difficult to solve for Bayesian equilibria in such a setting because it involves solving for agents' best-response strategies and for the best inference from a possible strategic lie. Thanks to a sweeping result called the revelation principle, no matter the mechanism a designer can [ 5 ] confine attention to equilibria in which agents truthfully report type. The revelation principle states: "To every Bayesian Nash equilibrium there corresponds a Bayesian game with the same equilibrium outcome but in which players truthfully report type." This is extremely useful. The principle allows one to solve for a Bayesian equilibrium by assuming all players truthfully report type (subject to an incentive compatibility constraint). In one blow it eliminates the need to consider either strategic behavior or lying.

Its proof is quite direct. Assume a Bayesian game in which the agent's strategy and payoff are functions of its type and what others do, u i ( s i ( θ θ i ) , s − − i ( θ θ − − i ) , θ θ i ) {\displaystyle u_{i}\left(s_{i}(\theta _{i}),s_{-i}(\theta _{-i}),\theta _{i}\right)} . By definition agent i' s equilibrium strategy s ( θ θ i ) {\displaystyle s(\theta _{i})} is Nash in expected utility: s i ( θ θ i ) ∈ ∈ arg ⁡ ⁡ max s i ′ ∈ ∈ S i ∑ ∑ θ θ − − i p ( θ θ − − i ∣ ∣ θ θ i ) u i ( s i ′ , s − − i ( θ θ − − i ) , θ θ i ) {\displaystyle s_{i}(\theta _{i})\in \arg \max _{s'_{i}\in S_{i}}\sum _{\theta _{-i}}\ p(\theta _{-i}\mid \theta _{i})\ u_{i}\left(s'_{i},s_{-i}(\theta _{-i}),\theta _{i}\right)} Simply define a mechanism that would induce agents to choose the same equilibrium. The easiest one to define is for the mechanism to commit to playing the agents' equilibrium strategies for them.

y ( θ θ ^ ^ ) : Θ Θ → → S ( Θ Θ ) → → Y {\displaystyle y({\hat {\theta }}):\Theta \rightarrow S(\Theta )\rightarrow Y} Under such a mechanism the agents of course find it optimal to reveal type since the mechanism plays the strategies they found optimal anyway. Formally, choose y ( θ θ ) {\displaystyle y(\theta )} such that θ θ i ∈ ∈ arg ⁡ ⁡ max θ θ i ′ ∈ ∈ Θ Θ ∑ ∑ θ θ − − i p ( θ θ − − i ∣ ∣ θ θ i ) u i ( y ( θ θ i ′ , θ θ − − i ) , θ θ i ) = ∑ ∑ θ θ − − i p ( θ θ − − i ∣ ∣ θ θ i ) u i ( s i ( θ θ ) , s − − i ( θ θ − − i ) , θ θ i ) {\displaystyle {\begin{aligned}\theta _{i}\in {}&\arg \max _{\theta '_{i}\in \Theta }\sum _{\theta _{-i}}\ p(\theta _{-i}\mid \theta _{i})\ u_{i}\left(y(\theta '_{i},\theta _{-i}),\theta _{i}\right)\\[5pt]&=\sum _{\theta _{-i}}\ p(\theta _{-i}\mid \theta _{i})\ u_{i}\left(s_{i}(\theta ),s_{-i}(\theta _{-i}),\theta _{i}\right)\end{aligned}}} Implementability [ edit ] Main article: Implementability (mechanism design) The designer of a mechanism generally hopes either to design a mechanism y ( ) {\displaystyle y()} that "implements" a social choice function to find the mechanism y ( ) {\displaystyle y()} that maximizes some value criterion (e.g. profit) To implement a social choice function f ( θ θ ) {\displaystyle f(\theta )} is to find some transfer function t ( θ θ ) {\displaystyle t(\theta )} that motivates agents to pick f ( θ θ ) {\displaystyle f(\theta )} . Formally, if the equilibrium strategy profile under the mechanism maps to the same goods allocation as a social choice function, f ( θ θ ) = x ( θ θ ^ ^ ( θ θ ) ) {\displaystyle f(\theta )=x\left({\hat {\theta }}(\theta )\right)} we say the mechanism implements the social choice function.

Thanks to the revelation principle, the designer can usually find a transfer function t ( θ θ ) {\displaystyle t(\theta )} to implement a social choice by solving an associated truthtelling game. If agents find it optimal to truthfully report type, θ θ ^ ^ ( θ θ ) = θ θ {\displaystyle {\hat {\theta }}(\theta )=\theta } we say such a mechanism is truthfully implementable . The task is then to solve for a truthfully implementable t ( θ θ ) {\displaystyle t(\theta )} and impute this transfer function to the original game. An allocation x ( θ θ ) {\displaystyle x(\theta )} is truthfully implementable if there exists a transfer function t ( θ θ ) {\displaystyle t(\theta )} such that u ( x ( θ θ ) , t ( θ θ ) , θ θ ) ≥ ≥ u ( x ( θ θ ^ ^ ) , t ( θ θ ^ ^ ) , θ θ ) ∀ ∀ θ θ , θ θ ^ ^ ∈ ∈ Θ Θ {\displaystyle u(x(\theta ),t(\theta ),\theta )\geq u(x({\hat {\theta }}),t({\hat {\theta }}),\theta )\ \forall \theta ,{\hat {\theta }}\in \Theta } which is also called the incentive compatibility (IC) constraint.

In applications, the IC condition is the key to describing the shape of t ( θ θ ) {\displaystyle t(\theta )} in any useful way. Under certain conditions it can even isolate the transfer function analytically.  Additionally, a participation ( individual rationality ) constraint is sometimes added if agents have the option of not playing.

Necessity [ edit ] Consider a setting in which all agents have a type-contingent utility function u ( x , t , θ θ ) {\displaystyle u(x,t,\theta )} . Consider also a goods allocation x ( θ θ ) {\displaystyle x(\theta )} that is vector-valued and size k {\displaystyle k} (which permits k {\displaystyle k} number of goods) and assume it is piecewise continuous with respect to its arguments.

The function x ( θ θ ) {\displaystyle x(\theta )} is implementable only if ∑ ∑ k = 1 n ∂ ∂ ∂ ∂ θ θ ( ∂ ∂ u / ∂ ∂ x k | ∂ ∂ u / ∂ ∂ t | ) ∂ ∂ x ∂ ∂ θ θ ≥ ≥ 0 {\displaystyle \sum _{k=1}^{n}{\frac {\partial }{\partial \theta }}\left({\frac {\partial u/\partial x_{k}}{\left|\partial u/\partial t\right|}}\right){\frac {\partial x}{\partial \theta }}\geq 0} whenever x = x ( θ θ ) {\displaystyle x=x(\theta )} and t = t ( θ θ ) {\displaystyle t=t(\theta )} and x is continuous at θ θ {\displaystyle \theta } . This is a necessary condition and is derived from the first- and second-order conditions of the agent's optimization problem assuming truth-telling.

Its meaning can be understood in two pieces. The first piece says the agent's marginal rate of substitution (MRS) increases as a function of the type, ∂ ∂ ∂ ∂ θ θ ( ∂ ∂ u / ∂ ∂ x k | ∂ ∂ u / ∂ ∂ t | ) = ∂ ∂ ∂ ∂ θ θ M R S x , t {\displaystyle {\frac {\partial }{\partial \theta }}\left({\frac {\partial u/\partial x_{k}}{\left|\partial u/\partial t\right|}}\right)={\frac {\partial }{\partial \theta }}\mathrm {MRS} _{x,t}} In short, agents will not tell the truth if the mechanism does not offer higher agent types a better deal. Otherwise, higher types facing any mechanism that punishes high types for reporting will lie and declare they are lower types, violating the truthtelling incentive-compatibility constraint. The second piece is a monotonicity condition waiting to happen, [ clarification needed ] ∂ ∂ x ∂ ∂ θ θ {\displaystyle {\frac {\partial x}{\partial \theta }}} which, to be positive, means higher types must be given more of the good.

There is potential for the two pieces to interact. If for some type range the contract offered less quantity to higher types ∂ ∂ x / ∂ ∂ θ θ < 0 {\displaystyle \partial x/\partial \theta <0} , it is possible the mechanism could compensate by giving higher types a discount. But such a contract already exists for low-type agents, so this solution is pathological. Such a solution sometimes occurs in the process of solving for a mechanism. In these cases it must be " ironed ". In a multiple-good environment it is also possible for the designer to reward the agent with more of one good to substitute for less of another (e.g.

butter for margarine ). Multiple-good mechanisms are an area of continuing research in mechanism design.

Sufficiency [ edit ] Mechanism design papers usually make two assumptions to ensure implementability: ∂ ∂ ∂ ∂ θ θ ∂ ∂ u / ∂ ∂ x k | ∂ ∂ u / ∂ ∂ t | > 0 ∀ ∀ k {\displaystyle {\frac {\partial }{\partial \theta }}{\frac {\partial u/\partial x_{k}}{\left|\partial u/\partial t\right|}}>0\ \forall k} This is known by several names: the single-crossing condition , the sorting condition and the Spence–Mirrlees condition. It means the utility function is of such a shape that the agent's MRS is increasing in type.

[ clarification needed ] ∃ ∃ K 0 , K 1 such that | ∂ ∂ u / ∂ ∂ x k ∂ ∂ u / ∂ ∂ t | ≤ ≤ K 0 + K 1 | t | {\displaystyle \exists K_{0},K_{1}{\text{ such that }}\left|{\frac {\partial u/\partial x_{k}}{\partial u/\partial t}}\right|\leq K_{0}+K_{1}|t|} This is a technical condition bounding the rate of growth of the MRS.

These assumptions are sufficient to provide that any monotonic x ( θ θ ) {\displaystyle x(\theta )} is implementable (a t ( θ θ ) {\displaystyle t(\theta )} exists that can implement it). In addition, in the single-good setting the single-crossing condition is sufficient to provide that only a monotonic x ( θ θ ) {\displaystyle x(\theta )} is implementable, so the designer can confine his search to a monotonic x ( θ θ ) {\displaystyle x(\theta )} .

Highlighted results [ edit ] Revenue equivalence theorem [ edit ] Main article: Revenue equivalence Vickrey ( 1961 ) gives a celebrated result that any member of a large class of auctions assures the seller of the same expected revenue and that the expected revenue is the best the seller can do. This is the case if The buyers have identical valuation functions (which may be a function of type) The buyers' types are independently distributed The buyers types are drawn from a continuous distribution The type distribution bears the monotone hazard rate property The mechanism sells the good to the buyer with the highest valuation The last condition is crucial to the theorem. An implication is that for the seller to achieve higher revenue he must take a chance on giving the item to an agent with a lower valuation. Usually this means he must risk not selling the item at all.

Vickrey–Clarke–Groves mechanisms [ edit ] Main article: Vickrey–Clarke–Groves mechanism The Vickrey (1961) auction model was later expanded by Clarke ( 1971 ) and Groves to treat a public choice problem in which a public project's cost is borne by all agents, e.g. whether to build a municipal bridge. The resulting "Vickrey–Clarke–Groves" mechanism can motivate agents to choose the socially efficient allocation of the public good even if agents have privately known valuations. In other words, it can solve the " tragedy of the commons "—under certain conditions, in particular quasilinear utility or if budget balance is not required.

Consider a setting in which I {\displaystyle I} number of agents have quasilinear utility with private valuations v ( x , t , θ θ ) {\displaystyle v(x,t,\theta )} where the currency t {\displaystyle t} is valued linearly. The VCG designer designs an incentive compatible (hence truthfully implementable) mechanism to obtain the true type profile, from which the designer implements the socially optimal allocation x I ∗ ∗ ( θ θ ) ∈ ∈ argmax x ∈ ∈ X ∑ ∑ i ∈ ∈ I v ( x , θ θ i ) {\displaystyle x_{I}^{*}(\theta )\in {\underset {x\in X}{\operatorname {argmax} }}\sum _{i\in I}v(x,\theta _{i})} The cleverness of the VCG mechanism is the way it motivates truthful revelation. It eliminates incentives to misreport by penalizing any agent by the cost of the distortion he causes. Among the reports the agent may make, the VCG mechanism permits a "null" report saying he is indifferent to the public good and cares only about the money transfer. This effectively removes the agent from the game. If an agent does choose to report a type, the VCG mechanism charges the agent a fee if his report is pivotal , that is if his report changes the optimal allocation x so as to harm other agents. The payment is calculated t i ( θ θ ^ ^ ) = ∑ ∑ j ∈ ∈ I − − i v j ( x I − − i ∗ ∗ ( θ θ I − − i ) , θ θ j ) − − ∑ ∑ j ∈ ∈ I − − i v j ( x I ∗ ∗ ( θ θ ^ ^ i , θ θ I ) , θ θ j ) {\displaystyle t_{i}({\hat {\theta }})=\sum _{j\in I-i}v_{j}(x_{I-i}^{*}(\theta _{I-i}),\theta _{j})-\sum _{j\in I-i}v_{j}(x_{I}^{*}({\hat {\theta }}_{i},\theta _{I}),\theta _{j})} which sums the distortion in the utilities of the other agents (and not his own) caused by one agent reporting.

Gibbard–Satterthwaite theorem [ edit ] Main article: Gibbard–Satterthwaite theorem Gibbard ( 1973 ) and Satterthwaite ( 1975 ) give an impossibility result similar in spirit to Arrow's impossibility theorem . For a very general class of games, only "dictatorial" social choice functions can be implemented.

A social choice function f ( ⋅ ⋅ ) {\displaystyle f(\cdot )} is dictatorial if one agent always receives his most-favored goods allocation, for f ( Θ Θ ) , ∃ ∃ i ∈ ∈ I such that u i ( x , θ θ i ) ≥ ≥ u i ( x ′ , θ θ i ) ∀ ∀ x ′ ∈ ∈ X {\displaystyle {\text{for }}f(\Theta ){\text{, }}\exists i\in I{\text{ such that }}u_{i}(x,\theta _{i})\geq u_{i}(x',\theta _{i})\ \forall x'\in X} The theorem states that under general conditions any truthfully implementable social choice function must be dictatorial if, X is finite and contains at least three elements Preferences are rational f ( Θ Θ ) = X {\displaystyle f(\Theta )=X} Myerson–Satterthwaite theorem [ edit ] Main article: Myerson–Satterthwaite theorem Myerson and Satterthwaite ( 1983 ) show there is no efficient way for two parties to trade a good when they each have secret and probabilistically varying valuations for it, without the risk of forcing one party to trade at a loss. It is among the most remarkable negative results in economics—a kind of negative mirror to the fundamental theorems of welfare economics .

Shapley value [ edit ] Main article: Shapley value Phillips and Marden (2018) proved that for cost-sharing games with concave cost functions, the optimal cost-sharing rule that firstly optimizes the worst-case inefficiencies in a game (the price of anarchy ), and then secondly optimizes the best-case outcomes (the price of stability ), is precisely the Shapley value cost-sharing rule.

[ 6 ] A symmetrical statement is similarly valid for utility-sharing games with convex utility functions.

Price discrimination [ edit ] Mirrlees ( 1971 ) introduces a setting in which the transfer function t () is easy to solve for. Due to its relevance and tractability it is a common setting in the literature. Consider a single-good, single-agent setting in which the agent has quasilinear utility with an unknown type parameter θ θ {\displaystyle \theta } u ( x , t , θ θ ) = V ( x , θ θ ) − − t {\displaystyle u(x,t,\theta )=V(x,\theta )-t} and in which the principal has a prior CDF over the agent's type P ( θ θ ) {\displaystyle P(\theta )} . The principal can produce goods at a convex marginal cost c ( x ) and wants to maximize the expected profit from the transaction max x ( θ θ ) , t ( θ θ ) E θ θ [ t ( θ θ ) − − c ( x ( θ θ ) ) ] {\displaystyle \max _{x(\theta ),t(\theta )}\mathbb {E} _{\theta }\left[t(\theta )-c\left(x(\theta )\right)\right]} subject to IC and IR conditions u ( x ( θ θ ) , t ( θ θ ) , θ θ ) ≥ ≥ u ( x ( θ θ ′ ) , t ( θ θ ′ ) , θ θ ) ∀ ∀ θ θ , θ θ ′ {\displaystyle u(x(\theta ),t(\theta ),\theta )\geq u(x(\theta '),t(\theta '),\theta )\ \forall \theta ,\theta '} u ( x ( θ θ ) , t ( θ θ ) , θ θ ) ≥ ≥ u _ _ ( θ θ ) ∀ ∀ θ θ {\displaystyle u(x(\theta ),t(\theta ),\theta )\geq {\underline {u}}(\theta )\ \forall \theta } The principal here is a monopolist trying to set a profit-maximizing price scheme in which it cannot identify the type of the customer. A common example is an airline setting fares for business, leisure and student travelers. Due to the IR condition it has to give every type a good enough deal to induce participation. Due to the IC condition it has to give every type a good enough deal that the type prefers its deal to that of any other.

A trick given by Mirrlees (1971) is to use the envelope theorem to eliminate the transfer function from the expectation to be maximized, let U ( θ θ ) = max θ θ ′ u ( x ( θ θ ′ ) , t ( θ θ ′ ) , θ θ ) {\displaystyle {\text{let }}U(\theta )=\max _{\theta '}u\left(x(\theta '),t(\theta '),\theta \right)} d U d θ θ = ∂ ∂ u ∂ ∂ θ θ = ∂ ∂ V ∂ ∂ θ θ {\displaystyle {\frac {dU}{d\theta }}={\frac {\partial u}{\partial \theta }}={\frac {\partial V}{\partial \theta }}} Integrating, U ( θ θ ) = u _ _ ( θ θ 0 ) + ∫ ∫ θ θ 0 θ θ ∂ ∂ V ∂ ∂ θ θ ~ ~ d θ θ ~ ~ {\displaystyle U(\theta )={\underline {u}}(\theta _{0})+\int _{\theta _{0}}^{\theta }{\frac {\partial V}{\partial {\tilde {\theta }}}}d{\tilde {\theta }}} where θ θ 0 {\displaystyle \theta _{0}} is some index type. Replacing the incentive-compatible t ( θ θ ) = V ( x ( θ θ ) , θ θ ) − − U ( θ θ ) {\displaystyle t(\theta )=V(x(\theta ),\theta )-U(\theta )} in the maximand, E θ θ [ V ( x ( θ θ ) , θ θ ) − − u _ _ ( θ θ 0 ) − − ∫ ∫ θ θ 0 θ θ ∂ ∂ V ∂ ∂ θ θ ~ ~ d θ θ ~ ~ − − c ( x ( θ θ ) ) ] = E θ θ [ V ( x ( θ θ ) , θ θ ) − − u _ _ ( θ θ 0 ) − − 1 − − P ( θ θ ) p ( θ θ ) ∂ ∂ V ∂ ∂ θ θ − − c ( x ( θ θ ) ) ] {\displaystyle {\begin{aligned}&\mathbb {E} _{\theta }\left[V(x(\theta ),\theta )-{\underline {u}}(\theta _{0})-\int _{\theta _{0}}^{\theta }{\frac {\partial V}{\partial {\tilde {\theta }}}}d{\tilde {\theta }}-c\left(x(\theta )\right)\right]\\&{}=\mathbb {E} _{\theta }\left[V(x(\theta ),\theta )-{\underline {u}}(\theta _{0})-{\frac {1-P(\theta )}{p(\theta )}}{\frac {\partial V}{\partial \theta }}-c\left(x(\theta )\right)\right]\end{aligned}}} after an integration by parts. This function can be maximized pointwise.

Because U ( θ θ ) {\displaystyle U(\theta )} is incentive-compatible already the designer can drop the IC constraint. If the utility function satisfies the Spence–Mirrlees condition then a monotonic x ( θ θ ) {\displaystyle x(\theta )} function exists. The IR constraint can be checked at equilibrium and the fee schedule raised or lowered accordingly. Additionally, note the presence of a hazard rate in the expression. If the type distribution bears the monotone hazard ratio property, the FOC is sufficient to solve for t (). If not, then it is necessary to check whether the monotonicity constraint (see sufficiency , above) is satisfied everywhere along the allocation and fee schedules. If not, then the designer must use Myerson ironing.

Myerson ironing [ edit ] It is possible to solve for a goods or price schedule that satisfies the first-order conditions yet is not monotonic. If so it is necessary to "iron" the schedule by choosing some value at which to flatten the function.

In some applications the designer may solve the first-order conditions for the price and allocation schedules yet find they are not monotonic. For example, in the quasilinear setting this often happens when the hazard ratio is itself not monotone. By the Spence–Mirrlees condition the optimal price and allocation schedules must be monotonic, so the designer must eliminate any interval over which the schedule changes direction by flattening it.

Intuitively, what is going on is the designer finds it optimal to bunch certain types together and give them the same contract. Normally the designer motivates higher types to distinguish themselves by giving them a better deal. If there are insufficiently few higher types on the margin the designer does not find it worthwhile to grant lower types a concession (called their information rent ) in order to charge higher types a type-specific contract.

Consider a monopolist principal selling to agents with quasilinear utility, the example above. Suppose the allocation schedule x ( θ θ ) {\displaystyle x(\theta )} satisfying the first-order conditions has a single interior peak at θ θ 1 {\displaystyle \theta _{1}} and a single interior trough at θ θ 2 > θ θ 1 {\displaystyle \theta _{2}>\theta _{1}} , illustrated at right.

Following Myerson (1981) flatten it by choosing x {\displaystyle x} satisfying ∫ ∫ ϕ ϕ 2 ( x ) ϕ ϕ 1 ( x ) ( ∂ ∂ V ∂ ∂ x ( x , θ θ ) − − 1 − − P ( θ θ ) p ( θ θ ) ∂ ∂ 2 V ∂ ∂ θ θ ∂ ∂ x ( x , θ θ ) − − ∂ ∂ c ∂ ∂ x ( x ) ) d θ θ = 0 {\displaystyle \int _{\phi _{2}(x)}^{\phi _{1}(x)}\left({\frac {\partial V}{\partial x}}(x,\theta )-{\frac {1-P(\theta )}{p(\theta )}}{\frac {\partial ^{2}V}{\partial \theta \,\partial x}}(x,\theta )-{\frac {\partial c}{\partial x}}(x)\right)d\theta =0} where ϕ ϕ 1 ( x ) {\displaystyle \phi _{1}(x)} is the inverse function of x mapping to θ θ ≤ ≤ θ θ 1 {\displaystyle \theta \leq \theta _{1}} and ϕ ϕ 2 ( x ) {\displaystyle \phi _{2}(x)} is the inverse function of x mapping to θ θ ≥ ≥ θ θ 2 {\displaystyle \theta \geq \theta _{2}} . That is, ϕ ϕ 1 {\displaystyle \phi _{1}} returns a θ θ {\displaystyle \theta } before the interior peak and ϕ ϕ 2 {\displaystyle \phi _{2}} returns a θ θ {\displaystyle \theta } after the interior trough.

If the nonmonotonic region of x ( θ θ ) {\displaystyle x(\theta )} borders the edge of the type space, simply set the appropriate ϕ ϕ ( x ) {\displaystyle \phi (x)} function (or both) to the boundary type. If there are multiple regions, see a textbook for an iterative procedure; it may be that more than one troughs should be ironed together.

Proof [ edit ] The proof uses the theory of optimal control. It considers the set of intervals [ θ θ _ _ , θ θ ¯ ¯ ] {\displaystyle \left[{\underline {\theta }},{\overline {\theta }}\right]} in the nonmonotonic region of x ( θ θ ) {\displaystyle x(\theta )} over which it might flatten the schedule. It then writes a Hamiltonian to obtain necessary conditions for a x ( θ θ ) {\displaystyle x(\theta )} within the intervals that does satisfy monotonicity for which the monotonicity constraint is not binding on the boundaries of the interval Condition two ensures that the x ( θ θ ) {\displaystyle x(\theta )} satisfying the optimal control problem reconnects to the schedule in the original problem at the interval boundaries (no jumps). Any x ( θ θ ) {\displaystyle x(\theta )} satisfying the necessary conditions must be flat because it must be monotonic and yet reconnect at the boundaries.

As before maximize the principal's expected payoff, but this time subject to the monotonicity constraint ∂ ∂ x ∂ ∂ θ θ ≥ ≥ 0 {\displaystyle {\frac {\partial x}{\partial \theta }}\geq 0} and use a Hamiltonian to do it, with shadow price ν ν ( θ θ ) {\displaystyle \nu (\theta )} H = ( V ( x , θ θ ) − − u _ _ ( θ θ 0 ) − − 1 − − P ( θ θ ) p ( θ θ ) ∂ ∂ V ∂ ∂ θ θ ( x , θ θ ) − − c ( x ) ) p ( θ θ ) + ν ν ( θ θ ) ∂ ∂ x ∂ ∂ θ θ {\displaystyle H=\left(V(x,\theta )-{\underline {u}}(\theta _{0})-{\frac {1-P(\theta )}{p(\theta )}}{\frac {\partial V}{\partial \theta }}(x,\theta )-c(x)\right)p(\theta )+\nu (\theta ){\frac {\partial x}{\partial \theta }}} where x {\displaystyle x} is a state variable and ∂ ∂ x / ∂ ∂ θ θ {\displaystyle \partial x/\partial \theta } the control. As usual in optimal control the costate evolution equation must satisfy ∂ ∂ ν ν ∂ ∂ θ θ = − − ∂ ∂ H ∂ ∂ x = − − ( ∂ ∂ V ∂ ∂ x ( x , θ θ ) − − 1 − − P ( θ θ ) p ( θ θ ) ∂ ∂ 2 V ∂ ∂ θ θ ∂ ∂ x ( x , θ θ ) − − ∂ ∂ c ∂ ∂ x ( x ) ) p ( θ θ ) {\displaystyle {\frac {\partial \nu }{\partial \theta }}=-{\frac {\partial H}{\partial x}}=-\left({\frac {\partial V}{\partial x}}(x,\theta )-{\frac {1-P(\theta )}{p(\theta )}}{\frac {\partial ^{2}V}{\partial \theta \,\partial x}}(x,\theta )-{\frac {\partial c}{\partial x}}(x)\right)p(\theta )} Taking advantage of condition 2, note the monotonicity constraint is not binding at the boundaries of the θ θ {\displaystyle \theta } interval, ν ν ( θ θ _ _ ) = ν ν ( θ θ ¯ ¯ ) = 0 {\displaystyle \nu ({\underline {\theta }})=\nu ({\overline {\theta }})=0} meaning the costate variable condition can be integrated and also equals 0 ∫ ∫ θ θ _ _ θ θ ¯ ¯ ( ∂ ∂ V ∂ ∂ x ( x , θ θ ) − − 1 − − P ( θ θ ) p ( θ θ ) ∂ ∂ 2 V ∂ ∂ θ θ ∂ ∂ x ( x , θ θ ) − − ∂ ∂ c ∂ ∂ x ( x ) ) p ( θ θ ) d θ θ = 0 {\displaystyle \int _{\underline {\theta }}^{\overline {\theta }}\left({\frac {\partial V}{\partial x}}(x,\theta )-{\frac {1-P(\theta )}{p(\theta )}}{\frac {\partial ^{2}V}{\partial \theta \,\partial x}}(x,\theta )-{\frac {\partial c}{\partial x}}(x)\right)p(\theta )\,d\theta =0} The average distortion of the principal's surplus must be 0. To flatten the schedule, find an x {\displaystyle x} such that its inverse image maps to a θ θ {\displaystyle \theta } interval satisfying the condition above.

See also [ edit ] Algorithmic mechanism design Alvin E. Roth – Nobel Prize, market design Assignment problem Budget-feasible mechanism Contract theory Implementation theory Incentive compatibility Revelation principle Smart market Metagame Notes [ edit ] ^ "Journal of Mechanism and Institution Design" .

www.mechanism-design.org . Retrieved 2024-07-01 .

^ a b Penna, Paolo; Ventre, Carmine (July 2014).

"Optimal collusion-resistant mechanisms with verification" .

Games and Economic Behavior .

86 : 491– 509.

doi : 10.1016/j.geb.2012.09.002 .

ISSN 0899-8256 .

^ L. Hurwicz & S. Reiter (2006), Designing Economic Mechanisms , p. 30 ^ "The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel 2007" (Press release).

Nobel Foundation . October 15, 2007 . Retrieved 2008-08-15 .

^ In unusual circumstances some truth-telling games have more equilibria than the Bayesian game they mapped from. See Fudenburg-Tirole Ch. 7.2 for some references.

^ Phillips, Matthew; Marden, Jason R. (July 2018). "Design Tradeoffs in Concave Cost-Sharing Games".

IEEE Transactions on Automatic Control .

63 (7): 2242– 2247.

doi : 10.1109/tac.2017.2765299 .

ISSN 0018-9286 .

S2CID 45923961 .

References [ edit ] Clarke, Edward H. (1971).

"Multipart Pricing of Public Goods" (PDF) .

Public Choice .

11 (1): 17– 33.

doi : 10.1007/BF01726210 .

JSTOR 30022651 .

S2CID 154860771 . Archived from the original (PDF) on 2017-05-10 . Retrieved 2016-08-12 .

Gibbard, Allan (1973).

"Manipulation of voting schemes: A general result" (PDF) .

Econometrica .

41 (4): 587– 601.

doi : 10.2307/1914083 .

JSTOR 1914083 . Archived from the original (PDF) on 2016-08-23 . Retrieved 2016-08-12 .

Groves, Theodore (1973).

"Incentives in Teams" (PDF) .

Econometrica .

41 (4): 617– 631.

doi : 10.2307/1914085 .

JSTOR 1914085 .

Harsanyi, John C. (1967). "Games with incomplete information played by "Bayesian" players, I-III. part I. The Basic Model".

Management Science .

14 (3): 159– 182.

doi : 10.1287/mnsc.14.3.159 .

JSTOR 2628393 .

Mirrlees, J. A. (1971).

"An Exploration in the Theory of Optimum Income Taxation" (PDF) .

Review of Economic Studies .

38 (2): 175– 208.

doi : 10.2307/2296779 .

JSTOR 2296779 . Archived from the original (PDF) on 2017-05-10 . Retrieved 2016-08-12 .

Myerson, Roger B.; Satterthwaite, Mark A. (1983).

"Efficient Mechanisms for Bilateral Trading" (PDF) .

Journal of Economic Theory .

29 (2): 265– 281.

doi : 10.1016/0022-0531(83)90048-0 .

hdl : 10419/220829 . Archived from the original (PDF) on 2017-05-10 . Retrieved 2016-08-12 .

Satterthwaite, Mark Allen (1975). "Strategy-proofness and Arrow's conditions: Existence and correspondence theorems for voting procedures and social welfare functions".

Journal of Economic Theory .

10 (2): 187– 217.

CiteSeerX 10.1.1.471.9842 .

doi : 10.1016/0022-0531(75)90050-2 .

Vickrey, William (1961).

"Counterspeculation, Auctions, and Competitive Sealed Tenders" (PDF) .

The Journal of Finance .

16 (1): 8– 37.

doi : 10.1111/j.1540-6261.1961.tb02789.x .

Further reading [ edit ] Chapter 7 of Fudenberg, Drew; Tirole, Jean (1991), Game Theory , Boston: MIT Press , ISBN 978-0-262-06141-4 . A standard text for graduate game theory.

Chapter 23 of Mas-Colell ; Whinston; Green (1995), Microeconomic Theory , Oxford: Oxford University Press , ISBN 978-0-19-507340-9 . A standard text for graduate microeconomics.

Milgrom, Paul (2004), Putting Auction Theory to Work , New York: Cambridge University Press , ISBN 978-0-521-55184-7 .

Applications of mechanism design principles in the context of auctions.

Noam Nisan . A Google tech talk on mechanism design.

Legros, Patrick; Cantillon, Estelle (2007).

"What is mechanism design and why does it matter for policy-making?" .

Centre for Economic Policy Research .

Roger B. Myerson (2008), "Mechanism Design", The New Palgrave Dictionary of Economics Online, Abstract.

Diamantaras, Dimitrios (2009), A Toolbox for Economic Design , New York: Palgrave Macmillan , ISBN 978-0-230-61060-6 . A graduate text specifically focused on mechanism design.

External links [ edit ] Eric Maskin " Nobel Prize Lecture " delivered on 8 December 2007 at Aula Magna , Stockholm University.

v t e Game theory Glossary Game theorists Games Traditional game theory Definitions Asynchrony Bayesian regret Best response Bounded rationality Cheap talk Coalition Complete contract Complete information Complete mixing Confrontation analysis Conjectural variation Contingent cooperator Coopetition Cooperative game theory Dynamic inconsistency Escalation of commitment Farsightedness Game semantics Hierarchy of beliefs Imperfect information Incomplete information Information set Move by nature Mutual knowledge Non-cooperative game theory Non-credible threat Outcome Perfect information Perfect recall Ply Preference Rationality Sequential game Simultaneous action selection Spite Strategic complements Strategic dominance Strategic form Strategic interaction Strategic move Strategy Subgame Succinct game Topological game Tragedy of the commons Uncorrelated asymmetry Equilibrium concepts Backward induction Bayes correlated equilibrium Bayesian efficiency Bayesian game Bayesian Nash equilibrium Berge equilibrium Bertrand–Edgeworth model Coalition-proof Nash equilibrium Core Correlated equilibrium Cursed equilibrium Edgeworth price cycle Epsilon-equilibrium Gibbs equilibrium Incomplete contracts Inequity aversion Individual rationality Iterated elimination of dominated strategies Markov perfect equilibrium Mertens-stable equilibrium Nash equilibrium Open-loop model Pareto efficiency Payoff dominance Perfect Bayesian equilibrium Price of anarchy Program equilibrium Proper equilibrium Quantal response equilibrium Quasi-perfect equilibrium Rational agent Rationalizability Rationalizable strategy Satisfaction equilibrium Self-confirming equilibrium Sequential equilibrium Shapley value Strong Nash equilibrium Subgame perfect equilibrium Trembling hand equilibrium Strategies Appeasement Bid shading Cheap talk Collusion Commitment device De-escalation Deterrence Escalation Fictitious play Focal point Grim trigger Hobbesian trap Markov strategy Max-dominated strategy Mixed strategy Pure strategy Tit for tat Win–stay, lose–switch Games All-pay auction Battle of the sexes Nash bargaining game Bertrand competition Blotto game Centipede game Coordination game Cournot competition Deadlock Dictator game Trust game Diner's dilemma Dollar auction El Farol Bar problem Electronic mail game Gift-exchange game Guess 2/3 of the average Keynesian beauty contest Kuhn poker Lewis signaling game Matching pennies Obligationes Optional prisoner's dilemma Pirate game Prisoner's dilemma Public goods game Rendezvous problem Rock paper scissors Stackelberg competition Stag hunt Traveler's dilemma Ultimatum game Volunteer's dilemma War of attrition Theorems Arrow's impossibility theorem Aumann's agreement theorem Brouwer fixed-point theorem Competitive altruism Folk theorem Gibbard–Satterthwaite theorem Gibbs lemma Glicksberg's theorem Kakutani fixed-point theorem Kuhn's theorem One-shot deviation principle Prim–Read theory Rational ignorance Rational irrationality Sperner's lemma Zermelo's theorem Subfields Algorithmic game theory Behavioral game theory Behavioral strategy Compositional game theory Contract theory Drama theory Graphical game theory Heresthetic Mean-field game theory Negotiation theory Quantum game theory Social software Key people Albert W. Tucker Alvin E. Roth Amos Tversky Antoine Augustin Cournot Ariel Rubinstein David Gale David K. Levine David M. Kreps Donald B. Gillies Drew Fudenberg Eric Maskin Harold W. Kuhn Herbert Simon Herbert Scarf Hervé Moulin Jean Tirole Jean-François Mertens Jennifer Tour Chayes Ken Binmore Kenneth Arrow Leonid Hurwicz Lloyd Shapley Martin Shubik Melvin Dresher Merrill M. Flood Olga Bondareva Oskar Morgenstern Paul Milgrom Peyton Young Reinhard Selten Robert Aumann Robert Axelrod Robert B. Wilson Roger Myerson Samuel Bowles Suzanne Scotchmer Thomas Schelling William Vickrey Combinatorial game theory Core concepts Combinatorial explosion Determinacy Disjunctive sum First-player and second-player win Game complexity Game tree Impartial game Misère Partisan game Solved game Sprague–Grundy theorem Strategy-stealing argument Zugzwang Games Chess Chomp Clobber Cram Domineering Hackenbush Nim Notakto Subtract a square Sylver coinage Toads and Frogs Mathematical tools Mex Nimber On Numbers and Games Star Surreal number Winning Ways for Your Mathematical Plays Search algorithms Alpha–beta pruning Expectiminimax Minimax Monte Carlo tree search Negamax Paranoid algorithm Principal variation search Key people Claude Shannon John Conway John von Neumann Evolutionary game theory Core concepts Bishop–Cannings theorem Evolution and the Theory of Games Evolutionarily stable set Evolutionarily stable state Evolutionarily stable strategy Replicator equation Risk dominance Stochastically stable equilibrium Weak evolutionarily stable strategy Games Chicken Stag hunt Applications Cultural group selection Fisher's principle Mobbing Terminal investment hypothesis Key people John Maynard Smith Robert Axelrod Mechanism design Core concepts Algorithmic mechanism design Bayesian-optimal mechanism Incentive compatibility Market design Monotonicity Participation constraint Revelation principle Strategyproofness Vickrey–Clarke–Groves mechanism Theorems Myerson–Satterthwaite theorem Revenue equivalence Applications Digital goods auction Knapsack auction Truthful cake-cutting Other topics Bertrand paradox Chainstore paradox Computational complexity of games Helly metric Multi-agent system PPAD-complete Mathematics portal Commons WikiProject Category v t e Economics Theoretical Microeconomics Decision theory Price theory Game theory Contract theory Mechanism design Macroeconomics Mathematical economics Complexity economics Computational economics Agent-based computational economics Behavioral economics Pluralism in economics Empirical Econometrics Economic statistics Experimental economics Economic history Applied Agriculture Business Cultural Demographic Development Ecological Education Engineering Environmental Evolutionary Financial Geographic Happiness Health History Information Infrastructure Institutions Labour Law Management Non-monetary Organization Participation Personnel Planning Policy Public sector Public choice Social choice Regional Regulatory Resources Rural Service Transport Urban Welfare Schools ( history ) Attention Mainstream Heterodox American (National) Ancient thought Austrian Behavioral Buddhist Chartalism Modern monetary theory Chicago Classical Critique of political economy Democratic Disequilibrium Ecological Evolutionary Feminist Freiwirtschaft Georgism Happiness Historical Humanistic Institutional Keynesian Neo- ( neoclassical–Keynesian synthesis ) New Post- Circuitism Malthusianism Marginalism Marxian Neo- Mercantilism Mixed Mutualism Neoclassical Lausanne New classical Real business-cycle theory New institutional Physiocracy Socialist Stockholm Supply-side Thermo Economists de Mandeville Quesnay Smith Malthus Say Ricardo von Thünen List Bastiat Cournot Mill Gossen Marx Walras Jevons George Menger Marshall Edgeworth Clark Pareto von Böhm-Bawerk von Wieser Veblen Gesell Fisher Pigou Heckscher von Mises Schumpeter Keynes Knight Polanyi Frisch Sraffa Myrdal Hayek Kalecki Röpke Kuznets Tinbergen Robinson von Neumann Hicks Lange Leontief Galbraith Koopmans Schumacher Friedman Samuelson Simon Buchanan Arrow Baumol Solow Rothbard Greenspan Sowell Becker Ostrom Sen Lucas Stiglitz Thaler Hoppe Krugman Piketty more Lists Glossary Economists Publications ( journals ) Schools Category Index Lists Outline Publications Business portal v t e Design Outline Designer Disciplines Communication design Advertising Book design Brand design Exhibit design Film title design Graphic design Motion Postage stamp design Print design Illustration Information design Instructional design News design Photography Retail design Signage / Traffic sign design Typography / Type design Video design Visual merchandising Environmental design Architecture Architectural lighting design Building design Passive solar Ecological design Environmental impact design Garden design Computer-aided Healthy community design Hotel design Interior architecture Interior design EID Keyline design Landscape architecture Sustainable Landscape design Spatial design Urban design Industrial design Automotive design Automotive suspension design CMF design Corrugated box design Electric guitar design Furniture design Sustainable Hardware interface design Motorcycle design Packaging and labeling Photographic lens design Product design Production design Sensory design Service design Interaction design Experience design EED Game design Level design Video game design Hardware interface design Icon design Immersive design Information design Interactive design Sonic interaction design User experience design User interface design Web design Other applied arts Public art design Ceramic / glass design Fashion design Costume design Jewellery design Floral design Game art design Property design Scenic design Sound design Stage/set lighting design Textile design Other design & engineering Algorithm design Behavioural design Boiler design Database design Drug design Electrical system design Experimental design Filter design Geometric design Work design Integrated circuit design Circuit design Physical design Power network design Mechanism design Nuclear weapon design Nucleic acid design Organization design Process design Processor design Protein design Research design Social design Software design Spacecraft design Strategic design Systems design Test design Approaches Active Activity-centered Adaptive web Affective Brainstorming By committee By contract C-K theory Closure Configuration Contextual Continuous Cradle-to-cradle Creative problem-solving Creativity techniques Critical Design fiction Defensive Design–bid–build Design–build architect-led Diffuse Domain-driven Ecological design Energy neutral Engineering design process Probabilistic design Ergonomic Error-tolerant Evidence-based Fault-tolerant Feminist For assembly For behaviour change For manufacturability For Six Sigma For testing For the environment For X Framework-oriented Functional Generative Geodesign HCD High-level Hostile Inclusive Integrated Integrated topside Intelligence-based Iterative KISS principle Low-level Metadesign Mind mapping Modular New Wave Object-oriented Open Over Parametric Participatory Platform-based Policy-based Prevention through Process-centered Public interest Opinion poll Public opinion Rational Regenerative Reliability engineering Research-based Responsibility-driven RWD Safe-life Speculative Sustainable Systemic SOD Tableless web Theory of constraints Top-down and bottom-up Transformation Transgenerational TRIZ Universal Design for All Usage-centered Use-centered User-centered Empathic User innovation Value-driven Value sensitive Privacy by Quality by Secure by Design choice computing controls culture flow justice leadership management marker methods pattern research science sprint strategy theory thinking Tools Intellectual property Organizations Awards Tools AAD Architectural model Blueprint Comprehensive layout CAD CAID Virtual home design software CAutoD Design quality indicator Electronic design automation Flowchart Mockup Design specification Design system Prototype Sketch Storyboard Technical drawing HTML editor Website wireframe Intellectual property Clean-room design Community design Design around Design infringement Design patent Fashion design copyright Geschmacksmuster Industrial design rights European Union Organizations American Institute of Graphic Arts Chartered Society of Designers Design and Industries Association Design Council International Forum Design Design Research Society Awards European Design Award German Design Award Good Design Award (Museum of Modern Art) Good Design Award (Chicago Athenaeum) Graphex IF Product Design Award James Dyson Award Prince Philip Designers Prize Related topics Agile Concept art Conceptual design Creative industries Cultural icon .design Dominant design Enterprise architecture Form factor Futures studies Indie design Innovation management Intelligent design Lean startup New product development OODA loop Philosophy of design Process simulation Reference design Slow design STEAM fields Unintelligent design Visualization Wicked problem Design attributes brief change classic competition architectural student director education elements engineer firm history knowledge language life load museum optimization paradigm principles rationale review specification studies studio technology Authority control databases : National Germany NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐wnv6v
Cached time: 20250812023803
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.854 seconds
Real time usage: 1.213 seconds
Preprocessor visited node count: 4685/1000000
Revision size: 33815/2097152 bytes
Post‐expand include size: 246254/2097152 bytes
Template argument size: 8963/2097152 bytes
Highest expansion depth: 13/100
Expensive parser function count: 14/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 102045/5000000 bytes
Lua time usage: 0.452/10.000 seconds
Lua memory usage: 8152383/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  701.674      1 -total
 18.49%  129.718      1 Template:Economics_sidebar
 18.18%  127.582      1 Template:Sidebar_with_collapsible_lists
 16.56%  116.191      1 Template:Reflist
 12.21%   85.655      2 Template:Cite_web
 11.50%   80.688      2 Template:Navbox_with_collapsible_groups
 11.10%   77.883      1 Template:Short_description
  9.86%   69.188      1 Template:Game_theory
  9.51%   66.697     10 Template:Cite_journal
  8.74%   61.302      7 Template:Navbox Saved in parser cache with key enwiki:pcache:689895:|#|:idhash:canonical and timestamp 20250812023803 and revision id 1296419235. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Mechanism_design&oldid=1296419235 " Categories : Mechanism design Social choice theory Hidden categories: Articles with short description Short description is different from Wikidata Articles lacking in-text citations from July 2024 All articles lacking in-text citations Wikipedia articles needing clarification from July 2024 Articles with excerpts This page was last edited on 19 June 2025, at 22:17 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Mechanism design 21 languages Add topic

