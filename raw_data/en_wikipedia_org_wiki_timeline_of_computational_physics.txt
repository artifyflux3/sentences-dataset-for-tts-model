Title: Timeline of computational physics

URL Source: https://en.wikipedia.org/wiki/Timeline_of_computational_physics

Published Time: 2012-04-16T18:54:26Z

Markdown Content:
*   [(Top)](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#)
*   [1 1930s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1930s)

*   [2 1940s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1940s)

*   [3 1950s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1950s)

*   [4 1960s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1960s)

*   [5 1970s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1970s)

*   [6 1980s](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#1980s)

*   [7 See also](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#See_also)

*   [8 References](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#References)

*   [9 External links](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#External_links)

From Wikipedia, the free encyclopedia

The following timeline starts with the invention of the [modern computer](https://en.wikipedia.org/wiki/Electronic_computer "Electronic computer") in the late [interwar](https://en.wikipedia.org/wiki/Interwar_period "Interwar period") period.

*   [John Vincent Atanasoff](https://en.wikipedia.org/wiki/John_Vincent_Atanasoff "John Vincent Atanasoff") and [Clifford Berry](https://en.wikipedia.org/wiki/Clifford_Berry "Clifford Berry") create the first electronic non-programmable, digital computing device, the [Atanasoff–Berry Computer](https://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_Computer "Atanasoff–Berry Computer"), that lasted from 1937 to 1942.

*   Nuclear bomb and ballistics simulations at [Los Alamos National Laboratory](https://en.wikipedia.org/wiki/Los_Alamos_National_Laboratory "Los Alamos National Laboratory") and [Ballistic Research Laboratory](https://en.wikipedia.org/wiki/Ballistic_Research_Laboratory "Ballistic Research Laboratory") (BRL), respectively.[[1]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-1)
*   [Monte Carlo simulation](https://en.wikipedia.org/wiki/Monte_Carlo_method "Monte Carlo method") (voted one of the top 10 [algorithms](https://en.wikipedia.org/wiki/Algorithm "Algorithm") of the 20th century by [Jack Dongarra](https://en.wikipedia.org/wiki/Jack_Dongarra "Jack Dongarra") and Francis Sullivan in the 2000 issue of Computing in Science and Engineering)[[2]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-2) is invented at Los Alamos National Laboratory by [John von Neumann](https://en.wikipedia.org/wiki/John_von_Neumann "John von Neumann"), [Stanislaw Ulam](https://en.wikipedia.org/wiki/Stanislaw_Ulam "Stanislaw Ulam") and [Nicholas Metropolis](https://en.wikipedia.org/wiki/Nicholas_Metropolis "Nicholas Metropolis").[[3]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-3)[[4]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-4)[[5]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-5)
*   First [hydrodynamic simulations](https://en.wikipedia.org/wiki/Computational_Fluid_Dynamics "Computational Fluid Dynamics") performed at Los Alamos National Laboratory.[[6]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-6)[[7]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-7)
*   Ulam and von Neumann introduce the notion of [cellular automata](https://en.wikipedia.org/wiki/Cellular_automaton "Cellular automaton").[[8]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-8)[[9]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-9)

*   _[Equations of State Calculations by Fast Computing Machines](https://en.wikipedia.org/wiki/Equations\_of\_State\_Calculations\_by\_Fast\_Computing\_Machines "Equations of State Calculations by Fast Computing Machines")_ introduces the [Metropolis–Hastings algorithm](https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm "Metropolis–Hastings algorithm").[[10]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-10) Also, important earlier independent work by [Berni Alder](https://en.wikipedia.org/wiki/Berni_Alder "Berni Alder") and [Stan Frankel](https://en.wikipedia.org/wiki/Stan_Frankel "Stan Frankel").[[11]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-11)[[12]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-12)
*   [Enrico Fermi](https://en.wikipedia.org/wiki/Enrico_Fermi "Enrico Fermi"), Ulam and [John Pasta](https://en.wikipedia.org/wiki/John_Pasta "John Pasta") with help from [Mary Tsingou](https://en.wikipedia.org/wiki/Mary_Tsingou "Mary Tsingou"), discover the [Fermi–Pasta–Ulam-Tsingou problem](https://en.wikipedia.org/wiki/Fermi%E2%80%93Pasta%E2%80%93Ulam_problem "Fermi–Pasta–Ulam problem").[[13]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-13)
*   Research initiated into [percolation theory](https://en.wikipedia.org/wiki/Percolation_theory "Percolation theory").[[14]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-14)
*   [Molecular dynamics](https://en.wikipedia.org/wiki/Molecular_dynamics "Molecular dynamics") is formulated by Alder and Tom E. Wainwright.[[15]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-15)

*   Using computational investigations of the [3-body problem](https://en.wikipedia.org/wiki/3-body_problem "3-body problem"), Michael Minovitch formulates the [gravity assist](https://en.wikipedia.org/wiki/Gravity_assist "Gravity assist") method.[[16]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-16)[[17]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-17)
*   Glauber dynamics is invented for the [Ising model](https://en.wikipedia.org/wiki/Ising_model "Ising model") by [Roy J. Glauber](https://en.wikipedia.org/wiki/Roy_J._Glauber "Roy J. Glauber").[[18]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-18)
*   [Edward Lorenz](https://en.wikipedia.org/wiki/Edward_Lorenz "Edward Lorenz") discovers the [butterfly effect](https://en.wikipedia.org/wiki/Butterfly_effect "Butterfly effect") on a computer, attracting interest in [chaos theory](https://en.wikipedia.org/wiki/Chaos_theory "Chaos theory").[[19]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-19)
*   Molecular dynamics is independently invented by [Aneesur Rahman](https://en.wikipedia.org/wiki/Aneesur_Rahman "Aneesur Rahman").[[20]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-20)
*   [Walter Kohn](https://en.wikipedia.org/wiki/Walter_Kohn "Walter Kohn") instigates the development of [density functional theory](https://en.wikipedia.org/wiki/Density_functional_theory "Density functional theory") (with [L.J. Sham](https://en.wikipedia.org/wiki/Lu_Jeu_Sham "Lu Jeu Sham") and [Pierre Hohenberg](https://en.wikipedia.org/wiki/Pierre_Hohenberg "Pierre Hohenberg")),[[21]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-21)[[22]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-22) for which he shared the [Nobel Chemistry Prize](https://en.wikipedia.org/wiki/Nobel_Chemistry_Prize "Nobel Chemistry Prize") (1998).[[23]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-23)
*   [Martin Kruskal](https://en.wikipedia.org/wiki/Martin_Kruskal "Martin Kruskal") and [Norman Zabusky](https://en.wikipedia.org/wiki/Norman_Zabusky "Norman Zabusky") follow up the [Fermi–Pasta–Ulam problem](https://en.wikipedia.org/wiki/Fermi%E2%80%93Pasta%E2%80%93Ulam_problem "Fermi–Pasta–Ulam problem") with further numerical experiments, and coin the term "[soliton](https://en.wikipedia.org/wiki/Soliton "Soliton")".[[24]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-24)[[25]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-25)
*   Kawasaki dynamics is invented for the Ising model.[[26]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-26)
*   [Loup Verlet](https://en.wikipedia.org/wiki/Loup_Verlet "Loup Verlet") (re)discovers [a numerical integration algorithm](https://en.wikipedia.org/wiki/Verlet_integration "Verlet integration"),[[27]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-Verlet-27) (first used in 1791 by [Jean Baptiste Delambre](https://en.wikipedia.org/wiki/Jean_Baptiste_Joseph_Delambre "Jean Baptiste Joseph Delambre"), by [P. H. Cowell](https://en.wikipedia.org/wiki/Philip_Herbert_Cowell "Philip Herbert Cowell") and [A. C. C. Crommelin](https://en.wikipedia.org/wiki/Andrew_Claude_de_la_Cherois_Crommelin "Andrew Claude de la Cherois Crommelin") in 1909, and by [Carl Fredrik Störmer](https://en.wikipedia.org/wiki/Fredrik_Carl_St%C3%B8rmer "Fredrik Carl Størmer") in 1907,[[28]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-28) hence the alternative names Störmer's method or the Verlet-Störmer method) for dynamics, and the Verlet list.[[27]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-Verlet-27)

*   Computer algebra replicates the work of [Boris Delaunay](https://en.wikipedia.org/wiki/Boris_Delaunay "Boris Delaunay") in [Lunar theory](https://en.wikipedia.org/wiki/Lunar_theory "Lunar theory").[[29]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-29)[[30]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-30)[[31]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-31)[[32]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-32)[[33]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-33)
*   [Martinus Veltman](https://en.wikipedia.org/wiki/Martinus_J._G._Veltman "Martinus J. G. Veltman")'s calculations at [CERN](https://en.wikipedia.org/wiki/CERN "CERN") lead him and [Gerard 't Hooft](https://en.wikipedia.org/wiki/Gerard_%27t_Hooft "Gerard 't Hooft") to valuable insights into [renormalizability](https://en.wikipedia.org/wiki/Renormalization "Renormalization") of [electroweak theory](https://en.wikipedia.org/wiki/Electroweak_interaction "Electroweak interaction").[[34]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-34) The computation has been cited as a key reason for the award of the [Nobel Physics Prize](https://en.wikipedia.org/wiki/Nobel_Physics_Prize "Nobel Physics Prize") that has been given to both.[[35]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-35)
*   Jean Hardy, [Yves Pomeau](https://en.wikipedia.org/wiki/Yves_Pomeau "Yves Pomeau") and Olivier de Pazzis introduce the first [lattice gas model](https://en.wikipedia.org/wiki/Lattice_gas_automaton "Lattice gas automaton"), abbreviated as the [HPP model](https://en.wikipedia.org/wiki/HPP_model "HPP model") after its authors.[[36]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-36)[[37]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-37) These later evolved into [lattice Boltzmann models](https://en.wikipedia.org/wiki/Lattice_Boltzmann_model "Lattice Boltzmann model").
*   [Kenneth G. Wilson](https://en.wikipedia.org/wiki/Kenneth_G._Wilson "Kenneth G. Wilson") shows that continuum [quantum chromodynamics](https://en.wikipedia.org/wiki/Quantum_chromodynamics "Quantum chromodynamics") (QCD) is recovered for an infinitely large lattice with its sites infinitesimally close to one another, thereby beginning [lattice QCD](https://en.wikipedia.org/wiki/Lattice_QCD "Lattice QCD").[[38]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-38)

*   Italian physicists [Roberto Car](https://en.wikipedia.org/wiki/Roberto_Car "Roberto Car") and [Michele Parrinello](https://en.wikipedia.org/wiki/Michele_Parrinello "Michele Parrinello") invent the [Car–Parrinello method](https://en.wikipedia.org/wiki/Car%E2%80%93Parrinello_method "Car–Parrinello method").[[39]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-39)
*   [Swendsen–Wang algorithm](https://en.wikipedia.org/wiki/Swendsen%E2%80%93Wang_algorithm "Swendsen–Wang algorithm") is invented in the field of Monte Carlo simulations.[[40]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-40)
*   [Fast multipole method](https://en.wikipedia.org/wiki/Fast_multipole_method "Fast multipole method") is invented by [Vladimir Rokhlin](https://en.wikipedia.org/wiki/Vladimir_Rokhlin,_Jr. "Vladimir Rokhlin, Jr.") and [Leslie Greengard](https://en.wikipedia.org/wiki/Leslie_Greengard "Leslie Greengard") (voted one of the top 10 algorithms of the 20th century).[[41]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-41)[[42]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-42)[[43]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-43)
*   Ullli Wolff invents the [Wolff algorithm](https://en.wikipedia.org/wiki/Wolff_algorithm "Wolff algorithm") for statistical physics and Monte Carlo simulation.[[44]](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_note-44)

*   [Timeline of scientific computing](https://en.wikipedia.org/wiki/Timeline_of_scientific_computing "Timeline of scientific computing")
*   [Computational physics](https://en.wikipedia.org/wiki/Computational_physics "Computational physics")
*   [Important publications in computational physics](https://en.wikipedia.org/wiki/List_of_publications_in_physics#Computational_physics "List of publications in physics")

1.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-1 "Jump up")**[Ballistic Research Laboratory](https://en.wikipedia.org/wiki/Ballistic_Research_Laboratory "Ballistic Research Laboratory"), [Aberdeen Proving Grounds](https://en.wikipedia.org/wiki/Aberdeen_Proving_Grounds "Aberdeen Proving Grounds"), Maryland.
2.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-2 "Jump up")**["MATH 6140 - Top ten algorithms from the 20th Century"](http://www.math.cornell.edu/~web6140/). _www.math.cornell.edu_.
3.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-3 "Jump up")**Metropolis, N. (1987). ["The Beginning of the Monte Carlo method"](http://library.lanl.gov/cgi-bin/getfile?15-12.pdf)(PDF). _Los Alamos Science_. **15**: 125.. Accessed 5 May 2012.
4.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-4 "Jump up")**S. Ulam, R. D. Richtmyer, and J. von Neumann(1947). [Statistical methods in neutron diffusion](http://library.lanl.gov/cgi-bin/getfile?00329286.pdf). Los Alamos Scientific Laboratory report LAMS–551.
5.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-5 "Jump up")**N. Metropolis and S. Ulam (1949). The Monte Carlo method. Journal of the American Statistical Association 44:335–341.
6.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-6 "Jump up")**Richtmyer, R. D. (1948). Proposed Numerical Method for Calculation of Shocks. Los Alamos, NM: Los Alamos Scientific Laboratory LA-671.
7.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-7 "Jump up")**A Method for the Numerical Calculation of Hydrodynamic Shocks. Von Neumann, J.; Richtmyer, R. D. Journal of Applied Physics, Vol. 21, pp. 232–237
8.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-8 "Jump up")**Von Neumann, J., Theory of Self-Reproducing Automata, Univ. of Illinois Press, Urbana, 1966.
9.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-9 "Jump up")**["Cellular Automaton"](http://mathworld.wolfram.com/CellularAutomaton.html).
10.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-10 "Jump up")**[Metropolis, N.](https://en.wikipedia.org/wiki/Nicholas_Metropolis "Nicholas Metropolis"); Rosenbluth, A.W.; [Rosenbluth, M.N.](https://en.wikipedia.org/wiki/Marshall_N._Rosenbluth "Marshall N. Rosenbluth"); Teller, A.H.; [Teller, E.](https://en.wikipedia.org/wiki/Edward_Teller "Edward Teller") (1953). ["Equations of State Calculations by Fast Computing Machines"](https://en.wikipedia.org/wiki/Equations_of_State_Calculations_by_Fast_Computing_Machines "Equations of State Calculations by Fast Computing Machines"). _[Journal of Chemical Physics](https://en.wikipedia.org/wiki/Journal\_of\_Chemical\_Physics "Journal of Chemical Physics")_. **21** (6): 1087–1092. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1953JChPh..21.1087M](https://ui.adsabs.harvard.edu/abs/1953JChPh..21.1087M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1063/1.1699114](https://doi.org/10.1063%2F1.1699114). [OSTI](https://en.wikipedia.org/wiki/OSTI_(identifier) "OSTI (identifier)")[4390578](https://www.osti.gov/biblio/4390578). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier) "S2CID (identifier)")[1046577](https://api.semanticscholar.org/CorpusID:1046577).
11.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-11 "Jump up")**Unfortunately, Alder's thesis advisor was unimpressed, so Alder and Frankel delayed publication of their results until much later. [Alder, B. J., Frankel, S. P., and Lewinson, B. A., J. Chem. Phys., 23, 3 (1955)](http://scitation.aip.org/content/aip/journal/jcp/23/3/10.1063/1.1742004).
12.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-12 "Jump up")**Reed, Mark M. ["Stan Frankel"](http://www.hp9825.com/html/stan_frankel.html). _Hp9825.com_. Retrieved 1 December 2017.
13.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-13 "Jump up")**Fermi, E. (posthumously); Pasta, J.; Ulam, S. (1955): [Studies of Nonlinear Problems (accessed 25 Sep 2012)](https://www.osti.gov/accomplishments/documents/fullText/ACC0041.pdf). Los Alamos Laboratory Document LA-1940. [Also appeared](http://www.cs.princeton.edu/courses/archive/fall09/cos323/papers/fpu55.pdf) in 'Collected Works of Enrico Fermi', E. Segre ed., [University of Chicago Press](https://en.wikipedia.org/wiki/University_of_Chicago_Press "University of Chicago Press"), Vol.II,978–988,1965. Recovered 21 December 2012
14.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-14 "Jump up")**Broadbent, S. R.; Hammersley, J. M. (2008). "Percolation processes". Math. Proc. of the Camb. Philo. Soc.; 53 (3): 629.
15.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-15 "Jump up")**Alder, B. J.; Wainwright, T. E. (1959). "Studies in Molecular Dynamics. I. General Method". _[Journal of Chemical Physics](https://en.wikipedia.org/wiki/Journal\_of\_Chemical\_Physics "Journal of Chemical Physics")_. **31** (2): 459. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1959JChPh..31..459A](https://ui.adsabs.harvard.edu/abs/1959JChPh..31..459A). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1063/1.1730376](https://doi.org/10.1063%2F1.1730376).
16.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-16 "Jump up")**Minovitch, Michael: "A method for determining interplanetary free-fall reconnaissance trajectories," Jet Propulsion Laboratory Technical Memo TM-312-130, pages 38-44 (23 August 1961).
17.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-17 "Jump up")**Christopher Riley and Dallas Campbell, 22 October 2012. ["The maths that made Voyager possible"](http://www.bbc.co.uk%2Fnews%2Fscience-environment-20033940&ei=j-29UZ6sNIexPInBgfAG&usg=AFQjCNEj30660hWJWTpfDJohrZek5KxAFA)[Archived](https://web.archive.org/web/20130730023109/http://www.beyondintractability.org/bi-essay/culture-conflict) 30 July 2013 at the [Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine "Wayback Machine"). BBC News Science and Environment. Recovered 16 June 2013.
18.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-18 "Jump up")**[R. J. Glauber](https://en.wikipedia.org/wiki/Roy_J._Glauber "Roy J. Glauber"). "Time-dependent statistics of the Ising model, _J. Math. Phys._ 4 (1963), 294–307.
19.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-19 "Jump up")**Lorenz, Edward N. (1963). ["Deterministic Nonperiodic Flow"](http://www.nd.edu/~powers/ame.60611/lorenz.article.pdf)(PDF). _Journal of the Atmospheric Sciences_. **20** (2): 130–141. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1963JAtS...20..130L](https://ui.adsabs.harvard.edu/abs/1963JAtS...20..130L). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1175/1520-0469(1963)020<0130:DNF>2.0.CO;2](https://doi.org/10.1175%2F1520-0469%281963%29020%3C0130%3ADNF%3E2.0.CO%3B2).
20.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-20 "Jump up")**Rahman, A (1964). "Correlations in the Motion of Atoms in Liquid Argon". _Phys Rev_. **136** (2A): A405 –A41. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1964PhRv..136..405R](https://ui.adsabs.harvard.edu/abs/1964PhRv..136..405R). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRev.136.A405](https://doi.org/10.1103%2FPhysRev.136.A405).
21.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-21 "Jump up")**Kohn, Walter; Hohenberg, Pierre (1964). ["Inhomogeneous Electron Gas"](https://doi.org/10.1103%2FPhysRev.136.B864). _[Physical Review](https://en.wikipedia.org/wiki/Physical\_Review "Physical Review")_. **136** (3B): B864 –B871. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1964PhRv..136..864H](https://ui.adsabs.harvard.edu/abs/1964PhRv..136..864H). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRev.136.B864](https://doi.org/10.1103%2FPhysRev.136.B864).
22.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-22 "Jump up")**Kohn, Walter; Sham, Lu Jeu (1965). ["Self-Consistent Equations Including Exchange and Correlation Effects"](https://doi.org/10.1103%2FPHYSREV.140.A1133). _[Physical Review](https://en.wikipedia.org/wiki/Physical\_Review "Physical Review")_. **140** (4A): A1133 –A1138. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1965PhRv..140.1133K](https://ui.adsabs.harvard.edu/abs/1965PhRv..140.1133K). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PHYSREV.140.A1133](https://doi.org/10.1103%2FPHYSREV.140.A1133).
23.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-23 "Jump up")**["The Nobel Prize in Chemistry 1998"](http://nobelprize.org/nobel_prizes/chemistry/laureates/1998/index.html). Nobelprize.org. Retrieved 6 October 2008.
24.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-24 "Jump up")**Zabusky, N. J.; Kruskal, M. D. (1965). "Interaction of 'solitons' in a collisionless plasma and the recurrence of initial states". _Phys. Rev. Lett._ 15 (6): 240–243. Bibcode 1965PhRvL..15..240Z. [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRevLett.15.240](https://doi.org/10.1103%2FPhysRevLett.15.240).
25.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-25 "Jump up")**["Definition of SOLITON"](http://www.merriam-webster.com/dictionary/soliton). _Merriam-webster.com_. Retrieved 1 December 2017.
26.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-26 "Jump up")**K. Kawasaki, "Diffusion Constants near the Critical Point for Time-Dependent Ising Models. _I. Phys. Rev._ 145, 224 (1966)
27.   ^ [Jump up to: _**a**_](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-Verlet_27-0)[_**b**_](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-Verlet_27-1)[Verlet, Loup](https://en.wikipedia.org/wiki/Loup_Verlet "Loup Verlet") (1967). ["Computer "Experiments" on Classical Fluids. I. Thermodynamical Properties of Lennard−Jones Molecules"](https://doi.org/10.1103%2FPhysRev.159.98). _Physical Review_. **159** (1): 98–103. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1967PhRv..159...98V](https://ui.adsabs.harvard.edu/abs/1967PhRv..159...98V). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRev.159.98](https://doi.org/10.1103%2FPhysRev.159.98).
28.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-28 "Jump up")**Press, WH; Teukolsky, SA; Vetterling, WT; Flannery, BP (2007). ["Section 17.4. Second-Order Conservative Equations"](http://apps.nrbook.com/empanel/index.html#pg=928). _Numerical Recipes: The Art of Scientific Computing_ (3rd ed.). New York: Cambridge University Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[978-0-521-88068-8](https://en.wikipedia.org/wiki/Special:BookSources/978-0-521-88068-8 "Special:BookSources/978-0-521-88068-8").
29.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-29 "Jump up")**Brackx, F.; Constales, D. (30 November 1991). [_Computer Algebra with LISP and REDUCE: An Introduction to Computer-aided Pure Mathematics_](https://books.google.com/books?id=d7SZ8ppIUb0C&q=delaunay+computational+algebra&pg=PA3). Springer Science & Business Media. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9780792314417](https://en.wikipedia.org/wiki/Special:BookSources/9780792314417 "Special:BookSources/9780792314417").
30.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-30 "Jump up")**Contopoulos, George (16 June 2004). [_Order and Chaos in Dynamical Astronomy_](https://books.google.com/books?id=7YkDhZCCLR4C&q=delaunay+computational+algebra+lunar&pg=PA1). Springer Science & Business Media. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier) "ISBN (identifier)")[9783540433606](https://en.wikipedia.org/wiki/Special:BookSources/9783540433606 "Special:BookSources/9783540433606").
31.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-31 "Jump up")**Jose Romildo Malaquias; Carlos Roberto Lopes. ["Implementing a computer algebra system in Haskell"](http://www.repositorio.ufop.br/bitstream/123456789/4361/1/ARTIGO_ImplementingComputerAlgebra.pdf)(PDF). _Repositorio.ufop.br_. Retrieved 1 December 2017.
32.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-32 "Jump up")**["Computer Algebra"](http://www.mosaicsciencemagazine.org/pdf/m24_04_91_03.pdf)(PDF). _Mosaicsciencemagazine.org_. Retrieved 1 December 2017.
33.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-33 "Jump up")**[[1]](https://books.google.com/books?id=aLXaBwAAQBAJ&dq=delaunay+computational+algebra+lunar&pg=PA6)[_[dead link](https://en.wikipedia.org/wiki/Wikipedia:Link\_rot "Wikipedia:Link rot")_]
34.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-34 "Jump up")**[Frank Close](https://en.wikipedia.org/wiki/Frank_Close "Frank Close"). The Infinity Puzzle, pg 207. [OUP](https://en.wikipedia.org/wiki/OUP "OUP"), 2011.
35.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-35 "Jump up")**Stefan Weinzierl:- ["Computer Algebra in Particle Physics."](http://cdsweb.cern.ch/record/582375/files/0209234.ps.gz) pgs 5–7. [arXiv](https://en.wikipedia.org/wiki/ArXiv "ArXiv"):[hep-ph/0209234](https://arxiv.org/abs/hep-ph/0209234v1). All links accessed 1 January 2012. "Seminario Nazionale di Fisica Teorica", Parma, September 2002.
36.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-36 "Jump up")**J. Hardy, Y. Pomeau, and O. de Pazzis (1973). "Time evolution of two-dimensional model system I: invariant states and time correlation functions". _Journal of Mathematical Physics_, **14**:1746–1759.
37.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-37 "Jump up")**J. Hardy, O. de Pazzis, and Y. Pomeau (1976). "Molecular dynamics of a classical lattice gas: Transport properties and time correlation functions". _Physical Review A_, **13**:1949–1961.
38.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-38 "Jump up")**[Wilson, K.](https://en.wikipedia.org/wiki/Kenneth_G._Wilson "Kenneth G. Wilson") (1974). "Confinement of quarks". _[Physical Review D](https://en.wikipedia.org/wiki/Physical\_Review\_D "Physical Review D")_. **10** (8): 2445. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1974PhRvD..10.2445W](https://ui.adsabs.harvard.edu/abs/1974PhRvD..10.2445W). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRevD.10.2445](https://doi.org/10.1103%2FPhysRevD.10.2445).
39.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-39 "Jump up")**Car, R.; Parrinello, M (1985). ["Unified Approach for Molecular Dynamics and Density-Functional Theory"](https://doi.org/10.1103%2FPhysRevLett.55.2471). _Physical Review Letters_. **55** (22): 2471–2474. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier) "Bibcode (identifier)"):[1985PhRvL..55.2471C](https://ui.adsabs.harvard.edu/abs/1985PhRvL..55.2471C). [doi](https://en.wikipedia.org/wiki/Doi_(identifier) "Doi (identifier)"):[10.1103/PhysRevLett.55.2471](https://doi.org/10.1103%2FPhysRevLett.55.2471). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier) "PMID (identifier)")[10032153](https://pubmed.ncbi.nlm.nih.gov/10032153).
40.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-40 "Jump up")**Swendsen, R. H., and Wang, J.-S. (1987), _Nonuniversal critical dynamics in Monte Carlo simulations_, Phys. Rev. Lett., 58(2):86–88.
41.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-41 "Jump up")**L. Greengard, The Rapid Evaluation of Potential Fields in Particle Systems, MIT, Cambridge, (1987).
42.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-42 "Jump up")**Rokhlin, Vladimir (1985). "Rapid Solution of Integral Equations of Classic Potential Theory." J. Computational Physics Vol. 60, pp. 187–207.
43.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-43 "Jump up")**L. Greengard and V. Rokhlin, "A fast algorithm for particle simulations," J. Comput. Phys., 73 (1987), no. 2, pp. 325–348.
44.   **[^](https://en.wikipedia.org/wiki/Timeline_of_computational_physics#cite_ref-44 "Jump up")**Wolff, Ulli (1989), "Collective Monte Carlo Updating for Spin Systems", Physical Review Letters, 62 (4): 361

*   [The Monte Carlo Method: Classic Papers](https://web.archive.org/web/20140822045448/http://home.gwu.edu/~stroud/mc-classics.html)
*   [Monte Carlo Landmark Papers](http://scienze-como.uninsubria.it/bressanini/montecarlo-history/)
