Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Finite discrete distributions 2 Continuous distributions 3 Software libraries 4 See also 5 Footnotes 6 Literature Toggle the table of contents Non-uniform random variate generation 4 languages Català Português Русский Українська Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Pseudo-random number sampling ) Generating pseudo-random numbers that follow a probability distribution Non-uniform random variate generation or pseudo-random number sampling is the numerical practice of generating pseudo-random numbers (PRN) that follow a given probability distribution .
Methods are typically based on the availability of a uniformly distributed PRN generator . Computational algorithms are then used to manipulate a single random variate , X , or often several such variates, into a new random variate Y such that these values have the required distribution.
The first methods were developed for Monte-Carlo simulations in the Manhattan Project , [ citation needed ] published by John von Neumann in the early 1950s.

[ 1 ] Finite discrete distributions [ edit ] For a discrete probability distribution with a finite number n of indices at which the probability mass function f takes non-zero values, the basic sampling algorithm is straightforward. The interval [0, 1) is divided in n intervals [0, f (1)), [ f (1), f (1) + f (2)), ... The width of interval i equals the probability f ( i ).
One draws a uniformly distributed pseudo-random number X , and searches for the index i of the corresponding interval. The so determined i will have the distribution f ( i ).

Formalizing this idea becomes easier by using the cumulative distribution function F ( i ) = ∑ ∑ j = 1 i f ( j ) .

{\displaystyle F(i)=\sum _{j=1}^{i}f(j).} It is convenient to set F (0) = 0.  The n intervals are then simply [ F (0), F (1)), [ F (1), F (2)), ..., [ F ( n − 1), F ( n )). The main computational task is then to determine i for which F ( i − 1) ≤ X < F ( i ).

This can be done by different algorithms: Linear search , computational time linear in n .

Binary search , computational time goes with log n .

Indexed search , [ 2 ] also called the cutpoint method .

[ 3 ] Alias method , computational time is constant, using some pre-computed tables.

There are other methods that cost constant time.

[ 4 ] Continuous distributions [ edit ] Generic methods for generating independent samples: Rejection sampling for arbitrary density functions Inverse transform sampling for distributions whose CDF is known Ratio of uniforms , combining a change of variables and rejection sampling Slice sampling Ziggurat algorithm , for monotonically  decreasing density functions as well as symmetric unimodal distributions Convolution random number generator , not a sampling method in itself: it describes the use of arithmetics on top of one or more existing sampling methods to generate more involved distributions.

Generic methods for generating correlated samples (often necessary for unusually-shaped or high-dimensional distributions): Markov chain Monte Carlo , the general principle Metropolis–Hastings algorithm Gibbs sampling Slice sampling Reversible-jump Markov chain Monte Carlo , when the number of dimensions is not fixed (e.g. when estimating a mixture model and simultaneously estimating the number of mixture components) Particle filters , when the observed data is connected in a Markov chain and should be processed sequentially For generating a normal distribution : Box–Muller transform Marsaglia polar method For generating a Poisson distribution : See Poisson distribution#Generating Poisson-distributed random variables Software libraries [ edit ] Random distributions provided by software libraries Library Beta Binomial Cauchy Chi-squared Dirichlet Exponential F Gamma Geometric Gumbel Hypergeometric Laplace Logistic Log-normal Logarithmic Multinomial Multivariate hypergeometric Multivariate normal Negative binomial Noncentral chi-squared Noncentral F Normal Pareto Poisson Power Rayleigh Students's t Triangular von Mises Wald Zeta NumPy Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes GNU Scientific Library [ 5 ] Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes No Yes Yes No No Yes Yes Yes ?

Yes Yes No No No No See also [ edit ] Beta distribution#Random variate generation Dirichlet distribution#Random variate generation Exponential distribution#Random variate generation Gamma distribution#Random variate generation Geometric distribution#Random variate generation Gumbel distribution#Random variate generation Laplace distribution#Random variate generation Multinomial distribution#Random variate distribution Pareto distribution#Random variate generation Poisson distribution#Random variate generation Footnotes [ edit ] ^ Von Neumann, John (1951).

"Various Techniques Used in Connection with Random Digits" (PDF) . In Householder, A. S.; Forsythe, G. E.; Germond, H. H. (eds.).

Monte Carlo Methods . National Bureau of Standards Applied Mathematics Series. Vol. 12. US Government Printing Office. pp.

36– 38.

Any one who considers arithmetical methods of producing random digits is of course, in a state of sin.

Also online is a low-quality scan of the original publication .

^ Ripley (1987) [ page needed ] ^ Fishman (1996) [ page needed ] ^ Fishman (1996) [ page needed ] ^ "Random Number Distributions - GSL 2.7 documentation" .

The GNU Operating System and the Free Software Movement . Retrieved 2022-08-18 .

Literature [ edit ] Devroye, L. (1986) Non-Uniform Random Variate Generation .

New York: Springer Fishman, G.S. (1996) Monte Carlo. Concepts, Algorithms, and Applications .

New York: Springer Hörmann, W.; J Leydold, G Derflinger (2004,2011) Automatic Nonuniform Random Variate Generation .

Berlin: Springer.

Knuth, D.E.

(1997) The Art of Computer Programming , Vol. 2 Seminumerical Algorithms , Chapter 3.4.1 (3rd edition).

Ripley, B.D. (1987) Stochastic Simulation . Wiley.

Retrieved from " https://en.wikipedia.org/w/index.php?title=Non-uniform_random_variate_generation&oldid=1296802325 " Categories : Pseudorandom number generators Non-uniform random numbers Hidden categories: Wikipedia articles needing page number citations from June 2011 Use American English from March 2019 All Wikipedia articles written in American English Articles with short description Short description matches Wikidata All articles with unsourced statements Articles with unsourced statements from June 2011 This page was last edited on 22 June 2025, at 11:00 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Non-uniform random variate generation 4 languages Add topic

