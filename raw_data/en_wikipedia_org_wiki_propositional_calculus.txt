Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Sentences Toggle Sentences subsection 2.1 Declarative sentences 2.2 Compounding sentences with connectives 3 Arguments Toggle Arguments subsection 3.1 Example argument 3.2 Validity and soundness 4 Formalization Toggle Formalization subsection 4.1 Propositional variables 4.2 Gentzen notation 5 Language Toggle Language subsection 5.1 Syntax 5.1.1 CF grammar in BNF 5.2 Constants and schemata 6 Semantics Toggle Semantics subsection 6.1 Interpretation (case) and argument 6.2 Propositional connective semantics 6.2.1 Semantics via truth tables 6.2.2 Semantics via assignment expressions 6.2.3 Connective definition methods 6.3 Semantic truth, validity, consequence 7 Proof systems Toggle Proof systems subsection 7.1 Semantic proof systems 7.1.1 Truth tables 7.1.2 Semantic tableaux 7.2 Syntactic proof systems 7.2.1 Axiomatic systems 7.2.2 Natural deduction 7.2.3 Sequent calculus 8 Semantic proof via truth tables 9 Semantic proof via tableaux 10 List of classically valid argument forms 11 Syntactic proof via natural deduction Toggle Syntactic proof via natural deduction subsection 11.1 Notation styles 11.2 Inference rules 11.3 Natural deduction proof example 12 Syntactic proof via axioms Toggle Syntactic proof via axioms subsection 12.1 Frege's Begriffsschrift 12.2 Łukasiewicz's P 2 12.2.1 Schematic form of P 2 12.2.2 Proof example in P 2 13 Solvers 14 See also Toggle See also subsection 14.1 Higher logical levels 14.2 Related topics 15 Notes 16 References 17 Further reading Toggle Further reading subsection 17.1 Related works 18 External links Toggle the table of contents Propositional logic 52 languages Afrikaans العربية Asturianu Беларуская Беларуская (тарашкевіца) Български Català Чӑвашла Čeština Cymraeg Deutsch Eesti Ελληνικά Español Esperanto Euskara فارسی Français Galego 한국어 Հայերեն हिन्दी Ido Bahasa Indonesia Italiano עברית Кыргызча Latina Lietuvių Magyar Монгол Nederlands 日本語 Nordfriisk Norsk bokmål Norsk nynorsk پښتو Polski Português Русский Simple English Slovenčina Slovenščina Српски / srpski Suomi Svenska ไทย Türkçe Українська Tiếng Việt 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikibooks Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Propositional calculus ) Branch of logic Not to be confused with Propositional analysis .

Propositional logic is a branch of logic .

[ 1 ] [ 2 ] It is also called statement logic , [ 1 ] sentential calculus , [ 3 ] propositional calculus , [ 4 ] [ a ] sentential logic , [ 5 ] [ 1 ] or sometimes zeroth-order logic .

[ b ] [ 7 ] [ 8 ] [ 9 ] Sometimes, it is called first-order propositional logic [ 10 ] to contrast it with System F , but it should not be confused with first-order logic . It deals with propositions [ 1 ] (which can be true or false ) [ 11 ] and relations between propositions, [ 12 ] including the construction of arguments based on them.

[ 13 ] Compound propositions are formed by connecting propositions by logical connectives representing the truth functions of conjunction , disjunction , implication , biconditional , and negation .

[ 14 ] [ 15 ] [ 16 ] [ 17 ] Some sources include other connectives, as in the table below.

Unlike first-order logic , propositional logic does not deal with non-logical objects, predicates about them, or quantifiers . However, all the machinery of propositional logic is included in first-order logic and higher-order logics. In this sense, propositional logic is the foundation of first-order logic and higher-order logic.

Propositional logic is typically studied with a formal language , [ c ] in which propositions are represented by letters, which are called propositional variables . These are then used, together with symbols for connectives, to make propositional formula s . Because of this, the propositional variables are called atomic formulas of a formal propositional language.

[ 15 ] [ 2 ] While the atomic propositions are typically represented by letters of the alphabet , [ d ] [ 15 ] there is a variety of notations to represent the logical connectives. The following table shows the main notational variants for each of the connectives in propositional logic.

Notational variants of the connectives [ e ] [ 18 ] [ 19 ] Connective Symbol AND A ∧ ∧ B {\displaystyle A\land B} , A ⋅ ⋅ B {\displaystyle A\cdot B} , A B {\displaystyle AB} , A & & B {\displaystyle A\&B} , A & & & & B {\displaystyle A\&\&B} equivalent A ≡ ≡ B {\displaystyle A\equiv B} , A ⇔ ⇔ B {\displaystyle A\Leftrightarrow B} , A ⇋ ⇋ B {\displaystyle A\leftrightharpoons B} implies A ⇒ ⇒ B {\displaystyle A\Rightarrow B} , A ⊃ ⊃ B {\displaystyle A\supset B} , A → → B {\displaystyle A\rightarrow B} NAND A ∧ ∧ ¯ ¯ B {\displaystyle A{\overline {\land }}B} , A ∣ ∣ B {\displaystyle A\mid B} , A ⋅ ⋅ B ¯ ¯ {\displaystyle {\overline {A\cdot B}}} nonequivalent A ≢ B {\displaystyle A\not \equiv B} , A ⇎ B {\displaystyle A\not \Leftrightarrow B} , A ↮ ↮ B {\displaystyle A\nleftrightarrow B} NOR A ∨ ∨ ¯ ¯ B {\displaystyle A{\overline {\lor }}B} , A ↓ ↓ B {\displaystyle A\downarrow B} , A + B ¯ ¯ {\displaystyle {\overline {A+B}}} NOT ¬ ¬ A {\displaystyle \neg A} , − − A {\displaystyle -A} , A ¯ ¯ {\displaystyle {\overline {A}}} , ∼ ∼ A {\displaystyle \sim A} OR A ∨ ∨ B {\displaystyle A\lor B} , A + B {\displaystyle A+B} , A ∣ ∣ B {\displaystyle A\mid B} , A ∥ ∥ B {\displaystyle A\parallel B} XNOR A ⊙ ⊙ B {\displaystyle A\odot B} XOR A ∨ ∨ _ _ B {\displaystyle A{\underline {\lor }}B} , A ⊕ ⊕ B {\displaystyle A\oplus B} The most thoroughly researched branch of propositional logic is classical truth-functional propositional logic , [ 1 ] in which formulas are interpreted as having precisely one of two possible truth values , the truth value of true or the truth value of false .

[ 20 ] The principle of bivalence and the law of excluded middle are upheld. By comparison with first-order logic , truth-functional propositional logic is considered to be zeroth-order logic .

[ 8 ] [ 9 ] History [ edit ] Main article: History of logic Although propositional logic had been hinted by earlier philosophers, Chrysippus is often credited with development of a deductive system for propositional logic as his main achievement in the 3rd century BC [ 21 ] which was expanded by his successor Stoics . The logic was focused on propositions . This was different from the traditional syllogistic logic , which focused on terms . However, most of the original writings were lost [ 22 ] and, at some time between the 3rd and 6th century CE, Stoic logic faded into oblivion, to be resurrected only in the 20th century, in the wake of the (re)-discovery of propositional logic.

[ 23 ] Symbolic logic , which would come to be important to refine propositional logic, was first developed by the 17th/18th-century mathematician Gottfried Leibniz , whose calculus ratiocinator was, however, unknown to the larger logical community. Consequently, many of the advances achieved by Leibniz were recreated by logicians like George Boole and Augustus De Morgan , completely independent of Leibniz.

[ 24 ] Gottlob Frege's predicate logic builds upon propositional logic, and has been described as combining "the distinctive features of syllogistic logic and propositional logic." [ 25 ] Consequently, predicate logic ushered in a new era in logic's history; however, advances in propositional logic were still made after Frege, including natural deduction , truth trees and truth tables . Natural deduction was invented by Gerhard Gentzen and Stanisław Jaśkowski . Truth trees were invented by Evert Willem Beth .

[ 26 ] The invention of truth tables, however, is of uncertain attribution.

Within works by Frege [ 27 ] and Bertrand Russell , [ 28 ] are ideas influential to the invention of truth tables. The actual tabular structure (being formatted as a table), itself, is generally credited to either Ludwig Wittgenstein or Emil Post (or both, independently).

[ 27 ] Besides Frege and Russell, others credited with having ideas preceding truth tables include Philo, Boole, Charles Sanders Peirce , [ 29 ] and Ernst Schröder . Others credited with the tabular structure include Jan Łukasiewicz , Alfred North Whitehead , William Stanley Jevons , John Venn , and Clarence Irving Lewis .

[ 28 ] Ultimately, some have concluded, like John Shosky, that "It is far from clear that any one person should be given the title of 'inventor' of truth-tables".

[ 28 ] Sentences [ edit ] Main article: Proposition Propositional logic, as currently studied in universities, is a specification of a standard of logical consequence in which only the meanings of propositional connectives are considered in evaluating the conditions for the truth of a sentence, or whether a sentence logically follows from some other sentence or group of sentences.

[ 2 ] Declarative sentences [ edit ] Propositional logic deals with statements , which are defined as declarative sentences having truth value.

[ 30 ] [ 1 ] Examples of statements might include: Wikipedia is a free online encyclopedia that anyone can edit.

London is the capital of England .

All Wikipedia editors speak at least three languages .

Declarative sentences are contrasted with questions , such as "What is Wikipedia?", and imperative statements, such as "Please add citations to support the claims in this article.".

[ 31 ] [ 32 ] Such non-declarative sentences have no truth value , [ 33 ] and are only dealt with in nonclassical logics , called erotetic and imperative logics .

Compounding sentences with connectives [ edit ] See also: Atomic formula and Atomic sentence In propositional logic, a statement can contain one or more other statements as parts.

[ 1 ] Compound sentences are formed from simpler sentences and express relationships among the constituent sentences.

[ 34 ] This is done by combining them with logical connectives : [ 34 ] [ 35 ] the main types of compound sentences are negations , conjunctions , disjunctions , implications , and biconditionals , [ 34 ] which are formed by using the corresponding connectives to connect propositions.

[ 36 ] [ 37 ] In English , these connectives are expressed by the words "and" ( conjunction ), "or" ( disjunction ), "not" ( negation ), "if" ( material conditional ), and "if and only if" ( biconditional ).

[ 1 ] [ 14 ] Examples of such compound sentences might include: Wikipedia is a free online encyclopedia that anyone can edit, and millions already have .

(conjunction) It is not true that all Wikipedia editors speak at least three languages.

(negation) Either London is the capital of England, or London is the capital of the United Kingdom , or both.

(disjunction) [ f ] If sentences lack any logical connectives, they are called simple sentences , [ 1 ] or atomic sentences ; [ 35 ] if they contain one or more logical connectives, they are called compound sentences , [ 34 ] or molecular sentences .

[ 35 ] Sentential connectives are a broader category that includes logical connectives.

[ 2 ] [ 35 ] Sentential connectives are any linguistic particles that bind sentences to create a new compound sentence, [ 2 ] [ 35 ] or that inflect a single sentence to create a new sentence.

[ 2 ] A logical connective , or propositional connective , is a kind of sentential connective with the characteristic feature that, when the original sentences it operates on are (or express) propositions , the new sentence that results from its application also is (or expresses) a proposition .

[ 2 ] Philosophers disagree about what exactly a proposition is, [ 11 ] [ 2 ] as well as about which sentential connectives in natural languages should be counted as logical connectives.

[ 35 ] [ 2 ] Sentential connectives are also called sentence-functors , [ 38 ] and logical connectives are also called truth-functors .

[ 38 ] Arguments [ edit ] Main article: Argument An argument is defined as a pair of things, namely a set of sentences, called the premises , [ g ] and a sentence, called the conclusion .

[ 39 ] [ 35 ] [ 38 ] The conclusion is claimed to follow from the premises, [ 38 ] and the premises are claimed to support the conclusion.

[ 35 ] Example argument [ edit ] The following is an example of an argument within the scope of propositional logic: Premise 1: If it's raining, then it's cloudy.

Premise 2: It's raining.

Conclusion: It's cloudy.

The logical form of this argument is known as modus ponens , [ 40 ] which is a classically valid form.

[ 41 ] So, in classical logic, the argument is valid , although it may or may not be sound , depending on the meteorological facts in a given context. This example argument will be reused when explaining § Formalization .

Validity and soundness [ edit ] Main articles: Validity (logic) and Soundness An argument is valid if, and only if, it is necessary that, if all its premises are true, its conclusion is true.

[ 39 ] [ 42 ] [ 43 ] Alternatively, an argument is valid if, and only if, it is impossible for all the premises to be true while the conclusion is false.

[ 43 ] [ 39 ] Validity is contrasted with soundness .

[ 43 ] An argument is sound if, and only if, it is valid and all its premises are true.

[ 39 ] [ 43 ] Otherwise, it is unsound .

[ 43 ] Logic, in general, aims to precisely specify valid arguments.

[ 35 ] This is done by defining a valid argument as one in which its conclusion is a logical consequence of its premises, [ 35 ] which, when this is understood as semantic consequence , means that there is no case in which the premises are true but the conclusion is not true [ 35 ] – see § Semantics below.

Formalization [ edit ] Propositional logic is typically studied through a formal system in which formulas of a formal language are interpreted to represent propositions . This formal language is the basis for proof systems , which allow a conclusion to be derived from premises if, and only if, it is a logical consequence of them. This section will show how this works by formalizing the § Example argument . The formal language for a propositional calculus will be fully specified in § Language , and an overview of proof systems will be given in § Proof systems .

Propositional variables [ edit ] Main article: Propositional variable Since propositional logic is not concerned with the structure of propositions beyond the point where they cannot be decomposed any more by logical connectives, [ 40 ] [ 1 ] it is typically studied by replacing such atomic (indivisible) statements with letters of the alphabet, which are interpreted as variables representing statements ( propositional variables ).

[ 1 ] With propositional variables, the § Example argument would then be symbolized as follows: Premise 1: P → → Q {\displaystyle P\to Q} Premise 2: P {\displaystyle P} Conclusion: Q {\displaystyle Q} When P is interpreted as "It's raining" and Q as "it's cloudy" these symbolic expressions correspond exactly with the original expression in natural language. Not only that, but they will also correspond with any other inference with the same logical form .

When a formal system is used to represent formal logic, only statement letters (usually capital roman letters such as P {\displaystyle P} , Q {\displaystyle Q} and R {\displaystyle R} ) are represented directly. The natural language propositions that arise when they're interpreted are outside the scope of the system, and the relation between the formal system and its interpretation is likewise outside the formal system itself.

Gentzen notation [ edit ] If we assume that the validity of modus ponens has been accepted as an axiom , then the same § Example argument can also be depicted like this: P → → Q , P Q {\displaystyle {\frac {P\to Q,P}{Q}}} This method of displaying it is Gentzen 's notation for natural deduction and sequent calculus .

[ 44 ] The premises are shown above a line, called the inference line , [ 16 ] separated by a comma , which indicates combination of premises.

[ 45 ] The conclusion is written below the inference line.

[ 16 ] The inference line represents syntactic consequence , [ 16 ] sometimes called deductive consequence , [ 46 ] which is also symbolized with ⊢.

[ 47 ] [ 46 ] So the above can also be written in one line as P → → Q , P ⊢ ⊢ Q {\displaystyle P\to Q,P\vdash Q} .

[ h ] Syntactic consequence is contrasted with semantic consequence , [ 48 ] which is symbolized with ⊧.

[ 47 ] [ 46 ] In this case, the conclusion follows syntactically because the natural deduction inference rule of modus ponens has been assumed. For more on inference rules, see the sections on proof systems below.

Language [ edit ] Part of a series on Formal languages Key concepts Formal system Alphabet Syntax Formal semantics Semantics (programming languages) Formal grammar Formation rule Well-formed formula Automata theory Regular expression Production Ground expression Atomic formula Applications Formal methods Propositional calculus Predicate logic Mathematical notation Natural language processing Programming language theory Mathematical linguistics Computational linguistics Syntax analysis Formal verification Automated theorem proving v t e The language (commonly called L {\displaystyle {\mathcal {L}}} ) [ 46 ] [ 49 ] [ 35 ] of a propositional calculus is defined in terms of: [ 2 ] [ 15 ] a set of primitive symbols, called atomic formulas , atomic sentences , [ 40 ] [ 35 ] atoms, [ 50 ] placeholders , prime formulas , [ 50 ] proposition letters , sentence letters , [ 40 ] or variables , and a set of operator symbols, called connectives , [ 19 ] [ 1 ] [ 51 ] logical connectives , [ 1 ] logical operators , [ 1 ] truth-functional connectives, [ 1 ] truth-functors , [ 38 ] or propositional connectives .

[ 2 ] A well-formed formula is any atomic formula, or any formula that can be built up from atomic formulas by means of operator symbols according to the rules of the grammar. The language L {\displaystyle {\mathcal {L}}} , then, is defined either as being identical to its set of well-formed formulas, [ 49 ] or as containing that set (together with, for instance, its set of connectives and variables).

[ 15 ] [ 35 ] Usually the syntax of L {\displaystyle {\mathcal {L}}} is defined recursively by just a few definitions, as seen next; some authors explicitly include parentheses as punctuation marks when defining their language's syntax, [ 35 ] [ 52 ] while others use them without comment.

[ 2 ] [ 15 ] Syntax [ edit ] Given a set of atomic propositional variables p 1 {\displaystyle p_{1}} , p 2 {\displaystyle p_{2}} , p 3 {\displaystyle p_{3}} , ..., and a set of propositional connectives c 1 1 {\displaystyle c_{1}^{1}} , c 2 1 {\displaystyle c_{2}^{1}} , c 3 1 {\displaystyle c_{3}^{1}} , ..., c 1 2 {\displaystyle c_{1}^{2}} , c 2 2 {\displaystyle c_{2}^{2}} , c 3 2 {\displaystyle c_{3}^{2}} , ..., c 1 3 {\displaystyle c_{1}^{3}} , c 2 3 {\displaystyle c_{2}^{3}} , c 3 3 {\displaystyle c_{3}^{3}} , ..., a formula of propositional logic is defined recursively by these definitions: [ 2 ] [ 15 ] [ 51 ] [ i ] Definition 1 : Atomic propositional variables are formulas.

Definition 2 : If c n m {\displaystyle c_{n}^{m}} is a propositional connective, and ⟨ ⟨ {\displaystyle \langle } A, B, C, … ⟩ ⟩ {\displaystyle \rangle } is a sequence of m, possibly but not necessarily atomic, possibly but not necessarily distinct, formulas, then the result of applying c n m {\displaystyle c_{n}^{m}} to ⟨ ⟨ {\displaystyle \langle } A, B, C, … ⟩ ⟩ {\displaystyle \rangle } is a formula.

Definition 3: Nothing else is a formula.

Writing the result of applying c n m {\displaystyle c_{n}^{m}} to ⟨ ⟨ {\displaystyle \langle } A, B, C, … ⟩ ⟩ {\displaystyle \rangle } in functional notation, as c n m {\displaystyle c_{n}^{m}} (A, B, C, …), we have the following as examples of well-formed formulas: p 5 {\displaystyle p_{5}} c 3 2 ( p 2 , p 9 ) {\displaystyle c_{3}^{2}(p_{2},p_{9})} c 3 2 ( p 1 , c 2 1 ( p 3 ) ) {\displaystyle c_{3}^{2}(p_{1},c_{2}^{1}(p_{3}))} c 1 3 ( p 4 , p 6 , c 2 2 ( p 1 , p 2 ) ) {\displaystyle c_{1}^{3}(p_{4},p_{6},c_{2}^{2}(p_{1},p_{2}))} c 4 2 ( c 1 1 ( p 7 ) , c 3 1 ( p 8 ) ) {\displaystyle c_{4}^{2}(c_{1}^{1}(p_{7}),c_{3}^{1}(p_{8}))} c 2 3 ( c 1 2 ( p 3 , p 4 ) , c 2 1 ( p 5 ) , c 3 2 ( p 6 , p 7 ) ) {\displaystyle c_{2}^{3}(c_{1}^{2}(p_{3},p_{4}),c_{2}^{1}(p_{5}),c_{3}^{2}(p_{6},p_{7}))} c 3 1 ( c 1 3 ( p 2 , p 3 , c 2 2 ( p 4 , p 5 ) ) ) {\displaystyle c_{3}^{1}(c_{1}^{3}(p_{2},p_{3},c_{2}^{2}(p_{4},p_{5})))} What was given as Definition 2 above, which is responsible for the composition of formulas, is referred to by Colin Howson as the principle of composition .

[ 40 ] [ j ] It is this recursion in the definition of a language's syntax which justifies the use of the word "atomic" to refer to propositional variables, since all formulas in the language L {\displaystyle {\mathcal {L}}} are built up from the atoms as ultimate building blocks.

[ 2 ] Composite formulas (all formulas besides atoms) are called molecules , [ 50 ] or molecular sentences .

[ 35 ] (This is an imperfect analogy with chemistry , since a chemical molecule may sometimes have only one atom, as in monatomic gases .) [ 50 ] The definition that "nothing else is a formula", given above as Definition 3 , excludes any formula from the language which is not specifically required by the other definitions in the syntax.

[ 38 ] In particular, it excludes infinitely long formulas from being well-formed .

[ 38 ] It is sometimes called the Closure Clause .

[ 54 ] CF grammar in BNF [ edit ] An alternative to the syntax definitions given above is to write a context-free (CF) grammar for the language L {\displaystyle {\mathcal {L}}} in Backus-Naur form (BNF).

[ 55 ] [ 56 ] This is more common in computer science than in philosophy .

[ 56 ] It can be done in many ways, [ 55 ] of which a particularly brief one, for the common set of five connectives, is this single clause: [ 56 ] [ 57 ] ϕ ϕ ::= a 1 , a 2 , … … | ¬ ¬ ϕ ϕ | ϕ ϕ & & ψ ψ | ϕ ϕ ∨ ∨ ψ ψ | ϕ ϕ → → ψ ψ | ϕ ϕ ↔ ↔ ψ ψ {\displaystyle \phi ::=a_{1},a_{2},\ldots ~|~\neg \phi ~|~\phi ~\&~\psi ~|~\phi \vee \psi ~|~\phi \rightarrow \psi ~|~\phi \leftrightarrow \psi } This clause, due to its self-referential nature (since ϕ ϕ {\displaystyle \phi } is in some branches of the definition of ϕ ϕ {\displaystyle \phi } ), also acts as a recursive definition , and therefore specifies the entire language. To expand it to add modal operators , one need only add … | ◻ ◻ ϕ ϕ | ◊ ◊ ϕ ϕ {\displaystyle |~\Box \phi ~|~\Diamond \phi } to the end of the clause.

[ 56 ] Constants and schemata [ edit ] Mathematicians sometimes distinguish between propositional constants, propositional variables , and schemata.

Propositional constants represent some particular proposition, [ 58 ] while propositional variables range over the set of all atomic propositions.

[ 58 ] Schemata, or schematic letters , however, range over all formulas.

[ 38 ] [ 1 ] (Schematic letters are also called metavariables .) [ 39 ] It is common to represent propositional constants by A , B , and C , propositional variables by P , Q , and R , and schematic letters are often Greek letters, most often φ , ψ , and χ .

[ 38 ] [ 1 ] However, some authors recognize only two "propositional constants" in their formal system: the special symbol ⊤ ⊤ {\displaystyle \top } , called "truth", which always evaluates to True , and the special symbol ⊥ ⊥ {\displaystyle \bot } , called "falsity", which always evaluates to False .

[ 59 ] [ 60 ] [ 61 ] Other authors also include these symbols, with the same meaning, but consider them to be "zero-place truth-functors", [ 38 ] or equivalently, " nullary connectives".

[ 51 ] Semantics [ edit ] Main articles: Semantics of logic and Model theory To serve as a model of the logic of a given natural language , a formal language must be semantically interpreted.

[ 35 ] In classical logic , all propositions evaluate to exactly one of two truth-values : True or False .

[ 1 ] [ 62 ] For example, " Wikipedia is a free online encyclopedia that anyone can edit" evaluates to True , [ 63 ] while "Wikipedia is a paper encyclopedia " evaluates to False .

[ 64 ] In other respects, the following formal semantics can apply to the language of any propositional logic, but the assumptions that there are only two semantic values ( bivalence ), that only one of the two is assigned to each formula in the language ( noncontradiction ), and that every formula gets assigned a value ( excluded middle ), are distinctive features of classical logic.

[ 62 ] [ 65 ] [ 38 ] To learn about nonclassical logics with more than two truth-values, and their unique semantics, one may consult the articles on " Many-valued logic ", " Three-valued logic ", " Finite-valued logic ", and " Infinite-valued logic ".

Interpretation (case) and argument [ edit ] Main article: Interpretation (logic) For a given language L {\displaystyle {\mathcal {L}}} , an interpretation , [ 66 ] valuation , [ 52 ] Boolean valuation , [ 67 ] or case , [ 35 ] [ k ] is an assignment of semantic values to each formula of L {\displaystyle {\mathcal {L}}} .

[ 35 ] For a formal language of classical logic, a case is defined as an assignment , to each formula of L {\displaystyle {\mathcal {L}}} , of one or the other, but not both, of the truth values , namely truth ( T , or 1) and falsity ( F , or 0).

[ 68 ] [ 69 ] An interpretation that follows the rules of classical logic is sometimes called a Boolean valuation .

[ 52 ] [ 70 ] An interpretation of a formal language for classical logic is often expressed in terms of truth tables .

[ 71 ] [ 1 ] Since each formula is only assigned a single truth-value, an interpretation may be viewed as a function , whose domain is L {\displaystyle {\mathcal {L}}} , and whose range is its set of semantic values V = { T , F } {\displaystyle {\mathcal {V}}=\{{\mathsf {T}},{\mathsf {F}}\}} , [ 2 ] or V = { 1 , 0 } {\displaystyle {\mathcal {V}}=\{1,0\}} .

[ 35 ] For n {\displaystyle n} distinct propositional symbols there are 2 n {\displaystyle 2^{n}} distinct possible interpretations. For any particular symbol a {\displaystyle a} , for example, there are 2 1 = 2 {\displaystyle 2^{1}=2} possible interpretations: either a {\displaystyle a} is assigned T , or a {\displaystyle a} is assigned F . And for the pair a {\displaystyle a} , b {\displaystyle b} there are 2 2 = 4 {\displaystyle 2^{2}=4} possible interpretations: either both are assigned T , or both are assigned F , or a {\displaystyle a} is assigned T and b {\displaystyle b} is assigned F , or a {\displaystyle a} is assigned F and b {\displaystyle b} is assigned T .

[ 71 ] Since L {\displaystyle {\mathcal {L}}} has ℵ ℵ 0 {\displaystyle \aleph _{0}} , that is, denumerably many propositional symbols, there are 2 ℵ ℵ 0 = c {\displaystyle 2^{\aleph _{0}}={\mathfrak {c}}} , and therefore uncountably many distinct possible interpretations of L {\displaystyle {\mathcal {L}}} as a whole.

[ 71 ] Where I {\displaystyle {\mathcal {I}}} is an interpretation and φ φ {\displaystyle \varphi } and ψ ψ {\displaystyle \psi } represent formulas, the definition of an argument , given in § Arguments , may then be stated as a pair ⟨ ⟨ { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } , ψ ψ ⟩ ⟩ {\displaystyle \langle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\},\psi \rangle } , where { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } {\displaystyle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\}} is the set of premises and ψ ψ {\displaystyle \psi } is the conclusion. The definition of an argument's validity , i.e. its property that { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } ⊨ ⊨ ψ ψ {\displaystyle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\}\models \psi } , can then be stated as its absence of a counterexample , where a counterexample is defined as a case I {\displaystyle {\mathcal {I}}} in which the argument's premises { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } {\displaystyle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\}} are all true but the conclusion ψ ψ {\displaystyle \psi } is not true.

[ 35 ] [ 40 ] As will be seen in § Semantic truth, validity, consequence , this is the same as to say that the conclusion is a semantic consequence of the premises.

Propositional connective semantics [ edit ] Main articles: Logical connective and Truth function An interpretation assigns semantic values to atomic formulas directly.

[ 66 ] [ 35 ] Molecular formulas are assigned a function of the value of their constituent atoms, according to the connective used; [ 66 ] [ 35 ] the connectives are defined in such a way that the truth-value of a sentence formed from atoms with connectives depends on the truth-values of the atoms that they're applied to, and only on those.

[ 66 ] [ 35 ] This assumption is referred to by Colin Howson as the assumption of the truth-functionality of the connectives .

[ 40 ] Semantics via truth tables [ edit ] Logical connectives NOT ¬ ¬ A , − − A , A ¯ ¯ , ∼ ∼ A {\displaystyle \neg A,-A,{\overline {A}},\sim A} AND A ∧ ∧ B , A ⋅ ⋅ B , A B , A & & B , A & & & & B {\displaystyle A\land B,A\cdot B,AB,A\ \&\ B,A\ \&\&\ B} NAND A ∧ ∧ ¯ ¯ B , A ↑ ↑ B , A ∣ ∣ B , A ⋅ ⋅ B ¯ ¯ {\displaystyle A{\overline {\land }}B,A\uparrow B,A\mid B,{\overline {A\cdot B}}} OR A ∨ ∨ B , A + B , A ∣ ∣ B , A ∥ ∥ B {\displaystyle A\lor B,A+B,A\mid B,A\parallel B} NOR A ∨ ∨ ¯ ¯ B , A ↓ ↓ B , A + B ¯ ¯ {\displaystyle A{\overline {\lor }}B,A\downarrow B,{\overline {A+B}}} XNOR A ⊙ ⊙ B , A ∨ ∨ ¯ ¯ B ¯ ¯ {\displaystyle A\odot B,{\overline {A{\overline {\lor }}B}}} └ equivalent A ≡ ≡ B , A ⇔ ⇔ B , A ⇋ ⇋ B {\displaystyle A\equiv B,A\Leftrightarrow B,A\leftrightharpoons B} XOR A ∨ ∨ _ _ B , A ⊕ ⊕ B {\displaystyle A{\underline {\lor }}B,A\oplus B} └ nonequivalent A ≢ B , A ⇎ B , A ↮ ↮ B {\displaystyle A\not \equiv B,A\not \Leftrightarrow B,A\nleftrightarrow B} implies A ⇒ ⇒ B , A ⊃ ⊃ B , A → → B {\displaystyle A\Rightarrow B,A\supset B,A\rightarrow B} nonimplication ( NIMPLY ) A ⇏ B , A ⊅ B , A ↛ ↛ B {\displaystyle A\not \Rightarrow B,A\not \supset B,A\nrightarrow B} converse A ⇐ ⇐ B , A ⊂ ⊂ B , A ← ← B {\displaystyle A\Leftarrow B,A\subset B,A\leftarrow B} converse nonimplication A ⇍ B , A ⊄ B , A ↚ ↚ B {\displaystyle A\not \Leftarrow B,A\not \subset B,A\nleftarrow B} Related concepts Propositional calculus Predicate logic Boolean algebra Truth table Truth function Boolean function Functional completeness Scope (logic) Applications Digital logic Programming languages Mathematical logic Philosophy of logic Category v t e Since logical connectives are defined semantically only in terms of the truth values that they take when the propositional variables that they're applied to take either of the two possible truth values, [ 1 ] [ 35 ] the semantic definition of the connectives is usually represented as a truth table for each of the connectives, [ 1 ] [ 35 ] [ 72 ] as seen below: p {\displaystyle p} q {\displaystyle q} p ∧ ∧ q {\displaystyle p\land q} p ∨ ∨ q {\displaystyle p\lor q} p → → q {\displaystyle p\rightarrow q} p ⇔ ⇔ q {\displaystyle p\Leftrightarrow q} ¬ ¬ p {\displaystyle \neg p} ¬ ¬ q {\displaystyle \neg q} T T T T T T F F T F F T F F F T F T F T T F T F F F F F T T T T This table covers each of the main five logical connectives : [ 14 ] [ 15 ] [ 16 ] [ 17 ] conjunction (here notated p ∧ ∧ q {\displaystyle p\land q} ), disjunction ( p ∨ q ), implication ( p → q ), biconditional ( p ↔ q ) and negation , (¬ p , or ¬ q , as the case may be). It is sufficient for determining the semantics of each of these operators.

[ 1 ] [ 73 ] [ 35 ] For more truth tables for more different kinds of connectives, see the article " Truth table ".

Semantics via assignment expressions [ edit ] Some authors (viz., all the authors cited in this subsection) write out the connective semantics using a list of statements instead of a table. In this format, where I ( φ φ ) {\displaystyle {\mathcal {I}}(\varphi )} is the interpretation of φ φ {\displaystyle \varphi } , the five connectives are defined as: [ 38 ] [ 52 ] I ( ¬ ¬ P ) = T {\displaystyle {\mathcal {I}}(\neg P)={\mathsf {T}}} if, and only if, I ( P ) = F {\displaystyle {\mathcal {I}}(P)={\mathsf {F}}} I ( P ∧ ∧ Q ) = T {\displaystyle {\mathcal {I}}(P\land Q)={\mathsf {T}}} if, and only if, I ( P ) = T {\displaystyle {\mathcal {I}}(P)={\mathsf {T}}} and I ( Q ) = T {\displaystyle {\mathcal {I}}(Q)={\mathsf {T}}} I ( P ∨ ∨ Q ) = T {\displaystyle {\mathcal {I}}(P\lor Q)={\mathsf {T}}} if, and only if, I ( P ) = T {\displaystyle {\mathcal {I}}(P)={\mathsf {T}}} or I ( Q ) = T {\displaystyle {\mathcal {I}}(Q)={\mathsf {T}}} I ( P → → Q ) = T {\displaystyle {\mathcal {I}}(P\to Q)={\mathsf {T}}} if, and only if, it is true that, if I ( P ) = T {\displaystyle {\mathcal {I}}(P)={\mathsf {T}}} , then I ( Q ) = T {\displaystyle {\mathcal {I}}(Q)={\mathsf {T}}} I ( P ↔ ↔ Q ) = T {\displaystyle {\mathcal {I}}(P\leftrightarrow Q)={\mathsf {T}}} if, and only if, it is true that I ( P ) = T {\displaystyle {\mathcal {I}}(P)={\mathsf {T}}} if, and only if, I ( Q ) = T {\displaystyle {\mathcal {I}}(Q)={\mathsf {T}}} Instead of I ( φ φ ) {\displaystyle {\mathcal {I}}(\varphi )} , the interpretation of φ φ {\displaystyle \varphi } may be written out as | φ φ | {\displaystyle |\varphi |} , [ 38 ] [ 74 ] or, for definitions such as the above, I ( φ φ ) = T {\displaystyle {\mathcal {I}}(\varphi )={\mathsf {T}}} may be written simply as the English sentence " φ φ {\displaystyle \varphi } is given the value T {\displaystyle {\mathsf {T}}} ".

[ 52 ] Yet other authors [ 75 ] [ 76 ] may prefer to speak of a Tarskian model M {\displaystyle {\mathfrak {M}}} for the language, so that instead they'll use the notation M ⊨ ⊨ φ φ {\displaystyle {\mathfrak {M}}\models \varphi } , which is equivalent to saying I ( φ φ ) = T {\displaystyle {\mathcal {I}}(\varphi )={\mathsf {T}}} , where I {\displaystyle {\mathcal {I}}} is the interpretation function for M {\displaystyle {\mathfrak {M}}} .

[ 76 ] Connective definition methods [ edit ] Some of these connectives may be defined in terms of others: for instance, implication, p → → q {\displaystyle p\rightarrow q} , may be defined in terms of disjunction and negation, as ¬ ¬ p ∨ ∨ q {\displaystyle \neg p\lor q} ; [ 77 ] and disjunction may be defined in terms of negation and conjunction, as ¬ ¬ ( ¬ ¬ p ∧ ∧ ¬ ¬ q {\displaystyle \neg (\neg p\land \neg q} ).

[ 52 ] In fact, a truth-functionally complete system, [ l ] in the sense that all and only the classical propositional tautologies are theorems, may be derived using only disjunction and negation (as Russell , Whitehead , and Hilbert did), or using only implication and negation (as Frege did), or using only conjunction and negation, or even using only a single connective for "not and" (the Sheffer stroke ), [ 3 ] as Jean Nicod did.

[ 2 ] A joint denial connective ( logical NOR ) will also suffice, by itself, to define all other connectives. Besides NOR and NAND, no other connectives have this property.

[ 52 ] [ m ] Some authors, namely Howson [ 40 ] and Cunningham, [ 79 ] distinguish equivalence from the biconditional. (As to equivalence, Howson calls it "truth-functional equivalence", while Cunningham calls it "logical equivalence".) Equivalence is symbolized with ⇔ and is a metalanguage symbol, while a biconditional is symbolized with ↔ and is a logical connective in the object language L {\displaystyle {\mathcal {L}}} . Regardless, an equivalence or biconditional is true if, and only if, the formulas connected by it are assigned the same semantic value under every interpretation. Other authors often do not make this distinction, and may use the word "equivalence", [ 16 ] and/or the symbol ⇔, [ 80 ] to denote their object language's biconditional connective.

Semantic truth, validity, consequence [ edit ] Given φ φ {\displaystyle \varphi } and ψ ψ {\displaystyle \psi } as formulas (or sentences) of a language L {\displaystyle {\mathcal {L}}} , and I {\displaystyle {\mathcal {I}}} as an interpretation (or case) [ n ] of L {\displaystyle {\mathcal {L}}} , then the following definitions apply: [ 71 ] [ 69 ] Truth-in-a-case: [ 35 ] A sentence φ φ {\displaystyle \varphi } of L {\displaystyle {\mathcal {L}}} is true under an interpretation I {\displaystyle {\mathcal {I}}} if I {\displaystyle {\mathcal {I}}} assigns the truth value T to φ φ {\displaystyle \varphi } .

[ 69 ] [ 71 ] If φ φ {\displaystyle \varphi } is true under I {\displaystyle {\mathcal {I}}} , then I {\displaystyle {\mathcal {I}}} is called a model of φ φ {\displaystyle \varphi } .

[ 71 ] Falsity-in-a-case: [ 35 ] φ φ {\displaystyle \varphi } is false under an interpretation I {\displaystyle {\mathcal {I}}} if, and only if, ¬ ¬ φ φ {\displaystyle \neg \varphi } is true under I {\displaystyle {\mathcal {I}}} .

[ 71 ] [ 81 ] [ 35 ] This is the "truth of negation" definition of falsity-in-a-case.

[ 35 ] Falsity-in-a-case may also be defined by the "complement" definition: φ φ {\displaystyle \varphi } is false under an interpretation I {\displaystyle {\mathcal {I}}} if, and only if, φ φ {\displaystyle \varphi } is not true under I {\displaystyle {\mathcal {I}}} .

[ 69 ] [ 71 ] In classical logic , these definitions are equivalent, but in nonclassical logics , they are not.

[ 35 ] Semantic consequence: A sentence ψ ψ {\displaystyle \psi } of L {\displaystyle {\mathcal {L}}} is a semantic consequence ( φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } ) of a sentence φ φ {\displaystyle \varphi } if there is no interpretation under which φ φ {\displaystyle \varphi } is true and ψ ψ {\displaystyle \psi } is not true.

[ 69 ] [ 71 ] [ 35 ] Valid formula (tautology): A sentence φ φ {\displaystyle \varphi } of L {\displaystyle {\mathcal {L}}} is logically valid ( ⊨ ⊨ φ φ {\displaystyle \models \varphi } ), [ o ] or a tautology , [ 82 ] [ 83 ] ref name="ms32 [ 52 ] if it is true under every interpretation, [ 69 ] [ 71 ] or true in every case.

[ 35 ] Consistent sentence: A sentence of L {\displaystyle {\mathcal {L}}} is consistent if it is true under at least one interpretation. It is inconsistent if it is not consistent.

[ 69 ] [ 71 ] An inconsistent formula is also called self-contradictory , [ 1 ] and said to be a self-contradiction , [ 1 ] or simply a contradiction , [ 84 ] [ 85 ] [ 86 ] although this latter name is sometimes reserved specifically for statements of the form ( p ∧ ∧ ¬ ¬ p ) {\displaystyle (p\land \neg p)} .

[ 1 ] For interpretations (cases) I {\displaystyle {\mathcal {I}}} of L {\displaystyle {\mathcal {L}}} , these definitions are sometimes given: Complete case: A case I {\displaystyle {\mathcal {I}}} is complete if, and only if, either φ φ {\displaystyle \varphi } is true-in- I {\displaystyle {\mathcal {I}}} or ¬ ¬ φ φ {\displaystyle \neg \varphi } is true-in- I {\displaystyle {\mathcal {I}}} , for any φ φ {\displaystyle \varphi } in L {\displaystyle {\mathcal {L}}} .

[ 35 ] [ 87 ] Consistent case: A case I {\displaystyle {\mathcal {I}}} is consistent if, and only if, there is no φ φ {\displaystyle \varphi } in L {\displaystyle {\mathcal {L}}} such that both φ φ {\displaystyle \varphi } and ¬ ¬ φ φ {\displaystyle \neg \varphi } are true-in- I {\displaystyle {\mathcal {I}}} .

[ 35 ] [ 88 ] For classical logic , which assumes that all cases are complete and consistent, [ 35 ] the following theorems apply: For any given interpretation, a given formula is either true or false under it.

[ 71 ] [ 81 ] No formula is both true and false under the same interpretation.

[ 71 ] [ 81 ] φ φ {\displaystyle \varphi } is true under I {\displaystyle {\mathcal {I}}} if, and only if, ¬ ¬ φ φ {\displaystyle \neg \varphi } is false under I {\displaystyle {\mathcal {I}}} ; [ 71 ] [ 81 ] ¬ ¬ φ φ {\displaystyle \neg \varphi } is true under I {\displaystyle {\mathcal {I}}} if, and only if, φ φ {\displaystyle \varphi } is not true under I {\displaystyle {\mathcal {I}}} .

[ 71 ] If φ φ {\displaystyle \varphi } and ( φ φ → → ψ ψ ) {\displaystyle (\varphi \to \psi )} are both true under I {\displaystyle {\mathcal {I}}} , then ψ ψ {\displaystyle \psi } is true under I {\displaystyle {\mathcal {I}}} .

[ 71 ] [ 81 ] If ⊨ ⊨ φ φ {\displaystyle \models \varphi } and ⊨ ⊨ ( φ φ → → ψ ψ ) {\displaystyle \models (\varphi \to \psi )} , then ⊨ ⊨ ψ ψ {\displaystyle \models \psi } .

[ 71 ] ( φ φ → → ψ ψ ) {\displaystyle (\varphi \to \psi )} is true under I {\displaystyle {\mathcal {I}}} if, and only if, either φ φ {\displaystyle \varphi } is not true under I {\displaystyle {\mathcal {I}}} , or ψ ψ {\displaystyle \psi } is true under I {\displaystyle {\mathcal {I}}} .

[ 71 ] φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } if, and only if, ( φ φ → → ψ ψ ) {\displaystyle (\varphi \to \psi )} is logically valid , that is, φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } if, and only if, ⊨ ⊨ ( φ φ → → ψ ψ ) {\displaystyle \models (\varphi \to \psi )} .

[ 71 ] [ 81 ] Proof systems [ edit ] See also: Proof theory and Proof calculus Proof systems in propositional logic can be broadly classified into semantic proof systems and syntactic proof systems , [ 89 ] [ 90 ] [ 91 ] according to the kind of logical consequence that they rely on: semantic proof systems rely on semantic consequence ( φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } ), [ 92 ] whereas syntactic proof systems rely on syntactic consequence ( φ φ ⊢ ⊢ ψ ψ {\displaystyle \varphi \vdash \psi } ).

[ 93 ] Semantic consequence deals with the truth values of propositions in all possible interpretations, whereas syntactic consequence concerns the derivation of conclusions from premises based on rules and axioms within a formal system.

[ 94 ] This section gives a very brief overview of the kinds of proof systems, with anchors to the relevant sections of this article on each one, as well as to the separate Wikipedia articles on each one.

Semantic proof systems [ edit ] x 0 x 1 x 1 ¯ ¯ x 0 & & x 1 ¯ ¯ 0 0 1 0 0 1 0 0 1 0 1 1 1 1 0 0 {\displaystyle {\begin{array}{|c|c|c|c|}x_{0}&x_{1}&{\bar {x_{1}}}&x_{0}\&{\bar {x_{1}}}\\\hline 0&0&1&0\\0&1&0&0\\1&0&1&1\\1&1&0&0\end{array}}} Example of a truth table A graphical representation of a partially built propositional tableau Semantic proof systems rely on the concept of semantic consequence, symbolized as φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } , which indicates that if φ φ {\displaystyle \varphi } is true, then ψ ψ {\displaystyle \psi } must also be true in every possible interpretation.

[ 94 ] Truth tables [ edit ] Main article: Truth table A truth table is a semantic proof method used to determine the truth value of a propositional logic expression in every possible scenario.

[ 95 ] By exhaustively listing the truth values of its constituent atoms, a truth table can show whether a proposition is true, false, tautological, or contradictory.

[ 96 ] See § Semantic proof via truth tables .

Semantic tableaux [ edit ] Main article: Method of analytic tableaux A semantic tableau is another semantic proof technique that systematically explores the truth of a proposition.

[ 97 ] It constructs a tree where each branch represents a possible interpretation of the propositions involved.

[ 98 ] If every branch leads to a contradiction, the original proposition is considered to be a contradiction, and its negation is considered a tautology .

[ 40 ] See § Semantic proof via tableaux .

Syntactic proof systems [ edit ] Rules for the propositional sequent calculus LK, in Gentzen notation Syntactic proof systems, in contrast, focus on the formal manipulation of symbols according to specific rules. The notion of syntactic consequence, φ φ ⊢ ⊢ ψ ψ {\displaystyle \varphi \vdash \psi } , signifies that ψ ψ {\displaystyle \psi } can be derived from φ φ {\displaystyle \varphi } using the rules of the formal system.

[ 94 ] Axiomatic systems [ edit ] Main article: Axiomatic system (logic) An axiomatic system is a set of axioms or assumptions from which other statements (theorems) are logically derived.

[ 99 ] In propositional logic, axiomatic systems define a base set of propositions considered to be self-evidently true, and theorems are proved by applying deduction rules to these axioms.

[ 100 ] See § Syntactic proof via axioms .

Natural deduction [ edit ] Main article: Natural deduction Natural deduction is a syntactic method of proof that emphasizes the derivation of conclusions from premises through the use of intuitive rules reflecting ordinary reasoning.

[ 101 ] Each rule reflects a particular logical connective and shows how it can be introduced or eliminated.

[ 101 ] See § Syntactic proof via natural deduction .

Sequent calculus [ edit ] Main article: Sequent calculus The sequent calculus is a formal system that represents logical deductions as sequences or "sequents" of formulas.

[ 102 ] Developed by Gerhard Gentzen , this approach focuses on the structural properties of logical deductions and provides a powerful framework for proving statements within propositional logic.

[ 102 ] [ 103 ] Semantic proof via truth tables [ edit ] See also: Truth table Taking advantage of the semantic concept of validity (truth in every interpretation), it is possible to prove a formula's validity by using a truth table , which gives every possible interpretation (assignment of truth values to variables) of a formula.

[ 96 ] [ 50 ] [ 38 ] If, and only if, all the lines of a truth table come out true, the formula is semantically valid (true in every interpretation).

[ 96 ] [ 50 ] Further, if (and only if) ¬ ¬ φ φ {\displaystyle \neg \varphi } is valid, then φ φ {\displaystyle \varphi } is inconsistent.

[ 84 ] [ 85 ] [ 86 ] For instance, this table shows that " p → ( q ∨ r → ( r → ¬ p )) " is not valid: [ 50 ] p q r q ∨ r r → ¬ p q ∨ r → ( r → ¬ p ) p → ( q ∨ r → ( r → ¬ p )) T T T T F F F T T F T T T T T F T T F F F T F F F T T T F T T T T T T F T F T T T T F F T T T T T F F F F T T T The computation of the last column of the third line may be displayed as follows: [ 50 ] p → (q ∨ r → (r → ¬ p)) T → (F ∨ T → (T → ¬ T)) T → ( T → (T → F )) T → ( T → F ) T → F F T F F T T F T F F T Further, using the theorem that φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } if, and only if, ( φ φ → → ψ ψ ) {\displaystyle (\varphi \to \psi )} is valid, [ 71 ] [ 81 ] we can use a truth table to prove that a formula is a semantic consequence of a set of formulas: { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } ⊨ ⊨ ψ ψ {\displaystyle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\}\models \psi } if, and only if, we can produce a truth table that comes out all true for the formula ( ( ⋀ ⋀ i = 1 n φ φ i ) → → ψ ψ ) {\displaystyle \left(\left(\bigwedge _{i=1}^{n}\varphi _{i}\right)\rightarrow \psi \right)} (that is, if ⊨ ⊨ ( ( ⋀ ⋀ i = 1 n φ φ i ) → → ψ ψ ) {\displaystyle \models \left(\left(\bigwedge _{i=1}^{n}\varphi _{i}\right)\rightarrow \psi \right)} ).

[ 104 ] [ 105 ] Semantic proof via tableaux [ edit ] Main article: Method of analytic tableaux Since truth tables have 2 n lines for n variables, they can be tiresomely long for large values of n.

[ 40 ] Analytic tableaux are a more efficient, but nevertheless mechanical, [ 72 ] semantic proof method; they take advantage of the fact that "we learn nothing about the validity of the inference from examining the truth-value distributions which make either the premises false or the conclusion true: the only relevant distributions when considering deductive validity are clearly just those which make the premises true or the conclusion false." [ 40 ] Analytic tableaux for propositional logic are fully specified by the rules that are stated in schematic form below.

[ 52 ] These rules use "signed formulas", where a signed formula is an expression T X {\displaystyle TX} or F X {\displaystyle FX} , where X {\displaystyle X} is a (unsigned) formula of the language L {\displaystyle {\mathcal {L}}} .

[ 52 ] (Informally, T X {\displaystyle TX} is read " X {\displaystyle X} is true", and F X {\displaystyle FX} is read " X {\displaystyle X} is false".) [ 52 ] Their formal semantic definition is that "under any interpretation, a signed formula T X {\displaystyle TX} is called true if X {\displaystyle X} is true, and false if X {\displaystyle X} is false, whereas a signed formula F X {\displaystyle FX} is called false if X {\displaystyle X} is true, and true if X {\displaystyle X} is false." [ 52 ] 1 ) T ∼ ∼ X F X F ∼ ∼ X T X s p a c e r 2 ) T ( X ∧ ∧ Y ) T X T Y F ( X ∧ ∧ Y ) F X | F Y s p a c e r 3 ) T ( X ∨ ∨ Y ) T X | T Y F ( X ∨ ∨ Y ) F X F Y s p a c e r 4 ) T ( X ⊃ ⊃ Y ) F X | T Y F ( X ⊃ ⊃ Y ) T X F Y {\displaystyle {\begin{aligned}&1)\quad {\frac {T\sim X}{FX}}\quad &&{\frac {F\sim X}{TX}}\\{\phantom {spacer}}\\&2)\quad {\frac {T(X\land Y)}{\begin{matrix}TX\\TY\end{matrix}}}\quad &&{\frac {F(X\land Y)}{FX|FY}}\\{\phantom {spacer}}\\&3)\quad {\frac {T(X\lor Y)}{TX|TY}}\quad &&{\frac {F(X\lor Y)}{\begin{matrix}FX\\FY\end{matrix}}}\\{\phantom {spacer}}\\&4)\quad {\frac {T(X\supset Y)}{FX|TY}}\quad &&{\frac {F(X\supset Y)}{\begin{matrix}TX\\FY\end{matrix}}}\end{aligned}}} In this notation, rule 2 means that T ( X ∧ ∧ Y ) {\displaystyle T(X\land Y)} yields both T X , T Y {\displaystyle TX,TY} , whereas F ( X ∧ ∧ Y ) {\displaystyle F(X\land Y)} branches into F X , F Y {\displaystyle FX,FY} . The notation is to be understood analogously for rules 3 and 4.

[ 52 ] Often, in tableaux for classical logic , the signed formula notation is simplified so that T φ φ {\displaystyle T\varphi } is written simply as φ φ {\displaystyle \varphi } , and F φ φ {\displaystyle F\varphi } as ¬ ¬ φ φ {\displaystyle \neg \varphi } , which accounts for naming rule 1 the " Rule of Double Negation ".

[ 40 ] [ 72 ] One constructs a tableau for a set of formulas by applying the rules to produce more lines and tree branches until every line has been used, producing a complete tableau. In some cases, a branch can come to contain both T X {\displaystyle TX} and F X {\displaystyle FX} for some X {\displaystyle X} , which is to say, a contradiction. In that case, the branch is said to close .

[ 40 ] If every branch in a tree closes, the tree itself is said to close.

[ 40 ] In virtue of the rules for construction of tableaux, a closed tree is a proof that the original formula, or set of formulas, used to construct it was itself self-contradictory, and therefore false.

[ 40 ] Conversely, a tableau can also prove that a logical formula is tautologous : if a formula is tautologous, its negation is a contradiction, so a tableau built from its negation will close.

[ 40 ] To construct a tableau for an argument ⟨ ⟨ { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } , ψ ψ ⟩ ⟩ {\displaystyle \langle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\},\psi \rangle } , one first writes out the set of premise formulas, { φ φ 1 , φ φ 2 , φ φ 3 , .

.

.

, φ φ n } {\displaystyle \{\varphi _{1},\varphi _{2},\varphi _{3},...,\varphi _{n}\}} , with one formula on each line, signed with T {\displaystyle T} (that is, T φ φ {\displaystyle T\varphi } for each T φ φ {\displaystyle T\varphi } in the set); [ 72 ] and together with those formulas (the order is unimportant), one also writes out the conclusion, ψ ψ {\displaystyle \psi } , signed with F {\displaystyle F} (that is, F ψ ψ {\displaystyle F\psi } ).

[ 72 ] One then produces a truth tree (analytic tableau) by using all those lines according to the rules.

[ 72 ] A closed tree will be proof that the argument was valid, in virtue of the fact that φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } if, and only if, { φ φ , ∼ ∼ ψ ψ } {\displaystyle \{\varphi ,\sim \psi \}} is inconsistent (also written as φ φ , ∼ ∼ ψ ψ ⊨ ⊨ {\displaystyle \varphi ,\sim \psi \models } ).

[ 72 ] List of classically valid argument forms [ edit ] Using semantic checking methods, such as truth tables or semantic tableaux, to check for tautologies and semantic consequences, it can be shown that, in classical logic, the following classical argument forms are semantically valid, i.e., these tautologies and semantic consequences hold.

[ 38 ] We use φ φ {\displaystyle \varphi } ⟚ ψ ψ {\displaystyle \psi } to denote equivalence of φ φ {\displaystyle \varphi } and ψ ψ {\displaystyle \psi } , that is, as an abbreviation for both φ φ ⊨ ⊨ ψ ψ {\displaystyle \varphi \models \psi } and ψ ψ ⊨ ⊨ φ φ {\displaystyle \psi \models \varphi } ; [ 38 ] as an aid to reading the symbols, a description of each formula is given. The description reads the symbol ⊧ (called the "double turnstile") as "therefore", which is a common reading of it, [ 38 ] [ 106 ] although many authors prefer to read it as "entails", [ 38 ] [ 107 ] or as "models".

[ 108 ] Name Sequent Description Modus Ponens ( ( p → → q ) ∧ ∧ p ) ⊨ ⊨ q {\displaystyle ((p\to q)\land p)\models q} [ 35 ] If p then q ; p ; therefore q Modus Tollens ( ( p → → q ) ∧ ∧ ¬ ¬ q ) ⊨ ⊨ ¬ ¬ p {\displaystyle ((p\to q)\land \neg q)\models \neg p} [ 35 ] If p then q ; not q ; therefore not p Hypothetical Syllogism ( ( p → → q ) ∧ ∧ ( q → → r ) ) ⊨ ⊨ ( p → → r ) {\displaystyle ((p\to q)\land (q\to r))\models (p\to r)} [ 39 ] If p then q ; if q then r ; therefore, if p then r Disjunctive Syllogism ( ( p ∨ ∨ q ) ∧ ∧ ¬ ¬ p ) ⊨ ⊨ q {\displaystyle ((p\lor q)\land \neg p)\models q} [ 109 ] Either p or q , or both; not p ; therefore, q Constructive Dilemma ( ( p → → q ) ∧ ∧ ( r → → s ) ∧ ∧ ( p ∨ ∨ r ) ) ⊨ ⊨ ( q ∨ ∨ s ) {\displaystyle ((p\to q)\land (r\to s)\land (p\lor r))\models (q\lor s)} [ 39 ] If p then q ; and if r then s ; but p or r ; therefore q or s Destructive Dilemma ( ( p → → q ) ∧ ∧ ( r → → s ) ∧ ∧ ( ¬ ¬ q ∨ ∨ ¬ ¬ s ) ) ⊨ ⊨ ( ¬ ¬ p ∨ ∨ ¬ ¬ r ) {\displaystyle ((p\to q)\land (r\to s)\land (\neg q\lor \neg s))\models (\neg p\lor \neg r)} If p then q ; and if r then s ; but not q or not s ; therefore not p or not r Bidirectional Dilemma ( ( p → → q ) ∧ ∧ ( r → → s ) ∧ ∧ ( p ∨ ∨ ¬ ¬ s ) ) ⊨ ⊨ ( q ∨ ∨ ¬ ¬ r ) {\displaystyle ((p\to q)\land (r\to s)\land (p\lor \neg s))\models (q\lor \neg r)} If p then q ; and if r then s ; but p or not s ; therefore q or not r Simplification ( p ∧ ∧ q ) ⊨ ⊨ p {\displaystyle (p\land q)\models p} [ 35 ] p and q are true; therefore p is true Conjunction p , q ⊨ ⊨ ( p ∧ ∧ q ) {\displaystyle p,q\models (p\land q)} [ 35 ] p and q are true separately; therefore they are true conjointly Addition p ⊨ ⊨ ( p ∨ ∨ q ) {\displaystyle p\models (p\lor q)} [ 35 ] [ 109 ] p is true; therefore the disjunction ( p or q ) is true Composition of conjunction ( ( p → → q ) ∧ ∧ ( p → → r ) ) {\displaystyle ((p\to q)\land (p\to r))} ⟚ ( p → → ( q ∧ ∧ r ) ) {\displaystyle (p\to (q\land r))} If p then q ; and if p then r ; therefore if p is true then q and r are true Composition of disjunction ( ( p → → q ) ∨ ∨ ( p → → r ) ) {\displaystyle ((p\to q)\lor (p\to r))} ⟚ ( p → → ( q ∨ ∨ r ) ) {\displaystyle (p\to (q\lor r))} If p then q ; or if p then r ; therefore if p is true then q or r is true De Morgan's Theorem (1) ¬ ¬ ( p ∧ ∧ q ) {\displaystyle \neg (p\land q)} ⟚ ( ¬ ¬ p ∨ ∨ ¬ ¬ q ) {\displaystyle (\neg p\lor \neg q)} [ 35 ] The negation of ( p and q ) is equiv. to (not p or not q ) De Morgan's Theorem (2) ¬ ¬ ( p ∨ ∨ q ) {\displaystyle \neg (p\lor q)} ⟚ ( ¬ ¬ p ∧ ∧ ¬ ¬ q ) {\displaystyle (\neg p\land \neg q)} [ 35 ] The negation of ( p or q ) is equiv. to (not p and not q ) Commutation (1) ( p ∨ ∨ q ) {\displaystyle (p\lor q)} ⟚ ( q ∨ ∨ p ) {\displaystyle (q\lor p)} [ 109 ] ( p or q ) is equiv. to ( q or p ) Commutation (2) ( p ∧ ∧ q ) {\displaystyle (p\land q)} ⟚ ( q ∧ ∧ p ) {\displaystyle (q\land p)} [ 109 ] ( p and q ) is equiv. to ( q and p ) Commutation (3) ( p ↔ ↔ q ) {\displaystyle (p\leftrightarrow q)} ⟚ ( q ↔ ↔ p ) {\displaystyle (q\leftrightarrow p)} [ 109 ] ( p iff q ) is equiv. to ( q iff p ) Association (1) ( p ∨ ∨ ( q ∨ ∨ r ) ) {\displaystyle (p\lor (q\lor r))} ⟚ ( ( p ∨ ∨ q ) ∨ ∨ r ) {\displaystyle ((p\lor q)\lor r)} [ 40 ] p or ( q or r ) is equiv. to ( p or q ) or r Association (2) ( p ∧ ∧ ( q ∧ ∧ r ) ) {\displaystyle (p\land (q\land r))} ⟚ ( ( p ∧ ∧ q ) ∧ ∧ r ) {\displaystyle ((p\land q)\land r)} [ 40 ] p and ( q and r ) is equiv. to ( p and q ) and r Distribution (1) ( p ∧ ∧ ( q ∨ ∨ r ) ) {\displaystyle (p\land (q\lor r))} ⟚ ( ( p ∧ ∧ q ) ∨ ∨ ( p ∧ ∧ r ) ) {\displaystyle ((p\land q)\lor (p\land r))} [ 109 ] p and ( q or r ) is equiv. to ( p and q ) or ( p and r ) Distribution (2) ( p ∨ ∨ ( q ∧ ∧ r ) ) {\displaystyle (p\lor (q\land r))} ⟚ ( ( p ∨ ∨ q ) ∧ ∧ ( p ∨ ∨ r ) ) {\displaystyle ((p\lor q)\land (p\lor r))} [ 109 ] p or ( q and r ) is equiv. to ( p or q ) and ( p or r ) Double Negation p {\displaystyle p} ⟚ ¬ ¬ ¬ ¬ p {\displaystyle \neg \neg p} [ 35 ] [ 109 ] p is equivalent to the negation of not p Transposition ( p → → q ) {\displaystyle (p\to q)} ⟚ ( ¬ ¬ q → → ¬ ¬ p ) {\displaystyle (\neg q\to \neg p)} [ 35 ] If p then q is equiv. to if not q then not p Material Implication ( p → → q ) {\displaystyle (p\to q)} ⟚ ( ¬ ¬ p ∨ ∨ q ) {\displaystyle (\neg p\lor q)} [ 109 ] If p then q is equiv. to not p or q Material Equivalence (1) ( p ↔ ↔ q ) {\displaystyle (p\leftrightarrow q)} ⟚ ( ( p → → q ) ∧ ∧ ( q → → p ) ) {\displaystyle ((p\to q)\land (q\to p))} [ 109 ] ( p iff q ) is equiv. to (if p is true then q is true) and (if q is true then p is true) Material Equivalence (2) ( p ↔ ↔ q ) {\displaystyle (p\leftrightarrow q)} ⟚ ( ( p ∧ ∧ q ) ∨ ∨ ( ¬ ¬ p ∧ ∧ ¬ ¬ q ) ) {\displaystyle ((p\land q)\lor (\neg p\land \neg q))} [ 109 ] ( p iff q ) is equiv. to either ( p and q are true) or (both p and q are false) Material Equivalence (3) ( p ↔ ↔ q ) {\displaystyle (p\leftrightarrow q)} ⟚ ( ( p ∨ ∨ ¬ ¬ q ) ∧ ∧ ( ¬ ¬ p ∨ ∨ q ) ) {\displaystyle ((p\lor \neg q)\land (\neg p\lor q))} ( p iff q ) is equiv to., both ( p or not q is true) and (not p or q is true) Exportation ( ( p ∧ ∧ q ) → → r ) ⊨ ⊨ ( p → → ( q → → r ) ) {\displaystyle ((p\land q)\to r)\models (p\to (q\to r))} [ 110 ] from (if p and q are true then r is true) we can prove (if q is true then r is true, if p is true) Importation ( p → → ( q → → r ) ) ⊨ ⊨ ( ( p ∧ ∧ q ) → → r ) {\displaystyle (p\to (q\to r))\models ((p\land q)\to r)} [ 39 ] If p then (if q then r ) is equivalent to if p and q then r Idempotence of disjunction p {\displaystyle p} ⟚ ( p ∨ ∨ p ) {\displaystyle (p\lor p)} [ 109 ] p is true is equiv. to p is true or p is true Idempotence of conjunction p {\displaystyle p} ⟚ ( p ∧ ∧ p ) {\displaystyle (p\land p)} [ 109 ] p is true is equiv. to p is true and p is true Tertium non datur (Law of Excluded Middle) ⊨ ⊨ ( p ∨ ∨ ¬ ¬ p ) {\displaystyle \models (p\lor \neg p)} [ 35 ] [ 109 ] p or not p is true Law of Non-Contradiction ⊨ ⊨ ¬ ¬ ( p ∧ ∧ ¬ ¬ p ) {\displaystyle \models \neg (p\land \neg p)} [ 35 ] [ 109 ] p and not p is false, is a true statement Explosion ( p ∧ ∧ ¬ ¬ p ) ⊨ ⊨ q {\displaystyle (p\land \neg p)\models q} [ 35 ] p and not p ; therefore q Syntactic proof via natural deduction [ edit ] Main article: Natural deduction Transformation rules Propositional calculus Rules of inference ( List ) Implication introduction / elimination ( modus ponens ) Biconditional introduction / elimination Conjunction introduction / elimination Disjunction introduction / elimination Disjunctive / hypothetical syllogism Constructive / destructive dilemma Absorption / modus tollens / modus ponendo tollens Modus non excipiens Negation introduction Rules of replacement Associativity Commutativity Distributivity Double negation De Morgan's laws Transposition Material implication Exportation Tautology Predicate logic Rules of inference Universal generalization / instantiation Existential generalization / instantiation v t e Natural deduction , since it is a method of syntactical proof, is specified by providing inference rules (also called rules of proof ) [ 39 ] for a language with the typical set of connectives { − − , & & , ∨ ∨ , → → , ↔ ↔ } {\displaystyle \{-,\&,\lor ,\to ,\leftrightarrow \}} ; no axioms are used other than these rules.

[ 111 ] The rules are covered below, and a proof example is given afterwards.

Notation styles [ edit ] Different authors vary to some extent regarding which inference rules they give, which will be noted. More striking to the look and feel of a proof, however, is the variation in notation styles. The § Gentzen notation , which was covered earlier for a short argument, can actually be stacked to produce large tree-shaped natural deduction proofs [ 44 ] [ 16 ] —not to be confused with "truth trees", which is another name for analytic tableaux .

[ 72 ] There is also a style due to Stanisław Jaśkowski , where the formulas in the proof are written inside various nested boxes, [ 44 ] and there is a simplification of Jaśkowski's style due to Fredric Fitch ( Fitch notation ), where the boxes are simplified to simple horizontal lines beneath the introductions of suppositions, and vertical lines to the left of the lines that are under the supposition.

[ 44 ] Lastly, there is the only notation style which will actually be used in this article, which is due to Patrick Suppes , [ 44 ] but was much popularized by E.J. Lemmon and Benson Mates .

[ 112 ] This method has the advantage that, graphically, it is the least intensive to produce and display, which made it a natural choice for the editor who wrote this part of the article, who did not understand the complex LaTeX commands that would be required to produce proofs in the other methods.

A proof , then, laid out in accordance with the Suppes–Lemmon notation style, [ 44 ] is a sequence of lines containing sentences, [ 39 ] where each sentence is either an assumption, or the result of applying a rule of proof to earlier sentences in the sequence.

[ 39 ] Each line of proof is made up of a sentence of proof , together with its annotation , its assumption set , and the current line number .

[ 39 ] The assumption set lists the assumptions on which the given sentence of proof depends, which are referenced by the line numbers.

[ 39 ] The annotation specifies which rule of proof was applied, and to which earlier lines, to yield the current sentence.

[ 39 ] See the § Natural deduction proof example .

Inference rules [ edit ] Natural deduction inference rules, due ultimately to Gentzen , are given below.

[ 111 ] There are ten primitive rules of proof, which are the rule assumption , plus four pairs of introduction and elimination rules for the binary connectives, and the rule reductio ad adbsurdum .

[ 39 ] Disjunctive Syllogism can be used as an easier alternative to the proper ∨-elimination, [ 39 ] and MTT and DN are commonly given rules, [ 111 ] although they are not primitive.

[ 39 ] List of Inference Rules Rule Name Alternative names Annotation Assumption set Statement Rule of Assumptions [ 111 ] Assumption [ 39 ] A [ 111 ] [ 39 ] The current line number.

[ 39 ] At any stage of the argument, introduce a proposition as an assumption of the argument.

[ 111 ] [ 39 ] Conjunction introduction Ampersand introduction, [ 111 ] [ 39 ] conjunction (CONJ) [ 39 ] [ 113 ] m, n &I [ 39 ] [ 111 ] The union of the assumption sets at lines m and n .

[ 39 ] From φ φ {\displaystyle \varphi } and ψ ψ {\displaystyle \psi } at lines m and n , infer φ φ & & ψ ψ {\displaystyle \varphi ~\&~\psi } .

[ 111 ] [ 39 ] Conjunction elimination Simplification (S), [ 39 ] ampersand elimination [ 111 ] [ 39 ] m &E [ 39 ] [ 111 ] The same as at line m .

[ 39 ] From φ φ & & ψ ψ {\displaystyle \varphi ~\&~\psi } at line m , infer φ φ {\displaystyle \varphi } and ψ ψ {\displaystyle \psi } .

[ 39 ] [ 111 ] Disjunction introduction [ 111 ] Addition (ADD) [ 39 ] m ∨I [ 39 ] [ 111 ] The same as at line m .

[ 39 ] From φ φ {\displaystyle \varphi } at line m , infer φ φ ∨ ∨ ψ ψ {\displaystyle \varphi \lor \psi } , whatever ψ ψ {\displaystyle \psi } may be.

[ 39 ] [ 111 ] Disjunction elimination Wedge elimination, [ 111 ] dilemma (DL) [ 113 ] j,k,l,m,n ∨E [ 111 ] The lines j,k,l,m,n .

[ 111 ] From φ φ ∨ ∨ ψ ψ {\displaystyle \varphi \lor \psi } at line j , and an assumption of φ φ {\displaystyle \varphi } at line k , and a derivation of χ χ {\displaystyle \chi } from φ φ {\displaystyle \varphi } at line l , and an assumption of ψ ψ {\displaystyle \psi } at line m , and a derivation of χ χ {\displaystyle \chi } from ψ ψ {\displaystyle \psi } at line n , infer χ χ {\displaystyle \chi } .

[ 111 ] Disjunctive Syllogism Wedge elimination (∨E), [ 39 ] modus tollendo ponens (MTP) [ 39 ] m,n DS [ 39 ] The union of the assumption sets at lines m and n .

[ 39 ] From φ φ ∨ ∨ ψ ψ {\displaystyle \varphi \lor \psi } at line m and − − φ φ {\displaystyle -\varphi } at line n , infer ψ ψ {\displaystyle \psi } ; from φ φ ∨ ∨ ψ ψ {\displaystyle \varphi \lor \psi } at line m and − − ψ ψ {\displaystyle -\psi } at line n , infer φ φ {\displaystyle \varphi } .

[ 39 ] Arrow elimination [ 39 ] Modus ponendo ponens (MPP), [ 111 ] [ 39 ] modus ponens (MP), [ 113 ] [ 39 ] conditional elimination m, n →E [ 39 ] [ 111 ] The union of the assumption sets at lines m and n .

[ 39 ] From φ φ → → ψ ψ {\displaystyle \varphi \to \psi } at line m , and φ φ {\displaystyle \varphi } at line n , infer ψ ψ {\displaystyle \psi } .

[ 39 ] Arrow introduction [ 39 ] Conditional proof (CP), [ 113 ] [ 111 ] [ 39 ] conditional introduction n, →I (m) [ 39 ] [ 111 ] Everything in the assumption set at line n , excepting m , the line where the antecedent was assumed.

[ 39 ] From ψ ψ {\displaystyle \psi } at line n , following from the assumption of φ φ {\displaystyle \varphi } at line m , infer φ φ → → ψ ψ {\displaystyle \varphi \to \psi } .

[ 39 ] Reductio ad absurdum [ 111 ] Indirect Proof (IP), [ 39 ] negation introduction (−I), [ 39 ] negation elimination (−E) [ 39 ] m, n RAA (k) [ 39 ] The union of the assumption sets at lines m and n , excluding k (the denied assumption).

[ 39 ] From a sentence and its denial [ p ] at lines m and n , infer the denial of any assumption appearing in the proof (at line k ).

[ 39 ] Double arrow introduction [ 39 ] Biconditional definition ( Df ↔), [ 111 ] biconditional introduction m, n ↔ I [ 39 ] The union of the assumption sets at lines m and n .

[ 39 ] From φ φ → → ψ ψ {\displaystyle \varphi \to \psi } and ψ ψ → → φ φ {\displaystyle \psi \to \varphi } at lines m and n , infer φ φ ↔ ↔ ψ ψ {\displaystyle \varphi \leftrightarrow \psi } .

[ 39 ] Double arrow elimination [ 39 ] Biconditional definition ( Df ↔), [ 111 ] biconditional elimination m ↔ E [ 39 ] The same as at line m .

[ 39 ] From φ φ ↔ ↔ ψ ψ {\displaystyle \varphi \leftrightarrow \psi } at line m , infer either φ φ → → ψ ψ {\displaystyle \varphi \to \psi } or ψ ψ → → φ φ {\displaystyle \psi \to \varphi } .

[ 39 ] Double negation [ 111 ] [ 113 ] Double negation elimination m DN [ 111 ] The same as at line m .

[ 111 ] From − − − − φ φ {\displaystyle --\varphi } at line m , infer φ φ {\displaystyle \varphi } .

[ 111 ] Modus tollendo tollens [ 111 ] Modus tollens (MT) [ 113 ] m, n MTT [ 111 ] The union of the assumption sets at lines m and n .

[ 111 ] From φ φ → → ψ ψ {\displaystyle \varphi \to \psi } at line m , and − − ψ ψ {\displaystyle -\psi } at line n , infer − − φ φ {\displaystyle -\varphi } .

[ 111 ] Natural deduction proof example [ edit ] The proof below [ 39 ] derives − − P {\displaystyle -P} from P → → Q {\displaystyle P\to Q} and − − Q {\displaystyle -Q} using only MPP and RAA , which shows that MTT is not a primitive rule, since it can be derived from those two other rules.

Derivation of MTT from MPP and RAA Assumption set Line number Sentence of proof Annotation 1 1 P → → Q {\displaystyle P\to Q} A 2 2 − − Q {\displaystyle -Q} A 3 3 P {\displaystyle P} A 1 , 3 4 Q {\displaystyle Q} 1 , 3 →E 1 , 2 5 − − P {\displaystyle -P} 2 , 4 RAA Syntactic proof via axioms [ edit ] Main article: Hilbert system It is possible to perform proofs axiomatically, which means that certain tautologies are taken as self-evident and various others are deduced from them using modus ponens as an inference rule , as well as a rule of substitution , which permits replacing any well-formed formula with any substitution-instance of it.

[ 114 ] Alternatively, one uses axiom schemas instead of axioms, and no rule of substitution is used.

[ 114 ] This section gives the axioms of some historically notable axiomatic systems for propositional logic. For more examples, as well as metalogical theorems that are specific to such axiomatic systems (such as their completeness and consistency), see the article Axiomatic system (logic) .

Frege's Begriffsschrift [ edit ] Although axiomatic proof has been used since the famous Ancient Greek textbook, Euclid 's Elements of Geometry , in propositional logic it dates back to Gottlob Frege 's 1879 Begriffsschrift .

[ 38 ] [ 114 ] Frege's system used only implication and negation as connectives.

[ 2 ] It had six axioms: [ 114 ] [ 115 ] [ 116 ] Proposition 1: a → → ( b → → a ) {\displaystyle a\to (b\to a)} Proposition 2: ( c → → ( b → → a ) ) → → ( ( c → → b ) → → ( c → → a ) ) {\displaystyle (c\to (b\to a))\to ((c\to b)\to (c\to a))} Proposition 8: ( d → → ( b → → a ) ) → → ( b → → ( d → → a ) ) {\displaystyle (d\to (b\to a))\to (b\to (d\to a))} Proposition 28: ( b → → a ) → → ( ¬ ¬ a → → ¬ ¬ b ) {\displaystyle (b\to a)\to (\neg a\to \neg b)} Proposition 31: ¬ ¬ ¬ ¬ a → → a {\displaystyle \neg \neg a\to a} Proposition 41: a → → ¬ ¬ ¬ ¬ a {\displaystyle a\to \neg \neg a} These were used by Frege together with modus ponens and a rule of substitution (which was used but never precisely stated) to yield a complete and consistent axiomatization of classical truth-functional propositional logic.

[ 115 ] Łukasiewicz's P 2 [ edit ] Jan Łukasiewicz showed that, in Frege's system, "the third axiom is superfluous since it can be derived from the preceding two axioms, and that the last three axioms can be replaced by the single sentence C C N p N q C p q {\displaystyle CCNpNqCpq} ".

[ 116 ] Which, taken out of Łukasiewicz's Polish notation into modern notation, means ( ¬ ¬ p → → ¬ ¬ q ) → → ( p → → q ) {\displaystyle (\neg p\rightarrow \neg q)\rightarrow (p\rightarrow q)} . Hence, Łukasiewicz is credited [ 114 ] with this system of three axioms: p → → ( q → → p ) {\displaystyle p\to (q\to p)} ( p → → ( q → → r ) ) → → ( ( p → → q ) → → ( p → → r ) ) {\displaystyle (p\to (q\to r))\to ((p\to q)\to (p\to r))} ( ¬ ¬ p → → ¬ ¬ q ) → → ( q → → p ) {\displaystyle (\neg p\to \neg q)\to (q\to p)} Just like Frege's system, this system uses a substitution rule and uses modus ponens as an inference rule.

[ 114 ] The exact same system was given (with an explicit substitution rule) by Alonzo Church , [ 117 ] who referred to it as the system P 2 [ 117 ] [ 118 ] and helped popularize it.

[ 118 ] Schematic form of P 2 [ edit ] One may avoid using the rule of substitution by giving the axioms in schematic form, using them to generate an infinite set of axioms. Hence, using Greek letters to represent schemata (metalogical variables that may stand for any well-formed formulas ), the axioms are given as: [ 38 ] [ 118 ] φ φ → → ( ψ ψ → → φ φ ) {\displaystyle \varphi \to (\psi \to \varphi )} ( φ φ → → ( ψ ψ → → χ χ ) ) → → ( ( φ φ → → ψ ψ ) → → ( φ φ → → χ χ ) ) {\displaystyle (\varphi \to (\psi \to \chi ))\to ((\varphi \to \psi )\to (\varphi \to \chi ))} ( ¬ ¬ φ φ → → ¬ ¬ ψ ψ ) → → ( ψ ψ → → φ φ ) {\displaystyle (\neg \varphi \to \neg \psi )\to (\psi \to \varphi )} The schematic version of P 2 is attributed to John von Neumann , [ 114 ] and is used in the Metamath "set.mm" formal proof database.

[ 118 ] It has also been attributed to Hilbert , [ 119 ] and named H {\displaystyle {\mathcal {H}}} in this context.

[ 119 ] Proof example in P 2 [ edit ] As an example, a proof of A → → A {\displaystyle A\to A} in P 2 is given below. First, the axioms are given names: (A1) ( p → → ( q → → p ) ) {\displaystyle (p\to (q\to p))} (A2) ( ( p → → ( q → → r ) ) → → ( ( p → → q ) → → ( p → → r ) ) ) {\displaystyle ((p\to (q\to r))\to ((p\to q)\to (p\to r)))} (A3) ( ( ¬ ¬ p → → ¬ ¬ q ) → → ( q → → p ) ) {\displaystyle ((\neg p\to \neg q)\to (q\to p))} And the proof is as follows: A → → ( ( B → → A ) → → A ) {\displaystyle A\to ((B\to A)\to A)} (instance of (A1)) ( A → → ( ( B → → A ) → → A ) ) → → ( ( A → → ( B → → A ) ) → → ( A → → A ) ) {\displaystyle (A\to ((B\to A)\to A))\to ((A\to (B\to A))\to (A\to A))} (instance of (A2)) ( A → → ( B → → A ) ) → → ( A → → A ) {\displaystyle (A\to (B\to A))\to (A\to A)} (from (1) and (2) by modus ponens ) A → → ( B → → A ) {\displaystyle A\to (B\to A)} (instance of (A1)) A → → A {\displaystyle A\to A} (from (4) and (3) by modus ponens) Solvers [ edit ] One notable difference between propositional calculus and predicate calculus is that satisfiability of a propositional formula is decidable .

[ 120 ] : 81 Deciding satisfiability of propositional logic formulas is an NP-complete problem. However, practical methods exist (e.g., DPLL algorithm , 1962; Chaff algorithm , 2001) that are very fast for many useful cases. Recent work has extended the SAT solver algorithms to work with propositions containing arithmetic expressions ; these are the SMT solvers .

See also [ edit ] Philosophy portal Higher logical levels [ edit ] First-order logic Second-order propositional logic Second-order logic Higher-order logic Related topics [ edit ] Boolean algebra (logic) Boolean algebra (structure) Boolean algebra topics Boolean domain Boolean function Boolean-valued function Categorical logic Combinational logic Combinatory logic Conceptual graph Disjunctive syllogism Entitative graph Equational logic Existential graph Implicational propositional calculus Intuitionistic propositional calculus Jean Buridan Laws of Form List of logic symbols Logical graph Logical NOR Logical value Mathematical logic Operation (mathematics) Paul of Venice Peirce's law Peter of Spain (author) Propositional formula Symmetric difference Tautology (rule of inference) Truth function Truth table Walter Burley William of Sherwood Notes [ edit ] ^ Many sources write this with a definite article, as the propositional calculus, while others just call it propositional calculus with no article.

^ Zeroth-order logic is sometimes used to denote a quantifier -free predicate logic. That is, propositional logic extended with functions, relations, and constants.

[ 6 ] ^ For propositional logic, the formal language used is a propositional language .

^ Not to be confused with the formal language's alphabet .

^ See all possible connectives on truth-functional propositional logic with some of their properties.

^ The "or both" makes it clear [ 35 ] that it's a logical disjunction , not an exclusive or , which is more common in English.

^ The set of premises may be the empty set ; [ 38 ] [ 39 ] an argument from an empty set of premises is valid if, and only if, the conclusion is a tautology .

[ 38 ] [ 39 ] ^ The turnstile, for syntactic consequence, is of lower precedence than the comma, which represents premise combination, which in turn is of lower precedence than the arrow, used for material implication; so no parentheses are needed to interpret this formula.

[ 45 ] ^ A very general and abstract syntax is given here, following the notation in the SEP, [ 2 ] but including the third definition, which is very commonly given explicitly by other sources, such as Gillon, [ 15 ] Bostock, [ 38 ] Allen & Hand, [ 39 ] and many others. As noted elsewhere in the article, languages variously compose their set of atomic propositional variables from uppercase or lowercase letters (often focusing on P/p, Q/q, and R/r), with or without subscript numerals; and in their set of connectives, they may include either the full set of five typical connectives, { ¬ ¬ , ∧ ∧ , ∨ ∨ , → → , ↔ ↔ } {\displaystyle \{\neg ,\land ,\lor ,\to ,\leftrightarrow \}} , or any of the truth-functionally complete subsets of it. (And, of course, they may also use any of the notational variants of these connectives.) ^ Note that the phrase "principle of composition" has referred to other things in other contexts, and even in the context of logic, since Bertrand Russell used it to refer to the principle that "a proposition which implies each of two propositions implies them both." [ 53 ] ^ The name "interpretation" is used by some authors and the name "case" by other authors. This article will be indifferent and use either, since it is collaboratively edited and there is no consensus about which terminology to adopt.

^ A truth-functionally complete set of connectives [ 2 ] is also called simply functionally complete , or adequate for truth-functional logic , [ 40 ] or expressively adequate , [ 78 ] or simply adequate .

[ 40 ] [ 78 ] ^ See a table of all 16 bivalent truth functions.

^ Some of these definitions use the word "interpretation", and speak of sentences/formulas being true or false "under" it, and some will use the word "case", and speak of sentences/formulas being true or false "in" it. Published reliable sources ( WP:RS ) have used both kinds of terminological convention, although usually a given author will use only one of them. Since this article is collaboratively edited and there is no consensus about which convention to use, these variations in terminology have been left standing.

^ Conventionally ⊨ ⊨ φ φ {\displaystyle \models \varphi } , with nothing to the left of the turnstile, is used to symbolize a tautology. It may be interpreted as saying that φ φ {\displaystyle \varphi } is a semantic consequence of the empty set of formulae, i.e., { } ⊨ ⊨ φ φ {\displaystyle \{\}\models \varphi } , but with the empty brackets omitted for simplicity; [ 38 ] which is just the same as to say that it is a tautology, i.e., that there is no interpretation under which it is false.

[ 38 ] ^ To simplify the statement of the rule, the word "denial" here is used in this way: the denial of a formula φ φ {\displaystyle \varphi } that is not a negation is − − φ φ {\displaystyle -\varphi } , whereas a negation , − − φ φ {\displaystyle -\varphi } , has two denials , viz., φ φ {\displaystyle \varphi } and − − − − φ φ {\displaystyle --\varphi } .

[ 39 ] References [ edit ] ^ a b c d e f g h i j k l m n o p q r s t u v w x y Klement, Kevin C.

"Propositional Logic" . In Fieser, James; Dowden, Bradley (eds.).

Internet Encyclopedia of Philosophy . Retrieved 7 April 2025 .

^ a b c d e f g h i j k l m n o p q r s Franks, Curtis (2024).

"Propositional Logic" . In Zalta, Edward N.; Nodelman, Uri (eds.).

Stanford Encyclopedia of Philosophy (Winter 2024 ed.). Metaphysics Research Lab, Stanford University . Retrieved 7 April 2025 .

^ a b Weisstein, Eric W.

"Propositional Calculus" .

Wolfram MathWorld . Retrieved 9 August 2025 .

^ Lemmon, E. J. (30 September 1971).

Beginning Logic . CRC Press. pp. ix.

ISBN 978-0-412-38090-7 .

^ Hilbert, D.; Ackermann, W. (1950).

Principles of Mathematical Logic . Chelsea Publishing Company.

OCLC 372927 .

^ Tao, Terence (2010), "The completeness and compactness theorems of first-order logic" , An epsilon of room, II , American Mathematical Society, pp.

27– 31, doi : 10.1090/mbk/077 , ISBN 978-0-8218-5280-4 , MR 2780010 ^ Andrews, Peter B. (2002), An introduction to mathematical logic and type theory: to truth through proof , Applied Logic Series, vol. 27 (Second ed.), Kluwer Academic Publishers, Dordrecht, p. 201, doi : 10.1007/978-94-015-9934-4 , ISBN 1-4020-0763-9 , MR 1932484 ^ a b Bělohlávek, Radim; Dauben, Joseph Warren; Klir, George J. (2017).

Fuzzy logic and mathematics: a historical perspective . New York, NY, United States of America: Oxford University Press. p. 463.

ISBN 978-0-19-020001-5 .

^ a b Manzano, María (2005).

Extensions of first order logic . Cambridge tracts in theoretical computer science (Digitally printed first paperback version ed.). Cambridge: Cambridge University Press. p. 180.

ISBN 978-0-521-35435-6 .

^ Matthes, Ralph (1999).

Extensions of System F by Iteration and Primitive Recursion on Monotone Inductive Types . Herbert Utz Verlag. p. 23.

ISBN 978-3-89675-578-0 .

^ a b McGrath, Matthew; Frank, Devin (2023), "Propositions" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Winter 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ "Predicate Logic" .

www3.cs.stonybrook.edu . Retrieved 22 March 2024 .

^ "Philosophy 404: Lecture Five" .

www.webpages.uidaho.edu . Retrieved 22 March 2024 .

^ a b c "3.1 Propositional Logic" .

www.teach.cs.toronto.edu . Retrieved 22 March 2024 .

^ a b c d e f g h i Davis, Steven; Gillon, Brendan S., eds. (2004).

Semantics: a reader . New York: Oxford University Press.

ISBN 978-0-19-513697-5 .

^ a b c d e f g Plato, Jan von (2013).

Elements of logical reasoning (1. publ ed.). Cambridge: Cambridge University press. pp. 9, 32, 121.

ISBN 978-1-107-03659-8 .

^ a b "Propositional Logic" .

www.cs.miami.edu . Retrieved 22 March 2024 .

^ Plato, Jan von (2013).

Elements of logical reasoning (1. publ ed.). Cambridge: Cambridge University press. p. 9.

ISBN 978-1-107-03659-8 .

^ a b Weisstein, Eric W.

"Connective" .

Wolfram MathWorld . Retrieved 9 August 2025 .

^ "Propositional Logic | Brilliant Math & Science Wiki" .

brilliant.org . Retrieved 20 August 2020 .

^ Bobzien, Susanne (1 January 2016). "Ancient Logic". In Zalta, Edward N. (ed.).

The Stanford Encyclopedia of Philosophy . Metaphysics Research Lab, Stanford University – via Stanford Encyclopedia of Philosophy.

^ "Propositional Logic | Internet Encyclopedia of Philosophy" . Retrieved 20 August 2020 .

^ Bobzien, Susanne (2020), "Ancient Logic" , in Zalta, Edward N. (ed.), The Stanford Encyclopedia of Philosophy (Summer 2020 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ Peckhaus, Volker (1 January 2014). "Leibniz's Influence on 19th Century Logic". In Zalta, Edward N. (ed.).

The Stanford Encyclopedia of Philosophy . Metaphysics Research Lab, Stanford University – via Stanford Encyclopedia of Philosophy.

^ Hurley, Patrick (2007).

A Concise Introduction to Logic 10th edition . Wadsworth Publishing. p. 392.

^ Beth, Evert W.; "Semantic entailment and formal derivability", series: Mededlingen van de Koninklijke Nederlandse Akademie van Wetenschappen, Afdeling Letterkunde, Nieuwe Reeks, vol. 18, no. 13, Noord-Hollandsche Uitg. Mij., Amsterdam, 1955, pp. 309–42. Reprinted in Jaakko Intikka (ed.) The Philosophy of Mathematics , Oxford University Press, 1969 ^ a b Truth in Frege ^ a b c "Russell: the Journal of Bertrand Russell Studies" . Archived from the original on 3 November 2013 . Retrieved 6 January 2012 .

^ Anellis, Irving H.

(2012). "Peirce's Truth-functional Analysis and the Origin of the Truth Table".

History and Philosophy of Logic .

33 : 87– 97.

doi : 10.1080/01445340.2011.621702 .

S2CID 170654885 .

^ "Part2Mod1: LOGIC: Statements, Negations, Quantifiers, Truth Tables" .

www.math.fsu.edu . Retrieved 22 March 2024 .

^ "Lecture Notes on Logical Organization and Critical Thinking" .

www2.hawaii.edu . Retrieved 22 March 2024 .

^ "Logical Connectives" .

sites.millersville.edu . Retrieved 22 March 2024 .

^ "Lecture1" .

www.cs.columbia.edu . Retrieved 22 March 2024 .

^ a b c d "Introduction to Logic - Chapter 2" .

intrologic.stanford.edu . Retrieved 22 March 2024 .

^ a b c d e f g h i j k l m n o p q r s t u v w x y z aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax Beall, Jeffrey C. (2010).

Logic: the basics (1. publ ed.). London: Routledge. pp. 6, 8, 14– 16, 19– 20, 44– 48, 50– 53, 56.

ISBN 978-0-203-85155-5 .

^ "Watson" .

watson.latech.edu . Retrieved 22 March 2024 .

^ "Introduction to Theoretical Computer Science, Chapter 1" .

www.cs.odu.edu . Retrieved 22 March 2024 .

^ a b c d e f g h i j k l m n o p q r s t u v w x y Bostock, David (1997).

Intermediate logic . Oxford : New York: Clarendon Press; Oxford University Press. pp.

4– 5, 8– 13, 18– 19, 22, 27, 29, 191, 194.

ISBN 978-0-19-875141-0 .

^ a b c d e f g h i j k l m n o p q r s t u v w x y z aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax ay az ba bb bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br Allen, Colin; Hand, Michael (2022).

Logic primer (3rd ed.). Cambridge, Massachusetts: The MIT Press.

ISBN 978-0-262-54364-4 .

^ a b c d e f g h i j k l m n o p q r s t Howson, Colin (1997).

Logic with trees: an introduction to symbolic logic . London; New York: Routledge. pp. ix, x, 5– 6, 15– 16, 20, 24– 29, 38, 42– 43, 47.

ISBN 978-0-415-13342-5 .

^ Stojnić, Una (2017).

"One's Modus Ponens: Modality, Coherence and Logic" .

Philosophy and Phenomenological Research .

95 (1): 167– 214.

doi : 10.1111/phpr.12307 .

ISSN 0031-8205 .

JSTOR 48578954 .

^ Dutilh Novaes, Catarina (2022), "Argument and Argumentation" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Fall 2022 ed.), Metaphysics Research Lab, Stanford University , retrieved 5 April 2024 ^ a b c d e "Validity and Soundness | Internet Encyclopedia of Philosophy" . Retrieved 5 April 2024 .

^ a b c d e f Pelletier, Francis Jeffry; Hazen, Allen (2024), "Natural Deduction Systems in Logic" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Spring 2024 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ a b Restall, Greg (2018), "Substructural Logics" , in Zalta, Edward N. (ed.), The Stanford Encyclopedia of Philosophy (Spring 2018 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ a b c d "Compactness | Internet Encyclopedia of Philosophy" . Retrieved 22 March 2024 .

^ a b "Lecture Topics for Discrete Math Students" .

math.colorado.edu . Retrieved 22 March 2024 .

^ Paseau, Alexander; Pregel, Fabian (2023), "Deductivism in the Philosophy of Mathematics" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Fall 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ a b Demey, Lorenz; Kooi, Barteld; Sack, Joshua (2023), "Logic and Probability" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Fall 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 22 March 2024 ^ a b c d e f g h Kleene, Stephen Cole (2002).

Mathematical logic (Dover ed.). Mineola, N.Y: Dover Publications.

ISBN 978-0-486-42533-7 .

^ a b c Humberstone, Lloyd (2011).

The connectives . Cambridge, Mass: MIT Press. pp. 118, 702.

ISBN 978-0-262-01654-4 .

OCLC 694679197 .

^ a b c d e f g h i j k l m Smullyan, Raymond M.

(1995) [1968].

First-Order Logic . New York: Dover Publications . pp. 5, 10– 11, 14.

ISBN 978-0-486-68370-6 .

^ Russell, Bertrand (2010).

Principles of mathematics . Routledge classics. London: Routledge. p. 17.

ISBN 978-0-415-48741-2 .

^ Makridis, Odysseus (2022).

"Symbolic Logic" .

Palgrave Philosophy Today : 87.

doi : 10.1007/978-3-030-67396-3 .

ISBN 978-3-030-67395-6 .

ISSN 2947-9339 .

^ a b Hodges, Wilfrid (1977).

Logic . Harmondsworth; New York: Penguin. pp.

80– 85.

ISBN 978-0-14-021985-2 .

^ a b c d Hansson, Sven Ove; Hendricks, Vincent F. (2018).

Introduction to formal philosophy . Springer undergraduate texts in philosophy. Cham: Springer. p. 38.

ISBN 978-3-030-08454-7 .

^ Ayala-Rincón, Mauricio; de Moura, Flávio L.C. (2017).

Applied Logic for Computer Scientists . Undergraduate Topics in Computer Science. Springer. p. 2.

doi : 10.1007/978-3-319-51653-0 .

ISBN 978-3-319-51651-6 .

^ a b Lande, Nelson P. (2013).

Classical logic and its rabbit holes: a first course . Indianapolis, Ind: Hackett Publishing Co., Inc. p. 20.

ISBN 978-1-60384-948-7 .

^ Goldrei, Derek (2005).

Propositional and predicate calculus: a model of argument . London: Springer. p. 69.

ISBN 978-1-85233-921-0 .

^ "Propositional Logic" .

www.cs.rochester.edu . Retrieved 22 March 2024 .

^ "Propositional calculus" .

www.cs.cornell.edu . Retrieved 22 March 2024 .

^ a b Shramko, Yaroslav; Wansing, Heinrich (2021), "Truth Values" , in Zalta, Edward N. (ed.), The Stanford Encyclopedia of Philosophy (Winter 2021 ed.), Metaphysics Research Lab, Stanford University , retrieved 23 March 2024 ^ Metcalfe, David; Powell, John (2011).

"Should doctors spurn Wikipedia?" .

Journal of the Royal Society of Medicine .

104 (12): 488– 489.

doi : 10.1258/jrsm.2011.110227 .

ISSN 0141-0768 .

PMC 3241521 .

PMID 22179287 .

^ Ayers, Phoebe; Matthews, Charles; Yates, Ben (2008).

How Wikipedia works: and how you can be a part of it . San Francisco: No Starch Press. p. 22.

ISBN 978-1-59327-176-3 .

OCLC 185698411 .

^ Shapiro, Stewart; Kouri Kissel, Teresa (2024), "Classical Logic" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Spring 2024 ed.), Metaphysics Research Lab, Stanford University , retrieved 25 March 2024 ^ a b c d Landman, Fred (1991).

"Structures for Semantics" .

Studies in Linguistics and Philosophy .

45 : 127.

doi : 10.1007/978-94-011-3212-1 .

ISBN 978-0-7923-1240-6 .

ISSN 0924-4662 .

^ Fitting, Melvin (6 December 2012).

First-Order Logic and Automated Theorem Proving . Springer Science & Business Media. p. 16.

ISBN 978-1-4612-2360-3 .

^ Nascimento, Marco Antonio Chaer (2015).

Frontiers in quantum methods and applications in chemistry and physics: selected proceedings of QSCP-XVIII (Paraty, Brazil, December, 2013) . Progress in theoretical chemistry and physics. International Workshop on Quantum Systems in Chemistry and Physics. Cham: Springer. p. 255.

ISBN 978-3-319-14397-2 .

^ a b c d e f g Chowdhary, K.R. (2020).

"Fundamentals of Artificial Intelligence" .

SpringerLink : 31– 34.

doi : 10.1007/978-81-322-3972-7 .

ISBN 978-81-322-3970-3 .

^ Restall, Greg; Standefer, Shawn (3 January 2023).

Logical Methods . MIT Press. p. 76.

ISBN 978-0-262-54484-9 .

^ a b c d e f g h i j k l m n o p q r s t Hunter, Geoffrey (1971).

Metalogic: An Introduction to the Metatheory of Standard First-Order Logic . University of California Press.

ISBN 0-520-02356-0 .

^ a b c d e f g h Restall, Greg (2010).

Logic: an introduction . Fundamentals of philosophy. London: Routledge. pp. 5, 36– 41, 55– 60, 69.

ISBN 978-0-415-40068-8 .

^ Aloni, Maria (2023), "Disjunction" , in Zalta, Edward N.; Nodelman, Uri (eds.), The Stanford Encyclopedia of Philosophy (Spring 2023 ed.), Metaphysics Research Lab, Stanford University , retrieved 23 March 2024 ^ Makridis, Odysseus (2022).

Symbolic logic . Palgrave philosophy today. Cham, Switzerland: Palgrave Macmillan. p. 119.

ISBN 978-3-030-67395-6 .

^ Burgess, John P. (2009).

Philosophical logic . Princeton foundations of contemporary philosophy. Princeton: Princeton University Press. p. 5.

ISBN 978-0-691-13789-6 .

OCLC 276141382 .

^ a b Beall, J. C.; Restall, Greg (2006).

Logical Pluralism . Clarendon Press. p. 38.

ISBN 978-0-19-928840-3 .

^ Levin, Oscar.

Propositional Logic .

^ a b Smith, Peter (2003), An introduction to formal logic , Cambridge University Press , ISBN 978-0-521-00804-4 . (Defines "expressively adequate", shortened to "adequate set of connectives" in a section heading.) ^ Cunningham, Daniel W. (2016).

Set theory: a first course . Cambridge mathematical textbooks. New York, NY: Cambridge University Press.

ISBN 978-1-107-12032-7 .

^ Genesereth, Michael; Kao, Eric J. (2017).

Introduction to Logic . Synthesis Lectures on Computer Science. Cham: Springer International Publishing. p. 18.

doi : 10.1007/978-3-031-01801-5 .

ISBN 978-3-031-00673-9 .

^ a b c d e f g Rogers, Robert L. (1971).

Mathematical Logic and Formalized Theories . Elsevier. pp.

38– 39.

doi : 10.1016/c2013-0-11894-6 .

ISBN 978-0-7204-2098-2 .

^ "6. Semantics of Propositional Logic — Logic and Proof 3.18.4 documentation" .

leanprover.github.io . Retrieved 28 March 2024 .

^ "Knowledge Representation and Reasoning: Basics of Logics" .

www.emse.fr . Retrieved 28 March 2024 .

^ a b "1.4: Tautologies and contradictions" .

Mathematics LibreTexts . 9 September 2021 . Retrieved 29 March 2024 .

^ a b Sylvestre, Jeremy.

EF Tautologies and contradictions .

^ a b DeLancey, Craig; Woodrow, Jenna (2017).

Elementary Formal Logic (1 ed.). Pressbooks.

^ Dix, J.; Fisher, Michael; Novak, Peter, eds. (2010).

Computational logic in multi-agent systems: 10th international workshop, CLIMA X, Hamburg, Germany, September 9-10, 2009: revised selected and invited papers . Lecture notes in computer science. Berlin; New York: Springer. p. 49.

ISBN 978-3-642-16866-6 .

OCLC 681481210 .

^ Prakken, Henry; Bistarelli, Stefano; Santini, Francesco; Taticchi, Carlo, eds. (2020).

Computational models of argument: proceedings of comma 2020 . Frontiers in artificial intelligence and applications. Washington: IOS Press. p. 252.

ISBN 978-1-64368-106-1 .

^ Awodey, Steve; Arnold, Greg Frost-, eds. (2024).

Rudolf Carnap: studies in semantics: the collected works of rudolf carnap, volume 7 . New York: Oxford University Press. pp. xxvii.

ISBN 978-0-19-289487-8 .

^ Harel, Guershon; Stylianides, Andreas J., eds. (2018).

Advances in Mathematics Education Research on Proof and Proving: An International Perspective . ICME-13 Monographs (1st ed. 2018 ed.). Cham: Springer International Publishing : Imprint: Springer. p. 181.

ISBN 978-3-319-70996-3 .

^ DeLancey, Craig (2017).

"A Concise Introduction to Logic: §4. Proofs" .

Milne Publishing . Retrieved 23 March 2024 .

^ Ferguson, Thomas Macaulay; Priest, Graham (23 June 2016), "semantic consequence" , A Dictionary of Logic , Oxford University Press, doi : 10.1093/acref/9780191816802.001.0001 , ISBN 978-0-19-181680-2 , retrieved 23 March 2024 ^ Ferguson, Thomas Macaulay; Priest, Graham (23 June 2016), "syntactic consequence" , A Dictionary of Logic , Oxford University Press, doi : 10.1093/acref/9780191816802.001.0001 , ISBN 978-0-19-181680-2 , retrieved 23 March 2024 ^ a b c Cook, Roy T. (2009).

A dictionary of philosophical logic . Edinburgh: Edinburgh University Press. pp. 82, 176.

ISBN 978-0-7486-2559-8 .

^ "Truth table | Boolean, Operators, Rules | Britannica" .

www.britannica.com . 14 March 2024 . Retrieved 23 March 2024 .

^ a b c "MathematicalLogic" .

www.cs.yale.edu . Retrieved 23 March 2024 .

^ "Analytic Tableaux" .

www3.cs.stonybrook.edu . Retrieved 23 March 2024 .

^ "Formal logic - Semantic Tableaux, Proofs, Rules | Britannica" .

www.britannica.com . Retrieved 23 March 2024 .

^ "Axiomatic method | Logic, Proofs & Foundations | Britannica" .

www.britannica.com . Retrieved 23 March 2024 .

^ "Propositional Logic" .

mally.stanford.edu . Retrieved 23 March 2024 .

^ a b "Natural Deduction | Internet Encyclopedia of Philosophy" . Retrieved 23 March 2024 .

^ a b Weisstein, Eric W.

"Sequent Calculus" .

Wolfram MathWorld . Retrieved 9 August 2025 .

^ "Interactive Tutorial of the Sequent Calculus" .

logitext.mit.edu . Retrieved 23 March 2024 .

^ Lucas, Peter; Gaag, Linda van der (1991).

Principles of expert systems (PDF) . International computer science series. Wokingham, England; Reading, Mass: Addison-Wesley. p. 26.

ISBN 978-0-201-41640-4 .

^ Bachmair, Leo (2009).

"CSE541 Logic in Computer Science" (PDF) .

Stony Brook University .

^ Lawson, Mark V. (2019).

A first course in logic . Boca Raton: CRC Press, Taylor & Francis Group. pp. example 1.58.

ISBN 978-0-8153-8664-3 .

^ Dean, Neville (2003).

Logic and language . Basingstoke: Palgrave Macmillan. p. 66.

ISBN 978-0-333-91977-4 .

^ Chiswell, Ian; Hodges, Wilfrid (2007).

Mathematical logic . Oxford texts in logic. Oxford: Oxford university press. p. 3.

ISBN 978-0-19-857100-1 .

^ a b c d e f g h i j k l m n o Hodges, Wilfrid (2001).

Logic (2 ed.). London: Penguin Books. pp.

130– 131.

ISBN 978-0-14-100314-6 .

^ Toida, Shunichi (2 August 2009).

"Proof of Implications" .

CS381 Discrete Structures/Discrete Mathematics Web Course Material . Department of Computer Science, Old Dominion University . Retrieved 10 March 2010 .

^ a b c d e f g h i j k l m n o p q r s t u v w x y z aa ab ac ad ae af ag ah Lemmon, Edward John (1998).

Beginning logic . Boca Raton, FL: Chapman & Hall/CRC. pp. passim, especially 39–40.

ISBN 978-0-412-38090-7 .

^ "Natural Deduction Systems in Logic > Notes (Stanford Encyclopedia of Philosophy)" .

plato.stanford.edu . Retrieved 19 April 2024 .

^ a b c d e f Arthur, Richard T. W. (2017).

An introduction to logic: using natural deduction, real arguments, a little history, and some humour (2nd ed.). Peterborough, Ontario: Broadview Press.

ISBN 978-1-55481-332-2 .

OCLC 962129086 .

^ a b c d e f g Smullyan, Raymond M. (23 July 2014).

A Beginner's Guide to Mathematical Logic . Courier Corporation. pp.

102– 103.

ISBN 978-0-486-49237-7 .

^ a b Mendelsohn, Richard L. (10 January 2005).

The Philosophy of Gottlob Frege . Cambridge University Press. p. 185.

ISBN 978-1-139-44403-3 .

^ a b Łukasiewicz, Jan (1970).

Jan Lukasiewicz: Selected Works . North-Holland. p. 136.

^ a b Church, Alonzo (1996).

Introduction to Mathematical Logic . Princeton University Press. p. 119.

ISBN 978-0-691-02906-1 .

^ a b c d "Proof Explorer - Home Page - Metamath" .

us.metamath.org . Retrieved 2 July 2024 .

^ a b Walicki, Michał (2017).

Introduction to mathematical logic (Extended ed.). New Jersey: World Scientific. p. 126.

ISBN 978-981-4719-95-7 .

^ Quine, W. V. O.

(1980).

Mathematical Logic .

Harvard University Press .

ISBN 0-674-55451-5 .

Further reading [ edit ] Brown, Frank Markham (2003), Boolean Reasoning: The Logic of Boolean Equations , 1st edition, Kluwer Academic Publishers, Norwell, MA. 2nd edition, Dover Publications, Mineola, NY.

Chang, C.C.

and Keisler, H.J.

(1973), Model Theory , North-Holland, Amsterdam, Netherlands.

Kohavi, Zvi (1978), Switching and Finite Automata Theory , 1st edition, McGraw–Hill, 1970. 2nd edition, McGraw–Hill, 1978.

Korfhage, Robert R.

(1974), Discrete Computational Structures , Academic Press, New York, NY.

Lambek, J.

and Scott, P.J. (1986), Introduction to Higher Order Categorical Logic , Cambridge University Press, Cambridge, UK.

Mendelson, Elliot (1964), Introduction to Mathematical Logic , D. Van Nostrand Company.

Related works [ edit ] Hofstadter, Douglas (1979).

Gödel, Escher, Bach: An Eternal Golden Braid .

Basic Books .

ISBN 978-0-465-02656-2 .

External links [ edit ] Wikimedia Commons has media related to Propositional logic .

Klement, Kevin C.

"Propositional Logic" . In Fieser, James; Dowden, Bradley (eds.).

Internet Encyclopedia of Philosophy . Retrieved 7 April 2025 .

Franks, Curtis (2024).

"Propositional Logic" . In Zalta, Edward N.; Nodelman, Uri (eds.).

Stanford Encyclopedia of Philosophy (Winter 2024 ed.). Metaphysics Research Lab, Stanford University . Retrieved 7 April 2025 .

Formal Predicate Calculus , contains a systematic formal development with axiomatic proof forall x: an introduction to formal logic , by P.D. Magnus , covers formal semantics and proof theory for sentential logic.

Chapter 2 / Propositional Logic from Logic In Action Propositional sequent calculus prover on Project Nayuki. ( note : implication can be input in the form !X|Y , and a sequent can be a single formula prefixed with > and having no commas) Propositional Logic - A Generative Grammar A Propositional Calculator that helps to understand simple expressions v t e Classical logic General Quantifiers Predicate Connective Tautology Truth tables Truth function Truth value Well-formed formula Logicism Problem of multiple generality Associativity Distribution Validity Soundness Classical logics Term Propositional First-order Second-order Higher-order Principles Commutativity of conjunction Excluded middle Bivalence Noncontradiction Monotonicity of entailment Explosion Rules De Morgan's laws Material implication Transposition modus ponens modus tollens modus ponendo tollens Constructive dilemma Destructive dilemma Disjunctive syllogism Hypothetical syllogism Absorption Introduction Negation Double negation Existential Universal Biconditional Conjunction Disjunction Elimination Double negation Existential Universal Biconditional Conjunction Disjunction People Bernard Bolzano George Boole Georg Cantor Richard Dedekind Augustus De Morgan Gottlob Frege Kurt Gödel Hugh MacColl Giuseppe Peano Charles Sanders Peirce Bertrand Russell Ernst Schröder Henry M. Sheffer Alfred Tarski Willard Van Orman Quine Ludwig Wittgenstein Jan Łukasiewicz Works Begriffsschrift Function and Concept The Principles of Mathematics Principia Mathematica Tractatus Logico-Philosophicus v t e Common fallacies ( list ) Formal In propositional logic Affirming a disjunct Affirming the consequent Denying the antecedent Argument from fallacy Masked man Mathematical fallacy In quantificational logic Existential Illicit conversion Proof by example Quantifier shift Syllogistic fallacy Affirmative conclusion from a negative premise Negative conclusion from affirmative premises Exclusive premises Existential Necessity Four terms Illicit major Illicit minor Undistributed middle Informal Equivocation Equivocation False equivalence False attribution Moral equivalence Quoting out of context Loki's Wager No true Scotsman Reification Map–territory relation Question-begging Circular reasoning / Begging the question Loaded language Leading question Compound question / Loaded question / Complex question No true Scotsman Correlative-based False dilemma Perfect solution Denying the correlative Suppressed correlative Illicit transference Composition Division Ecological Secundum quid Accident Converse accident Faulty generalization Anecdotal evidence Sampling bias Cherry picking McNamara Base rate / Conjunction Double counting False analogy Slothful induction Overwhelming exception Ambiguity Accent False precision Moving the goalposts Quoting out of context Slippery slope Sorites paradox Syntactic ambiguity Questionable cause Animistic Furtive Correlation implies causation Cum hoc Post hoc Gambler's Inverse Regression Single cause Slippery slope Texas sharpshooter Appeals Law/Legality Stone / Proof by assertion Consequences Argumentum ad baculum Wishful thinking Emotion Children Fear Flattery Novelty Pity Ridicule In-group favoritism Invented here / Not invented here Island mentality Loyalty Parade of horribles Spite Stirring symbols Wisdom of repugnance Genetic fallacy Ad hominem Appeal to motive Association Reductio ad Hitlerum Reductio ad Stalinum Bulverism Poisoning the well Tone Tu quoque Whataboutism Authority Accomplishment Ipse dixit Poverty / Wealth Etymology Nature Tradition / Novelty Chronological snobbery Other fallacies of relevance Arguments Ad nauseam Sealioning Argument from anecdote Argument from silence Argument to moderation Argumentum ad populum Cliché The Four Great Errors I'm entitled to my opinion Ignoratio elenchi Invincible ignorance Moralistic / Naturalistic Motte-and-bailey fallacy Psychologist's fallacy Rationalization Red herring Two wrongs make a right Special pleading Straw man Category v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal Authority control databases : National Germany Czech Republic Israel NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐qz84g
Cached time: 20250811235210
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 2.468 seconds
Real time usage: 2.886 seconds
Preprocessor visited node count: 17173/1000000
Revision size: 121026/2097152 bytes
Post‐expand include size: 423060/2097152 bytes
Template argument size: 11866/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 26/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 608128/5000000 bytes
Lua time usage: 1.044/10.000 seconds
Lua memory usage: 8226041/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00% 1773.208      1 -total
 53.58%  950.040      2 Template:Reflist
 20.78%  368.475     58 Template:Cite_book
 10.11%  179.219     37 Template:Cite_web
  6.78%  120.150      1 Template:Short_description
  6.66%  118.184      4 Template:Cite_encyclopedia
  6.23%  110.405     15 Template:Citation
  6.05%  107.258     12 Template:Navbox
  4.60%   81.533      2 Template:Pagetype
  4.52%   80.108      1 Template:Formal_languages Saved in parser cache with key enwiki:pcache:18154:|#|:idhash:canonical and timestamp 20250811235210 and revision id 1305019858. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Propositional_logic&oldid=1305019858 " Categories : Propositional calculus Logical calculi Boolean algebra Classical logic Analytic philosophy Hidden categories: Articles with short description Short description is different from Wikidata Use dmy dates from February 2021 Commons category link from Wikidata Pages that use a deprecated format of the math tags This page was last edited on 9 August 2025, at 15:31 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Propositional logic 52 languages Add topic

