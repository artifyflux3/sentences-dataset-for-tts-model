Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 ECMAScript, ECMA-262, JavaScript 2 History Toggle History subsection 2.1 Evolution 3 Features Toggle Features subsection 3.1 Imperative and structured 3.2 Weakly typed 3.3 Dynamic 3.4 Transpiling 4 Conformance 5 See also 6 References Toggle the table of contents ECMAScript 37 languages العربية Azərbaycanca বাংলা Български Català Čeština Dansk Deutsch Eesti Español Euskara فارسی Français 한국어 Հայերեն Íslenska Italiano עברית Magyar മലയാളം Bahasa Melayu Nederlands 日本語 Norsk bokmål Polski Português Русский Simple English Српски / srpski Svenska ไทย Türkçe Українська Tiếng Việt Yorùbá 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Specification for Javascript and other programming languages ECMAScript Paradigm Multi-paradigm : prototype-based , functional , imperative Designed by Brendan Eich , Ecma International First appeared 1997 ; 28 years ago ( 1997 ) Typing discipline weak , dynamic Website www .ecma-international .org /publications-and-standards /standards /ecma-262 / Major implementations JavaScript , ActionScript , JScript , QtScript , InScript, Google Apps Script Influenced by Self , HyperTalk , AWK , C , CoffeeScript , Perl , Python , Java , Scheme ECMAScript (file format) Filename extensions .es Internet media type application/ecmascript Developed by Sun Microsystems , Ecma International Initial release June 1997 ; 28 years ago ( 1997-06 ) Latest release Edition 15 June 2024 ; 1 year ago ( 2024-06 ) Type of format Scripting language Website Standards ECMAScript ( / ˈ ɛ k m ə s k r ɪ p t / ; ES ) [ 1 ] is a standard for scripting languages, including JavaScript , JScript , and ActionScript . It is best known as a JavaScript standard intended to ensure the interoperability of web pages across different web browsers .

[ 2 ] It is standardized by Ecma International in the document ECMA-262 .

ECMAScript is commonly used for client-side scripting on the World Wide Web , and it is increasingly being used for server-side applications and services using runtime environments such as Node.js , [ 3 ] Deno [ 4 ] and Bun .

[ 5 ] ECMAScript, ECMA-262, JavaScript [ edit ] ECMA-262 , or the ECMAScript Language Specification , defines the ECMAScript Language , or just ECMAScript .

[ 6 ] ECMA-262 specifies only language syntax and the semantics of the core application programming interface ( API ), such as Array , Function , and globalThis , while valid implementations of JavaScript add their own functionality such as input/output and file system handling.

History [ edit ] The ECMAScript specification is a standardized specification of a scripting language developed by Brendan Eich of Netscape ; initially named Mocha, then LiveScript, and finally JavaScript.

[ 7 ] In December 1995, Sun Microsystems and Netscape announced JavaScript in a press release.

[ 8 ] In November 1996, Netscape announced a meeting of the Ecma International standards organization to advance the standardization of JavaScript.

[ 9 ] The first edition of ECMA-262 was adopted by the Ecma General Assembly in June 1997. Several editions of the language standard have been published since then. The name "ECMAScript" was a compromise between the organizations involved in standardizing the language, especially Netscape and Microsoft, whose disputes dominated the early standards sessions. Eich commented that "ECMAScript was always an unwanted trade name that sounds like a skin disease ." [ 10 ] ECMAScript has been formalized through operational semantics by work at Stanford University and the Department of Computing , Imperial College London for security analysis and standardization.

[ 11 ] "ECMA" stood for "European Computer Manufacturers Association" until 1994.

Evolution [ edit ] Main article: ECMAScript version history Ecma's Technical Committee 39 (TC39) is responsible for the maintenance of ECMAScript.

[ 12 ] New proposals to the language go through a staged process, with each stage representing the completeness of the proposal's specification. Consensus must be reached within the committee to advance a proposal to the next stage. Proposals that reach stage 4, the final stage, will be included into the next version of the standard.

[ 13 ] Since the release of version 6 in June 2015, new major versions have been finalized and published every June.

[ 14 ] Features [ edit ] This section needs expansion . You can help by adding to it .

( February 2017 ) Main articles: ECMAScript syntax and JavaScript § Features The ECMAScript language includes structured , dynamic , functional , and prototype-based features.

[ 15 ] Imperative and structured [ edit ] ECMAScript JavaScript supports C -style structured programming. Previously, JavaScript only supported function scoping using the keyword var , but ECMAScript 2015 added the keywords let and const , allowing JavaScript to support both block scoping and function scoping. JavaScript supports automatic semicolon insertion , meaning that semicolons that normally terminate a statement in C may be omitted in JavaScript.

[ 16 ] Like C-style languages, control flow is done with the while , for , do / while , if / else , and switch statements. Functions are weakly typed and may accept and return any type. Arguments not provided default to undefined .

Weakly typed [ edit ] ECMAScript is weakly typed . This means that certain types are assigned implicitly based on the operation being performed. However, there are several quirks in JavaScript's implementation of the conversion of a variable from one type to another.

Dynamic [ edit ] ECMAScript is dynamically typed. Thus, a type is associated with a value rather than an expression. ECMAScript supports various ways to test the type of objects, including duck typing .

[ 17 ] Transpiling [ edit ] Main article: JavaScript § transpilers Since ES 2015, transpiling JavaScript has become very common. Transpilation is a source-to-source compilation in which newer versions of JavaScript are used, and a transpiler rewrites the source code so that it is supported by older browsers. Usually, transpilers transpile down to ES3 to maintain compatibility with all versions of browsers. The settings to transpile to a specific version can be configured according to need. Transpiling adds an extra step to the build process and is sometimes done to avoid needing polyfills . Polyfills create new features for older environments that lack them. Polyfills do this at runtime in the interpreter, such as the user's browser or on the server. Instead, transpiling rewrites the ECMA code itself during the build phase of development before it reaches the interpreter.

Conformance [ edit ] In 2010, Ecma International started developing a standards test for Ecma 262 ECMAScript.

[ 18 ] Test262 is an ECMAScript conformance test suite that can be used to check how closely a JavaScript implementation follows the ECMAScript Specification. The test suite contains thousands of individual tests, each of which tests some specific requirement(s) of the ECMAScript specification. The development of Test262 is a project of the Ecma Technical Committee 39 (TC39). The testing framework and the individual tests are contributed to Ecma by member organizations of TC39.

Important contributions were made by Google ( Sputnik test suite ) and Microsoft, who both contributed thousands of tests.
The Test262 test suite consisted of 38 014 tests as of January 2020 [update] .

[ 19 ] ECMAScript specifications through ES7 are well-supported in major web browsers . The table below shows the conformance rate for current versions of software with respect to the most recent editions of ECMAScript.

Scripting engine conformance Scripting engine Reference application(s) Conformance [ 20 ] ES5 [ 21 ] ES6 (2015) [ 22 ] ES2016+ [ 23 ] Next [ 24 ] [ 25 ] SpiderMonkey Firefox 120 100% 98% 98% 5% V8 Google Chrome 117, Microsoft Edge 113, Opera 98 100% 98% 98% 5% JavaScriptCore Safari 17 99% 100% 98% 11% See also [ edit ] ECMAScript for XML (E4X) List of ECMAScript engines References [ edit ] ^ Stefanov, Stoyan (2010).

JavaScript Patterns . O'Reilly Media, Inc. p. 5.

ISBN 9781449396947 .

Archived from the original on 2016-06-10 . Retrieved 2016-01-12 .

The core JavaScript programming language [...] is based on the ECMAScript standard, or ES for short.

^ Wirfs-Brock, Allen; Eich, Brendan (2020-05-02).

"JavaScript: The First 20 Years" .

Proceedings of the ACM on Programming Languages .

4 (HOPL): 1– 189.

doi : 10.1145/3386327 .

S2CID 219603695 .

^ Wunder, C.

"Node.js — ECMAScript 2015 (ES6) and beyond" .

Node.js .

^ "Deno joins JavaScript standards effort" . 14 December 2021.

^ https://bun.sh/docs#:~:text=or%2C%20more%20formally%2C-,ECMAScript,-)%20is%20just%20a bun ^ Guo, Shu-yu (2022-02-14).

"ECMAScriptÂŽ 2022 Language Specification" .

tc39.es .

Archived from the original on 2020-05-08 . Retrieved 2022-02-14 .

^ Krill, Paul (2008-06-23).

"JavaScript creator ponders past, future" .

infoworld.com . InfoWorld.

Archived from the original on 2014-09-20 . Retrieved 2013-10-31 .

^ "Netscape and Sun announce JavaScript, the Open, Cross-platform Object Scripting Language for Enterprise Networks and the Internet" .

Netscape.com . Netscape. 1995-12-04. Archived from the original on 2002-06-06 . Retrieved 2019-11-04 .

^ Press Release (November 15, 1996).

"Industry Leaders to Advance Standardization of Netscape's JavaScript at Standards Body Meeting" .

Netscape.com . Netscape. Archived from the original on 1998-12-03 . Retrieved 2013-10-31 .

^ Eich, Brendan (2006-10-03).

"Will there be a suggested file suffix for es4?" .

mozilla.org . Mail.mozilla.org.

Archived from the original on 2020-06-21 . Retrieved 2021-05-05 .

^ Maffeis, Sergio; Mitchell, John C.; Taly, Ankur (2020-01-03).

"An Operational Semantics for JavaScript" (PDF) .

stanford.edu .

Association for Computing Machinery .

Archived (PDF) from the original on 2020-01-03 . Retrieved 2020-01-03 .

^ "TC39" , Technical Committees , Ecma International , retrieved 2024-08-11 ^ "The TC39 Process" , TC39 , Ecma International , retrieved 2024-08-11 ^ "ECMAScript, TC39, and the History of JavaScript" , ui.dev , retrieved 2024-08-11 ^ "About" . ECMAScript. Archived from the original on 2012-08-02 . Retrieved 2009-12-17 .

^ Flanagan, David (17 August 2006).

JavaScript: The Definitive Guide (5th ed.). O'Reilly. p. 16.

ISBN 978-0-596-10199-2 .

^ "JavaScript data types and data structures – JavaScript | MDN" .

Developer.mozilla.org . 2017-02-16.

Archived from the original on 2017-03-14 . Retrieved 2017-02-24 .

^ "ECMAScript Language – test262" . Test262.ecmascript.org. Archived from the original on 2011-05-14 . Retrieved 2013-10-31 .

^ "tc39/test262" .

GitHub . January 24, 2020.

Archived from the original on October 1, 2019 . Retrieved January 29, 2020 .

^ ES5 is the baseline for this test suite. The conformance rate for other editions reflects support for new features only, not a comprehensive score.

^ "ECMAScript 5 compatibility table" .

compat-table.github.io . 2024-04-14.

Archived from the original on 2024-01-14 . Retrieved 2024-04-14 .

^ "ECMAScript 6 compatibility table" .

compat-table.github.io . 2024-04-14.

Archived from the original on 2024-04-04 . Retrieved 2024-04-14 .

^ "ECMAScript 2016+ compatibility table" .

compat-table.github.io . 2024-04-14.

Archived from the original on 2024-01-14 . Retrieved 2024-04-14 .

^ "ECMAScript Next compatibility table" .

compat-table.github.io . 2024-04-14.

Archived from the original on 2024-01-14 . Retrieved 2024-04-14 .

^ Composite score that includes new features from ES7 through next edition drafts v t e ECMAScript Dialects ActionScript Haxe Caja JavaScript engines asm.js JScript JScript .NET QtScript TypeScript WMLScript Engines (list) Carakan Futhark InScript JavaScriptCore JScript KJS Linear B QtScript Rhino SpiderMonkey TraceMonkey JägerMonkey Tamarin V8 ChakraCore Chakra JScript .NET Nashorn Frameworks Client-side Dojo Echo Ext JS Google Web Toolkit jQuery Lively Kernel midori MochiKit MooTools Prototype Pyjs qooxdoo SproutCore Spry Wakanda Framework Server-side Node.js Deno Bun Jaxer AppJet WakandaDB Multiple Cappuccino Libraries Backbone.js SWFObject Underscore.js People Brendan Eich Douglas Crockford John Resig Scott Isaacs Other DHTML Ecma International JSDoc JSGI JSHint JSLint JSON JSSS Sputnik SunSpider Asynchronous module definition CommonJS Lists : JavaScript libraries • Ajax frameworks • Server-side JavaScript Comparison : JavaScript web frameworks v t e Standards of Ecma International Application interfaces ANSI escape code APIW Common Language Infrastructure Office Open XML OpenXPS File systems (tape) Advanced Intelligent Tape DDS DLT Super DLT Linear Tape-Open (Ultrium-1) VXA File systems (disk) CD-ROM CD File System (CDFS) FAT FAT12 FAT16 FAT16B FD UDF Ultra Density Optical Universal Media Disc Holographic Versatile Disc Graphics Universal 3D Programming languages C++/CLI C# Eiffel JavaScript ( E4X , ECMAScript ) Dart Minimal BASIC Full BASIC Radio link interfaces NFC UWB Other ECMA-35 JSON List of Ecma standards (1961 – present) v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category v t e IEC standards IEC 60027 60034 60038 60062 60063 60068 60112 60228 60269 60297 60309 60320 60364 60446 60559 60601 60870 60870-5 60870-6 60906-1 60908 60929 60958 60980-344 61030 61131 61131-3 61131-9 61158 61162 61334 61355 61360 61400 61499 61508 61511 61784 61850 61851 61883 61960 61968 61970 62014-4 62026 62056 62061 62196 62262 62264 62304 62325 62351 62365 62366 62379 62386 62455 62680 62682 62700 63110 63119 63382 ISO/IEC 646 1989 2022 4909 5218 6429 6523 7810 7811 7812 7813 7816 7942 8613 8632 8652 8859 9126 9293 9496 9529 9592 9593 9899 9945 9995 10021 10116 10165 10179 10279 10646 10967 11172 11179 11404 11544 11801 12207 13250 13346 13522-5 13568 13816 13818 14443 14496 14651 14882 15288 15291 15408 15444 15445 15504 15511 15693 15897 15938 16262 16485 17024 17025 18004 18014 18181 19752 19757 19770 19788 20000 20802 21000 21827 22275 22537 23000 23003 23008 23270 23360 24707 24727 24744 24752 26300 27000 27000 family 27002 27040 29110 29119 33001 38500 39075 42010 80000 81346 Related International Electrotechnical Commission NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐6nft2
Cached time: 20250817044545
Cache expiry: 1278871
Reduced expiry: true
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.562 seconds
Real time usage: 0.680 seconds
Preprocessor visited node count: 3892/1000000
Revision size: 17329/2097152 bytes
Post‐expand include size: 151384/2097152 bytes
Template argument size: 5564/2097152 bytes
Highest expansion depth: 23/100
Expensive parser function count: 16/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 117570/5000000 bytes
Lua time usage: 0.308/10.000 seconds
Lua memory usage: 9555312/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  509.436      1 -total
 38.30%  195.138      1 Template:Reflist
 16.20%   82.550      5 Template:Navbox
 15.58%   79.349     16 Template:Cite_web
 14.93%   76.039      2 Template:Cite_book
 14.36%   73.167      1 Template:ECMAScript
 10.96%   55.812      2 Template:Infobox
 10.23%   52.118      1 Template:Short_description
  7.80%   39.739      1 Template:Infobox_programming_language
  6.14%   31.259      2 Template:Pagetype Saved in parser cache with key enwiki:pcache:188515:|#|:idhash:canonical and timestamp 20250817044545 and revision id 1304358854. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=ECMAScript&oldid=1304358854 " Categories : Ecma standards Object-based programming languages Programming languages with an ISO standard Scripting languages Source-to-source compilers Hidden categories: Articles with short description Short description is different from Wikidata Articles to be expanded from February 2017 All articles to be expanded Articles containing potentially dated statements from January 2020 All articles containing potentially dated statements This page was last edited on 5 August 2025, at 15:14 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents ECMAScript 37 languages Add topic

