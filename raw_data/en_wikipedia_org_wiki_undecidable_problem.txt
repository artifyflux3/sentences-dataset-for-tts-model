Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Background 2 Example: the halting problem in computability theory 3 Relationship with Gödel's incompleteness theorem 4 Examples of undecidable problems 5 Examples of undecidable statements 6 See also 7 Notes 8 References Toggle the table of contents Undecidable problem 14 languages العربية Български Čeština Español فارسی Français Հայերեն हिन्दी Polski Português Русский Српски / srpski Українська 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Yes-or-no question that cannot ever be solved by a computer This article needs additional citations for verification .

Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed.

Find sources: "Undecidable problem" – news · newspapers · books · scholar · JSTOR ( July 2019 ) ( Learn how and when to remove this message ) In computability theory and computational complexity theory , an undecidable problem is a decision problem for which it is proved to be impossible to construct an algorithm that always leads to a correct yes-or-no answer. The halting problem is an example: it can be proven that there is no algorithm that correctly determines whether an arbitrary program eventually halts when run.

[ 1 ] Background [ edit ] A decision problem is a question which, for every input in some infinite set of inputs, requires a "yes" or "no" answer.

[ 2 ] Those inputs can be numbers (for example, the decision problem "is the input a prime number ?") or values of some other kind, such as strings of a formal language .

The formal representation of a decision problem is a subset of the natural numbers . For decision problems on natural numbers, the set consists of those numbers that the decision problem answers "yes" to. For example, the decision problem "is the input even?" is formalized as the set of even numbers. A decision problem whose input consists of strings or more complex values is formalized as the set of numbers that, via a specific Gödel numbering , correspond to inputs that satisfy the decision problem's criteria.

A decision problem A is called decidable or effectively solvable if the formalized set of A is a recursive set . Otherwise, A is called undecidable. A problem is called partially decidable, semi-decidable, solvable, or provable if A is a recursively enumerable set .

[ nb 1 ] Example: the halting problem in computability theory [ edit ] In computability theory , the halting problem is a decision problem which can be stated as follows: Given the description of an arbitrary program and a finite input, decide whether the program finishes running or will run forever.

Alan Turing proved in 1936 that a general algorithm running on a Turing machine that solves the halting problem for all possible program-input pairs necessarily cannot exist. Hence, the halting problem is undecidable for Turing machines.

Relationship with Gödel's incompleteness theorem [ edit ] This section needs additional citations for verification .

Please help improve this article by adding citations to reliable sources in this section. Unsourced material may be challenged and removed.

( August 2019 ) ( Learn how and when to remove this message ) The concepts raised by Gödel's incompleteness theorems are very similar to those raised by the halting problem, and the proofs are quite similar. In fact, a weaker form of the First Incompleteness Theorem is an easy consequence of the undecidability of the halting problem. This weaker form differs from the standard statement of the incompleteness theorem by asserting that an effective axiomatization of the natural numbers that is both complete and sound is impossible. The "sound" part is the weakening: it means that we require the axiomatic system in question to prove only true statements about natural numbers. Since soundness implies consistency , this weaker form can be seen as a corollary of the strong form. It is important to observe that the statement of the standard form of Gödel's First Incompleteness Theorem is completely unconcerned with the truth value of a statement, but only concerns the issue of whether it is possible to find it through a mathematical proof .

The weaker form of the theorem can be proved from the undecidability of the halting problem as follows.

[ 3 ] Assume that we have a sound (and hence consistent) and complete effective axiomatization of all true first-order logic statements about natural numbers . Then we can build an algorithm that enumerates all these statements. This means that there is an algorithm N ( n ) that, given a natural number n , computes a true first-order logic statement about natural numbers, and that for all true statements, there is at least one n such that N ( n ) yields that statement. Now suppose we want to decide if the algorithm with representation a halts on input i .  We know that this statement can be expressed with a first-order logic statement, say H ( a , i ).  Since the axiomatization is complete it follows that either there is an n such that N ( n ) = H ( a , i ) or there is an n ′ such that N ( n ′ ) = ¬ H ( a , i ).  So if we iterate over all n until we either find H ( a , i ) or its negation, we will always halt, and furthermore, the answer it gives us will be true (by soundness). This means that this gives us an algorithm to decide the halting problem. Since we know that there cannot be such an algorithm, it follows that the assumption that there is a sound and complete effective axiomatization of all true first-order logic statements about natural numbers must be false.

Examples of undecidable problems [ edit ] Main article: List of undecidable problems Undecidable problems can be related to different topics, such as logic , abstract machines or topology . Since there are uncountably many undecidable problems, [ nb 2 ] any list, even one of infinite length , is necessarily incomplete.

Examples of undecidable statements [ edit ] See also: List of statements independent of ZFC and Independence (mathematical logic) There are two distinct senses of the word "undecidable" in contemporary use. The first of these is the sense used in relation to Gödel's theorems, that of a statement being neither provable nor refutable in a specified deductive system . The second sense is used in relation to computability theory and applies not to statements but to decision problems , which are countably infinite sets of questions each requiring a yes or no answer. Such a problem is said to be undecidable if there is no computable function that correctly answers every question in the problem set.  The connection between these two is that if a decision problem is undecidable (in the recursion theoretical sense) then there is no consistent, effective formal system which proves for every question A in the problem either "the answer to A is yes" or "the answer to A is no".

Because of the two meanings of the word undecidable, the term independent is sometimes used instead of undecidable for the "neither provable nor refutable" sense. The usage of "independent" is also ambiguous, however. It can mean just "not provable", leaving open whether an independent statement might be refuted.

Undecidability of a statement in a particular deductive system does not, in and of itself, address the question of whether the truth value of the statement is well-defined, or whether it can be determined by other means. Undecidability only implies that the particular deductive system being considered does not prove the truth or falsity of the statement. Whether there exist so-called "absolutely undecidable" statements, whose truth value can never be known or is ill-specified, is a controversial point among various philosophical schools .

One of the first problems suspected to be undecidable, in the second sense of the term, was the word problem for groups , first posed by Max Dehn in 1911, which asks if there is a finitely presented group for which no algorithm exists to determine whether two words are equivalent.  This was shown to be the case in 1955.

[ 4 ] The combined work of Gödel and Paul Cohen has given two concrete examples of undecidable statements (in the first sense of the term): The continuum hypothesis can neither be proved nor refuted in ZFC (the standard axiomatization of set theory ), and the axiom of choice can neither be proved nor refuted in ZF (which is all the ZFC axioms except the axiom of choice).  These results do not require the incompleteness theorem.   Gödel proved in 1940 that neither of these statements could be disproved in ZF or ZFC set theory. In the 1960s, Cohen proved that neither is provable from ZF, and the continuum hypothesis cannot be proven from ZFC.

In 1970, Russian mathematician Yuri Matiyasevich showed that Hilbert's Tenth Problem , posed in 1900 as a challenge to the next century of mathematicians, cannot be solved.    Hilbert's challenge sought an algorithm which finds all solutions of a Diophantine equation .  A Diophantine equation is a more general case of Fermat's Last Theorem ; we seek the integer roots of a polynomial in any number of variables with integer coefficients.  Since we have only one equation but n variables, infinitely many solutions exist (and are easy to find) in the complex plane ; however, the problem becomes impossible if solutions are constrained to integer values only.  Matiyasevich showed this problem to be unsolvable by mapping a Diophantine equation to a recursively enumerable set and invoking Gödel's Incompleteness Theorem.

[ 5 ] In 1936, Alan Turing proved that the halting problem —the question of whether or not a Turing machine halts on a given program—is undecidable, in the second sense of the term. This result was later generalized by Rice's theorem .

In 1973, Saharon Shelah showed the Whitehead problem in group theory is undecidable, in the first sense of the term, in standard set theory.

[ 6 ] In 1977, Paris and Harrington proved that the Paris-Harrington principle , a version of the Ramsey theorem , is undecidable in the axiomatization of arithmetic given by the Peano axioms but can be proven to be true in the larger system of second-order arithmetic .

Kruskal's tree theorem , which has applications in computer science, is also undecidable from the Peano axioms but provable in set theory. In fact Kruskal's tree theorem (or its finite form) is undecidable in a much stronger system codifying the principles acceptable on basis of a philosophy of mathematics called predicativism.

Goodstein's theorem is a statement about the Ramsey theory of the natural numbers that Kirby and Paris showed is undecidable in Peano arithmetic.

Gregory Chaitin produced undecidable statements in algorithmic information theory and proved another incompleteness theorem in that setting. Chaitin's theorem states that for any theory that can represent enough arithmetic, there is an upper bound c such that no specific number can be proven in that theory to have Kolmogorov complexity greater than c . While Gödel's theorem is related to the liar paradox , Chaitin's result is related to Berry's paradox .

In 2007, researchers Kurtz and Simon, building on earlier work by J.H. Conway in the 1970s, proved that a natural generalization of the Collatz problem is undecidable.

[ 7 ] In 2019, Ben-David and colleagues constructed an example of a learning model (named EMX), and showed a family of functions whose learnability in EMX is undecidable in standard set theory.

[ 8 ] [ 9 ] See also [ edit ] Decidability (logic) Entscheidungsproblem Proof of impossibility Unknowability Wicked problem Notes [ edit ] ^ This means that there exists an algorithm that halts eventually when the answer is yes but may run forever if the answer is no .

^ There are uncountably many subsets of { 0 , 1 } ∗ ∗ {\displaystyle \{0,1\}^{*}} , only countably many of which can be decided by algorithms. However, also only countably many decision problems can be stated in any language.

References [ edit ] ^ "Formal Computational Models and Computability" .

www.cs.rochester.edu . Retrieved 2022-06-12 .

^ "decision problem" .

Oxford Reference . Retrieved 2022-06-12 .

^ Aaronson, Scott (21 July 2011).

"Rosser's Theorem via Turing machines" .

Shtetl-Optimized . Retrieved 2 November 2022 .

^ Novikov, Pyotr S.

(1955), "On the algorithmic unsolvability of the word problem in group theory", Proceedings of the Steklov Institute of Mathematics (in Russian), 44 : 1– 143, Zbl 0068.01301 ^ Matiyasevich, Yuri (1970).

Диофантовость перечислимых множеств [Enumerable sets are Diophantine].

Doklady Akademii Nauk SSSR (in Russian).

191 : 279– 282.

^ Shelah, Saharon (1974). "Infinite Abelian groups, Whitehead problem and some constructions".

Israel Journal of Mathematics .

18 (3): 243– 256.

doi : 10.1007/BF02757281 .

MR 0357114 .

S2CID 123351674 .

^ Kurtz, Stuart A.; Simon, Janos, "The Undecidability of the Generalized Collatz Problem" , in Proceedings of the 4th International Conference on Theory and Applications of Models of Computation, TAMC 2007, held in Shanghai, China in May 2007.

ISBN 3-540-72503-2 .

doi : 10.1007/978-3-540-72504-6_49 ^ Ben-David, Shai; Hrubeš, Pavel; Moran, Shay; Shpilka, Amir; Yehudayoff, Amir (2019-01-07).

"Learnability can be undecidable" .

Nature Machine Intelligence .

1 (1): 44– 48.

doi : 10.1038/s42256-018-0002-3 .

ISSN 2522-5839 .

S2CID 257109887 .

^ Reyzin, Lev (2019).

"Unprovability comes to machine learning" .

Nature .

565 (7738): 166– 167.

Bibcode : 2019Natur.565..166R .

doi : 10.1038/d41586-019-00012-4 .

ISSN 0028-0836 .

PMID 30617250 .

v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐s857t
Cached time: 20250812015818
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.391 seconds
Real time usage: 0.531 seconds
Preprocessor visited node count: 1611/1000000
Revision size: 14575/2097152 bytes
Post‐expand include size: 96782/2097152 bytes
Template argument size: 1386/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 7/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 49513/5000000 bytes
Lua time usage: 0.239/10.000 seconds
Lua memory usage: 6227878/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  405.486      1 -total
 36.68%  148.726      2 Template:Reflist
 27.61%  111.944      4 Template:Navbox
 24.96%  101.217      1 Template:Mathematical_logic
 20.96%   84.978      3 Template:Cite_web
 15.06%   61.055      1 Template:Short_description
 14.79%   59.971      2 Template:More_citations_needed
 13.59%   55.096      2 Template:Ambox
  8.92%   36.184      2 Template:Pagetype
  6.51%   26.416      4 Template:Cite_journal Saved in parser cache with key enwiki:pcache:15631055:|#|:idhash:canonical and timestamp 20250812015818 and revision id 1296417778. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Undecidable_problem&oldid=1296417778 " Categories : Computability theory Logic in computer science Undecidable problems Hidden categories: CS1 Russian-language sources (ru) CS1 uses Russian-language script (ru) Articles with short description Short description is different from Wikidata Articles needing additional references from July 2019 All articles needing additional references Articles needing additional references from August 2019 This page was last edited on 19 June 2025, at 22:07 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Undecidable problem 14 languages Add topic

