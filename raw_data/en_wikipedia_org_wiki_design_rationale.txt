Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview 2 History 3 Key concepts in design rationale Toggle Key concepts in design rationale subsection 3.1 Rationale capture 3.2 Rationale representation 3.3 Argumentation-based models 4 Applications 5 See also 6 References 7 Further reading 8 External links Toggle the table of contents Design rationale 1 language فارسی Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Explicit listing of design decisions A decision based design structure, which spans the areas of engineering design , design rationale and decision analysis Information mapping Topics and fields Business decision mapping Data visualization Graphic communication Infographics Information design Knowledge visualization Mental model Morphological analysis Ontology (information science) Schema (psychology) Visual analytics Visual language Node–link approaches Argument map Cladistics Cognitive map Concept lattice Concept map Conceptual graph Decision tree Dendrogram Graph drawing Hyperbolic tree Hypertext Issue map Issue tree Layered graph drawing Mind map Object-role modeling Organizational chart Pathfinder network Radial tree Semantic network Sociogram Timeline Topic map Tree structure ZigZag See also Design rationale Diagrammatic reasoning Entity–relationship model Geovisualization List of concept- and mind-mapping software Olog Ontology (philosophy) Problem structuring methods Semantic Web Treemapping Wicked problem v t e A design rationale is an explicit documentation of the reasons behind decisions made when designing a system or artifact . As initially developed by W.R. Kunz and Horst Rittel , design rationale seeks to provide argumentation -based structure to the political, collaborative process of addressing wicked problems .

[ 1 ] Overview [ edit ] A design rationale is the explicit listing of decisions made during a design process , and the reasons why those decisions were made.

[ 2 ] Its primary goal is to support designers by providing a means to record and communicate the argumentation and reasoning behind the design process.

[ 3 ] It should therefore include: [ 4 ] the reasons behind a design decision, the justification for it, the other alternatives considered, the trade offs evaluated, and the argumentation that led to the decision.

Several science areas are involved in the study of design rationales, such as computer science [ 2 ] cognitive science , [ 3 ] artificial intelligence , [ 5 ] and knowledge management .

[ 6 ] For supporting design rationale, various frameworks have been proposed, such as QOC, DRCS, IBIS , and DRL.

History [ edit ] While argumentation formats can be traced back to Stephen Toulmin 's work in the 1950s [ 7 ] datums, claims, warrants, backings and rebuttals, the origin of design rationale can be traced back to W.R. Kunz and Horst Rittel 's [ 1 ] development of the Issue-Based Information System (IBIS) notation in 1970. Several variants on IBIS have since been proposed.

The first was Procedural Hierarchy of Issues (PHI), first described in Ray McCall's PhD Dissertation [ 8 ] although not named at the time.

IBIS was also modified, in this case to support Software Engineering, by Potts & Bruns.

[ 9 ] The Potts & Bruns approach was then extended by the Decision Representation Language (DRL).

[ 10 ] which itself was extended by RATSpeak.

[ 5 ] Questions Options and Criteria (QOC), also known as Design Space Analysis [ 11 ] [ 12 ] is an alternative representation for argumentation-based rationale, as are Win-Win [ 13 ] and the Decision Recommendation and Intent Model (DRIM).

[ 14 ] The first Rationale Management System (RMS) was PROTOCOL, which supported PHI, which was followed by other PHI-based systems MIKROPOLIS and PHIDIAS. The first system providing IBIS support was Hans Dehlinger 's STIEC.

[ 15 ] Rittel developed a small system in 1983 (also not published) and the better known gIBIS (graphical IBIS) was developed in 1987.

[ 16 ] Not all successful DR approaches involve structured argumentation. For example, Carroll and Rosson's Scenario-Claims Analysis approach [ 17 ] captures rationale in scenarios that describe how the system is used and how well the system features support the user goals. Carroll and Rosson's approach to design rationale is intended to help designers of computer software and hardware identify underlying design tradeoffs and make inferences about the impact of potential design interventions.

[ 18 ] Key concepts in design rationale [ edit ] There are a number of ways to characterize DR approaches. Some key distinguishing features are how it is captured, how it is represented, and how it can be used.

Rationale capture [ edit ] Rationale capture is the process of acquiring rationale information to a rationale management Capture methods A method called "Reconstruction" [ 4 ] captures rationales in a raw form such as video, and then reconstruct them into a more structured form.

[ 19 ] The advantage of Reconstruction method is that rationales can be carefully captured and capturing process won't disrupt the designer. But this method might result in high cost and biases of the person producing the rationales The "Record-and-replay" [ 4 ] method simply captures rationales as they unfold. Rationales are synchronously captured in a video conference or asynchronously captured via bulletin board or email-based discussion. If the system has informal and semi-formal representation, the method will be helpful.

The "Methodological byproduct" [ 4 ] method captures rationales during the process of design following a schema. But it's hard to design such a schema. The advantage of this method is its low cost.

With a rich knowledge base (KB) created in advance, the "Apprentice" [ 4 ] method captures rationales by asking questions when confusing or disagreeing with the designer's action. This method benefits not only the user but the system.

In "Automatic Generation" [ 4 ] method, design rationales are automatically generated from an execution history at low cost. It has the ability in maintaining consistent and up-to-date rationales. But the cost of compiling the execution history is high due to the complexity and difficulty of some machine-learning problems.

The "Historian" [ 20 ] method let a person or computer program watches all designer's actions but does not make suggestions. Rationales are captured during the design process.

[ 19 ] Rationale representation [ edit ] The choice of design rationale representation is very important to make sure that the rationales we capture is what we desire and we can use efficiently. According to the degree of formality, the approaches that are used to represent design rationale can be divided into three main categories: informal, semiformal, or formal.

[ 4 ] In the informal representation, rationales can be recorded and captured by just using our traditionally accepted methods and media, such as word processors, audio and video records or even hand writings. However, these descriptions make it hard for automatic interpretation or other computer-based supports. In the formal representation, the rationale must be collected under a strict format so that the rationale can be interpreted and understood by computers. However, due to the strict format of rationale defined by formal representations, the contents can hardly be understood by human being and the process of capturing design rationale will require more efforts to finish, and therefore becomes more intrusive.

Semiformal representations try to combine the advantages of informal and formal representations. On one hand, the information captured should be able to be processed by computers so that more computer based support can be provided. On the other hand, the procedure and method used to capture information of design rationale should not be very intrusive. In the system with a semiformal representation, the information expected is suggested and the users can capture rationale by following the instructions to either fill out the attributes according to some templates or just type into natural language descriptions.

[ 4 ] Argumentation-based models [ edit ] The Toulmin model One commonly accepted way for semiformal design rationale representation is structuring design rationale as argumentation.

[ 5 ] The earliest argumentation-based model used by many design rationale systems is the Toulmin model.

[ 7 ] The Toulmin model defines the rules of design rationale argumentation with six steps: [ 21 ] Claim is made; Supporting data are provided; Warrant provides evidence to the existing relations; Warrant can be supported by a backing; Model qualifiers (some, many, most, etc.) are provided; Possible rebuttals are also considered.

One advantage of Toulmin model is that it uses words and concepts which can be easily understood by most people.

Issue-Based Information System (IBIS) Another important approach to argumentation of design rationale is Rittel and Kunz's IBIS ( Issue-Based Information System ), [ 1 ] which is actually not a software system but an argumentative notation. It has been implemented in software form by gIBIS (graphical IBIS), itIBIS (test-based IBIS), Compendium , and other software.

[ 22 ] [ 23 ] IBIS uses some rationale elements (denoted as nodes) such as issues, positions, arguments, resolutions and several relationships such as more general than, logical successor to, temporal successor to, replaces and similar to, to link the issue discussions.

Procedural Hierarchy of Issues (PHI) PHI (Procedural Hierarchy of Issues) [ 24 ] extended IBIS to noncontroversial issues and redefined the relationships. PHI adds the subissue relationship which means one issue's resolution depends on the resolution of another issue.

Questions, Options, and Criteria (QOC) QOC (Questions, Options, and Criteria) [ 25 ] is used for design space analysis. Similar to IBIS, QOC identifies the key design problems as questions and possible answers to questions as options. In addition, QOC uses criteria to explicitly describe the methods to evaluate the options, such as the requirements to be satisfied or the properties desired. The options are linked with criteria positively or negatively and these links are defined as assessments.

Decision Representation Language (DRL) DRL (Decision Representation Language) [ 26 ] extends the Potts and Bruns model of DR [ 9 ] and defines the primary elements as decision problems, alternatives, goals, claims and groups. Lee (1991) has argued that DRL is more expressive than other languages.

[ 26 ] DRL focuses more on the representation of decision making and its rationale instead of on design rationale.

RATSpeak Based on DRL, RATSpeak is developed and used as the representation language in SEURAT (Software Engineering Using RATionale).

[ 27 ] RATSpeak takes into account requirements (functional and non-functional) as part of the arguments for alternatives to the decision problems. SEURAT also includes an Argument Ontology which is a hierarchy of argument types and includes the types of claims used in the system.

WinWin Spiral Model The WinWin Spiral Model, which is used in the WinWin approach, [ 28 ] adds the WinWin negotiation activities, including identifying key stakeholders of the systems, and identifying the win conditions of each stakeholder and negotiation, into the front of each cycle of the spiral software development model [ 29 ] in order to achieve a mutually satisfactory (winwin) agreement for all stakeholders of the project.

In the WinWin Spiral Model, the goals of each stakeholder are defined as Win conditions. Once there is a conflict between win conditions, it is captured as an Issue. Then the stakeholders invent Options and explore trade-offs to resolve the issue. When the issue is solved, an Agreement which satisfies the win conditions of stakeholders and captures the agreed option is achieved. Design rationale behind the decisions is captured during the process of the WinWin model and will be used by stakeholders and the designers to improve their later decision making.

[ 28 ] The WinWin Spiral model reduces the overheads of the capture of design rationale by providing stakeholders a well-defined process to negotiate. In [ 30 ] an ontology of decision rationale is defined and their model utilizes the ontology to address the problem of supporting decision maintenance in the WinWin collaboration framework.

Design Recommendation and Intent Model (DRIM) DRIM (Design Recommendation and Intent Model) is used in SHARED-DRIM.

[ 14 ] The main structure of DRIM is a proposal which consists of the intents of each designer, the recommendations that satisfy the intents and the justifications of the recommendations. Negotiations are also needed when conflicts exist between the intents of different designers. The recommendation accepted becomes a design decision, and the rationale of the unaccepted but proposed recommendations are also recorded during this process, which can be useful during the iterative design and/or system maintenance.

Applications [ edit ] Design rationale has the potential to be used in many different ways. One set of uses, defined by Burge and Brown (1998), [ 19 ] are: Design verification — The design rationale can be used to verify if the design decisions and the product itself are the reflection of what the designers and the users actually wanted.

Design evaluation — The design rationale is used to evaluate the various design alternatives discussed during the design process.

Design maintenance — The design rationale helps to determine the changes that are necessary to modify the design.

Design reuse — The design rationale is used to determine how the existing design could be reused for a new requirement with or without any changes in it. If there is a need to modify the design, then the DR also suggests what needs to be modified in the design.

Design teaching — The design rationale could be used as a resource to teach people who are unfamiliar with the design and the system.

Design communication — The design rationale facilitates better communication among people who are involved in the design process and thus helps to come up with a better design.

Design assistance — The design rationale could be used to verify the design decisions made during the design process.

Design documentation — The design rationale is used to document the entire design process which involves the meeting room deliberations, alternatives discussed, reasons behind the design decisions and the product overview.

DR is used by research communities in software engineering, mechanical design, artificial intelligence, civil engineering, and human-computer interaction research. In software engineering, it could be used to support the designers ideas during requirement analysis, capturing and documenting design meetings and predicting possible issues due to new design approach.

[ 31 ] In software architecture and outsourcing solution design, it can justify the outcome of architectural decisions and serve as a design guide.

[ 32 ] In civil engineering, it helps to coordinate the variety of work that the designers do at the same time in different areas of a construction project. It also help the designers to understand and respect each other's ideas and resolve any possible issues.

[ 33 ] The DR can also be used by the project managers to maintain their project plan and the project status up to date. Also, the project team members who missed a design meeting can refer back the DR to learn what was discussed on a particular topic. The unresolved issues captured in DR could be used to organize further meetings on those topics.

[ 31 ] Design rationale helps the designers to avoid the same mistakes made in the previous design. This can also be helpful to avoid duplication of work.

[ 5 ] In some cases DR could save time and money when a software system is upgraded from its previous versions.

[ 2 ] There are several books and articles that provide excellent surveys of rationale approaches applied to HCI, [ 34 ] Engineering Design [ 4 ] and Software Engineering.

[ 35 ] See also [ edit ] Goal structuring notation IDEF6 Method engineering Problem structuring methods Theory of justification References [ edit ] ^ a b c Kunz, W.; Rittel, H. (1970), Issues as elements of information systems . Working Paper 131, Center for Urban and Regional Development, University of California Berkeley ^ a b c Jarczyk, Alex P.; Löffler, Peter; Shipman III, Frank M. (1992), "Design Rationale for Software Engineering: A Survey", 25th Hawaii International Conference on System Sciences , 2, pp. 577-586 ^ a b Horner, J.; Atwood, M.E. (2006), "Effective Design Rationale: Understanding the Barriers", in Dutoit, A.H.; McCall, R.; Mistrík, I. et al., Rationale Management in Software Engineering, Springer Berlin Heidelberg, pp. 73-90 ^ a b c d e f g h i Lee, J. (1997). "Design Rationale Systems: Understanding the Issues".

IEEE Expert 12 (3): 78–85 ^ a b c d Burge, J.E.; Brown, D.C. (2000), "Reasoning with Design Rationale", in Gero, J., Artificial Intelligence in Design '00 , Netherlands: Kluwer Academic Publ., pp. 611–629 ^ Xin, W.; Guangleng, X. (2001), "Design Rationale as Part of Corporate Technical Memory", Systems, Man and Cybernetics , pp. 1904 - 1908.

^ a b Stephen Toulmin (1958).

The Uses of Argument . Cambridge: Cambridge University Press.

^ McCall, R. (1978), On the structure and use of issue systems in design , Doctoral Dissertation, University of California, Berkeley, University Microfilms ^ a b Potts, C.; Burns, G. (1988), "Recording the reasons for design decisions", 10th International Conference on Software Engineering (ICSE '1988), pp. 418-427 ^ Lee, J. (1991), "Extending the Potts and Bruns model for recording design rationale", Proceedings of the 13th International Conference on Software Engineering (ICSE '13) , IEEE Computer Society Press, Los Alamitos, CA, pp. 114-125 ^ Maclean, A.; Young, RM.; Moran, T. (1989), "Design rationale: the argument behind the artifact", SIGCHI Bull . 20, pp. 247-252114-125 ^ Maclean, A.; Young, RM.; Bellotti, VME.; Moran, T. (1996), "Questions, Options, and Criteria: Elements of Design Space Analysis", in Moran, T.; Carroll, J., Design Rationale Concepts, Techniques, and Use, Lawrence Erlbaum Associates , pp. 53-106 ^ Barry Boehm , Ross, R (1989). "Theory-W software project management: principles and examples.".

IEEE Transactions on Software Engineering 18 (7): 902-916.

^ a b Pena-Mora, F.; Sriram, D.; Logcher, R. (1993), "SHARED-DRIMS: SHARED Design Recommendation-Intent Management System", Proceedings Enabling Technologies Infrastructure for Collaborative Enterprise , IEEE Press, Morgantown, WV, pp. 213-221 ^ Dehlinger, H. (1978), Project STIEC: Systems Analysis of the Generation and Dissemination of Scientific and Technological Information in the European Community" Report No. 26: Report on a Batch - Version of STIEC , Heidelberg/Stuttgart ^ Conklin, J.; YakemBegemanovic, M. (1988). "gIBIS: A hypertext tool for exploratory policy discussion".

ACM Transactions on Office Information Systems 6 (4): 303-331.

^ Carroll, JM; Rosson, M (1992). "Getting around the task-artifact cycle: how to make claims and design by scenario".

ACM Trans. Inf. Syst . 10 (2): 181-212 ^ Carroll, J. M., & Rosson, M. B. (2003). Design rationale as theory. HCI models, theories, and frameworks: toward a multidisciplinary science, 431-461.

^ a b c Burge, J.; Brown, D.C. (1998), Design Rationale: Types and Tools, Technical Report , Worcester Polytechnic Institute, Computer Science Dept.

, retrieved on 27 April 2007 ^ Chen, A.; McGinnis, B.; Ullman, D.; Dietterich, T. (1990), "Design History Knowledge Representation and Its Basic Computer Implementation", The 2nd International Conference on Design Theory and Methodology, Chicago, IL, pp. 175-185 ^ Reynolds, Chris (2000), What is the Toulmin Model?

Archived 2007-08-25 at the Wayback Machine Paper at concentric.net.

^ Conklin, J.; Yakemovic, K. (1991). "A Process-Oriented Approach to Design Rationale".

Human-Computer Interaction 6 (3 & 4): 357–391.

^ Rittel, Horst W. J.

; Noble, Douglas (January 1989).

Issue-based information systems for design (PDF) (Technical report). Berkeley, CA: Institute of Urban and Regional Development, University of California .

OCLC 20155825 . 492.

^ McCall, R.J. (1991). "PHI: A Conceptual Foundation for Design Hypermedia".

Design Studies 12 (1): 30–41.

^ Maclean, A.; Young, RM.; Bellotti, VME.; Moran, T. (1996), "Questions, Options, and Criteria: Elements of Design Space Analysis", in Moran, T.; Carroll, J., Design Rationale Concepts, Techniques, and Use , Lawrence Erlbaum Associates, pp. 53-106 ^ a b Lee, J. (1991), "Extending the Potts and Bruns model for recording design rationale", Proceedings of the 13th International Conference on Software Engineering (ICSE '13), IEEE Computer Society Press, Los Alamitos, CA, pp. 114-125 ^ Burge, J. (2005), Software Engineering Using design RATionale , Worcester Polytechnic Institute, Computer Science Dept ^ a b Barry Boehm ; Kitapci, H. (2006), "The WinWin Approach: Using a Requirement Negotiation Tool for Rationale Capture and Use", in Dutoit, A.H.; McCall, R.; Mistrík, I. et al., Rationale Management in Software Engineering , Springer Berlin Heidelberg, pp. 173-190 ^ Barry Boehm (1998).

"A spiral model of software development and enhancement" .

Computer 21 (5): 61–72 ^ Bose, P. (1995). "A Model for Decision Maintenance in the WinWin Collaboration Framework".

Knowledge Based Software Engineering (KBSE '95).

^ a b Dutoit, A.; McCall, B.; Mistrik et al., eds. (2006), Rationale Management in Software Engineering , Springer pp.1-48.

^ O. Zimmermann, C. Miksovic, J. Küster, Reference Architecture, Metamodel and Modeling Principles for Architectural Knowledge Management in Information Technology Services . Journal of Systems and Software, Elsevier. Vol. 85, Issue 9, Sept. 2012 ^ Whelton, Michael; Ballard, Glenn; Tommelein, Iris (2007) Application Of Design Rationale Systems To Project Definition – Establishing A Research Project .

Archived 2007-09-28 at the Wayback Machine Retrieved on 27 April 2007 ^ Moran, T.; Carroll, J., eds. (1996), Design Rationale Concepts, Techniques, and Use , Lawrence Erlbaum Associates, ^ Dutoit, Rationale Management in Software Engineering Further reading [ edit ] Books Burge, JE; Carroll, JM; McCall R; Mistrík I (2008).

Rationale-Based Software Engineering . Heidelberg: Springer-Verlag.

Dutoit, AH; McCall R; Mistrík I; Paech B (2006).

Rationale Management in Software Engineering . Heidelberg: Springer-Verlag.

Conklin, J (2005).

Dialogue Mapping . Weinheim: Wiley-VCH Verlag.

Kirschner, PA; Buckingham-Shum SJ; Carr CS (2003).

Visualizing Argumentation: Software Tools for Collaborative and Educational Sense-Making . London: Springer-Verlag.

Moran, T; Carroll J (1996).

Design Rationale Concepts, Techniques, and Use . NJ: Lawrence Erlbaum Associates.

Special Issues Artificial Intelligence for Engineering Design, Analysis and Manufacturing (AIEDAM), Special Issue: Fall 2008, Vol.22 No.4 Design Rationale http://web.cs.wpi.edu/~aiedam/SpecialIssues/Burge-Bracewell.html Artificial Intelligence for Engineering Design, Analysis and Manufacturing (AIEDAM), Special Issue on Representing and Using Design Rationale, 1997, Vol.11 No.2, Cambridge University Press Workshops Second Workshop on SHAring and Reusing architectural Knowledge - Architecture, rationale, and Design Intent (SHARK/ADI 2007), ( RC.rug.nl ) as part of the 29th Int. Conf. on Software Engineering (ICSE 2007) ( CS.ucl.ac.uk ) Workshop on Design Rationale: Problems and Progress ( Muohio.edu ) Workshop Chairs: Janet Burge and Rob Bracewell, Held 9 July 2006 in conjunction with Design, Computing, and Cognition '06. Eindhoven, ( wwwfaculty.arch.usyd.edu.au ) Netherlands External links [ edit ] Bcisive.austhink.com : A commercial software package designed for design rationale and decision rationale more broadly. Graphical interface, sharing capabilities.

Compendium : A hypermedia tool that provides visual knowledge management capabilities based around IBIS. Free Java application, binary and source, with an active user community who meet annually.

designVUE : A tool for visual knowledge capture based on IBIS and other methods. Free Java application.

SEURAT : An Eclipse plug-in that integrates rationale capture and use with a software development environment. SEURAT is available as an open source project in GitHub ( [1] ).

v t e Design Outline Designer Disciplines Communication design Advertising Book design Brand design Exhibit design Film title design Graphic design Motion Postage stamp design Print design Illustration Information design Instructional design News design Photography Retail design Signage / Traffic sign design Typography / Type design Video design Visual merchandising Environmental design Architecture Architectural lighting design Building design Passive solar Ecological design Environmental impact design Garden design Computer-aided Healthy community design Hotel design Interior architecture Interior design EID Keyline design Landscape architecture Sustainable Landscape design Spatial design Urban design Industrial design Automotive design Automotive suspension design CMF design Corrugated box design Electric guitar design Furniture design Sustainable Hardware interface design Motorcycle design Packaging and labeling Photographic lens design Product design Production design Sensory design Service design Interaction design Experience design EED Game design Level design Video game design Hardware interface design Icon design Immersive design Information design Interactive design Sonic interaction design User experience design User interface design Web design Other applied arts Public art design Ceramic / glass design Fashion design Costume design Jewellery design Floral design Game art design Property design Scenic design Sound design Stage/set lighting design Textile design Other design & engineering Algorithm design Behavioural design Boiler design Database design Drug design Electrical system design Experimental design Filter design Geometric design Work design Integrated circuit design Circuit design Physical design Power network design Mechanism design Nuclear weapon design Nucleic acid design Organization design Process design Processor design Protein design Research design Social design Software design Spacecraft design Strategic design Systems design Test design Approaches Active Activity-centered Adaptive web Affective Brainstorming By committee By contract C-K theory Closure Configuration Contextual Continuous Cradle-to-cradle Creative problem-solving Creativity techniques Critical Design fiction Defensive Design–bid–build Design–build architect-led Diffuse Domain-driven Ecological design Energy neutral Engineering design process Probabilistic design Ergonomic Error-tolerant Evidence-based Fault-tolerant Feminist For assembly For behaviour change For manufacturability For Six Sigma For testing For the environment For X Framework-oriented Functional Generative Geodesign HCD High-level Hostile Inclusive Integrated Integrated topside Intelligence-based Iterative KISS principle Low-level Metadesign Mind mapping Modular New Wave Object-oriented Open Over Parametric Participatory Platform-based Policy-based Prevention through Process-centered Public interest Opinion poll Public opinion Rational Regenerative Reliability engineering Research-based Responsibility-driven RWD Safe-life Speculative Sustainable Systemic SOD Tableless web Theory of constraints Top-down and bottom-up Transformation Transgenerational TRIZ Universal Design for All Usage-centered Use-centered User-centered Empathic User innovation Value-driven Value sensitive Privacy by Quality by Secure by Design choice computing controls culture flow justice leadership management marker methods pattern research science sprint strategy theory thinking Tools Intellectual property Organizations Awards Tools AAD Architectural model Blueprint Comprehensive layout CAD CAID Virtual home design software CAutoD Design quality indicator Electronic design automation Flowchart Mockup Design specification Design system Prototype Sketch Storyboard Technical drawing HTML editor Website wireframe Intellectual property Clean-room design Community design Design around Design infringement Design patent Fashion design copyright Geschmacksmuster Industrial design rights European Union Organizations American Institute of Graphic Arts Chartered Society of Designers Design and Industries Association Design Council International Forum Design Design Research Society Awards European Design Award German Design Award Good Design Award (Museum of Modern Art) Good Design Award (Chicago Athenaeum) Graphex IF Product Design Award James Dyson Award Prince Philip Designers Prize Related topics Agile Concept art Conceptual design Creative industries Cultural icon .design Dominant design Enterprise architecture Form factor Futures studies Indie design Innovation management Intelligent design Lean startup New product development OODA loop Philosophy of design Process simulation Reference design Slow design STEAM fields Unintelligent design Visualization Wicked problem Design attributes brief change classic competition architectural student director education elements engineer firm history knowledge language life load museum optimization paradigm principles rationale review specification studies studio technology v t e Knowledge management General topics Intellectual capital Knowledge economy Knowledge intensive services Knowledge intensive business services Knowledge organization (management) Knowledge-intensive company Knowledge sharing Electronic systems Knowledge management software Business intelligence Enterprise content management Wiki software Related Knowledge Tacit knowledge Collective intelligence Personal knowledge management Design rationale People Knowledge worker Chief knowledge officer Virtual team Communities of innovation Community of practice Community of interest Journals Journal of Knowledge Management Knowledge Management Research & Practice Retrieved from " https://en.wikipedia.org/w/index.php?title=Design_rationale&oldid=1265753240 " Categories : Argument mapping Design Justification (epistemology) Software design Hidden categories: Webarchive template wayback links Articles with short description Short description is different from Wikidata This page was last edited on 28 December 2024, at 13:49 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Design rationale 1 language Add topic

