Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 History 2 Concept Toggle Concept subsection 2.1 Origins and traditional scope 2.2 Evolution to a broader scope 2.3 Holistic view 2.4 Interdisciplinary field 2.5 Managing complexity 2.6 Scope 3 Education 4 Systems engineering topics Toggle Systems engineering topics subsection 4.1 System 4.2 Systems engineering processes 4.3 Using models 4.4 Modeling formalisms and graphical representations 4.5 Other tools 4.5.1 Systems Modeling Language 4.5.2 Lifecycle Modeling Language 5 Related fields and sub-fields Toggle Related fields and sub-fields subsection 5.1 Cognitive systems engineering 5.2 Configuration management 5.3 Control engineering 5.4 Industrial engineering 5.5 Production Systems Engineering 5.6 Interface design 5.7 Mechatronic engineering 5.8 Operations research 5.9 Performance engineering 5.10 Program management and project management 5.11 Proposal engineering 5.12 Reliability engineering 5.13 Risk management 5.14 Safety engineering 5.15 Security engineering 5.16 Software engineering 6 See also 7 References 8 Further reading 9 External links Toggle the table of contents Systems engineering 39 languages Afrikaans العربية تۆرکجه Беларуская Български Català Čeština Dansk Deutsch Español فارسی Français 한국어 हिन्दी Ido Bahasa Indonesia Italiano עברית Magyar Nederlands 日本語 Norsk bokmål Norsk nynorsk Polski Português Русский Shqip Simple English Slovenčina Српски / srpski Srpskohrvatski / српскохрватски தமிழ் Тоҷикӣ Türkçe Українська Tiếng Việt Winaray 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikiquote Wikiversity Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Interdisciplinary field of engineering For other uses, see Systems engineering (disambiguation) .

Systems engineering techniques are used in complex projects: printed-circuit-board design, robotics, bridge building, software integration, and spacecraft design. Systems engineering uses a host of tools that include modeling and simulation , requirements analysis , and scheduling to manage complexity.

Systems engineering is an interdisciplinary field of engineering and engineering management that focuses on how to design, integrate, and manage complex systems over their life cycles . At its core, systems engineering utilizes systems thinking principles to organize this body of knowledge . The individual outcome of such efforts, an engineered system , can be defined as a combination of components that work in synergy to collectively perform a useful function .

Issues such as requirements engineering , reliability , logistics , coordination of different teams, testing and evaluation, maintainability, and many other disciplines , aka "ilities" , necessary for successful system design , development, implementation , and ultimate decommission become more difficult when dealing with large or complex projects . Systems engineering deals with work processes, optimization methods, and risk management tools in such projects. It overlaps technical and human-centered disciplines such as industrial engineering , production systems engineering , process systems engineering , mechanical engineering , manufacturing engineering , production engineering , control engineering , software engineering , electrical engineering , cybernetics , aerospace engineering , organizational studies , civil engineering and project management . Systems engineering ensures that all likely aspects of a project or system are considered and integrated into a whole.

The systems engineering process is a discovery process that is quite unlike a manufacturing process. A manufacturing process is focused on repetitive activities that achieve high-quality outputs with minimum cost and time. The systems engineering process must begin by discovering the real problems that need to be resolved and identifying the most probable or highest-impact failures that can occur. Systems engineering involves finding solutions to these problems.

History [ edit ] Quality function deployment (QFD) for enterprise product development processes The term systems engineering can be traced back to Bell Telephone Laboratories in the 1940s.

[ 1 ] The need to identify and manipulate the properties of a system as a whole, which in complex engineering projects may greatly differ from the sum of the parts' properties, motivated various industries, especially those developing systems for the U.S. military, to apply the discipline.

[ 2 ] [ 3 ] When it was no longer possible to rely on design evolution to improve upon a system and the existing tools were not sufficient to meet growing demands, new methods began to be developed that addressed the complexity directly.

[ 4 ] The continuing evolution of systems engineering comprises the development and identification of new methods and modeling techniques. These methods aid in a better comprehension of the design and developmental control of engineering systems as they grow more complex. Popular tools that are often used in the systems engineering context were developed during these times, including Universal Systems Language (USL), Unified Modeling Language (UML), Quality function deployment (QFD), and Integration Definition (IDEF).

In 1990, a professional society for systems engineering, the National Council on Systems Engineering (NCOSE), was founded by representatives from a number of U.S. corporations and organizations. NCOSE was created to address the need for improvements in systems engineering practices and education. As a result of growing involvement from systems engineers outside of the U.S., the name of the organization was changed to the International Council on Systems Engineering (INCOSE) in 1995.

[ 5 ] Schools in several countries offer graduate programs in systems engineering, and continuing education options are also available for practicing engineers.

[ 6 ] Concept [ edit ] Some definitions Simon Ramo , considered by some to be a founder of modern systems engineering, defined the discipline as: "...a branch of engineering which concentrates on the design and application of the whole as distinct from the parts, looking at a problem in its entirety, taking account of all the facets and all the variables and linking the social to the technological." [ 7 ] — Conquering Complexity, 2005.

"An interdisciplinary approach and means to enable the realization of successful systems" [ 8 ] — INCOSE handbook, 2004.

"System engineering is a robust approach to the design, creation, and operation of systems. In simple terms, the approach consists of identification and quantification of system goals, creation of alternative system design concepts, performance of design trades, selection and implementation of the best design, verification that the design is properly built and integrated, and post-implementation assessment of how well the system meets (or met) the goals." [ 9 ] — NASA Systems Engineering Handbook, 1995.

"The Art and Science of creating effective systems, using whole system, whole life principles" OR "The Art and Science of creating optimal solution systems to complex issues and problems" [ 10 ] — Derek Hitchins, Prof. of Systems Engineering, former president of INCOSE (UK), 2007.

"The concept from the engineering standpoint is the evolution of the engineering scientist (i.e. the scientific generalist who maintains a broad outlook). The method is that of the team approach. On large-scale-system problems, teams of scientists and engineers, generalists as well as specialists, exert their joint efforts to find a solution and physically realize it...The technique has been variously called the systems approach or the team development method." [ 11 ] — Harry H. Goode & Robert E. Machol, 1957.

"The systems engineering method recognizes each system is an integrated whole even though composed of diverse, specialized structures and sub-functions. It further recognizes that any system has a number of objectives and that the balance between them may differ widely from system to system. The methods seek to optimize the overall system functions according to the weighted objectives and to achieve maximum compatibility of its parts." [ 12 ] — Systems Engineering Tools by Harold Chestnut, 1965.

Systems engineering signifies only an approach and, more recently, a discipline in engineering. The aim of education in systems engineering is to formalize various approaches simply and in doing so, identify new methods and research opportunities similar to that which occurs in other fields of engineering. As an approach, systems engineering is holistic and interdisciplinary in flavor.

Origins and traditional scope [ edit ] The traditional scope of engineering embraces the conception, design, development, production, and operation of physical systems. Systems engineering, as originally conceived, falls within this scope. "Systems engineering", in this sense of the term, refers to the building of engineering concepts.

Evolution to a broader scope [ edit ] The use of the term "systems engineer" has evolved over time to embrace a wider, more holistic concept of "systems" and of engineering processes. This evolution of the definition has been a subject of ongoing controversy, [ 13 ] and the term continues to apply to both the narrower and a broader scope.

Traditional systems engineering was seen as a branch of engineering in the classical sense, that is, as applied only to physical systems, such as spacecraft and aircraft. More recently, systems engineering has evolved to take on a broader meaning especially when humans were seen as an essential component of a system.

Peter Checkland , for example, captures the broader meaning of systems engineering by stating that 'engineering' "can be read in its general sense; you can engineer a meeting or a political agreement." [ 14 ] : 10 Consistent with the broader scope of systems engineering, the Systems Engineering Body of Knowledge (SEBoK) [ 15 ] has defined three types of systems engineering: Product Systems Engineering (PSE) is the traditional systems engineering focused on the design of physical systems consisting of hardware and software.

Enterprise Systems Engineering (ESE) pertains to the view of enterprises, that is, organizations or combinations of organizations, as systems.

Service Systems Engineering (SSE) has to do with the engineering of service systems. Checkland defines a service system as a system which is conceived as serving another system.

[ 14 ] Most civil infrastructure systems are service systems.

Holistic view [ edit ] Systems engineering focuses on analyzing and eliciting customer needs and required functionality early in the development cycle , documenting requirements, then proceeding with design synthesis and system validation while considering the complete problem, the system lifecycle . This includes fully understanding all of the stakeholders involved. Oliver et al. claim that the systems engineering process can be decomposed into: A Systems Engineering Technical Process A Systems Engineering Management Process Within Oliver's model, the goal of the Management Process is to organize the technical effort in the lifecycle, while the Technical Process includes assessing available information , defining effectiveness measures , to create a behavior model , create a structure model , perform trade-off analysis , and create sequential build & test plan .

[ 16 ] Depending on their application, although there are several models that are used in the industry, all of them aim to identify the relation between the various stages mentioned above and incorporate feedback. Examples of such models include the Waterfall model and the VEE model (also called the V model).

[ 17 ] Interdisciplinary field [ edit ] System development often requires contribution from diverse technical disciplines.

[ 18 ] By providing a systems ( holistic ) view of the development effort, systems engineering helps mold all the technical contributors into a unified team effort, forming a structured development process that proceeds from concept to production to operation and, in some cases, to termination and disposal. In an acquisition, the holistic integrative discipline combines contributions and balances tradeoffs among cost, schedule, and performance while maintaining an acceptable level of risk covering the entire life cycle of the item.

[ 19 ] This perspective is often replicated in educational programs, in that systems engineering courses are taught by faculty from other engineering departments, which helps create an interdisciplinary environment.

[ 20 ] [ 21 ] Managing complexity [ edit ] The need for systems engineering arose with the increase in complexity of systems and projects, in turn exponentially increasing the possibility of component friction, and therefore the unreliability of the design. When speaking in this context, complexity incorporates not only engineering systems but also the logical human organization of data. At the same time, a system can become more complex due to an increase in size as well as with an increase in the amount of data, variables, or the number of fields that are involved in the design. The International Space Station is an example of such a system.

The International Space Station is an example of a very complex system requiring systems engineering.

The development of smarter control algorithms , microprocessor design , and analysis of environmental systems also come within the purview of systems engineering. Systems engineering encourages the use of tools and methods to better comprehend and manage complexity in systems. Some examples of these tools can be seen here: [ 22 ] System architecture System model , modeling , and simulation Mathematical optimization System dynamics Systems analysis Statistical analysis Reliability engineering Decision making Taking an interdisciplinary approach to engineering systems is inherently complex since the behavior of and interaction among system components is not always immediately well defined or understood. Defining and characterizing such systems and subsystems and the interactions among them is one of the goals of systems engineering. In doing so, the gap that exists between informal requirements from users, operators , marketing organizations, and technical specifications is successfully bridged.

Scope [ edit ] The scope of systems engineering activities [ 23 ] The principles of systems engineering – holism, emergent behavior, boundary, et al. – can be applied to any system, complex or otherwise, provided systems thinking is employed at all levels.

[ 24 ] Besides defense and aerospace, many information and technology-based companies, software development firms, and industries in the field of electronics & communications require systems engineers as part of their team.

[ 25 ] An analysis by the INCOSE Systems Engineering Center of Excellence (SECOE) indicates that optimal effort spent on systems engineering is about 15–20% of the total project effort.

[ 26 ] At the same time, studies have shown that systems engineering essentially leads to a reduction in costs among other benefits.

[ 26 ] However, no quantitative survey at a larger scale encompassing a wide variety of industries has been conducted until recently. Such studies are underway to determine the effectiveness and quantify the benefits of systems engineering.

[ 27 ] [ 28 ] Systems engineering encourages the use of modeling and simulation to validate assumptions or theories on systems and the interactions within them.

[ 29 ] [ 30 ] Use of methods that allow early detection of possible failures, in safety engineering , are integrated into the design process. At the same time, decisions made at the beginning of a project whose consequences are not clearly understood can have enormous implications later in the life of a system, and it is the task of the modern systems engineer to explore these issues and make critical decisions. No method guarantees today's decisions will still be valid when a system goes into service years or decades after first conceived. However, there are techniques that support the process of systems engineering. Examples include soft systems methodology, Jay Wright Forrester 's System dynamics method, and the Unified Modeling Language (UML)—all currently being explored, evaluated, and developed to support the engineering decision process.

Education [ edit ] Main article: List of systems engineering universities Education in systems engineering is often seen as an extension to the regular engineering courses, [ 31 ] reflecting the industry attitude that engineering students need a foundational background in one of the traditional engineering disciplines (e.g.

aerospace engineering , civil engineering , electrical engineering , mechanical engineering , manufacturing engineering , industrial engineering , chemical engineering )—plus practical, real-world experience to be effective as systems engineers. Undergraduate university programs explicitly in systems engineering are growing in number but remain uncommon, the degrees including such material are most often presented as a BS in Industrial Engineering. Typically programs (either by themselves or in combination with interdisciplinary study) are offered beginning at the graduate level in both academic and professional tracks, resulting in the grant of either a MS / MEng or Ph.D.

/ EngD degree.

INCOSE, in collaboration with the Systems Engineering Research Center at Stevens Institute of Technology maintains a regularly updated directory of worldwide academic programs at suitably accredited institutions.

[ 6 ] As of 2017, it lists over 140 universities in North America offering more than 400 undergraduate and graduate programs in systems engineering. Widespread institutional acknowledgment of the field as a distinct subdiscipline is quite recent; the 2009 edition of the same publication reported the number of such schools and programs at only 80 and 165, respectively.

Education in systems engineering can be taken as systems-centric or domain-centric : Systems-centric programs treat systems engineering as a separate discipline and most of the courses are taught focusing on systems engineering principles and practice.

Domain-centric programs offer systems engineering as an option that can be exercised with another major field in engineering.

Both of these patterns strive to educate the systems engineer who is able to oversee interdisciplinary projects with the depth required of a core engineer.

[ 32 ] Systems engineering topics [ edit ] Systems engineering tools are strategies , procedures, and techniques that aid in performing systems engineering on a project or product . The purpose of these tools varies from database management, graphical browsing, simulation, and reasoning, to document production, neutral import/export, and more.

[ 33 ] System [ edit ] Main article: System There are many definitions of what a system is in the field of systems engineering. Below are a few authoritative definitions: ANSI / EIA -632-1999: "An aggregation of end products and enabling products to achieve a given purpose." [ 34 ] DAU Systems Engineering Fundamentals: "an integrated composite of people, products, and processes that provide a capability to satisfy a stated need or objective." [ 35 ] IEEE Std 1220-1998: "A set or arrangement of elements and processes that are related and whose behavior satisfies customer/operational needs and provides for life cycle sustainment of the products." [ 36 ] INCOSE Systems Engineering Handbook: "homogeneous entity that exhibits predefined behavior in the real world and is composed of heterogeneous parts that do not individually exhibit that behavior and an integrated configuration of components and/or subsystems." [ 37 ] INCOSE: "A system is a construct or collection of different elements that together produce results not obtainable by the elements alone. The elements, or parts, can include people, hardware, software, facilities, policies, and documents; that is, all things required to produce systems-level results. The results include system-level qualities, properties, characteristics, functions, behavior, and performance. The value added by the system as a whole, beyond that contributed independently by the parts, is primarily created by the relationship among the parts; that is, how they are interconnected." [ 38 ] ISO/IEC 15288:2008: "A combination of interacting elements organized to achieve one or more stated purposes." [ 39 ] NASA Systems Engineering Handbook: "(1) The combination of elements that function together to produce the capability to meet a need. The elements include all hardware, software, equipment, facilities, personnel, processes, and procedures needed for this purpose. (2) The end product (which performs operational functions) and enabling products (which provide life-cycle support services to the operational end products) that make up a system." [ 40 ] Systems engineering processes [ edit ] Systems engineering processes encompass all creative, manual, and technical activities necessary to define the product and which need to be carried out to convert a system definition to a sufficiently detailed system design specification for product manufacture and deployment. Design and development of a system can be divided into four stages, each with different definitions: [ 41 ] Task definition (informative definition) Conceptual stage (cardinal definition) Design stage (formative definition) Implementation stage (manufacturing definition) Depending on their application, tools are used for various stages of the systems engineering process: [ 23 ] Using models [ edit ] Main article: Abstract model Models play important and diverse roles in systems engineering. A model can be defined in several
ways, including: [ 42 ] An abstraction of reality designed to answer specific questions about the real world An imitation, analog, or representation of a real-world process or structure; or A conceptual, mathematical, or physical tool to assist a decision-maker.

Together, these definitions are broad enough to encompass physical engineering models used in the verification of a system design, as well as schematic models like a functional flow block diagram and mathematical (i.e. quantitative) models used in the trade study process. This section focuses on the last.

[ 42 ] The main reason for using mathematical models and diagrams in trade studies is to provide estimates of system effectiveness, performance or technical attributes, and cost from a set of known or estimable quantities. Typically, a collection of separate models is needed to provide all of these outcome variables. The heart of any mathematical model is a set of meaningful quantitative relationships among its inputs and outputs. These relationships can be as simple as adding up constituent quantities to obtain a total, or as complex as a set of differential equations describing the trajectory of a spacecraft in a gravitational field . Ideally, the relationships express causality, not just correlation.

[ 42 ] Furthermore, key to successful systems engineering activities are also the methods with which these models are efficiently and effectively managed and used to simulate the systems. However, diverse domains often present recurring problems of modeling and simulation for systems engineering, and new advancements are aiming to cross-fertilize methods among distinct scientific and engineering communities, under the title of 'Modeling & Simulation-based Systems Engineering'.

[ 43 ] [ page needed ] Modeling formalisms and graphical representations [ edit ] Initially, when the primary purpose of a systems engineer is to comprehend a complex problem, graphic representations of a system are used to communicate a system's functional and data requirements.

[ 44 ] Common graphical representations include: Functional flow block diagram (FFBD) Model-based design Data flow diagram (DFD) N2 chart IDEF0 diagram Use case diagram Sequence diagram Block diagram Signal-flow graph USL function maps and type maps Enterprise architecture frameworks A graphical representation relates the various subsystems or parts of a system through functions, data, or interfaces. Any or each of the above methods is used in an industry based on its requirements. For instance, the N2 chart may be used where interfaces between systems are important. Part of the design phase is to create structural and behavioral models of the system.

Once the requirements are understood, it is now the responsibility of a systems engineer to refine them and to determine, along with other engineers, the best technology for a job. At this point starting with a trade study, systems engineering encourages the use of weighted choices to determine the best option. A decision matrix , or Pugh method, is one way (QFD is another) to make this choice while considering all criteria that are important. The trade study in turn informs the design, which again affects graphic representations of the system (without changing the requirements). In an SE process, this stage represents the iterative step that is carried out until a feasible solution is found. A decision matrix is often populated using techniques such as statistical analysis, reliability analysis, system dynamics ( feedback control ), and optimization methods.

Other tools [ edit ] Systems Modeling Language [ edit ] Main article: Systems Modeling Language Systems Modeling Language (SysML), a modeling language used for systems engineering applications, supports the specification, analysis, design, verification and validation of a broad range of complex systems.

[ 45 ] Lifecycle Modeling Language [ edit ] Main article: Lifecycle Modeling Language Lifecycle Modeling Language (LML), is an open-standard modeling language designed for systems engineering that supports the full lifecycle: conceptual, utilization, support, and retirement stages.

[ 46 ] Related fields and sub-fields [ edit ] Many related fields may be considered tightly coupled to systems engineering. The following areas have contributed to the development of systems engineering as a distinct entity: Cognitive systems engineering [ edit ] Main article: Cognitive systems engineering Cognitive systems engineering (CSE) is a specific approach to the description and analysis of human-machine systems or sociotechnical systems .

[ 47 ] The three main themes of CSE are how humans cope with complexity, how work is accomplished by the use of artifacts , and how human-machine systems and socio-technical systems can be described as joint cognitive systems. CSE has since its beginning become a recognized scientific discipline, sometimes also referred to as cognitive engineering . The concept of a Joint Cognitive System (JCS) has in particular become widely used as a way of understanding how complex socio-technical systems can be described with varying degrees of resolution. The more than 20 years of experience with CSE has been described extensively.

[ 48 ] [ 49 ] Configuration management [ edit ] Main article: Configuration management Like systems engineering, configuration management as practiced in the defense and aerospace industry is a broad systems-level practice. The field parallels the taskings of systems engineering; where systems engineering deals with requirements development, allocation to development items and verification, configuration management deals with requirements capture, traceability to the development item, and audit of development item to ensure that it has achieved the desired functionality and outcomes that systems engineering and/or Test and Verification Engineering have obtained and proven through objective testing.

Control engineering [ edit ] Main article: Control engineering Control engineering and its design and implementation of control systems , used extensively in nearly every industry, is a large sub-field of systems engineering. The cruise control on an automobile and the guidance system for a ballistic missile are two examples. Control systems theory is an active field of applied mathematics involving the investigation of solution spaces and the development of new methods for the analysis of the control process.

Industrial engineering [ edit ] Main article: Industrial engineering Industrial engineering is a branch of engineering that concerns the development, improvement, implementation, and evaluation of integrated systems of people, money, knowledge, information, equipment, energy, material, and process. Industrial engineering draws upon the principles and methods of engineering analysis and synthesis, as well as mathematical, physical, and social sciences together with the principles and methods of engineering analysis and design to specify, predict, and evaluate results obtained from such systems.

Production Systems Engineering [ edit ] Production Systems Engineering (PSE) is an emerging branch of Engineering intended to uncover fundamental principles of production systems and utilize them for analysis, continuous improvement, and design.

[ 50 ] Interface design [ edit ] Main article: Interface design Interface design and its specification are concerned with assuring that the pieces of a system connect and inter-operate with other parts of the system and with external systems as necessary. Interface design also includes assuring that system interfaces are able to accept new features, including mechanical, electrical, and logical interfaces, including reserved wires, plug-space, command codes, and bits in communication protocols. This is known as extensibility .

Human-Computer Interaction (HCI) or Human-Machine Interface (HMI) is another aspect of interface design and is a critical aspect of modern systems engineering. Systems engineering principles are applied in the design of communication protocols for local area networks and wide area networks .

Mechatronic engineering [ edit ] Main article: Mechatronic engineering Mechatronic engineering , like systems engineering, is a multidisciplinary field of engineering that uses dynamic systems modeling to express tangible constructs. In that regard, it is almost indistinguishable from Systems Engineering, but what sets it apart is the focus on smaller details rather than larger generalizations and relationships. As such, both fields are distinguished by the scope of their projects rather than the methodology of their practice.

Operations research [ edit ] Main article: Operations research Operations research supports systems engineering. Operations research, briefly, is concerned with the optimization of a process under multiple constraints.

[ 51 ] [ 52 ] Performance engineering [ edit ] Main article: Performance engineering Performance engineering is the discipline of ensuring a system meets customer expectations for performance throughout its life. Performance is usually defined as the speed with which a certain operation is executed or the capability of executing a number of such operations in a unit of time. Performance may be degraded when operations queued to execute are throttled by limited system capacity . For example, the performance of a packet-switched network is characterized by the end-to-end packet transit delay or the number of packets switched in an hour. The design of high-performance systems uses analytical or simulation modeling, whereas the delivery of high-performance implementation involves thorough performance testing. Performance engineering relies heavily on statistics , queueing theory , and probability theory for its tools and processes.

Program management and project management [ edit ] Main article: Program management Main article: Project management Program management (or project management) has many similarities with systems engineering, but has broader-based origins than the engineering ones of systems engineering.

Project management is also closely related to both program management and systems engineering. Both include scheduling as engineering support tool in assessing interdisciplinary concerns under management process. In particular, the direct relationship of resources, performance features, and risk to the duration of a task or the dependency links among tasks and impacts across the system lifecycle are systems engineering concerns.

Proposal engineering [ edit ] Proposal engineering is the application of scientific and mathematical principles to design, construct, and operate a cost-effective proposal development system. Basically, proposal engineering uses the " systems engineering process " to create a cost-effective proposal and increase the odds of a successful proposal.

Reliability engineering [ edit ] Main article: Reliability engineering Reliability engineering is the discipline of ensuring a system meets customer expectations for reliability throughout its life (i.e. it does not fail more frequently than expected). Next to the prediction of failure, it is just as much about the prevention of failure. Reliability engineering applies to all aspects of the system. It is closely associated with maintainability , availability ( dependability or RAMS preferred by some), and integrated logistics support . Reliability engineering is always a critical component of safety engineering, as in failure mode and effects analysis (FMEA) and hazard fault tree analysis, and of security engineering .

Risk management [ edit ] Main article: Risk management Risk management , the practice of assessing and dealing with risk is one of the interdisciplinary parts of Systems Engineering. In development, acquisition, or operational activities, the inclusion of risk in tradeoffs with cost, schedule, and performance features, involves the iterative complex configuration management of traceability and evaluation to the scheduling and requirements management across domains and for the system lifecycle that requires the interdisciplinary technical approach of systems engineering. Systems Engineering has Risk Management define, tailor, implement, and monitor a structured process for risk management which is integrated into the overall effort.

[ 53 ] Safety engineering [ edit ] Main article: Safety engineering The techniques of safety engineering may be applied by non-specialist engineers in designing complex systems to minimize the probability of safety-critical failures. The "System Safety Engineering" function helps to identify "safety hazards" in emerging designs and may assist with techniques to "mitigate" the effects of (potentially) hazardous conditions that cannot be designed out of systems.

Security engineering [ edit ] Main article: Security engineering Security engineering can be viewed as an interdisciplinary field that integrates the community of practice for control systems design, reliability, safety, and systems engineering. It may involve such sub-specialties as authentication of system users, system targets, and others: people, objects, and processes.

Software engineering [ edit ] Main article: Software engineering From its beginnings, software engineering has helped shape modern systems engineering practice. The techniques used in the handling of the complexities of large software-intensive systems have had a major effect on the shaping and reshaping of the tools, methods, and processes of Systems Engineering.

See also [ edit ] Systems science portal Engineering portal Arcadia (engineering) Control engineering Design review (U.S. government) Engineering management Engineering information management Enterprise systems engineering Industrial engineering Interdisciplinarity Life-cycle engineering List of production topics List of requirements engineering tools List of systems engineers List of types of systems engineering Management cybernetics Model-based systems engineering Operations management Structured systems analysis and design method System of systems engineering (SoSE) System accident Systems architecture Systems development life cycle Systems thinking (e.g.

theory of constraints , value-stream mapping ) System information modelling Tricotyledon theory of system design References [ edit ] ^ Schlager, J. (July 1956).

"Systems engineering: key to modern development" .

IRE Transactions .

EM-3 (3): 64– 66.

doi : 10.1109/IRET-EM.1956.5007383 .

S2CID 51635376 . Retrieved 16 November 2023 .

^ Hall, Arthur D.

(1962).

A Methodology for Systems Engineering . Van Nostrand Reinhold.

ISBN 978-0-442-03046-9 .

{{ cite book }} : ISBN / Date incompatibility ( help ) ^ Umbrello, Steven (5 April 2021).

"Coupling Levels of Abstraction in Understanding Meaningful Human Control of Autonomous Weapons: A Two-Tiered Approach" .

Ethics and Information Technology .

23 (3): 455– 464.

doi : 10.1007/s10676-021-09588-w .

hdl : 2318/1784315 .

ISSN 1572-8439 .

^ Sage, Andrew Patrick (1992).

Systems Engineering . Wiley IEEE.

ISBN 978-0-471-53639-0 .

^ INCOSE Resp Group (11 June 2004).

"Genesis of INCOSE" . Archived from the original on 25 September 2006 . Retrieved 11 July 2006 .

^ a b INCOSE /Academic Council.

"Worldwide Directory of SE and IE Academic Programs" . Archived from the original on 26 December 2018 . Retrieved 4 February 2019 .

^ Conquering Complexity: lessons for defence systems acquisition, The Defence Engineering Group .

University College London . 2005.

^ Systems Engineering Handbook, version 2a . INCOSE. 2004.

^ NASA Systems Engineering Handbook .

NASA . 1995. SP-610S.

^ "Derek Hitchins" . INCOSE UK . Retrieved 2 June 2007 .

^ Goode, Harry H.; Robert E. Machol (1957).

System Engineering: An Introduction to the Design of Large-scale Systems . McGraw-Hill. p. 8.

LCCN 56011714 .

^ Chestnut, Harold (1965).

Systems Engineering Tools . Wiley.

ISBN 978-0-471-15448-8 .

^ Rhodes, Donna; Hastings, Daniel (March 2004).

The Case for Evolving Systems Engineering as a Field within Engineering Systems . MIT Engineering Systems Symposium.

CiteSeerX 10.1.1.86.7496 .

^ a b Checkland, Peter (1999). Pyster, Authur (ed.).

Systems Thinking, Systems Practice . John Wiley & Sons.

^ Checkland, Peter (1999). Pyster, Authur (ed.).

Systems Thinking, Systems Practice . John Wiley & Sons.

2012. Systems Engineering Body of Knowledge. 1.0 ed: Stephens Institute and the Naval Postgraduate School.

^ Oliver, David W.; Timothy P. Kelliher; James G. Keegan Jr. (1997).

Engineering Complex Systems with Models and Objects . McGraw-Hill. pp.

85 –94.

ISBN 978-0-07-048188-6 .

^ "The SE VEE" . SEOR, George Mason University. Archived from the original on 18 October 2007 . Retrieved 26 May 2007 .

^ Ramo, Simon ; Robin K. St.Clair (1998).

The Systems Approach: Fresh Solutions to Complex Problems Through Combining Science and Practical Common Sense (PDF) . Anaheim, California: KNI. Archived from the original (PDF) on 6 August 2012 . Retrieved 18 August 2007 .

^ "4. Systems Engineering" (PDF) .

Defense Acquisition Guidebook .

Defense Acquisition University . Retrieved 12 August 2015 .

^ "Systems Engineering Program at Cornell University" . Cornell University . Retrieved 25 May 2007 .

^ "ESD Faculty and Teaching Staff" . Engineering Systems Division, MIT . Retrieved 25 May 2007 .

^ "Core Courses, Systems Analysis – Architecture, Behavior and Optimization" . Cornell University . Retrieved 25 May 2007 .

^ a b "Systems Engineering Fundamentals" (PDF) . Defense Acquisition University Press. 2001. Archived from the original (PDF) on 31 January 2017.

^ Adcock, Rick.

"Principles and Practices of Systems Engineering" (PDF) . INCOSE, UK. Archived from the original (PDF) on 15 June 2007 . Retrieved 7 June 2007 .

^ "Systems Engineering, Career Opportunities and Salary Information" . George Mason University. 1994. Archived from the original on 22 September 2007 . Retrieved 7 June 2007 .

^ a b "Understanding the Value of Systems Engineering" (PDF) . Archived from the original (PDF) on 15 June 2007 . Retrieved 7 June 2007 .

^ Elm, Joseph P.

"Surveying Systems Engineering Effectiveness" (PDF) . Pittsburgh, Pennsylvania: Carnegie Mellon University . Archived from the original (PDF) on 15 June 2007 . Retrieved 16 March 2023 .

^ "Systems Engineering Cost Estimation by Consensus" . Retrieved 7 June 2007 .

^ Sage, Andrew P.

; Olson, Stephen R. (2001).

"Modeling and Simulation in Systems Engineering" .

Simulation .

76 (2): 90.

doi : 10.1177/003754970107600207 .

S2CID 3016918 . Archived from the original on 21 October 2007 . Retrieved 2 June 2007 .

^ Smith, E.C. Jr. (September 1962).

"Simulation in Systems Engineering" (PDF) .

IBM Systems Journal .

1 . IBM Research: 33– 50.

doi : 10.1147/sj.11.0033 . Archived from the original (PDF) on 4 June 2007 . Retrieved 16 March 2023 .

^ "Didactic Recommendations for Education in Systems Engineering" (PDF) . Retrieved 7 June 2007 .

^ "Perspectives of Systems Engineering Accreditation" (PDF) .

INCOSE . Archived from the original (PDF) on 15 June 2007 . Retrieved 7 June 2007 .

^ Steven Jenkins.

"A Future for Systems Engineering Tools" (PDF) . NASA. p. 15. Archived from the original (PDF) on 26 September 2007 . Retrieved 10 June 2007 .

^ "Processes for Engineering a System" .

Electronic Industries Alliance . 1999. Archived from the original on 5 July 2010 . Retrieved 17 June 2018 .

^ "Systems Engineering Fundamentals" (PDF) .

OCW.MIT.edu . January 2001.

^ "Standard for Application and Management of the Systems Engineering Process" . IEEE. Archived from the original on 1 August 2009.

^ "Systems Engineering Handbook" .

INCOSE . 2007. Archived from the original on 18 March 2015 . Retrieved 10 July 2009 .

^ "A Consensus of the INCOSE Fellows" .

INCOSE . 2006. Archived from the original on 29 October 2006 . Retrieved 10 July 2009 .

^ "Systems and software engineering - System life cycle processes" . 2008. Archived from the original on 6 August 2019 . Retrieved 10 July 2009 .

^ NASA Systems Engineering Handbook (PDF) .

NASA . 2007. NASA/SP-2007-6105.

^ J. Lienig; H. Bruemmer (2017).

Fundamentals of Electronic Systems Design . Springer International Publishing. pp.

6– 7.

doi : 10.1007/978-3-319-55840-0 .

ISBN 978-3-319-55839-4 .

^ a b c "System Analysis and Modeling Issues - NASA Systems Engineering Handbook" (PDF) . 1995. p. 85. Archived from the original (PDF) on 17 December 2008.

^ Gianni, Daniele; D'Ambrogio, Andrea; Tolk, Andreas, eds. (4 December 2014).

Modeling and Simulation-Based Systems Engineering Handbook (1st ed.). CRC Press.

ISBN 9781466571457 .

^ Long, Jim (2002).

"Relationships between Common Graphical Representations in System Engineering" (PDF) .

VitechCorp . Archived from the original (PDF) on 13 August 2017.

^ "OMG SysML Specification" (PDF) . SysML Open Source Specification Project. p. 23 . Retrieved 3 July 2007 .

^ "LML Specification" (PDF) . LML Steering Committee. p. 4. Archived from the original (PDF) on 6 May 2014 . Retrieved 5 June 2014 .

^ Hollnagel; Woods (1983).

"Cognitive systems engineering: New wine in new bottles" .

International Journal of Man-Machine Studies .

18 (6): 583– 600.

doi : 10.1016/S0020-7373(83)80034-0 .

S2CID 15398274 . Retrieved 16 November 2023 .

^ Hollnagel; Woods (2005).

Joint cognitive systems: The foundations of cognitive systems engineering . Taylor & Francis.

doi : 10.1201/9781420038194 .

ISBN 9780429122224 . Retrieved 16 November 2023 .

^ Hollnagel; Woods (2006).

Joint cognitive systems: Patterns in cognitive systems engineering . Taylor & Francis.

doi : 10.1201/9781420005684 .

ISBN 9780429127663 . Retrieved 16 November 2023 .

^ Li, Jingshan; Meerkov, Semyon M. (2009).

Production Systems Engineering .

doi : 10.1007/978-0-387-75579-3 .

ISBN 978-0-387-75578-6 .

^ Postrel, Virginia (27 June 2004).

"Operation Everything" .

The Bostom Globe . Archived from the original on 31 March 2012 . Retrieved 30 November 2005 .

^ Crissey, Mary (2004).

"SHHHH... It's a Secret" .

sas com Magazine . Archived from the original on 20 September 2005 . Retrieved 30 November 2005 .

^ "Risk Management Toolkit" . MITRE, SE Process Office . Retrieved 8 September 2016 .

Further reading [ edit ] Madhavan, Guru (2024).

Wicked Problems: How to Engineer a Better World . New York: W.W. Norton & Company.

ISBN 978-0-393-65146-1 Blockley, D. Godfrey, P.

Doing it Differently: Systems for Rethinking Infrastructure, Second Edition , ICE Publications, London, 2017.

Buede, D.M., Miller, W.D.

The Engineering Design of Systems: Models and Methods, Third Edition , John Wiley and Sons, 2016.

Chestnut, H.

, Systems Engineering Methods . Wiley, 1967.

Gianni, D. et al. (eds.), Modeling and Simulation-Based Systems Engineering Handbook , CRC Press, 2014 at CRC Goode, H.H.

, Robert E. Machol System Engineering: An Introduction to the Design of Large-scale Systems , McGraw-Hill, 1957.

Hitchins, D.

(1997) World Class Systems Engineering at hitchins.net.

Lienig, J., Bruemmer, H., Fundamentals of Electronic Systems Design , Springer, 2017 ISBN 978-3-319-55839-4 .

Malakooti, B. (2013). Operations and Production Systems with Multiple Objectives. John Wiley & Sons.

ISBN 978-1-118-58537-5 MITRE, The MITRE Systems Engineering Guide ( pdf ) NASA (2007) Systems Engineering Handbook , NASA/SP-2007-6105 Rev1, December 2007.

NASA (2013) NASA Systems Engineering Processes and Requirements Archived 27 December 2016 at the Wayback Machine NPR 7123.1B, April 2013 NASA Procedural Requirements Oliver, D.W., et al.

Engineering Complex Systems with Models and Objects. McGraw-Hill , 1997.

Parnell, G.S., Driscoll, P.J., Henderson, D.L. (eds.), Decision Making in Systems Engineering and Management , 2nd. ed., Hoboken, NJ: Wiley, 2011. This is a textbook for undergraduate students of engineering.

Ramo, S.

, St.Clair, R.K.

The Systems Approach: Fresh Solutions to Complex Problems Through Combining Science and Practical Common Sense , Anaheim, CA: KNI, Inc, 1998.

Sage, A.P.

, Systems Engineering . Wiley IEEE, 1992.

ISBN 0-471-53639-3 .

Sage, A.P.

, Olson, S.R., Modeling and Simulation in Systems Engineering , 2001.

SEBOK.org, Systems Engineering Body of Knowledge (SEBoK) Shermon, D.

Systems Cost Engineering , Gower Publishing , 2009 Shishko, R., et al. (2005) NASA Systems Engineering Handbook . NASA Center for AeroSpace Information, 2005.

Stevens, R., et al.

Systems Engineering: Coping with Complexity . Prentice Hall, 1998.

US Air Force, SMC Systems Engineering Primer & Handbook , 2004 US DoD Systems Management College (2001) Systems Engineering Fundamentals .

Defense Acquisition University Press, 2001 US DoD Guide for Integrating Systems Engineering into DoD Acquisition Contracts Archived 29 August 2017 at the Wayback Machine , 2006 US DoD MIL-STD-499 System Engineering Management External links [ edit ] ICSEng homepage INCOSE homepage INCOSE UK homepage PPI SE Goldmine homepage Systems Engineering Body of Knowledge Systems Engineering Tools AcqNotes DoD Systems Engineering Overview NDIA Systems Engineering Division Systems engineering at Wikipedia's sister projects : Media from Commons Quotations from Wikiquote Resources from Wikiversity v t e Systems engineering Subfields Aerospace engineering Biological systems engineering Cognitive systems engineering Configuration management Earth systems engineering and management Electrical engineering Enterprise systems engineering Health systems engineering Performance engineering Reliability engineering Safety engineering Sociocultural Systems Engineering Processes Requirements engineering Functional Analysis and Allocation System integration Verification and validation Design review System of systems engineering Concepts Business process Fault tolerance System System lifecycle V-Model Systems development life cycle Tools Decision-making Function modelling IDEF Optimization Quality function deployment Spare part System dynamics Systems Modeling Language Systems analysis Systems modeling Work breakdown structure People James S. Albus Ruzena Bajcsy Benjamin S. Blanchard Wernher von Braun Kathleen Carley Harold Chestnut Wolt Fabrycky Barbara Grosz Arthur David Hall III Derek Hitchins Robert E. Machol Radhika Nagpal Simon Ramo Joseph Francis Shea Katia Sycara Manuela M. Veloso John N. Warfield Related fields Control engineering Computer engineering Industrial engineering Operations research Project management Quality management Risk management Software engineering Category v t e Systems science System types Art Biological Complex Coupled human–environment Ecological Economic Information Multi-agent Nervous Recommender Social Concepts Doubling time Leverage points Limiting factor Negative feedback Positive feedback Theoretical fields Control theory Cybernetics Earth system science Living systems Sociotechnical system Systemics Urban metabolism World-systems theory Analysis Biology Dynamics Ecology Engineering Neuroscience Pharmacology Philosophy Psychology Theory ( Systems thinking ) Scientists Russell L. Ackoff Victor Aladjev William Ross Ashby Ruzena Bajcsy Béla H. Bánáthy Gregory Bateson Anthony Stafford Beer Richard E. Bellman Ludwig von Bertalanffy Margaret Boden Alexander Bogdanov Kenneth E. Boulding Murray Bowen Kathleen Carley Mary Cartwright C. West Churchman Manfred Clynes George Dantzig Edsger W. Dijkstra Fred Emery Heinz von Foerster Stephanie Forrest Jay Wright Forrester Barbara Grosz Charles A. S. Hall Mike Jackson Lydia Kavraki James J. Kay Faina M. Kirillova George Klir Allenna Leonard Edward Norton Lorenz Niklas Luhmann Humberto Maturana Margaret Mead Donella Meadows Mihajlo D. Mesarovic James Grier Miller Radhika Nagpal Howard T. Odum Talcott Parsons Ilya Prigogine Qian Xuesen Anatol Rapoport John Seddon Peter Senge Claude Shannon Katia Sycara Eric Trist Francisco Varela Manuela M. Veloso Kevin Warwick Norbert Wiener Jennifer Wilby Anthony Wilden Applications Systems theory in anthropology Systems theory in archaeology Systems theory in political science Organizations List Principia Cybernetica Category Portal Commons v t e Engineering History Outline List of engineering branches Specialties and interdisciplinarity Civil Architectural Coastal Construction Earthquake Ecological Environmental Sanitary Geological Geotechnical Hydraulic Mining Municipal/urban Offshore River Structural Transportation Traffic Railway Mechanical Acoustic Aerospace Automotive Biomechanical Energy Manufacturing Marine Naval architecture Railway Sports Thermal Tribology Electrical Broadcast outline Control Electromechanics Electronics Microwaves Optical Power Radio-frequency Signal processing Telecommunications Chemical Biochemical/bioprocess Biological Bioresource Genetic Tissue Chemical reaction Electrochemical Food Molecular Paper Petroleum Process Reaction Materials Biomaterial Ceramics Corrosion Metallurgy Molecular Nanotechnology Polymers Semiconductors Surfaces Computer AI Computer Cybersecurity Data Networks Robotics Software Engineering education Bachelor of Engineering Bachelor of Science Master's degree Doctorate Graduate certificate Engineer's degree Licensed engineer Related topics Engineer Glossaries Engineering A–L M–Z Aerospace engineering Civil engineering Electrical and electronics engineering Mechanical engineering Structural engineering Other Agricultural Audio Automation Biomedical Bioinformatics Clinical Health technology Pharmaceutical Rehabilitation Building services MEP Design Explosives Facilities Fire Forensic Climate Geomatics Graphics Industrial Information Instrumentation Instrumentation and control Logistics Management Mathematics Mechatronics Military Nuclear Ontology Packaging Physics Privacy Safety Security Survey Sustainability Systems Textile Category Commons Wikiproject Portal v t e Software engineering Fields Computer programming DevOps Empirical software engineering Experimental software engineering Formal methods Requirements engineering Search-based software engineering Site reliability engineering Social software engineering Software deployment Software design Software maintenance Software testing Systems analysis Concepts Abstraction CI/CD Compatibility Backward compatibility Compatibility layer Compatibility mode Forward compatibility Software incompatibility Component-based software engineering Data modeling Enterprise architecture Functional specification Modeling language Programming paradigm Software Software archaeology Software architecture Software configuration management Software development process/methodology Software quality Software quality assurance Software system Software verification and validation Structured analysis Essential analysis Orientations Agile Aspect-oriented Object orientation Ontology SDLC Service orientation Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD Scrum Spiral model UP V-model Waterfall model XP Model-driven engineering Round-trip engineering Other CMMI Data model ER model Function model Information model Metamodeling Object model SPICE Systems model View model Languages IDEF SysML UML USL Systems design Requirements Functional requirement Non-functional requirement Capacity Users Compute Memory Storage Network Web traffic Interface API SOAP REST GraphQL gRPC Webhook High-level design Client Load balancing Application server Message queue Integration Vertical Peer-to-peer API gateway pub-sub Event source ETL Batch Stream Orchestration Architectures Monolithic Microservices Event-driven Client–server Serverless Circuit breaker Rate limiting Database Relational NoSQL Graph Key–value LSM tree Time series Column oriented Principles Consistency Reliability CAP theorem Maintainability Configurability Modularity Durability Scalability Stateless Asynchronous I/O Loose coupling Availability Fault tolerance Failover Single point of failure Replication Consistent hashing Circuit breaker Latency Cache CDN Shard Database index Pre-caching Storage Object storage Block storage Observability Logging Metrics Tracing Error rate Queries per second Notification system Anomaly detection Related fields Computer engineering Computer science Information science Project management Risk management Systems engineering Commons Category Authority control databases National Germany United States France BnF data Japan Czech Republic Spain Israel Other Yale LUX NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐pgkjc
Cached time: 20250817070611
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.991 seconds
Real time usage: 1.205 seconds
Preprocessor visited node count: 4743/1000000
Revision size: 57712/2097152 bytes
Post‐expand include size: 227866/2097152 bytes
Template argument size: 1911/2097152 bytes
Highest expansion depth: 17/100
Expensive parser function count: 26/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 244001/5000000 bytes
Lua time usage: 0.599/10.000 seconds
Lua memory usage: 7937482/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  955.870      1 -total
 45.49%  434.785      1 Template:Reflist
 16.39%  156.666     29 Template:Cite_web
 14.13%  135.026      8 Template:Navbox
 12.13%  115.940     18 Template:Cite_book
 11.03%  105.403      5 Template:Cite_journal
  9.47%   90.557      1 Template:Systems_engineering
  6.65%   63.553      1 Template:Short_description
  5.98%   57.188      1 Template:Authority_control
  5.34%   51.026      1 Template:Subject_bar Saved in parser cache with key enwiki:pcache:27764:|#|:idhash:canonical and timestamp 20250817070611 and revision id 1297070247. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Systems_engineering&oldid=1297070247 " Categories : Systems engineering Engineering disciplines Hidden categories: CS1 errors: ISBN date Articles with short description Short description is different from Wikidata Use dmy dates from March 2023 Wikipedia articles needing page number citations from March 2023 Webarchive template wayback links Pages using Sister project links with wikidata namespace mismatch This page was last edited on 24 June 2025, at 00:32 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Systems engineering 39 languages Add topic

