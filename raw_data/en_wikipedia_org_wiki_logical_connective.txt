Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview Toggle Overview subsection 1.1 List of common logical connectives 1.2 History of notations 1.3 Redundancy 2 Natural language 3 Properties 4 Order of precedence 5 Table and Hasse diagram 6 Applications Toggle Applications subsection 6.1 Computer science 6.2 Set theory 7 See also 8 References 9 Sources 10 External links Toggle the table of contents Logical connective 42 languages العربية Azərbaycanca Български Català Dansk Deutsch Eesti Ελληνικά Emiliàn e rumagnòl Español Euskara فارسی Français Galego 한국어 Հայերեն Ido Bahasa Indonesia Íslenska Italiano עברית Қазақша Magyar Македонски Bahasa Melayu 日本語 Norsk nynorsk Polski Português Română Русский Slovenčina کوردی Svenska தமிழ் ไทย Тоҷикӣ Türkçe Українська اردو 粵語 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Symbol connecting sentential formulas in logic For other logical symbols, see List of logic symbols .

Logical connectives NOT ¬ ¬ A , − − A , A ¯ ¯ , ∼ ∼ A {\displaystyle \neg A,-A,{\overline {A}},\sim A} AND A ∧ ∧ B , A ⋅ ⋅ B , A B , A & & B , A & & & & B {\displaystyle A\land B,A\cdot B,AB,A\ \&\ B,A\ \&\&\ B} NAND A ∧ ∧ ¯ ¯ B , A ↑ ↑ B , A ∣ ∣ B , A ⋅ ⋅ B ¯ ¯ {\displaystyle A{\overline {\land }}B,A\uparrow B,A\mid B,{\overline {A\cdot B}}} OR A ∨ ∨ B , A + B , A ∣ ∣ B , A ∥ ∥ B {\displaystyle A\lor B,A+B,A\mid B,A\parallel B} NOR A ∨ ∨ ¯ ¯ B , A ↓ ↓ B , A + B ¯ ¯ {\displaystyle A{\overline {\lor }}B,A\downarrow B,{\overline {A+B}}} XNOR A ⊙ ⊙ B , A ∨ ∨ ¯ ¯ B ¯ ¯ {\displaystyle A\odot B,{\overline {A{\overline {\lor }}B}}} └ equivalent A ≡ ≡ B , A ⇔ ⇔ B , A ⇋ ⇋ B {\displaystyle A\equiv B,A\Leftrightarrow B,A\leftrightharpoons B} XOR A ∨ ∨ _ _ B , A ⊕ ⊕ B {\displaystyle A{\underline {\lor }}B,A\oplus B} └ nonequivalent A ≢ B , A ⇎ B , A ↮ ↮ B {\displaystyle A\not \equiv B,A\not \Leftrightarrow B,A\nleftrightarrow B} implies A ⇒ ⇒ B , A ⊃ ⊃ B , A → → B {\displaystyle A\Rightarrow B,A\supset B,A\rightarrow B} nonimplication ( NIMPLY ) A ⇏ B , A ⊅ B , A ↛ ↛ B {\displaystyle A\not \Rightarrow B,A\not \supset B,A\nrightarrow B} converse A ⇐ ⇐ B , A ⊂ ⊂ B , A ← ← B {\displaystyle A\Leftarrow B,A\subset B,A\leftarrow B} converse nonimplication A ⇍ B , A ⊄ B , A ↚ ↚ B {\displaystyle A\not \Leftarrow B,A\not \subset B,A\nleftarrow B} Related concepts Propositional calculus Predicate logic Boolean algebra Truth table Truth function Boolean function Functional completeness Scope (logic) Applications Digital logic Programming languages Mathematical logic Philosophy of logic Category v t e Hasse diagram of logical connectives In logic , a logical connective (also called a logical operator , sentential connective , or sentential operator ) is a logical constant . Connectives can be used to connect logical formulas. For instance in the syntax of propositional logic , the binary connective ∨ ∨ {\displaystyle \lor } can be used to join the two atomic formulas P {\displaystyle P} and Q {\displaystyle Q} , rendering the complex formula P ∨ ∨ Q {\displaystyle P\lor Q} .

Common connectives include negation , disjunction , conjunction , implication , and equivalence . In standard systems of classical logic , these connectives are interpreted as truth functions , though they receive a variety of alternative interpretations in nonclassical logics . Their classical interpretations are similar to the meanings of natural language expressions such as English "not", "or", "and", and "if", but not identical. Discrepancies between natural language connectives and those of classical logic have motivated nonclassical approaches to natural language meaning as well as approaches which pair a classical compositional semantics with a robust pragmatics .

Overview [ edit ] In formal languages , truth functions are represented by unambiguous symbols. This allows logical statements to not be understood in an ambiguous way. These symbols are called logical connectives , logical operators , propositional operators , or, in classical logic , truth-functional connectives . For the rules which allow new well-formed formulas to be constructed by joining other well-formed formulas using truth-functional connectives, see well-formed formula .

Logical connectives can be used to link zero or more statements, so one can speak about n -ary logical connectives . The boolean constants True and False can be thought of as zero-ary operators. Negation is a unary connective, and so on.

Symbol, name Truth table Venn diagram Zeroary connectives (constants) ⊤ ⊤ {\displaystyle \top } Truth / tautology 1 ⊥ ⊥ {\displaystyle \bot } Falsity / contradiction 0 Unary connectives p {\displaystyle p} = 0 1 Proposition p {\displaystyle p} 0 1 ¬ ¬ {\displaystyle \neg } Negation 1 0 Binary connectives p {\displaystyle p} = 0 0 1 1 q {\displaystyle q} = 0 1 0 1 ∧ ∧ {\displaystyle \land } Conjunction 0 0 0 1 ↑ ↑ {\displaystyle \uparrow } Alternative denial 1 1 1 0 ∨ ∨ {\displaystyle \vee } Disjunction 0 1 1 1 ↓ ↓ {\displaystyle \downarrow } Joint denial 1 0 0 0 ↮ ↮ {\displaystyle \nleftrightarrow } Exclusive or 0 1 1 0 ↔ ↔ {\displaystyle \leftrightarrow } Biconditional 1 0 0 1 → → {\displaystyle \rightarrow } Material conditional 1 1 0 1 ↛ ↛ {\displaystyle \nrightarrow } Material nonimplication 0 0 1 0 ← ← {\displaystyle \leftarrow } Converse implication 1 0 1 1 ↚ ↚ {\displaystyle \nleftarrow } Converse nonimplication 0 1 0 0 More information List of common logical connectives [ edit ] Commonly used logical connectives include the following ones.

[ 1 ] Negation (not) : ¬ ¬ {\displaystyle \neg } , ∼ ∼ {\displaystyle \sim } , N {\displaystyle N} (prefix) in which ¬ ¬ {\displaystyle \neg } is the most modern and widely used, and ∼ ∼ {\displaystyle \sim } is also common; Conjunction (and) : ∧ ∧ {\displaystyle \wedge } , & & {\displaystyle \&} , K {\displaystyle K} (prefix)  in which ∧ ∧ {\displaystyle \wedge } is the most modern and widely used; Disjunction (or) : ∨ ∨ {\displaystyle \vee } , A {\displaystyle A} (prefix)  in which ∨ ∨ {\displaystyle \vee } is the most modern and widely used; Implication (if...then) : → → {\displaystyle \to } , ⊃ ⊃ {\displaystyle \supset } , ⇒ ⇒ {\displaystyle \Rightarrow } , C {\displaystyle C} (prefix)  in which → → {\displaystyle \to } is the most modern and widely used, and ⊃ ⊃ {\displaystyle \supset } is also common; Equivalence (if and only if) : ↔ ↔ {\displaystyle \leftrightarrow } , ⊂ ⊂ ⊃ ⊃ {\displaystyle \subset \!\!\!\supset } , ⇔ ⇔ {\displaystyle \Leftrightarrow } , ≡ ≡ {\displaystyle \equiv } , E {\displaystyle E} (prefix) in which ↔ ↔ {\displaystyle \leftrightarrow } is the most modern and widely used, and ⊂ ⊂ ⊃ ⊃ {\displaystyle \subset \!\!\!\supset } is commonly used where ⊃ ⊃ {\displaystyle \supset } is also used.

For example, the meaning of the statements it is raining (denoted by p {\displaystyle p} ) and I am indoors (denoted by q {\displaystyle q} ) is transformed, when the two are combined with logical connectives: It is not raining ( ¬ ¬ p {\displaystyle \neg p} ); It is raining and I am indoors ( p ∧ ∧ q {\displaystyle p\wedge q} ); It is raining or I am indoors ( p ∨ ∨ q {\displaystyle p\lor q} ); If it is raining, then I am indoors ( p → → q {\displaystyle p\rightarrow q} ); If I am indoors, then it is raining ( q → → p {\displaystyle q\rightarrow p} ); I am indoors if and only if it is raining ( p ↔ ↔ q {\displaystyle p\leftrightarrow q} ).

It is also common to consider the always true formula and the always false formula to be connective (in which case they are nullary ).

True formula: ⊤ ⊤ {\displaystyle \top } , 1 {\displaystyle 1} , V {\displaystyle V} (prefix), or T {\displaystyle \mathrm {T} } ; False formula: ⊥ ⊥ {\displaystyle \bot } , 0 {\displaystyle 0} , O {\displaystyle O} (prefix), or F {\displaystyle \mathrm {F} } .

This table summarizes the terminology: Connective In English Noun for parts Verb phrase Conjunction Both A and B conjunct A and B are conjoined Disjunction Either A or B, or both disjunct A and B are disjoined Negation It is not the case that A negatum/negand A is negated Conditional If A, then B antecedent, consequent B is implied by A Biconditional A if, and only if, B equivalents A and B are equivalent History of notations [ edit ] Negation: the symbol ¬ ¬ {\displaystyle \neg } appeared in Heyting in 1930 [ 2 ] [ 3 ] (compare to Frege 's symbol ⫟ in his Begriffsschrift [ 4 ] ); the symbol ∼ ∼ {\displaystyle \sim } appeared in Russell in 1908; [ 5 ] an alternative notation is to add a horizontal line on top of the formula, as in p ¯ ¯ {\displaystyle {\overline {p}}} ; another alternative notation is to use a prime symbol as in p ′ {\displaystyle p'} .

Conjunction: the symbol ∧ ∧ {\displaystyle \wedge } appeared in Heyting in 1930 [ 2 ] (compare to Peano 's use of the set-theoretic notation of intersection ∩ ∩ {\displaystyle \cap } [ 6 ] ); the symbol & & {\displaystyle \&} appeared at least in Schönfinkel in 1924; [ 7 ] the symbol ⋅ ⋅ {\displaystyle \cdot } comes from Boole 's interpretation of logic as an elementary algebra .

Disjunction: the symbol ∨ ∨ {\displaystyle \vee } appeared in Russell in 1908 [ 5 ] (compare to Peano 's use of the set-theoretic notation of union ∪ ∪ {\displaystyle \cup } ); the symbol + {\displaystyle +} is also used, in spite of the ambiguity coming from the fact that the + {\displaystyle +} of ordinary elementary algebra is an exclusive or when interpreted logically in a two-element ring ; punctually in the history a + {\displaystyle +} together with a dot in the lower right corner has been used by Peirce .

[ 8 ] Implication: the symbol → → {\displaystyle \to } appeared in Hilbert in 1918; [ 9 ] : 76 ⊃ ⊃ {\displaystyle \supset } was used by Russell in 1908 [ 5 ] (compare to Peano's Ɔ the inverted C); ⇒ ⇒ {\displaystyle \Rightarrow } appeared in Bourbaki in 1954.

[ 10 ] Equivalence: the symbol ≡ ≡ {\displaystyle \equiv } in Frege in 1879; [ 11 ] ↔ ↔ {\displaystyle \leftrightarrow } in Becker in 1933 (not the first time and for this see the following); [ 12 ] ⇔ ⇔ {\displaystyle \Leftrightarrow } appeared in Bourbaki in 1954; [ 13 ] other symbols appeared punctually in the history, such as ⊃ ⊃ ⊂ ⊂ {\displaystyle \supset \subset } in Gentzen , [ 14 ] ∼ ∼ {\displaystyle \sim } in Schönfinkel [ 7 ] or ⊂ ⊂ ⊃ ⊃ {\displaystyle \subset \supset } in Chazal, [ 15 ] True: the symbol 1 {\displaystyle 1} comes from Boole 's interpretation of logic as an elementary algebra over the two-element Boolean algebra ; other notations include V {\displaystyle \mathrm {V} } (abbreviation for the Latin word "verum") to be found in Peano in 1889.

False: the symbol 0 {\displaystyle 0} comes also from Boole's interpretation of logic as a ring; other notations include Λ Λ {\displaystyle \Lambda } (rotated V {\displaystyle \mathrm {V} } ) to be found in Peano in 1889.

Some authors used letters for connectives: u .

{\displaystyle \operatorname {u.} } for conjunction (German's "und" for "and") and o .

{\displaystyle \operatorname {o.} } for disjunction (German's "oder" for "or") in early works by Hilbert (1904); [ 16 ] N p {\displaystyle Np} for negation, K p q {\displaystyle Kpq} for conjunction, D p q {\displaystyle Dpq} for alternative denial, A p q {\displaystyle Apq} for disjunction, C p q {\displaystyle Cpq} for implication, E p q {\displaystyle Epq} for biconditional in Łukasiewicz in 1929.

Redundancy [ edit ] Such a logical connective as converse implication " ← ← {\displaystyle \leftarrow } " is actually the same as material conditional with swapped arguments; thus, the symbol for converse implication is redundant. In some logical calculi (notably, in classical logic ), certain essentially different compound statements are logically equivalent . A less trivial example of a redundancy is the classical equivalence between ¬ ¬ p ∨ ∨ q {\displaystyle \neg p\vee q} and p → → q {\displaystyle p\to q} . Therefore, a classical-based logical system does not need the conditional operator " → → {\displaystyle \to } " if " ¬ ¬ {\displaystyle \neg } " (not) and " ∨ ∨ {\displaystyle \vee } " (or) are already in use, or may use the " → → {\displaystyle \to } " only as a syntactic sugar for a compound having one negation and one disjunction.

There are sixteen Boolean functions associating the input truth values p {\displaystyle p} and q {\displaystyle q} with four-digit binary outputs.

[ 17 ] These correspond to possible choices of binary logical connectives for classical logic . Different implementations of classical logic can choose different functionally complete subsets of connectives.

One approach is to choose a minimal set, and define other connectives by some logical form, as in the example with the material conditional above.
The following are the minimal functionally complete sets of operators in classical logic whose arities do not exceed 2: One element { ↑ ↑ } {\displaystyle \{\uparrow \}} , { ↓ ↓ } {\displaystyle \{\downarrow \}} .

Two elements { ∨ ∨ , ¬ ¬ } {\displaystyle \{\vee ,\neg \}} , { ∧ ∧ , ¬ ¬ } {\displaystyle \{\wedge ,\neg \}} , { → → , ¬ ¬ } {\displaystyle \{\to ,\neg \}} , { ← ← , ¬ ¬ } {\displaystyle \{\gets ,\neg \}} , { → → , ⊥ ⊥ } {\displaystyle \{\to ,\bot \}} , { ← ← , ⊥ ⊥ } {\displaystyle \{\gets ,\bot \}} , { → → , ↮ ↮ } {\displaystyle \{\to ,\nleftrightarrow \}} , { ← ← , ↮ ↮ } {\displaystyle \{\gets ,\nleftrightarrow \}} , { → → , ↛ ↛ } {\displaystyle \{\to ,\nrightarrow \}} , { → → , ↚ ↚ } {\displaystyle \{\to ,\nleftarrow \}} , { ← ← , ↛ ↛ } {\displaystyle \{\gets ,\nrightarrow \}} , { ← ← , ↚ ↚ } {\displaystyle \{\gets ,\nleftarrow \}} , { ↛ ↛ , ¬ ¬ } {\displaystyle \{\nrightarrow ,\neg \}} , { ↚ ↚ , ¬ ¬ } {\displaystyle \{\nleftarrow ,\neg \}} , { ↛ ↛ , ⊤ ⊤ } {\displaystyle \{\nrightarrow ,\top \}} , { ↚ ↚ , ⊤ ⊤ } {\displaystyle \{\nleftarrow ,\top \}} , { ↛ ↛ , ↔ ↔ } {\displaystyle \{\nrightarrow ,\leftrightarrow \}} , { ↚ ↚ , ↔ ↔ } {\displaystyle \{\nleftarrow ,\leftrightarrow \}} .

Three elements { ∨ ∨ , ↔ ↔ , ⊥ ⊥ } {\displaystyle \{\lor ,\leftrightarrow ,\bot \}} , { ∨ ∨ , ↔ ↔ , ↮ ↮ } {\displaystyle \{\lor ,\leftrightarrow ,\nleftrightarrow \}} , { ∨ ∨ , ↮ ↮ , ⊤ ⊤ } {\displaystyle \{\lor ,\nleftrightarrow ,\top \}} , { ∧ ∧ , ↔ ↔ , ⊥ ⊥ } {\displaystyle \{\land ,\leftrightarrow ,\bot \}} , { ∧ ∧ , ↔ ↔ , ↮ ↮ } {\displaystyle \{\land ,\leftrightarrow ,\nleftrightarrow \}} , { ∧ ∧ , ↮ ↮ , ⊤ ⊤ } {\displaystyle \{\land ,\nleftrightarrow ,\top \}} .

Another approach is to use with equal rights connectives of a certain convenient and functionally complete, but not minimal set. This approach requires more propositional axioms , and each equivalence between logical forms must be either an axiom or provable as a theorem.

The situation, however, is more complicated in intuitionistic logic . Of its five connectives, {∧, ∨, →, ¬, ⊥}, only negation "¬" can be reduced to other connectives (see False (logic) § False, negation and contradiction for more). Neither conjunction, disjunction, nor material conditional has an equivalent form constructed from the other four logical connectives.

Natural language [ edit ] The standard logical connectives of classical logic have rough equivalents in the grammars of natural languages. In English , as in many languages, such expressions are typically grammatical conjunctions . However, they can also take the form of complementizers , verb suffixes , and particles . The denotations of natural language connectives is a major topic of research in formal semantics , a field that studies the logical structure of natural languages.

The meanings of natural language connectives are not precisely identical to their nearest equivalents in classical logic. In particular, disjunction can receive an exclusive interpretation in many languages. Some researchers have taken this fact as evidence that natural language semantics is nonclassical . However, others maintain classical semantics by positing pragmatic accounts of exclusivity which create the illusion of nonclassicality. In such accounts, exclusivity is typically treated as a scalar implicature . Related puzzles involving disjunction include free choice inferences , Hurford's Constraint , and the contribution of disjunction in alternative questions .

Other apparent discrepancies between natural language and classical logic include the paradoxes of material implication , donkey anaphora and the problem of counterfactual conditionals . These phenomena have been taken as motivation for identifying the denotations of natural language conditionals with logical operators including the strict conditional , the variably strict conditional , as well as various dynamic operators.

The following table shows the standard classically definable approximations for the English connectives.

English word Connective Symbol Logical gate not negation ¬ ¬ {\displaystyle \neg } NOT and conjunction ∧ ∧ {\displaystyle \land } AND or disjunction ∨ ∨ {\displaystyle \vee } OR if...then material implication → → {\displaystyle \rightarrow } IMPLY ...if converse implication ← ← {\displaystyle \leftarrow } either...or exclusive disjunction ↮ ↮ {\displaystyle \nleftrightarrow } XOR if and only if biconditional ↔ ↔ {\displaystyle \leftrightarrow } XNOR not both alternative denial ↑ ↑ {\displaystyle \uparrow } NAND neither...nor joint denial ↓ ↓ {\displaystyle \downarrow } NOR but not material nonimplication ↛ ↛ {\displaystyle \nrightarrow } NIMPLY not...but converse nonimplication ↚ ↚ {\displaystyle \nleftarrow } Properties [ edit ] Some logical connectives possess properties that may be expressed in the theorems containing the connective. Some of those properties that a logical connective may have are: Associativity Within an expression containing two or more of the same associative connectives in a row, the order of the operations does not matter as long as the sequence of the operands is not changed.

Commutativity The operands of the connective may be swapped, preserving logical equivalence to the original expression.

Distributivity A connective denoted by · distributes over another connective denoted by +, if a · ( b + c ) = ( a · b ) + ( a · c ) for all operands a , b , c .

Idempotence Whenever the operands of the operation are the same, the compound is logically equivalent to the operand.

Absorption A pair of connectives ∧, ∨ satisfies the absorption law if a ∧ ∧ ( a ∨ ∨ b ) = a {\displaystyle a\land (a\lor b)=a} for all operands a , b .

Monotonicity If f ( a 1 , ..., a n ) ≤ f ( b 1 , ..., b n ) for all a 1 , ..., a n , b 1 , ..., b n ∈ {0,1} such that a 1 ≤ b 1 , a 2 ≤ b 2 , ..., a n ≤ b n . E.g., ∨, ∧, ⊤, ⊥.

Affinity Each variable always makes a difference in the truth-value of the operation or it never makes a difference. E.g., ¬, ↔, ↮ ↮ {\displaystyle \nleftrightarrow } , ⊤, ⊥.

Duality To read the truth-value assignments for the operation from top to bottom on its truth table is the same as taking the complement of reading the table of the same or another connective from bottom to top. Without resorting to truth tables it may be formulated as g̃ (¬ a 1 , ..., ¬ a n ) = ¬ g ( a 1 , ..., a n ) . E.g., ¬.

Truth-preserving The compound all those arguments are tautologies is a tautology itself. E.g., ∨, ∧, ⊤, →, ↔, ⊂ (see validity ).

Falsehood-preserving The compound all those argument are contradictions is a contradiction itself. E.g., ∨, ∧, ↮ ↮ {\displaystyle \nleftrightarrow } , ⊥, ⊄, ⊅ (see validity ).

Involutivity (for unary connectives) f ( f ( a )) = a . E.g. negation in classical logic.

For classical and intuitionistic logic, the "=" symbol means that corresponding implications "...→..." and "...←..." for logical compounds can be both proved as theorems, and the "≤" symbol means that "...→..." for logical compounds is a consequence of corresponding "...→..." connectives for propositional variables. Some many-valued logics may have incompatible definitions of equivalence and order (entailment).

Both conjunction and disjunction are associative, commutative and idempotent in classical logic, most varieties of many-valued logic and intuitionistic logic. The same is true about distributivity of conjunction over disjunction and disjunction over conjunction, as well as for the absorption law.

In classical logic and some varieties of many-valued logic, conjunction and disjunction are dual, and negation is self-dual, the latter is also self-dual in intuitionistic logic.

This section needs expansion . You can help by adding to it .

( March 2012 ) Order of precedence [ edit ] As a way of reducing the number of necessary parentheses, one may introduce precedence rules : ¬ has higher precedence than ∧, ∧ higher than ∨, and ∨ higher than →. So for example, P ∨ ∨ Q ∧ ∧ ¬ ¬ R → → S {\displaystyle P\vee Q\land {\neg R}\rightarrow S} is short for ( P ∨ ∨ ( Q ∧ ∧ ( ¬ ¬ R ) ) ) → → S {\displaystyle (P\vee (Q\land (\neg R)))\rightarrow S} .

Here is a table that shows a commonly used precedence of logical operators.

[ 18 ] [ 19 ] Operator Precedence ¬ ¬ {\displaystyle \neg } 1 ∧ ∧ {\displaystyle \land } 2 ∨ ∨ {\displaystyle \vee } 3 → → {\displaystyle \rightarrow } 4 ↔ ↔ {\displaystyle \leftrightarrow } 5 However, not all compilers use the same order; for instance, an ordering in which disjunction is lower precedence than implication or bi-implication has also been used.

[ 20 ] Sometimes precedence between conjunction and disjunction is unspecified requiring to provide it explicitly in given formula with parentheses. The order of precedence determines which connective is the "main connective" when interpreting a non-atomic formula.

Table and Hasse diagram [ edit ] The 16 logical connectives can be partially ordered to produce the following Hasse diagram . 
The partial order is defined by declaring that x ≤ ≤ y {\displaystyle x\leq y} if and only if whenever x {\displaystyle x} holds then so does y .

{\displaystyle y.} Applications [ edit ] Logical connectives are used in computer science and in set theory .

Computer science [ edit ] Main article: Logic gate A truth-functional approach to logical operators is implemented as logic gates in digital circuits . Practically all digital circuits (the major exception is DRAM ) are built up from NAND , NOR , NOT , and transmission gates ; see more details in Truth function in computer science . Logical operators over bit vectors (corresponding to finite Boolean algebras ) are bitwise operations .

But not every usage of a logical connective in computer programming has a Boolean semantic. For example, lazy evaluation is sometimes implemented for P ∧ Q and P ∨ Q , so these connectives are not commutative if either or both of the expressions P , Q have side effects . Also, a conditional , which in some sense corresponds to the material conditional connective, is essentially non-Boolean because for if (P) then Q; , the consequent Q is not executed if the antecedent P is false (although a compound as a whole is successful ≈ "true" in such case). This is closer to intuitionist and constructivist views on the material conditional— rather than to classical logic's views.

Set theory [ edit ] Main articles: Set theory and Axiomatic set theory Logical connectives are used to define the fundamental operations of set theory , [ 21 ] as follows: Set theory operations and connectives Set operation Connective Definition Intersection Conjunction A ∩ ∩ B = { x : x ∈ ∈ A ∧ ∧ x ∈ ∈ B } {\displaystyle A\cap B=\{x:x\in A\land x\in B\}} [ 22 ] [ 23 ] [ 24 ] Union Disjunction A ∪ ∪ B = { x : x ∈ ∈ A ∨ ∨ x ∈ ∈ B } {\displaystyle A\cup B=\{x:x\in A\lor x\in B\}} [ 25 ] [ 22 ] [ 23 ] Complement Negation A ¯ ¯ = { x : x ∉ ∉ A } {\displaystyle {\overline {A}}=\{x:x\notin A\}} [ 26 ] [ 23 ] [ 27 ] Subset Implication A ⊆ ⊆ B ↔ ↔ ( x ∈ ∈ A → → x ∈ ∈ B ) {\displaystyle A\subseteq B\leftrightarrow (x\in A\rightarrow x\in B)} [ 28 ] [ 23 ] [ 29 ] Equality Biconditional A = B ↔ ↔ ( ∀ ∀ X ) [ A ∈ ∈ X ↔ ↔ B ∈ ∈ X ] {\displaystyle A=B\leftrightarrow (\forall X)[A\in X\leftrightarrow B\in X]} [ 28 ] [ 23 ] [ 30 ] This definition of set equality is equivalent to the axiom of extensionality .

See also [ edit ] Philosophy portal Psychology portal Boolean domain Boolean function Boolean logic Boolean-valued function Catuṣkoṭi Dialetheism Four-valued logic List of Boolean algebra topics Logical conjunction Logical constant Modal operator Propositional calculus Term logic Tetralemma Truth function Truth table Truth values References [ edit ] ^ Chao, C. (2023).

数理逻辑：形式化方法的应用 [ Mathematical Logic: Applications of the Formalization Method ] (in Chinese). Beijing: Preprint. pp.

15– 28.

^ a b Heyting, A. (1930). "Die formalen Regeln der intuitionistischen Logik".

Sitzungsberichte der Preussischen Akademie der Wissenschaften, Physikalisch-mathematische Klasse (in German): 42– 56.

^ Denis Roegel (2002), A brief survey of 20th century logical notations (see chart on page 2).

^ Frege, G. (1879).

Begriffsschrift, eine der arithmetischen nachgebildete Formelsprache des reinen Denkens . Halle a/S.: Verlag von Louis Nebert. p. 10.

^ a b c Russell (1908) Mathematical logic as based on the theory of types (American Journal of Mathematics 30, p222–262, also in From Frege to Gödel edited by van Heijenoort).

^ Peano (1889) Arithmetices principia, nova methodo exposita .

^ a b Schönfinkel (1924) Über die Bausteine der mathematischen Logik , translated as On the building blocks of mathematical logic in From Frege to Gödel edited by van Heijenoort.

^ Peirce (1867) On an improvement in Boole's calculus of logic.

^ Hilbert, D. (1918). Bernays, P. (ed.).

Prinzipien der Mathematik . Lecture notes at Universität Göttingen, Winter Semester, 1917-1918 ; Reprinted as Hilbert, D. (2013). "Prinzipien der Mathematik". In Ewald, W.; Sieg, W. (eds.).

David Hilbert's Lectures on the Foundations of Arithmetic and Logic 1917–1933 . Heidelberg, New York, Dordrecht and London: Springer. pp.

59– 221.

^ Bourbaki, N. (1954).

Théorie des ensembles . Paris: Hermann & Cie, Éditeurs. p. 14.

^ Frege, G. (1879).

Begriffsschrift, eine der arithmetischen nachgebildete Formelsprache des reinen Denkens (in German). Halle a/S.: Verlag von Louis Nebert. p. 15.

^ Becker, A. (1933).

Die Aristotelische Theorie der Möglichkeitsschlösse: Eine logisch-philologische Untersuchung der Kapitel 13-22 von Aristoteles' Analytica priora I (in German). Berlin: Junker und Dünnhaupt Verlag. p. 4.

^ Bourbaki, N. (1954).

Théorie des ensembles (in French). Paris: Hermann & Cie, Éditeurs. p. 32.

^ Gentzen (1934) Untersuchungen über das logische Schließen .

^ Chazal (1996) : Éléments de logique formelle.

^ Hilbert, D. (1905) [1904]. "Über die Grundlagen der Logik und der Arithmetik". In Krazer, K. (ed.).

Verhandlungen des Dritten Internationalen Mathematiker Kongresses in Heidelberg vom 8. bis 13. August 1904 . pp.

174– 185.

^ Bocheński (1959), A Précis of Mathematical Logic , passim.

^ O'Donnell, John; Hall, Cordelia; Page, Rex (2007).

Discrete Mathematics Using a Computer . Springer. p. 120.

ISBN 9781846285981 .

.

^ Allen, Colin; Hand, Michael (2022).

Logic primer (3rd ed.). Cambridge, Massachusetts: The MIT Press.

ISBN 978-0-262-54364-4 .

^ Jackson, Daniel (2012).

Software Abstractions: Logic, Language, and Analysis . MIT Press. p. 263.

ISBN 9780262017152 .

.

^ Pinter, Charles C. (2014).

A book of set theory . Mineola, New York: Dover Publications, Inc. pp.

26– 29.

ISBN 978-0-486-49708-2 .

^ a b "Set operations" .

www.siue.edu . Retrieved 2024-06-11 .

^ a b c d e "1.5 Logic and Sets" .

www.whitman.edu . Retrieved 2024-06-11 .

^ "Theory Set" .

mirror.clarkson.edu . Retrieved 2024-06-11 .

^ "Set Inclusion and Relations" .

autry.sites.grinnell.edu . Retrieved 2024-06-11 .

^ "Complement and Set Difference" .

web.mnstate.edu . Retrieved 2024-06-11 .

^ Cooper, A.

"Set Operations and Subsets – Foundations of Mathematics" . Retrieved 2024-06-11 .

^ a b "Basic concepts" .

www.siue.edu . Retrieved 2024-06-11 .

^ Cooper, A.

"Set Operations and Subsets – Foundations of Mathematics" . Retrieved 2024-06-11 .

^ Cooper, A.

"Set Operations and Subsets – Foundations of Mathematics" . Retrieved 2024-06-11 .

Sources [ edit ] Bocheński, Józef Maria (1959), A Précis of Mathematical Logic , translated from the French and German editions by Otto Bird, D. Reidel, Dordrecht, South Holland.

Chao, C. (2023).

数理逻辑：形式化方法的应用 [ Mathematical Logic: Applications of the Formalization Method ] (in Chinese). Beijing: Preprint. pp.

15– 28.

Enderton, Herbert (2001).

A Mathematical Introduction to Logic (2nd ed.). Boston, MA: Academic Press.

ISBN 978-0-12-238452-3 .

Gamut, L.T.F (1991). "Chapter 2".

Logic, Language and Meaning . Vol. 1. University of Chicago Press. pp.

54– 64.

OCLC 21372380 .

Rautenberg, W.

(2010).

A Concise Introduction to Mathematical Logic (3rd ed.).

New York : Springer Science+Business Media .

doi : 10.1007/978-1-4419-1221-3 .

ISBN 978-1-4419-1220-6 .

.

Humberstone, Lloyd (2011).

The Connectives . MIT Press.

ISBN 978-0-262-01654-4 .

External links [ edit ] Wikimedia Commons has media related to Logical connectives .

"Propositional connective" .

Encyclopedia of Mathematics .

EMS Press . 2001 [1994].

Lloyd Humberstone (2010), " Sentence Connectives in Formal Logic ", Stanford Encyclopedia of Philosophy (An abstract algebraic logic approach to connectives.) John MacFarlane (2005), " Logical constants ", Stanford Encyclopedia of Philosophy .

v t e Common logical connectives Tautology / True ⊤ ⊤ {\displaystyle \top } Alternative denial ( NAND gate ) ∧ ∧ ¯ ¯ {\displaystyle {\overline {\wedge }}} Converse implication ⇐ ⇐ {\displaystyle \Leftarrow } Implication ( IMPLY gate ) ⇒ ⇒ {\displaystyle \Rightarrow } Disjunction ( OR gate ) ∨ ∨ {\displaystyle \lor } Negation ( NOT gate ) ¬ ¬ {\displaystyle \neg } Exclusive or ( XOR gate ) ⊕ ⊕ {\displaystyle \oplus } Biconditional ( XNOR gate ) ⊙ ⊙ {\displaystyle \odot } Statement ( Digital buffer ) Joint denial ( NOR gate ) ∨ ∨ ¯ ¯ {\displaystyle {\overline {\vee }}} Nonimplication ( NIMPLY gate ) ⇏ ⇏ {\displaystyle \nRightarrow } Converse nonimplication ⇍ ⇍ {\displaystyle \nLeftarrow } Conjunction ( AND gate ) ∧ ∧ {\displaystyle \land } Contradiction / False ⊥ ⊥ {\displaystyle \bot } Philosophy portal v t e Mathematical logic General Axiom list Cardinality First-order logic Formal proof Formal semantics Foundations of mathematics Information theory Lemma Logical consequence Model Theorem Theory Type theory Theorems ( list ) and paradoxes Gödel's completeness and incompleteness theorems Tarski's undefinability Banach–Tarski paradox Cantor's theorem, paradox and diagonal argument Compactness Halting problem Lindström's Löwenheim–Skolem Russell's paradox Logics Traditional Classical logic Logical truth Tautology Proposition Inference Logical equivalence Consistency Equiconsistency Argument Soundness Validity Syllogism Square of opposition Venn diagram Propositional Boolean algebra Boolean functions Logical connectives Propositional calculus Propositional formula Truth tables Many-valued logic 3 finite ∞ Predicate First-order list Second-order Monadic Higher-order Fixed-point Free Quantifiers Predicate Monadic predicate calculus Set theory Set hereditary Class ( Ur- ) Element Ordinal number Extensionality Forcing Relation equivalence partition Set operations: intersection union complement Cartesian product power set identities Types of sets Countable Uncountable Empty Inhabited Singleton Finite Infinite Transitive Ultrafilter Recursive Fuzzy Universal Universe constructible Grothendieck Von Neumann Maps and cardinality Function / Map domain codomain image In / Sur / Bi -jection Schröder–Bernstein theorem Isomorphism Gödel numbering Enumeration Large cardinal inaccessible Aleph number Operation binary Set theories Zermelo–Fraenkel axiom of choice continuum hypothesis General Kripke–Platek Morse–Kelley Naive New Foundations Tarski–Grothendieck Von Neumann–Bernays–Gödel Ackermann Constructive Formal systems ( list ), language and syntax Alphabet Arity Automata Axiom schema Expression ground Extension by definition conservative Relation Formation rule Grammar Formula atomic closed ground open Free/bound variable Language Metalanguage Logical connective ¬ ∨ ∧ → ↔ = Predicate functional variable propositional variable Proof Quantifier ∃ !

∀ rank Sentence atomic spectrum Signature String Substitution Symbol function logical/constant non-logical variable Term Theory list Example axiomatic systems ( list ) of arithmetic : Peano second-order elementary function primitive recursive Robinson Skolem of the real numbers Tarski's axiomatization of Boolean algebras canonical minimal axioms of geometry : Euclidean : Elements Hilbert's Tarski's non-Euclidean Principia Mathematica Proof theory Formal proof Natural deduction Logical consequence Rule of inference Sequent calculus Theorem Systems axiomatic deductive Hilbert list Complete theory Independence ( from ZFC ) Proof of impossibility Ordinal analysis Reverse mathematics Self-verifying theories Model theory Interpretation function of models Model equivalence finite saturated spectrum submodel Non-standard model of arithmetic Diagram elementary Categorical theory Model complete theory Satisfiability Semantics of logic Strength Theories of truth semantic Tarski's Kripke's T-schema Transfer principle Truth predicate Truth value Type Ultraproduct Validity Computability theory Church encoding Church–Turing thesis Computably enumerable Computable function Computable set Decision problem decidable undecidable P NP P versus NP problem Kolmogorov complexity Lambda calculus Primitive recursive function Recursion Recursive set Turing machine Type theory Related Abstract logic Algebraic logic Automated theorem proving Category theory Concrete / Abstract category Category of sets History of logic History of mathematical logic timeline Logicism Mathematical object Philosophy of mathematics Supertask Mathematics portal v t e Formal semantics (natural language) Central concepts Compositionality Denotation Entailment Extension Generalized quantifier Intension Logical form Presupposition Proposition Reference Scope Speech act Syntax–semantics interface Truth conditions Topics Areas Anaphora Ambiguity Binding Conditionals Definiteness Disjunction Evidentiality Focus Indexicality Lexical semantics Modality Negation Propositional attitudes Tense–aspect–mood Quantification Vagueness Phenomena Antecedent-contained deletion Cataphora Coercion Conservativity Counterfactuals Crossover effects Cumulativity De dicto and de re De se Deontic modality Discourse relations Donkey anaphora Epistemic modality Exhaustivity Faultless disagreement Free choice inferences Givenness Homogeneity (linguistics) Hurford disjunction Inalienable possession Intersective modification Logophoricity Mirativity Modal subordination Opaque contexts Performatives Polarity items Privative adjectives Quantificational variability effect Responsive predicate Rising declaratives Scalar implicature Sloppy identity Subsective modification Subtrigging Telicity Temperature paradox Veridicality Formalism Formal systems Alternative semantics Categorial grammar Combinatory categorial grammar Discourse representation theory (DRT) Dynamic semantics Generative grammar Glue semantics Inquisitive semantics Intensional logic Lambda calculus Mereology Montague grammar Segmented discourse representation theory (SDRT) Situation semantics Supervaluationism Type theory TTR Concepts Autonomy of syntax Context set Continuation Conversational scoreboard Downward entailing Existential closure Function application Meaning postulate Monads Plural quantification Possible world Quantifier raising Quantization Question under discussion Semantic parsing Squiggle operator Strawson entailment Strict conditional Type shifter Universal grinder See also Cognitive semantics Computational semantics Distributional semantics Formal grammar Inferentialism Logic translation Linguistics wars Philosophy of language Pragmatics Semantics of logic Authority control databases : National Germany NewPP limit report
Parsed by mw‐web.codfw.main‐6cc77c66b8‐kj7q9
Cached time: 20250812021439
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.996 seconds
Real time usage: 1.757 seconds
Preprocessor visited node count: 4305/1000000
Revision size: 34983/2097152 bytes
Post‐expand include size: 177581/2097152 bytes
Template argument size: 2275/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 9/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 156037/5000000 bytes
Lua time usage: 0.487/10.000 seconds
Lua memory usage: 8576404/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  850.136      1 -total
 27.94%  237.539      1 Template:Reflist
 20.76%  176.507     16 Template:Cite_book
 12.22%  103.885      1 Template:Logical_connectives_sidebar
 11.95%  101.582      1 Template:Sidebar
 11.79%  100.268      8 Template:Navbox
 11.72%   99.605      1 Template:Short_description
  8.17%   69.447      2 Template:Pagetype
  7.16%   60.880      1 Template:Commons_category
  6.92%   58.825      1 Template:Sister_project Saved in parser cache with key enwiki:pcache:18153:|#|:idhash:canonical and timestamp 20250812021439 and revision id 1294946902. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Logical_connective&oldid=1294946902 " Categories : Logical connectives Logic symbols Hidden categories: CS1 Chinese-language sources (zh) CS1 German-language sources (de) CS1 French-language sources (fr) Articles with short description Short description is different from Wikidata Articles to be expanded from March 2012 All articles to be expanded Commons category link from Wikidata Pages that use a deprecated format of the math tags This page was last edited on 10 June 2025, at 19:28 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Logical connective 42 languages Add topic

