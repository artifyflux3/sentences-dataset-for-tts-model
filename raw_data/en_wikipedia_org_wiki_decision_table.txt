Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Overview 2 Example 3 Software engineering benefits 4 History 5 Program embedded decision tables 6 Control tables 7 Implementations 8 See also 9 References 10 Further reading 11 External links Toggle the table of contents Decision table 12 languages العربية Dansk Deutsch فارسی Français Nederlands 日本語 Norsk bokmål Português Русский Suomi Українська Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Table specifying actions based on conditions Play golf dataset Independent variables Dep. var Outlook Temperature Humidity Windy Play sunny 85 85 FALSE Don't play sunny 80 90 TRUE Don't play overcast 83 78 FALSE Play rain 70 96 FALSE Play rain 68 80 FALSE Play rain 65 70 TRUE Don't play overcast 64 65 TRUE Play sunny 72 95 FALSE Don't play sunny 69 70 FALSE Play rain 75 80 FALSE Play sunny 75 70 TRUE Play overcast 72 90 TRUE Play overcast 81 75 FALSE Play rain 71 80 TRUE Don't play Decision tables are a concise visual representation for specifying which actions to perform depending on given conditions. Decision table is the term used for a Control table or State-transition table in the field of Business process modeling ; they are usually formatted as the transpose of the way they are formatted in Software engineering .

Overview [ edit ] Each decision corresponds to a variable, relation or predicate whose possible values are listed among the condition alternatives. Each action is a procedure or operation to perform, and the entries specify whether (or in what order) the action is to be performed for the set of condition alternatives the entry corresponds to.

To make them more concise, many decision tables include in their condition alternatives a don't care symbol. This can be a hyphen [ 1 ] [ 2 ] [ 3 ] or blank, [ 4 ] although using a blank is discouraged as it may merely indicate that the decision table has not been finished.

[ citation needed ] One of the uses of decision tables is to reveal conditions under which certain input factors are irrelevant on the actions to be taken, allowing these input tests to be skipped and thereby streamlining decision-making procedures.

[ 5 ] Demonstration of “don’t care” symbol Rules Conditions Feeling energetic?

Yes No Yes No Is raining?

Yes Yes No No Actions Stay inside Go running Tend the garden Rules Conditions Feeling energetic?

— Yes No Is raining?

Yes No No Actions Stay inside Go running Tend the garden The two tables convey identical information, but the second one uses a hyphen as a don't-care symbol for brevity.

Aside from the basic four quadrant structure, decision tables vary widely in the way the condition alternatives and action entries are represented.

[ 6 ] [ 7 ] Some decision tables use simple true/false values to represent the alternatives to a condition (similar to if-then-else), other tables may use numbered alternatives (similar to switch-case), and some tables even use fuzzy logic or probabilistic representations for condition alternatives.

[ 8 ] In a similar way, action entries can simply represent whether an action is to be performed (check the actions to perform), or in more advanced decision tables, the sequencing of actions to perform (number the actions to perform).

A decision table is considered balanced [ 4 ] or complete [ 3 ] if it includes every possible combination of input variables. In other words, balanced decision tables prescribe an action in every situation where the input variables are provided.

[ 4 ] Example [ edit ] The limited-entry decision table is the simplest to describe. The condition alternatives are simple Boolean values, and the action entries are check-marks, representing which of the actions in a given column are to be performed.

The following balanced decision table is an example in which a technical support company writes a decision table to enable technical support employees to efficiently diagnose printer problems based upon symptoms described to them over the phone from their clients.

Printer troubleshooter Rules Conditions Printer prints No No No No Yes Yes Yes Yes A red light is flashing Yes Yes No No Yes Yes No No Printer is recognized by computer No Yes No Yes No Yes No Yes Actions Check the power cable — Check the printer-computer cable — Ensure printer software is installed — Check/replace ink — Check for paper jam — This is just a simple example, and it does not necessarily correspond to the reality of printer troubleshooting. Even so, it demonstrates how decision tables can scale to several conditions with many possibilities.

Software engineering benefits [ edit ] Decision tables, especially when coupled with the use of a domain-specific language , allow developers and policy experts to work from the same information, the decision tables themselves.

Tools to render nested if statements from traditional programming languages into decision tables can also be used as a debugging tool.

[ 9 ] [ 10 ] Decision tables have proven to be easier to understand and review than code, and have been used extensively and successfully to produce specifications for complex systems.

[ 11 ] History [ edit ] In the 1960s and 1970s a range of "decision table based" languages such as Filetab were popular for business programming.

Program embedded decision tables [ edit ] Decision tables can be, and often are, embedded within computer programs and used to "drive" the logic of the program. A simple example might be a lookup table containing a range of possible input values and a function pointer to the section of code to process that input.

Static decision table Input Function Pointer "1" Function 1 (initialize) "2" Function 2 (process 2) "9" Function 9 (terminate) Control tables [ edit ] Multiple conditions can be coded for in similar manner to encapsulate the entire program logic in the form of an "executable" decision table or control table . There may be several such tables in practice, operating at different levels and often linked to each other (either by pointers or an index value).

Implementations [ edit ] Filetab , originally from the NCC DETAB/65, 1965, ACM FORTAB from Rand in 1962, designed to be imbedded in FORTRAN [ 12 ] A Ruby implementation exists using MapReduce to find the correct actions based on specific input values.

[ 13 ] See also [ edit ] Decision trees Case based reasoning Cause–effect graph Dominance-based rough set approach DRAKON Karnaugh-Veitch diagram Many-valued logic Semantic decision table Decision Model and Notation Truth table References [ edit ] ^ LI Jing (1 April 2015).

"SEEM 3430 Tutorial: Decision Tables" (PDF) . p. 23 . Retrieved 11 November 2017 .

^ "Creating a Decision Table in Business Rules" .

Oracle Help Center . 6 August 2017 . Retrieved 11 November 2017 .

^ a b Ross, Ronald G. (2005).

"Decision Tables, Part 2 ~ The Route to Completeness" .

Business Rules Journal .

6 (8) . Retrieved 11 November 2017 .

^ a b c Snow, Paul (19 July 2012).

"Decision Tables" .

DTRules: A Java Based Decision Table Rules Engine . Retrieved 11 November 2017 .

^ LI Jing 2015 , p. 24-25.

^ Rogers, William T.

"Decision Table Examples: Medical Insurance" .

Saint Xavier University Systems Analysis and Design . Archived from the original on March 29, 2007.

^ "Decision tables" . Archived from the original on 2012-09-08 . Retrieved 2010-07-07 .

^ Wets, Geert; Witlox, Frank; Timmermans, Harry; Vanthienen, Jan (1996).

"Locational choice modelling using fuzzy decision tables" .

New frontiers in fuzzy logic and computing: 1996 biennial conference of the North American Fuzzy Information Processing Society – NAFIPS . Berkeley, CA: IEEE. pp.

80– 84.

doi : 10.1109/NAFIPS.1996.534708 .

ISBN 0-7803-3225-3 .

S2CID 62056954 .

^ "A Real CCIDE Example" ^ "Experience With The Cope Decision Table Processor" . Archived from the original on 2017-05-04 . Retrieved 2010-07-07 .

^ Udo W. Pooch, "Translation of Decision Tables," ACM Computing Surveys, Volume 6, Issue 2 (June 1974) Pages: 125–151 ISSN 0360-0300 ^ "FORTAB: A Decision Table Language for Scientific Computing Applications" , 1962, Rand ^ Alexander Williams (2015).

"Ruby decision table parser" Further reading [ edit ] Dwyer, B. and Hutchings, K. (1977) "Flowchart Optimisation in Cope, a Multi-Choice Decision Table" Aust. Comp. J. Vol. 9 No. 3 p. 92 (Sep. 1977).

Fisher, D.L. (1966) "Data, Documentation and Decision Tables" Comm ACM Vol. 9 No. 1 (Jan. 1966) p. 26–31.

General Electric Company (1962) GE-225 TABSOL reference manual and GF-224 TABSOL application manual CPB-l47B (June 1962).

Grindley, C.B.B. (1968) "The Use of Decision Tables within Systematics" Comp. J. Vol. 11 No. 2 p. 128 (Aug. 1968).

Jackson, M.A. (1975) Principles of Program Design Academic Press Myers, H.J. (1972) "Compiling Optimised Code from Decision Tables" IBM J. Res. & Development (Sept. 1972) p. 489–503.

Pollack, S.L. (1962) "DETAB-X: An improved business-oriented computer language" Rand Corp. Memo RM-3273-PR (August 1962) Schumacher, H. and Sevcik, K.C. (1976) "The Synthetic Approach to Decision Table Conversion" Comm. ACM Vol. 19 No. 6 (June 1976) p. 343–351 CSA, (1970): Z243.1–1970 for Decision Tables, Canadian Standards Association Jorgensen, Paul C. (2009) Modeling Software Behavior: A Craftsman's Approach. Auerbach Publications, CRC Press. Chapter 5.

External links [ edit ] RapidGen Software For Windows, Unix, Linux and OpenVMS versions of decision table based programming tools and compilers LogicGem Software For Windows decision table processor for perfecting logic and business rules LF-ET Software For Windows, Unix, Linux a decision table editor, program generator and test case generator [1] A Decision Table Example v t e Decision theory Core concepts Ambiguity aversion Bounded rationality Choice architecture Expected utility Expected value Hyperbolic discounting Leximin Loss aversion Multi-attribute utility Path dependence Principle of indifference Prospect theory Rational choice theory Risk aversion Risk-seeking Satisficing Strategic dominance Subjective expected utility Sure-thing Utility theorem Decision models Anscombe-Aumann framework Causal decision Decision field theory Emotional choice Evidential decision Fuzzy-trace theory Intertemporal choice Naturalistic decision Normative model Quantum cognition Recognition-primed decision Rubicon model Savage's subjective expected utility model Decision analysis tools Analytic hierarchy process Analytic network process Cost–benefit analysis Cost-effectiveness analysis Cost–utility analysis Decision conferencing Decision curve analysis Decision rule Decision support system Decision table Decision tree Decision matrix Decisional balance sheet Gittins index Influence diagram Minimax MCDA Scoring rule Value of information perfect sample uncertainty Paradoxes and biases Allais paradox Certainty effect Cognitive bias Decoy effect Disposition effect Ellsberg paradox Endowment effect Framing effect Heuristics Newcomb's paradox Pseudocertainty effect Reference dependence Regret St. Petersburg paradox Status quo bias Sunk cost Uncertainty and risk Deep uncertainty Exploration–exploitation Info-gap Pignistic probability Robust decision-making Related fields Behavioral economics Game theory Operations research Social choice theory Utility theory Key people David Blackwell Bruno de Finetti Morris H. DeGroot Peter C. Fishburn Gerd Gigerenzer Itzhak Gilboa Daniel Kahneman R. Duncan Luce Oskar Morgenstern Howard Raiffa Leonard J. Savage David Schmeidler Herbert Simon Amos Tversky John von Neumann Category Retrieved from " https://en.wikipedia.org/w/index.php?title=Decision_table&oldid=1305046161 " Categories : Software testing Decision analysis Hidden categories: Articles with short description Short description is different from Wikidata All articles with unsourced statements Articles with unsourced statements from November 2017 This page was last edited on 9 August 2025, at 18:55 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Decision table 12 languages Add topic

