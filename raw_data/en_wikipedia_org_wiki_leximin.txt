Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Definition 2 Examples 3 Related order relations 4 Applications Toggle Applications subsection 4.1 In social choice 4.2 In multicriteria decision 4.3 In flow networks 4.4 In game theory 5 Representation 6 See also 7 References Toggle the table of contents Leximin order Add languages Add links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia (Redirected from Leximin ) Concept in mathematics Not to be confused with Lexis minima .

In mathematics, leximin order is a total preorder on finite-dimensional vectors. A more accurate but less common term is leximin preorder . The leximin order is particularly important in social choice theory and fair division .

[ 1 ] [ 2 ] [ 3 ] Definition [ edit ] A vector x = ( x 1 , ..., x n ) is leximin-larger than a vector y = ( y 1 , ..., y n ) if one of the following holds: The smallest element of x is larger than the smallest element of y ; The smallest elements of both vectors are equal, and the second-smallest element of x is larger than the second-smallest element of y ; ...

The k smallest elements of both vectors are equal, and the ( k +1)-smallest element of x is larger than the ( k +1)-smallest element of y .

Examples [ edit ] The vector (3,5,3) is leximin-larger than (4,2,4), since the smallest element in the former is 3 and in the latter is 2. The vector (4,2,4) is leximin-larger than (5,3,2), since the smallest elements in both are 2, but the second-smallest element in the former is 4 and in the latter is 3.

Vectors with the same multiset of elements are equivalent w.r.t. the leximin preorder, since they have the same smallest element, the same second-smallest element, etc. For example, the vectors (4,2,4) and (2,4,4) are leximin-equivalent (but both are leximin-larger than (2,4,2)).

Related order relations [ edit ] In the lexicographic order , the first comparison is between x 1 and y 1 , regardless of whether they are smallest in their vectors. The second comparison is between x 2 and y 2 , and so on.

For example, the vector (3,5,3) is lexicographically smaller than (4,2,4), since the first element in the former is 3 and in the latter it is 4. Similarly, (4,2,4) is lexicographically larger than (2,4,4).

The following algorithm can be used to compute whether x is leximin-larger than y : Let x' be a vector containing the same elements of x but in ascending order; Let y' be a vector containing the same elements of y but in ascending order; Return "true" iff x' is lexicographically-larger than y ' .

The leximax order is similar to the leximin order except that the first comparison is between the largest elements ; the second comparison is between the second-largest elements; and so on.

Applications [ edit ] In social choice [ edit ] In social choice theory , [ 4 ] particularly in fair division , [ 1 ] the leximin order is one of the orders used to choose between alternatives. In a typical social choice problem, society has to choose among several alternatives (for example: several ways to allocate a set of resources). Each alternative induces a utility profile - a vector in which element i is the utility of agent i in the allocation. An alternative is called leximin-optimal if its utility-profile is (weakly) leximin-larger than the utility profile of all other alternatives.

For example, suppose there are three alternatives: x gives a utility of 2 to Alice and 4 to George; y gives a utility of 9 to Alice and 1 to George; and z gives a utility of 1 to Alice and 8 to George. Then alternative x is leximin-optimal, since its utility profile is (2,4) which is leximin-larger than that of y (9,1) and z (1,8). The leximin-optimal solution is always Pareto-efficient .

The leximin rule selects, from among all possible allocations, the leximin-optimal ones. It is often called the egalitarian rule ; see that page for more information on its computation and applications. For particular applications of the leximin rule in fair division, see: Leximin cake-cutting Leximin item allocation In multicriteria decision [ edit ] In Multiple-criteria decision analysis a decision has to be made, and there are several criteria on which the decision should be based (for example: cost, quality, speed, etc.). One way to decide is to assign, to each alternative, a vector of numbers representing its value in each of the criteria, and chooses the alternative whose vector is leximin-optimal.

[ 5 ] The leximin-order is also used for multi-objective optimization , [ 6 ] for example, in optimal resource allocation, [ 7 ] location problems, [ 8 ] and matrix games.

[ 9 ] It is also studied in the context of fuzzy constraint solving problems .

[ 10 ] [ 11 ] In flow networks [ edit ] The leximin order can be used as a rule for solving network flow problems . Given a flow network, a source s , a sink t , and a specified subset E of edges, a flow is called leximin-optimal (or decreasingly minimal ) on E if it minimizes the largest flow on an edge of E , subject to this minimizes the second-largest flow, and so on. There is a polynomial-time algorithm for computing a cheapest leximin-optimal integer-valued flow of a given flow amount. It is a possible way to define a fair flow .

[ 12 ] In game theory [ edit ] Main article: Nucleolus (game theory) One kind of a solution to a cooperative game is the payoff-vector that minimizes the leximin vector of excess-values of coalitions, among all payoff-vectors that are efficient and individually-rational. This solution is called the nucleolus .

Representation [ edit ] A representation of an ordering on a set of vectors is a function f that assigns a single number to each vector, such that the ordering between the numbers is identical to the ordering between the vectors. That is, f ( x ) ≥ f ( y ) iff x is larger than y by that ordering. When the number of possible vectors is countable (e.g. when all vectors are integral and bounded), the leximin order can be represented by various functions, for example: f ( x ) = − − ∑ ∑ i = 1 n n − − x i {\displaystyle f(\mathbf {x} )=-\sum _{i=1}^{n}n^{-x_{i}}} ; [ 13 ] f ( x ) = − − ∑ ∑ i = 1 n x i − − q {\displaystyle f(\mathbf {x} )=-\sum _{i=1}^{n}x_{i}^{-q}} , where q is a sufficiently large constant; [ 14 ] f ( x ) = ∑ ∑ i = 1 n w i ⋅ ⋅ ( x ↑ ↑ ) i {\displaystyle f(\mathbf {x} )=\sum _{i=1}^{n}w_{i}\cdot (x^{\uparrow })_{i}} , where x ↑ ↑ {\displaystyle \mathbf {x^{\uparrow }} } is vector x sorted in ascending order, and w 1 ≫ ≫ w 2 ≫ ≫ ⋯ ⋯ ≫ ≫ w n {\displaystyle w_{1}\gg w_{2}\gg \cdots \gg w_{n}} .

[ 15 ] [ 16 ] However, when the set of possible vectors is uncountable (e.g. real vectors), no function (whether contiuous or not) can represent the leximin order.

[ 14 ] : 34 The same is true for the lexicographic order .

See also [ edit ] Lexicographic max-min optimization is the computational problem of finding a maximal element of the leximin order in a given set.

References [ edit ] ^ a b Herve Moulin (2004).

Fair Division and Collective Welfare . Cambridge, Massachusetts: MIT Press.

ISBN 9780262134231 .

^ Barbarà, Salvador; Jackson, Matthew (1988-10-01).

"Maximin, leximin, and the protective criterion: Characterizations and comparisons" .

Journal of Economic Theory .

46 (1): 34– 44.

doi : 10.1016/0022-0531(88)90148-2 .

ISSN 0022-0531 .

^ Yager, Ronald R. (1997-10-01).

"On the analytic representation of the Leximin ordering and its application to flexible constraint propagation" .

European Journal of Operational Research .

102 (1): 176– 192.

doi : 10.1016/S0377-2217(96)00217-2 .

ISSN 0377-2217 .

^ Sen, Amartya (2017-02-20).

Collective Choice and Social Welfare . Harvard University Press.

doi : 10.4159/9780674974616 .

ISBN 978-0-674-97461-6 .

^ Dubois, Didier; Fargier, Hélène ; Prade, Henri (1997), Yager, Ronald R.; Kacprzyk, Janusz (eds.), "Beyond Min Aggregation in Multicriteria Decision: (Ordered) Weighted Min, Discri-Min, Leximin" , The Ordered Weighted Averaging Operators: Theory and Applications , Boston, MA: Springer US, pp.

181– 192, doi : 10.1007/978-1-4615-6123-1_15 , ISBN 978-1-4615-6123-1 , retrieved 2021-06-11 ^ Ehrgott, Matthias (2005-05-18).

Multicriteria Optimization . Springer Science & Business Media.

ISBN 978-3-540-21398-7 .

^ Luss, Hanan (1999-06-01).

"On Equitable Resource Allocation Problems: A Lexicographic Minimax Approach" .

Operations Research .

47 (3): 361– 378.

doi : 10.1287/opre.47.3.361 .

ISSN 0030-364X .

^ Ogryczak, Włodzimierz (1997-08-01).

"On the lexicographic minimax approach to location problems" .

European Journal of Operational Research .

100 (3): 566– 585.

doi : 10.1016/S0377-2217(96)00154-3 .

ISSN 0377-2217 .

^ Potters, Jos A. M.; Tijs, Stef H.

(1992-02-01).

"The Nucleolus of a Matrix Game and Other Nucleoli" .

Mathematics of Operations Research .

17 (1): 164– 174.

doi : 10.1287/moor.17.1.164 .

hdl : 2066/223732 .

ISSN 0364-765X .

S2CID 40275405 .

^ Dubois, Didier; Fortemps, Philippe (1999-10-01).

"Computing improved optimal solutions to max–min flexible constraint satisfaction problems" .

European Journal of Operational Research .

118 (1): 95– 126.

doi : 10.1016/S0377-2217(98)00307-5 .

ISSN 0377-2217 .

^ Pires, J.M.; Prade, H. (1998-05-01).

"Logical analysis of fuzzy constraint satisfaction problems" .

1998 IEEE International Conference on Fuzzy Systems Proceedings. IEEE World Congress on Computational Intelligence (Cat. No.98CH36228) (PDF) . Vol. 1. pp. 857–862 vol.1.

doi : 10.1109/FUZZY.1998.687603 .

ISBN 0-7803-4863-X .

S2CID 123126673 .

^ Frank, András ; Murota, Kazuo (2020-09-18). "Fair integral network flows".

Mathematics of Operations Research .

48 (3): 1393– 1422.

arXiv : 1907.02673 .

doi : 10.1287/moor.2022.1303 .

S2CID 246411731 .

^ Frisch, Alan M.; Hnich, Brahim; Kiziltan, Zeynep; Miguel, Ian; Walsh, Toby (2009-02-01).

"Filtering algorithms for the multiset ordering constraint" .

Artificial Intelligence .

173 (2): 299– 328.

arXiv : 0903.0460 .

doi : 10.1016/j.artint.2008.11.001 .

ISSN 0004-3702 .

S2CID 7869870 .

^ a b Moulin, Herve (1991-07-26).

Axioms of Cooperative Decision Making . Cambridge University Press.

ISBN 978-0-521-42458-5 .

^ Yager, R.R. (1988-01-01). "On ordered weighted averaging aggregation operators in multicriteria decisionmaking".

IEEE Transactions on Systems, Man, and Cybernetics .

18 (1): 183– 190.

doi : 10.1109/21.87068 .

ISSN 2168-2909 .

^ Yager, Ronald R. (1997-10-01).

"On the analytic representation of the Leximin ordering and its application to flexible constraint propagation" .

European Journal of Operational Research .

102 (1): 176– 192.

doi : 10.1016/S0377-2217(96)00217-2 .

ISSN 0377-2217 .

NewPP limit report
Parsed by mw‐web.eqiad.main‐74cbc45b88‐hpnwn
Cached time: 20250812025332
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.409 seconds
Real time usage: 0.524 seconds
Preprocessor visited node count: 1422/1000000
Revision size: 13032/2097152 bytes
Post‐expand include size: 42048/2097152 bytes
Template argument size: 447/2097152 bytes
Highest expansion depth: 16/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 65007/5000000 bytes
Lua time usage: 0.265/10.000 seconds
Lua memory usage: 6206380/52428800 bytes
Number of Wikibase entities loaded: 0/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  437.197      1 -total
 62.05%  271.282      1 Template:Reflist
 31.23%  136.527      5 Template:Cite_book
 24.26%  106.053      1 Template:Cite_Moulin_2004
 20.15%   88.103     10 Template:Cite_journal
 19.27%   84.260      1 Template:Short_description
 10.59%   46.303      2 Template:Pagetype
  7.37%   32.202      1 Template:Distinguish
  6.82%   29.822      1 Template:Rp
  5.78%   25.285      1 Template:R/superscript Saved in parser cache with key enwiki:pcache:65470806:|#|:idhash:canonical and timestamp 20250812025332 and revision id 1301718789. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Leximin_order&oldid=1301718789 " Categories : Fairness criteria Vector calculus Egalitarianism Hidden categories: Articles with short description Short description matches Wikidata This page was last edited on 21 July 2025, at 09:21 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Leximin order Add languages Add topic

