Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Standard versions 2 History 3 Document validity Toggle Document validity subsection 3.1 Terminology 4 Syntax Toggle Syntax subsection 4.1 Optional features 4.2 Concrete and abstract syntaxes 4.3 Markup minimization 4.3.1 OMITTAG 4.3.2 SHORTREF 4.3.3 SHORTTAG 4.3.4 NET 4.3.5 Other features 5 Formal characterization 6 Derivatives Toggle Derivatives subsection 6.1 XML 6.2 HTML 6.3 OED 6.4 Others 7 Applications 8 Open-source implementations 9 See also 10 References 11 External links Toggle the table of contents Standard Generalized Markup Language 40 languages العربية Беларуская (тарашкевіца) Български Català Čeština Deutsch Eesti Español Esperanto فارسی Français Frysk Gaeilge Galego 한국어 Bahasa Indonesia Interlingua Italiano Қазақша Кыргызча Latviešu Lietuvių Magyar Nederlands 日本語 Norsk bokmål Norsk nynorsk Polski Português Русский Shqip Slovenčina Српски / srpski Suomi Svenska Türkçe Українська Vèneto Tiếng Việt 中文 Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikimedia Commons Wikiversity Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Markup language Standard Generalized Markup Language Filename extension .sgml Internet media type application/sgml, text/sgml Uniform Type Identifier (UTI) public.xml [ citation needed ] Developed by ISO Type of format Markup language Extended from GML Extended to HTML , XML Standard ISO 8879 The Standard Generalized Markup Language ( SGML ; ISO 8879:1986) is a standard for defining generalized markup languages for documents. ISO 8879 Annex A.1 states that generalized markup is "based on two postulates ": [ 1 ] Declarative: Markup should describe a document's structure and other attributes rather than specify the processing that needs to be performed, because it is less likely to conflict with future developments.

Rigorous: In order to allow markup to take advantage of the techniques available for processing, markup should rigorously define objects like programs and databases .

DocBook SGML and LinuxDoc are examples which used SGML tools.

Standard versions [ edit ] SGML is an ISO standard:  "ISO 8879:1986 Information processing – Text and office systems – Standard Generalized Markup Language (SGML)", of which there are three versions: Original SGML , which was accepted in October 1986, followed by a minor Technical Corrigendum.

SGML (ENR) , in 1996, resulted from a Technical Corrigendum to add extended naming rules allowing arbitrary-language and -script markup.

SGML (ENR+WWW or WebSGML) , in 1998, resulted from a Technical Corrigendum to better support XML and WWW requirements.

SGML is part of a trio of enabling ISO standards for electronic documents developed by ISO/IEC JTC 1/SC 34 [ 1 ] [ 2 ] (ISO/IEC Joint Technical Committee 1, Subcommittee 34 – Document description and processing languages) : SGML (ISO 8879) – Generalized markup language SGML was reworked in 1998 into XML , a successful profile of SGML. Full SGML is rarely found or used in new projects.

DSSSL (ISO/IEC 10179) – Document processing and styling language based on Scheme .

DSSSL was reworked into [ clarification needed ] W3C XSLT and XSL-FO which use an XML syntax. Nowadays, DSSSL is rarely used in new projects apart from Linux documentation.

HyTime – Generalized hypertext and scheduling.

[ 3 ] HyTime was partially reworked into W3C XLink . HyTime is rarely used in new projects.

SGML is supported by various technical reports, in particular ISO/IEC TR 9573 – Information processing – SGML support facilities – Techniques for using SGML [ 4 ] Part 13: Public entity sets for mathematics and science In 2007, the W3C MathML working group agreed to assume the maintenance of these entity sets.

History [ edit ] SGML descended from IBM 's Generalized Markup Language (GML), which Charles Goldfarb , Edward Mosher, and Raymond Lorie developed in the 1960s. Goldfarb, editor of the international standard, coined the "GML" term using their surname initials.

[ 5 ] Goldfarb also wrote the definitive work on SGML syntax in "The SGML Handbook".

[ 6 ] The syntax of SGML is closer to the COCOA format.

[ clarification needed ] As a document markup language, SGML was originally designed to enable the sharing of machine-readable large-project documents in government, law, and industry. Many such documents must remain readable for several decades—a long time in the information technology field. SGML also was extensively applied by the military, and the aerospace, technical reference, and industrial publishing industries. The  advent of the XML profile has made SGML suitable for widespread application for small-scale, general-purpose use.

Document validity [ edit ] SGML (ENR+WWW) defines two kinds of validity. According to the revised Terms and Definitions of ISO 8879 (from the public draft [ 7 ] ): A conforming SGML document must be either a type-valid SGML document, a tag-valid SGML document, or both.  Note: A user may wish to enforce additional constraints on a document, such as whether a document instance is integrally-stored or free of entity references.

A type-valid SGML document is defined by the standard as An SGML document in which, for each document instance, there is an associated document type declaration (DTD) to whose DTD that instance conforms.

A tag-valid SGML document is defined by the standard as An SGML document, all of whose document instances are fully tagged. There need not be a document type declaration associated with any of the instances. Note: If there is a document type declaration , the instance can be parsed with or without reference to it.

Terminology [ edit ] Tag-validity was introduced in SGML (ENR+WWW) to support XML which allows documents with no DOCTYPE declaration but which can be parsed without a grammar, or documents which have a DOCTYPE declaration that makes no XML Infoset contributions to the document. The standard calls this fully tagged .

Integrally stored reflects the XML requirement that elements end in the same entity in which they started.

Reference-free reflects the HTML requirement that entity references are for special characters and do not contain markup. SGML validity commentary, especially commentary that was made before 1997 or that is unaware of SGML (ENR+WWW), covers type-validity only.

The SGML emphasis on validity supports the requirement for generalized markup that markup should be rigorous.

(ISO 8879 A.1) Syntax [ edit ] An SGML document may have three parts: the SGML Declaration, the Prologue, containing a DOCTYPE declaration with the various markup declarations that together make a Document Type Definition (DTD), and the instance itself, containing one top-most element and its contents.

An SGML document may be composed from many entities (discrete pieces of text). In SGML, the entities and element types used in the document may be specified with a DTD, the different character sets, features, delimiter sets, and keywords are specified in the SGML Declaration to create the concrete syntax of the document.

Although full SGML allows implicit markup and some other kinds of tags, the XML specification (s4.3.1) states: Each XML document has both a logical and a physical structure. Physically, the document is composed of units called entities. An entity may refer to other entities to cause their inclusion in the document. A document begins in a "root" or document entity. Logically, the document is composed of declarations, elements, comments, character references, and processing instructions , all of which are indicated in the document by explicit markup.

For introductory information on a basic, modern SGML syntax, see XML . The following material concentrates on features not in XML and is not a comprehensive summary of SGML syntax.

Optional features [ edit ] SGML generalizes and supports a wide range of markup languages as found in the mid 1980s. These ranged from terse Wiki -like syntaxes to RTF -like bracketed languages to HTML -like matching-tag languages. SGML did this by a relatively simple default reference concrete syntax augmented with a large number of optional features that could be enabled in the SGML Declaration. Not every SGML parser can necessarily process every SGML document. Because each processor's System Declaration can be compared to the document's SGML Declaration it is always possible to know whether a document is supported by a particular processor.

Many SGML features relate to markup minimization. Other features relate to concurrent (parallel) markup (CONCUR), to linking processing attributes (LINK), and to embedding SGML documents within SGML documents (SUBDOC).

The notion of customizable features was not appropriate for Web use, so one goal of XML was to minimize optional features. However, XML's well-formedness rules cannot support Wiki-like languages, leaving them unstandardized and difficult to integrate with non-text information systems.

Concrete and abstract syntaxes [ edit ] The usual (default) SGML concrete syntax resembles this example, which is the default HTML concrete syntax: <QUOTE TYPE= "example" > typically something like <ITALICS> this </ITALICS> </QUOTE> SGML provides an abstract syntax that can be implemented in many different types of concrete syntax . Although the markup norm is using angle brackets as start- and end-tag delimiters in an SGML document (per the standard-defined reference concrete syntax ), it is possible to use other characters—provided a suitable concrete syntax is defined in the document's SGML declaration .

[ 8 ] For example, an SGML interpreter might be programmed to parse GML, wherein the tags are delimited with a left colon and a right full stop , and an :e prefix denotes an end tag: :xmp.Hello, world:exmp.

. According to the reference syntax, letter case (upper- or lower-case) is not distinguished in tag names, so the three tags <quote> , <QUOTE> , and <quOtE> are equivalent. (A concrete syntax might change this rule via the NAMECASE NAMING declarations.) Markup minimization [ edit ] SGML has features for reducing the number of characters required to mark up a document, which must be enabled in the SGML Declaration. SGML processors need not support every available feature, thus allowing applications to tolerate many types of inadvertent markup omissions; however, SGML systems usually are intolerant of invalid structures. XML is intolerant of syntax omissions, and does not require a DTD for checking well-formedness.

OMITTAG [ edit ] Both start tags and end tags may be omitted from a document instance, provided: the OMITTAG feature is enabled in the SGML Declaration, the DTD indicates that the tags are permitted to be omitted, (for start tags) the element has no associated required ( #REQUIRED ) attributes, and the tag can be unambiguously inferred by context.

For example, if OMITTAG YES is specified in the SGML Declaration (enabling the OMITTAG feature), and the DTD includes the following declarations: <!ELEMENT chapter - - ( title , section +) > <!ELEMENT title o o ( #PCDATA ) > <!ELEMENT section - - ( title , subsection +) > then this excerpt: <chapter> Introduction to SGML <section> The SGML Declaration <subsection> ...

which omits two <title> tags and two </title> tags, would represent valid markup.

Omitting tags is optional – the same excerpt could be tagged like this: <chapter><title> Introduction to SGML </title> <section><title> The SGML Declaration </title> <subsection> ...

and would still represent valid markup.

Note: The OMITTAG feature is unrelated to the tagging of elements whose declared content is EMPTY as defined in the DTD: <!ELEMENT image - o EMPTY > Elements defined like this have no end tag, and specifying one in the document instance would result in invalid markup. This is syntactically different from XML empty elements in this regard.

SHORTREF [ edit ] Tags can be replaced with delimiter strings, for a terser markup, via the SHORTREF feature. This markup style is now associated with wiki markup , e.g. wherein two equals-signs (==), at the start of a line, are the "heading start-tag", and two equals signs (==) after that are the "heading end-tag".

SHORTTAG [ edit ] SGML markup languages whose concrete syntax enables the SHORTTAG VALUE feature, do not require attribute values containing only alphanumeric characters to be enclosed within quotation marks—either double " " (LIT) or single ' ' (LITA)—so that the previous markup example could be written: <QUOTE TYPE= example > typically something like <ITALICS> this < /> </QUOTE> One feature of SGML markup languages is the "presumptuous empty tagging", such that the empty end tag </> in <ITALICS>this</> "inherits" its value from the nearest previous full start tag, which, in this example, is <ITALICS> (in other words, it closes the most recently opened item).  The expression is thus equivalent to <ITALICS>this</ITALICS> .

NET [ edit ] Another feature is the NET (Null End Tag) construction: <ITALICS/this/ , which is structurally equivalent to <ITALICS>this</ITALICS> .

Other features [ edit ] Additionally, the SHORTTAG NETENABL IMMEDNET feature allows shortening tags surrounding an empty text value, but forbids shortening full tags: <QUOTE></QUOTE> can be written as <QUOTE// wherein the first slash ( / ) stands for the NET-enabling "start-tag close" (NESTC), and the second slash stands for the NET.

NOTE: XML defines NESTC with a / , and NET with an > (angled bracket)—hence the corresponding construct in XML appears as <QUOTE/> .

The third feature is 'text on the same line', allowing a markup item to be ended with a line-end; especially useful for headings and such, requiring using either SHORTREF or DATATAG minimization. For example, if the DTD includes the following declarations: <!ELEMENT lines ( line *) > <!ELEMENT line O - ( #PCDATA ) > <!ENTITY line-tagc "</line>" > <!SHORTREF one-line "&#RE;&#RS;" line-tagc > <!USEMAP one-line line > (and "&#RE;&#RS;" is a short-reference delimiter in the concrete syntax), then: <lines> first line
second line </lines> is equivalent to: <lines> <line> first line </line> <line> second line </line> </lines> Formal characterization [ edit ] SGML has many features that defied convenient description with the popular formal automata theory and the contemporary parser technology of the 1980s and the 1990s. The standard warns in Annex H: The SGML model group notation was deliberately designed to resemble the regular expression notation of automata theory, because automata theory provides a theoretical foundation for some aspects of the notion of conformance to a content model. No assumption should be made about the general applicability of automata to content models.

A report on an early implementation of a parser for basic SGML, the Amsterdam SGML Parser, [ 9 ] notes the DTD-grammar in SGML must conform to a notion of unambiguity which closely resembles the LL(1) conditions and specifies various differences.

There appears to be no definitive classification of full SGML against a known class of formal grammar . Plausible classes may include tree-adjoining grammars and adaptive grammars .

XML is described as being generally parsable like a two-level grammar for non-validated XML and a Conway -style pipeline of coroutines ( lexer , parser , validator) for valid XML.

[ 10 ] The SGML productions in the ISO standard are reported to be LL(3) or LL(4).

[ 11 ] XML-class subsets are reported to be expressible using a W-grammar .

[ 12 ] According to one paper, [ 13 ] probably considered at an information set or parse tree level rather than a character or delimiter level: The class of documents that conform to a given SGML document grammar forms an LL(1) language. ... The SGML document grammars by themselves are, however, not LL(1) grammars.

The SGML standard does not define SGML with formal data structures, such as parse trees ; however, an SGML document is constructed of a rooted directed acyclic graph (RDAG) of physical storage units known as " entities ", which is parsed into a RDAG of structural units known as "elements". The physical graph is loosely characterized as an entity tree , but entities might appear multiple times. Moreover, the structure graph is also loosely characterized as an element tree , but the ID/IDREF markup allows arbitrary arcs.

The results of parsing can also be understood as a data tree in different notations; where the document is the root node, and entities in other notations (text, graphics) are child nodes. SGML provides apparatus for linking to and annotating external non-SGML entities.

The SGML standard describes it in terms of maps and recognition modes (s9.6.1). Each entity, and each element, can have an associated notation or declared content type , which determines the kinds of references and tags which will be recognized in that entity and element. Also, each element can have an associated delimiter map (and short reference map ), which determines which characters are treated as delimiters in context. The SGML standard characterizes parsing as a state machine switching between recognition modes. During parsing, there is a stack of maps that configure the scanner , while the tokenizer relates to the recognition modes.

Parsing involves traversing the dynamically-retrieved entity graph, finding/implying tags and the element structure, and validating those tags against the grammar. An unusual aspect of SGML is that the grammar (DTD) is used both passively — to recognize lexical structures, and actively — to generate missing structures and tags that the DTD has declared optional. End- and start- tags can be omitted, because they can be inferred. Loosely, a series of tags can be omitted only if there is a single, possible path in the grammar to imply them. It was this active use of grammars that made concrete SGML parsing difficult to formally characterize.

SGML uses the term validation for both recognition and generation. XML does not use the grammar (DTD) to change delimiter maps or to inform the parse modes, and does not allow tag omission ; consequently, XML validation of elements is not active in the sense that SGML validation is active. SGML without a DTD (e.g. simple XML), is a grammar or a language; SGML with a DTD is a metalanguage . SGML with an SGML declaration is, perhaps, a meta-metalanguage, since it is a metalanguage whose declaration mechanism is a metalanguage.

SGML has an abstract syntax implemented by many possible concrete syntaxes; however, this is not the same usage as in an abstract syntax tree and as in a concrete syntax tree . In the SGML usage, a concrete syntax is a set of specific delimiters, while the abstract syntax is the set of names for the delimiters. The XML Infoset corresponds more to the programming language notion of abstract syntax introduced by John McCarthy .

Derivatives [ edit ] XML [ edit ] Main article: XML The W3C XML (Extensible Markup Language) is a profile (subset) of SGML designed to ease the implementation of the parser compared to a full SGML parser, primarily for use on the World Wide Web. In addition to disabling many SGML options present in the reference syntax (such as omitting tags and nested subdocuments) XML adds a number of additional restrictions on the kinds of SGML syntax.  For example, despite enabling SGML shortened tag forms, XML does not allow unclosed start or end tags. It also relied on many of the additions made by the WebSGML Annex. XML currently is more widely used than full SGML. XML has lightweight internationalization based on Unicode . Applications of XML include XHTML , XQuery , XSLT , XForms , XPointer , JSP , SVG , RSS , Atom , XML-RPC , RDF/XML , and SOAP .

HTML [ edit ] Main article: HTML While HTML (Hyper Text Markup Language) was developed partially independently and in parallel with SGML, its creator, Tim Berners-Lee , intended it to be an application of SGML.

[ 14 ] [ 15 ] The design of HTML was therefore inspired by SGML tagging, but, since no clear expansion and parsing guidelines were established, most actual HTML documents are not valid SGML documents. Later, HTML was reformulated (version 2.0) to be more of an SGML application; however, the HTML markup language has many legacy- and exception-handling features that differ from SGML's requirements. HTML 4 is an SGML application that fully conforms to ISO 8879 – SGML.

[ 16 ] The charter for the 2006 revival of the World Wide Web Consortium HTML Working Group says, "the Group will not assume that an SGML parser is used for 'classic HTML ' ".

[ 17 ] Although HTML syntax closely resembles SGML syntax with the default reference concrete syntax , HTML5 abandons any attempt to define HTML as an SGML application, explicitly defining its own parsing rules, [ 18 ] which more closely match existing implementations and documents. It does, however, define an alternative XHTML serialization, which conforms to XML and therefore to  SGML as well.

[ 19 ] OED [ edit ] A fragment of the Oxford English Dictionary (1985), showing SGML markup The second edition of the Oxford English Dictionary (OED)  is entirely marked up with an SGML-based markup language using the LEXX text editor.

[ 20 ] The third edition is marked up as XML.

Others [ edit ] Other document markup languages are partly related to SGML and XML, but—because they cannot be parsed or validated or otherwise processed using standard SGML and XML tools—they are not considered either SGML or XML languages; the Z Format markup language for typesetting and documentation is an example.

Several modern programming languages support tags as primitive token types, or now support Unicode and regular expression pattern-matching. An example is the Scala programming language .

Applications [ edit ] Document markup languages defined using SGML are called "applications" by the standard; many pre-XML SGML applications were proprietary property of the organizations which developed them, and thus unavailable in the World Wide Web. The following list is of pre-XML SGML applications.

Text Encoding Initiative (TEI) is an academic consortium that designs, maintains, and develops technical standards for digital-format textual representation applications.

DocBook is a markup language originally created as an SGML application, designed for authoring technical documentation; DocBook currently is an XML application.

CALS (Continuous Acquisition and Life-cycle Support) is a US Department of Defense (DoD) initiative for electronically capturing military documents and for linking related data and information.

HyTime defines a set of hypertext-oriented element types that allow SGML document authors to build hypertext and multimedia presentations.

EDGAR (Electronic Data-Gathering, Analysis, and Retrieval) system effects automated collection, validation, indexing, acceptance, and forwarding of submissions, by companies and others, who are legally required to file data and information forms with the US Securities and Exchange Commission (SEC).

LinuxDoc . Documentation for Linux packages has used the LinuxDoc SGML DTD and Docbook XML DTD.

AAP DTD is a document type definition for scientific documents, defined by the Association of American Publishers .

ISO 12083 , a successor to AAP DTD, is an international SGML standard for document interchange between authors and publishers.

SGMLguid was an early SGML document type definition created, developed and used at CERN .

Open-source implementations [ edit ] Significant open-source implementations of SGML have included: ASP-SGML ARC-SGML , by Standard Generalized Markup Language Users', 1991, C language SGMLS , by James Clark, 1993, C language Project YAO , by Yuan-ze Institute of Technology, Taiwan, with Charles Goldfarb, 1994.

SP and Jade by James Clark, C++ language SP and Jade, the associated DSSSL processors, are maintained by the OpenJade project, and are common parts of Linux distributions. A general archive of SGML software and materials resides at SUNET . The original HTML parser class, in Sun System's implementation of Java, is a limited-features SGML parser, using SGML terminology and concepts.

See also [ edit ] Organization for the Advancement of Structured Information Standards (OASIS) S-expression DSSSL – a Scheme -based processing language similar to XSL LaTeX List of general purpose markup languages SGML entity Tag omission References [ edit ] ^ a b ISO (5 March 2008).

"JTC 1/SC 34 – Document description and processing languages" . ISO . Retrieved 2009-12-25 .

^ ISO JTC1/SC34.

"JTC 1/SC 34 – Document Description and Processing Languages" . Retrieved 2009-12-25 .

{{ cite web }} :  CS1 maint: numeric names: authors list ( link ) ^ ISO/IEC 10744 – Hytime ^ "ISO/IEC TR 9573" (PDF) .

ISO . 1991 . Retrieved 5 December 2017 .

^ Goldfarb, Charles F.

(1996).

"The Roots of SGML – A Personal Recollection" . Archived from the original on December 20, 2012 . Retrieved July 7, 2007 .

^ Goldfarb, Charles F.

(1990).

The SGML Handbook . Clarendon Press.

ISBN 9780198537373 .

^ "Terms and Definitions of ISO 8879 draft" .

^ Wohler, Wayne (July 21, 1998).

"SGML Declarations" . Archived from the original on May 28, 2009 . Retrieved August 17, 2009 .

^ Egmond (December 1989).

"The Implementation of the Amsterdam SGML Parser" (PDF) .

^ Carroll, Jeremy J. (November 26, 2001).

"CoParsing of RDF & XML" (PDF) .

Hewlett-Packard . Retrieved October 9, 2009 .

^ "SGML: Grammar Productions" .

^ "Re: Other whitespace problems was Re: Whitespace rules (v2)" .

^ Bruggemann-Klein.

"Compiler-Construction Tools and Techniques for SGML parsers: Difficulties and Solutions" .

^ "Chapter 2" .

www.w3.org . Retrieved 2025-07-16 .

^ "HyperText Markup Language (HTML) Format Family" .

www.loc.gov . 2023-04-25 . Retrieved 2025-07-16 .

^ "HTML 4–4 Conformance: requirements and recommendations" . Retrieved 2009-12-30 .

^ Lilley, Chris ; Berners-Lee, Tim (February 6, 2009).

"HTML Working Group Charter" . Retrieved April 19, 2007 .

^ "HTML5 — Parsing HTML documents" .

World Wide Web Consortium . October 28, 2014 . Retrieved June 29, 2015 .

^ Dubost, Karl (January 15, 2008).

"HTML 5, one vocabulary, two serializations" .

Questions & Answers blog .

W3C . Retrieved February 25, 2009 .

^ Cowlishaw, M. F.

(1987). "LEXX—A programmable structured editor".

IBM Journal of Research and Development .

31 (1).

IBM : 73.

doi : 10.1147/rd.311.0073 .

External links [ edit ] Overview of SGML Resources at W3C's website.

Introduction and Examples of Software Documentation in SGML SC34 Committee Records , Charles Babbage Institute – Collection on the development of SGML and other standards influential in the development of current XML tools; documents include early drafts of SGML administrative materials, documentation, working group papers, and standards for computer languages.

SGML Syntax Summary by Charles Goldfarb SGML document introducing you to SGML ; Some reasons why SGML is important The SGML Declaration , in SGML and HTML Explained, Martin Bryan (1997) (the original URL is broken at http://www.is-thought.co.uk/book/sgml-4.htm#Fig4-2 ) SGML Declarations Wayne Wohler, IBM Corporation, 1994.

ISO 9069:1988 – Information processing – SGML support facilities – SGML Document Interchange Format (SDIF) ISO/IEC 9070:1991 – Information technology – SGML support facilities – Registration procedures for public text owner identifiers v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category Authority control databases National Germany United States France BnF data Spain Israel Other Yale LUX NewPP limit report
Parsed by mw‐web.codfw.main‐7c956d68b4‐hjq4t
Cached time: 20250817045148
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.560 seconds
Real time usage: 0.772 seconds
Preprocessor visited node count: 2658/1000000
Revision size: 33417/2097152 bytes
Post‐expand include size: 91051/2097152 bytes
Template argument size: 4430/2097152 bytes
Highest expansion depth: 16/100
Expensive parser function count: 16/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 86960/5000000 bytes
Lua time usage: 0.318/10.000 seconds
Lua memory usage: 6596468/52428800 bytes
Number of Wikibase entities loaded: 1/500 Transclusion expansion time report (%,ms,calls,template)
100.00%  618.792      1 -total
 33.92%  209.898      1 Template:Reflist
 27.32%  169.061     16 Template:Cite_web
 13.10%   81.075      1 Template:ISO_standards
 12.79%   79.137      1 Template:Navbox
 10.80%   66.852      1 Template:Infobox_file_format
 10.30%   63.721      1 Template:Infobox
 10.23%   63.294      1 Template:Short_description
  6.41%   39.695      2 Template:Pagetype
  5.16%   31.943      1 Template:Authority_control Saved in parser cache with key enwiki:pcache:28994:|#|:idhash:canonical and timestamp 20250817045148 and revision id 1305277969. Rendering was triggered because: page-view Retrieved from " https://en.wikipedia.org/w/index.php?title=Standard_Generalized_Markup_Language&oldid=1305277969 " Categories : Data modeling languages ISO standards Markup languages Technical communication SGML Hidden categories: CS1 maint: numeric names: authors list Articles with short description Short description matches Wikidata All articles with unsourced statements Articles with unsourced statements from March 2023 Wikipedia articles needing clarification from February 2014 Wikipedia articles needing clarification from November 2013 This page was last edited on 11 August 2025, at 03:32 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Standard Generalized Markup Language 40 languages Add topic

