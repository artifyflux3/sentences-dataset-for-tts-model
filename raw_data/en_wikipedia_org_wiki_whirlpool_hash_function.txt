Jump to content Main menu Main menu move to sidebar hide Navigation Main page Contents Current events Random article About Wikipedia Contact us Contribute Help Learn to edit Community portal Recent changes Upload file Special pages Search Search Appearance Donate Create account Log in Personal tools Donate Create account Log in Pages for logged out editors learn more Contributions Talk CentralNotice Contents move to sidebar hide (Top) 1 Design features Toggle Design features subsection 1.1 Version changes 2 Internal structure Toggle Internal structure subsection 2.1 SubBytes 2.2 ShiftColumns 2.3 MixRows 2.4 AddRoundKey 3 Whirlpool hashes 4 Implementations 5 Adoption 6 See also 7 References 8 External links Toggle the table of contents Whirlpool (hash function) 11 languages Deutsch Español Français Nederlands 日本語 Polski Português Русский Svenska Українська Yorùbá Edit links Article Talk English Read Edit View history Tools Tools move to sidebar hide Actions Read Edit View history General What links here Related changes Upload file Permanent link Page information Cite this page Get shortened URL Download QR code Print/export Download as PDF Printable version In other projects Wikidata item Appearance move to sidebar hide From Wikipedia, the free encyclopedia Cryptographic hash function "WHIRLPOOL" redirects here. For other uses, see Whirlpool (disambiguation) .

Whirlpool General Designers Vincent Rijmen , Paulo S. L. M. Barreto First published 2000, 2001, 2003 Derived from Square , AES Certification NESSIE Detail Digest sizes 512 bits Security claims Large hashsum size Structure Miyaguchi-Preneel Rounds 10 Best public cryptanalysis In 2009, a rebound attack was announced that presents full collisions against 4.5 rounds of Whirlpool in 2 120 operations, semi-free-start collisions against 5.5 rounds in 2 120 time and semi-free-start near-collisions against 7.5 rounds in 2 128 time.

[ 1 ] In computer science and cryptography , Whirlpool (sometimes styled WHIRLPOOL ) is a cryptographic hash function . It was designed by Vincent Rijmen (co-creator of  the Advanced Encryption Standard ) and Paulo S. L. M. Barreto , who first described it in 2000.

The hash has been recommended by the NESSIE project. It has also been adopted by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC) as part of the joint ISO/IEC 10118-3 international standard .

Design features [ edit ] The Whirlpool Galaxy (M51), which inspired the name of the algorithm.

[ 2 ] Whirlpool is a hash designed after the Square block cipher , and is considered to be in that family of block cipher functions.

Whirlpool is a Miyaguchi-Preneel construction based on a substantially modified Advanced Encryption Standard (AES).

Whirlpool takes a message of any length less than 2 256 bits and returns a 512-bit message digest .

[ 3 ] The authors have declared that "WHIRLPOOL is not (and will never be) patented . It may be used free of charge for any purpose." [ 2 ] Version changes [ edit ] The original Whirlpool will be called Whirlpool-0 , the first revision of Whirlpool will be called Whirlpool-T and the latest version will be called Whirlpool in the following test vectors.

In the first revision in 2001, the S-box was changed from a randomly generated one with good cryptographic properties to one which has better cryptographic properties and is easier to implement in hardware.

In the second revision (2003), a flaw in the diffusion matrix was found that lowered the estimated security of the algorithm below its potential.

[ 4 ] Changing the 8x8 rotating matrix constants from (1, 1, 3, 1, 5, 8, 9, 5) to (1, 1, 4, 1, 8, 5, 2, 9) solved this issue.

Internal structure [ edit ] The Whirlpool hash function is a Merkle–Damgård construction based on an AES -like block cipher W in Miyaguchi–Preneel mode.

[ 2 ] The block cipher W consists of an 8×8 state matrix S {\displaystyle S} of bytes, for a total of 512 bits.

The encryption process consists of updating the state with four round functions over 10 rounds. The four round functions are SubBytes (SB), ShiftColumns (SC), MixRows (MR) and AddRoundKey (AK). During each round the new state is computed as S = A K ∘ ∘ M R ∘ ∘ S C ∘ ∘ S B ( S ) {\displaystyle S=AK\circ MR\circ SC\circ SB(S)} .

SubBytes [ edit ] The SubBytes operation applies a non-linear permutation (the S-box) to each byte of the state independently. The 8-bit S-box is composed of 3 smaller 4-bit S-boxes.

ShiftColumns [ edit ] The ShiftColumns operation cyclically shifts each byte in each column of the state. Column j has its bytes shifted downwards by j positions.

MixRows [ edit ] The MixRows operation is a right-multiplication of each row by an 8×8 matrix over G F ( 2 8 ) {\displaystyle GF({2^{8}})} . The matrix is chosen such that the branch number (an important property when looking at resistance to differential cryptanalysis ) is 9, which is maximal.

AddRoundKey [ edit ] The AddRoundKey operation uses bitwise xor to add a key calculated by the key schedule to the current state. The key schedule is identical to the encryption itself, except the AddRoundKey function is replaced by an AddRoundConstant function that adds a predetermined constant in each round.

Whirlpool hashes [ edit ] The Whirlpool algorithm has undergone two revisions since its original 2000 specification.

People incorporating Whirlpool will most likely use the most recent revision of Whirlpool; while there are no known security weaknesses in earlier versions of Whirlpool, the most recent revision has better hardware implementation efficiency characteristics, and is also likely to be more secure. As mentioned earlier, it is also the version adopted in the ISO/IEC 10118-3 international standard .

The 512-bit (64-byte) Whirlpool hashes (also termed message digests ) are typically represented as 128-digit hexadecimal numbers.

The following demonstrates a 43-byte ASCII input (not including quotes) and the corresponding Whirlpool hashes: Version Input String Computed Hash Whirlpool-0 " The quick brown fox jumps over the lazy dog " 4F8F5CB531E3D49A61CF417CD133792CCFA501FD8DA53EE368FED20E5FE0248C
 3A0B64F98A6533CEE1DA614C3A8DDEC791FF05FEE6D971D57C1348320F4EB42D Whirlpool-T " The quick brown fox jumps over the lazy dog " 3CCF8252D8BBB258460D9AA999C06EE38E67CB546CFFCF48E91F700F6FC7C183
 AC8CC3D3096DD30A35B01F4620A1E3A20D79CD5168544D9E1B7CDF49970E87F1 Whirlpool " The quick brown fox jumps over the lazy dog " B97DE512E91E3828B40D2B0FDCE9CEB3C4A71F9BEA8D88E75C4FA854DF36725F
 D2B52EB6544EDCACD6F8BEDDFEA403CB55AE31F03AD62A5EF54E42EE82C3FB35 Implementations [ edit ] The authors provide reference implementations of the Whirlpool algorithm, including a version written in C and a version written in Java .

[ 2 ] These reference implementations have been released into the public domain.

[ 2 ] Research on the security analysis of the Whirlpool function however, has revealed that on average, the introduction of 8 random faults is sufficient to compromise the 512-bit Whirlpool hash message being processed and the secret key of HMAC-Whirlpool within the context of Cloud of Things (CoTs). This emphasizes the need for increased security measures in its implementation.

[ 5 ] Adoption [ edit ] Two of the first widely used mainstream cryptographic programs that started using Whirlpool were FreeOTFE , followed by TrueCrypt in 2005.

[ citation needed ] VeraCrypt (a fork of TrueCrypt ) included Whirlpool (the final version) as one of its supported hash algorithms.

[ 6 ] See also [ edit ] Digital timestamping References [ edit ] ^ Florian Mendel1, Christian Rechberger, Martin Schläffer, Søren S. Thomsen (2009-02-24).

The Rebound Attack: Cryptanalysis of Reduced Whirlpool and Grøstl (PDF) . Fast Software Encryption: 16th International Workshop.

{{ cite conference }} :  CS1 maint: multiple names: authors list ( link ) CS1 maint: numeric names: authors list ( link ) ^ a b c d e Paulo S. L. M. Barreto (2008-11-25).

"The WHIRLPOOL Hash Function" . Archived from the original on 2017-11-29 . Retrieved 2018-08-09 .

^ Barreto, Paulo S. L. M. & Rijmen, Vincent (2003-05-24).

"The WHIRLPOOL Hashing Function" . Archived from the original (ZIP) on 2017-10-26 . Retrieved 2018-08-09 .

{{ cite journal }} : Cite journal requires |journal= ( help ) ^ Kyoji, Shibutani & Shirai, Taizo (2003-03-11).

"On the diffusion matrix employed in the Whirlpool hashing function" (PDF) . Retrieved 2018-08-09 .

{{ cite journal }} : Cite journal requires |journal= ( help ) ^ Li, W., Gao, Z., Gu, D., Ge, C., Liao, L., Zhou, Z., Liu, Y., & Liu, Z. (2017). Security Analysis of the Whirlpool Hash Function in the Cloud of Things. KSII Transactions on Internet and Information Systems, 11(1), 536–551.

https://doi.org/10.3837/tiis.2017.01.028 ^ "Whirlpool" .

VeraCrypt Documentation . IDRIX . Retrieved 2018-08-09 .

External links [ edit ] The WHIRLPOOL Hash Function at the Wayback Machine (archived 2017-11-29) Jacksum on SourceForge , a Java implementation of all three revisions of Whirlpool whirlpool on GitHub – An open source Go implementation of the latest revision of Whirlpool A Matlab Implementation of the Whirlpool Hashing Function RHash , an open source command-line tool, which can calculate and verify Whirlpool hash.

Perl Whirlpool module at CPAN Digest module implementing the Whirlpool hashing algorithm in Ruby Ironclad a Common Lisp cryptography package containing a Whirlpool implementation The ISO/IEC 10118-3:2004 standard Test vectors for the Whirlpool hash from the NESSIE project Managed C# implementation Python Whirlpool module v t e Cryptographic hash functions and message authentication codes List Comparison Known attacks Common functions MD5 (compromised) SHA-1 (compromised) SHA-2 SHA-3 BLAKE2 SHA-3 finalists BLAKE Grøstl JH Skein Keccak (winner) Other functions BLAKE3 CubeHash ECOH FSB Fugue GOST HAS-160 HAVAL Kupyna LSH Lane MASH-1 MASH-2 MD2 MD4 MD6 MDC-2 N-hash RIPEMD RadioGatún SIMD SM3 SWIFFT Shabal Snefru Streebog Tiger VSH Whirlpool Password hashing/ key stretching functions Argon2 Balloon bcrypt Catena crypt LM hash Lyra2 Makwa PBKDF2 scrypt yescrypt General purpose key derivation functions HKDF KDF1/KDF2 MAC functions CBC-MAC DAA GMAC HMAC NMAC OMAC / CMAC PMAC Poly1305 SipHash UMAC VMAC Authenticated encryption modes CCM ChaCha20-Poly1305 CWC EAX GCM IAPM OCB Attacks Collision attack Preimage attack Birthday attack Brute-force attack Rainbow table Side-channel attack Length extension attack Design Avalanche effect Hash collision Merkle–Damgård construction Sponge function HAIFA construction Standardization CAESAR Competition CRYPTREC NESSIE NIST hash function competition Password Hashing Competition NSA Suite B CNSA Utilization Hash-based cryptography Merkle tree Message authentication Proof of work Salt Pepper v t e Cryptography General History of cryptography Outline of cryptography Classical cipher Cryptographic protocol Authentication protocol Cryptographic primitive Cryptanalysis Cryptocurrency Cryptosystem Cryptographic nonce Cryptovirology Hash function Cryptographic hash function Key derivation function Secure Hash Algorithms Digital signature Kleptography Key (cryptography) Key exchange Key generator Key schedule Key stretching Keygen Machines Cryptojacking malware Ransomware Random number generation Cryptographically secure pseudorandom number generator (CSPRNG) Pseudorandom noise (PRN) Secure channel Insecure channel Subliminal channel Encryption Decryption End-to-end encryption Harvest now, decrypt later Information-theoretic security Plaintext Codetext Ciphertext Shared secret Trapdoor function Trusted timestamping Key-based routing Onion routing Garlic routing Kademlia Mix network Mathematics Cryptographic hash function Block cipher Stream cipher Symmetric-key algorithm Authenticated encryption Public-key cryptography Quantum key distribution Quantum cryptography Post-quantum cryptography Message authentication code Random numbers Steganography Category v t e International Organization for Standardization (ISO) standards List of ISO standards – ISO romanizations – IEC standards 1–9999 1 2 3 4 6 7 9 16 17 31 -0 -1 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 68-1 128 216 217 226 228 233 259 261 262 302 306 361 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1073-2 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 2921 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6373 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 8805/8806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 9000/9001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9496 9506 9529 9564 9592/9593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 10000–19999 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10279 10303 -11 -21 -22 -28 -238 10383 10585 10589 10628 10646 10664 10746 10861 10957 10962 10967 11073 11170 11172 11179 11404 11544 11783 11784 11785 11801 11889 11898 11940 ( -2 ) 11941 11941 (TR) 11992 12006 12052 12182 12207 12234-2 12620 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 13816 13818 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14617 14644 14649 14651 14698 14764 14882 14971 15022 15189 15288 15291 15398 15408 15444 -3 -9 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 15938 16023 16262 16355-1 16485 16612-2 16750 16949 (TS) 17024 17025 17100 17203 17369 17442 17506 17799 18004 18014 18181 18245 18629 18760 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000–29999 20000 20022 20121 20400 20802 20830 21000 21001 21047 21122 21500 21778 21827 22000 22275 22300 22301 22395 22537 23000 23003 23008 23009 23090-3 23092 23094-1 23094-2 23270 23271 23360 23941 24517 24613 24617 24707 24728 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27005 27006 27729 28000 29110 29148 29199-2 29500 30000+ 30170 31000 32000 37001 38500 39075 40314 40500 42010 45001 50001 55000 56000 80000 Category Retrieved from " https://en.wikipedia.org/w/index.php?title=Whirlpool_(hash_function)&oldid=1305283485 " Category : Cryptographic hash functions Hidden categories: CS1 maint: multiple names: authors list CS1 maint: numeric names: authors list CS1 errors: missing periodical Articles with short description Short description matches Wikidata All articles with unsourced statements Articles with unsourced statements from February 2018 Webarchive template wayback links This page was last edited on 11 August 2025, at 04:16 (UTC) .

Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc.

, a non-profit organization.

Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view Search Search Toggle the table of contents Whirlpool (hash function) 11 languages Add topic

